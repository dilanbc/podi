
bicycle.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000f2  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000166  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000003  00800060  00800060  00000166  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000166  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000198  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000040  00000000  00000000  000001d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000413  00000000  00000000  00000214  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000357  00000000  00000000  00000627  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000256  00000000  00000000  0000097e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000088  00000000  00000000  00000bd4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000002df  00000000  00000000  00000c5c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000085  00000000  00000000  00000f3b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000030  00000000  00000000  00000fc0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	09 c0       	rjmp	.+18     	; 0x14 <__ctors_end>
   2:	16 c0       	rjmp	.+44     	; 0x30 <__bad_interrupt>
   4:	4a c0       	rjmp	.+148    	; 0x9a <__vector_2>
   6:	14 c0       	rjmp	.+40     	; 0x30 <__bad_interrupt>
   8:	13 c0       	rjmp	.+38     	; 0x30 <__bad_interrupt>
   a:	12 c0       	rjmp	.+36     	; 0x30 <__bad_interrupt>
   c:	1e c0       	rjmp	.+60     	; 0x4a <__vector_6>
   e:	10 c0       	rjmp	.+32     	; 0x30 <__bad_interrupt>
  10:	0f c0       	rjmp	.+30     	; 0x30 <__bad_interrupt>
  12:	0e c0       	rjmp	.+28     	; 0x30 <__bad_interrupt>

00000014 <__ctors_end>:
  14:	11 24       	eor	r1, r1
  16:	1f be       	out	0x3f, r1	; 63
  18:	cf e9       	ldi	r28, 0x9F	; 159
  1a:	cd bf       	out	0x3d, r28	; 61

0000001c <__do_clear_bss>:
  1c:	20 e0       	ldi	r18, 0x00	; 0
  1e:	a0 e6       	ldi	r26, 0x60	; 96
  20:	b0 e0       	ldi	r27, 0x00	; 0
  22:	01 c0       	rjmp	.+2      	; 0x26 <.do_clear_bss_start>

00000024 <.do_clear_bss_loop>:
  24:	1d 92       	st	X+, r1

00000026 <.do_clear_bss_start>:
  26:	a3 36       	cpi	r26, 0x63	; 99
  28:	b2 07       	cpc	r27, r18
  2a:	e1 f7       	brne	.-8      	; 0x24 <.do_clear_bss_loop>
  2c:	55 d0       	rcall	.+170    	; 0xd8 <main>
  2e:	5f c0       	rjmp	.+190    	; 0xee <_exit>

00000030 <__bad_interrupt>:
  30:	e7 cf       	rjmp	.-50     	; 0x0 <__vectors>

00000032 <_Z9timerInitv>:

#define timerlogic 1.3*10


void timerInit(){
	TCCR0A|=(1<<WGM01);
  32:	8f b5       	in	r24, 0x2f	; 47
  34:	82 60       	ori	r24, 0x02	; 2
  36:	8f bd       	out	0x2f, r24	; 47
	TCCR0B|=(1<<CS02)|(1<<CS00);
  38:	83 b7       	in	r24, 0x33	; 51
  3a:	85 60       	ori	r24, 0x05	; 5
  3c:	83 bf       	out	0x33, r24	; 51
	OCR0A=117;
  3e:	85 e7       	ldi	r24, 0x75	; 117
  40:	86 bf       	out	0x36, r24	; 54
	TIMSK0|=(1<<OCIE0A);
  42:	89 b7       	in	r24, 0x39	; 57
  44:	84 60       	ori	r24, 0x04	; 4
  46:	89 bf       	out	0x39, r24	; 57
  48:	08 95       	ret

0000004a <__vector_6>:
}

ISR(TIM0_COMPA_vect){
  4a:	1f 92       	push	r1
  4c:	0f 92       	push	r0
  4e:	0f b6       	in	r0, 0x3f	; 63
  50:	0f 92       	push	r0
  52:	11 24       	eor	r1, r1
  54:	8f 93       	push	r24
  56:	9f 93       	push	r25
if (lgcount>0)
  58:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <lgcount>
  5c:	99 23       	and	r25, r25
  5e:	79 f0       	breq	.+30     	; 0x7e <__vector_6+0x34>
{timercount++;
  60:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
  64:	8f 5f       	subi	r24, 0xFF	; 255
  66:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
	if (timercount>12)
  6a:	8d 30       	cpi	r24, 0x0D	; 13
  6c:	28 f0       	brcs	.+10     	; 0x78 <__vector_6+0x2e>
	{timercount=0;
  6e:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
		lgcount=0;
  72:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <lgcount>
  76:	03 c0       	rjmp	.+6      	; 0x7e <__vector_6+0x34>
	} 
	else
	{if (lgcount>1)
  78:	92 30       	cpi	r25, 0x02	; 2
  7a:	08 f0       	brcs	.+2      	; 0x7e <__vector_6+0x34>
	{PORTB|=(1<<0);
  7c:	c0 9a       	sbi	0x18, 0	; 24
	}
	}
}

}
  7e:	9f 91       	pop	r25
  80:	8f 91       	pop	r24
  82:	0f 90       	pop	r0
  84:	0f be       	out	0x3f, r0	; 63
  86:	0f 90       	pop	r0
  88:	1f 90       	pop	r1
  8a:	18 95       	reti

0000008c <_Z10sensorInitv>:

void sensorInit(){
DDRB&=~(1<<3);//sensor
  8c:	bb 98       	cbi	0x17, 3	; 23
PORTB|=(1<<3);//pullup
  8e:	c3 9a       	sbi	0x18, 3	; 24
//hole effect normal=1 magnet=0;
GIMSK|=(1<<PCIE);
  90:	8b b7       	in	r24, 0x3b	; 59
  92:	80 62       	ori	r24, 0x20	; 32
  94:	8b bf       	out	0x3b, r24	; 59
PCMSK|=(1<<PCINT3);
  96:	ab 9a       	sbi	0x15, 3	; 21
  98:	08 95       	ret

0000009a <__vector_2>:
	
}

ISR(PCINT0_vect){
  9a:	1f 92       	push	r1
  9c:	0f 92       	push	r0
  9e:	0f b6       	in	r0, 0x3f	; 63
  a0:	0f 92       	push	r0
  a2:	11 24       	eor	r1, r1
  a4:	8f 93       	push	r24
if (jmper)
  a6:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <jmper>
  aa:	88 23       	and	r24, r24
  ac:	41 f0       	breq	.+16     	; 0xbe <__stack+0x1f>
{
	if (((PINB&0b1000)>>3)==0)
  ae:	b3 99       	sbic	0x16, 3	; 22
  b0:	0d c0       	rjmp	.+26     	; 0xcc <__stack+0x2d>
	{lgcount++;
  b2:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <lgcount>
  b6:	8f 5f       	subi	r24, 0xFF	; 255
  b8:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <lgcount>
  bc:	07 c0       	rjmp	.+14     	; 0xcc <__stack+0x2d>
	}
} 
else
{
	if (((PINB&0b1000)>>3)!=0)
  be:	b3 9b       	sbis	0x16, 3	; 22
  c0:	05 c0       	rjmp	.+10     	; 0xcc <__stack+0x2d>
	{lgcount++;
  c2:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <lgcount>
  c6:	8f 5f       	subi	r24, 0xFF	; 255
  c8:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <lgcount>
	}
}
}
  cc:	8f 91       	pop	r24
  ce:	0f 90       	pop	r0
  d0:	0f be       	out	0x3f, r0	; 63
  d2:	0f 90       	pop	r0
  d4:	1f 90       	pop	r1
  d6:	18 95       	reti

000000d8 <main>:

int main(void)
{	
    DDRB|=(1<<0);//relay
  d8:	b8 9a       	sbi	0x17, 0	; 23
	PORTB|=(1<<4);//pullup
  da:	c4 9a       	sbi	0x18, 4	; 24
	
	
	
	
	
	if (((PINB&0b10000)>>4)==0)
  dc:	b4 99       	sbic	0x16, 4	; 22
  de:	03 c0       	rjmp	.+6      	; 0xe6 <main+0xe>
	{jmper=1;
  e0:	81 e0       	ldi	r24, 0x01	; 1
  e2:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <jmper>
	}
	sensorInit();
  e6:	d2 df       	rcall	.-92     	; 0x8c <_Z10sensorInitv>
	timerInit();
  e8:	a4 df       	rcall	.-184    	; 0x32 <_Z9timerInitv>
	sei();
  ea:	78 94       	sei
  ec:	ff cf       	rjmp	.-2      	; 0xec <main+0x14>

000000ee <_exit>:
  ee:	f8 94       	cli

000000f0 <__stop_program>:
  f0:	ff cf       	rjmp	.-2      	; 0xf0 <__stop_program>
