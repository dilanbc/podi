
ir sens.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000b4  00800100  00000fd4  00001068  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000fd4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000b6  008001b4  008001b4  0000111c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000111c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001178  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000108  00000000  00000000  000011b8  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c79  00000000  00000000  000012c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008dc  00000000  00000000  00002f39  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000b17  00000000  00000000  00003815  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000194  00000000  00000000  0000432c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000006b6  00000000  00000000  000044c0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000e51  00000000  00000000  00004b76  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b0  00000000  00000000  000059c7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 91 00 	jmp	0x122	; 0x122 <__vector_18>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e4 ed       	ldi	r30, 0xD4	; 212
  7c:	ff e0       	ldi	r31, 0x0F	; 15
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a4 3b       	cpi	r26, 0xB4	; 180
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	22 e0       	ldi	r18, 0x02	; 2
  8c:	a4 eb       	ldi	r26, 0xB4	; 180
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	aa 36       	cpi	r26, 0x6A	; 106
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 21 02 	call	0x442	; 0x442 <main>
  9e:	0c 94 e8 07 	jmp	0xfd0	; 0xfd0 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <_Z10USART_Initj>:
	
	char fString[10];
	dtostrf(number,length,deciP,fString);
	USART_TxString(fString);
	
}
  a6:	9c 01       	movw	r18, r24
  a8:	40 e0       	ldi	r20, 0x00	; 0
  aa:	50 e0       	ldi	r21, 0x00	; 0
  ac:	60 e2       	ldi	r22, 0x20	; 32
  ae:	71 ea       	ldi	r23, 0xA1	; 161
  b0:	87 e0       	ldi	r24, 0x07	; 7
  b2:	90 e0       	ldi	r25, 0x00	; 0
  b4:	0e 94 08 04 	call	0x810	; 0x810 <__udivmodsi4>
  b8:	21 50       	subi	r18, 0x01	; 1
  ba:	31 09       	sbc	r19, r1
  bc:	30 93 c5 00 	sts	0x00C5, r19	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
  c0:	20 93 c4 00 	sts	0x00C4, r18	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
  c4:	88 e9       	ldi	r24, 0x98	; 152
  c6:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
  ca:	86 e0       	ldi	r24, 0x06	; 6
  cc:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
  d0:	78 94       	sei
  d2:	08 95       	ret

000000d4 <_Z14USART_Transmith>:
  d4:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
  d8:	95 ff       	sbrs	r25, 5
  da:	fc cf       	rjmp	.-8      	; 0xd4 <_Z14USART_Transmith>
  dc:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
  e0:	08 95       	ret

000000e2 <_Z14USART_TxStringPc>:
  e2:	cf 93       	push	r28
  e4:	df 93       	push	r29
  e6:	ec 01       	movw	r28, r24
  e8:	88 81       	ld	r24, Y
  ea:	88 23       	and	r24, r24
  ec:	21 f0       	breq	.+8      	; 0xf6 <_Z14USART_TxStringPc+0x14>
  ee:	21 96       	adiw	r28, 0x01	; 1
  f0:	0e 94 6a 00 	call	0xd4	; 0xd4 <_Z14USART_Transmith>
  f4:	f9 cf       	rjmp	.-14     	; 0xe8 <_Z14USART_TxStringPc+0x6>
  f6:	df 91       	pop	r29
  f8:	cf 91       	pop	r28
  fa:	08 95       	ret

000000fc <_Z16USART_TxStringlnPc>:
  fc:	cf 93       	push	r28
  fe:	df 93       	push	r29
 100:	ec 01       	movw	r28, r24
 102:	88 81       	ld	r24, Y
 104:	88 23       	and	r24, r24
 106:	21 f0       	breq	.+8      	; 0x110 <_Z16USART_TxStringlnPc+0x14>
 108:	21 96       	adiw	r28, 0x01	; 1
 10a:	0e 94 6a 00 	call	0xd4	; 0xd4 <_Z14USART_Transmith>
 10e:	f9 cf       	rjmp	.-14     	; 0x102 <_Z16USART_TxStringlnPc+0x6>
 110:	8d e0       	ldi	r24, 0x0D	; 13
 112:	0e 94 6a 00 	call	0xd4	; 0xd4 <_Z14USART_Transmith>
 116:	8a e0       	ldi	r24, 0x0A	; 10
 118:	0e 94 6a 00 	call	0xd4	; 0xd4 <_Z14USART_Transmith>
 11c:	df 91       	pop	r29
 11e:	cf 91       	pop	r28
 120:	08 95       	ret

00000122 <__vector_18>:


ISR(USART_RX_vect){
 122:	1f 92       	push	r1
 124:	0f 92       	push	r0
 126:	0f b6       	in	r0, 0x3f	; 63
 128:	0f 92       	push	r0
 12a:	11 24       	eor	r1, r1
 12c:	2f 93       	push	r18
 12e:	3f 93       	push	r19
 130:	4f 93       	push	r20
 132:	8f 93       	push	r24
 134:	9f 93       	push	r25
 136:	af 93       	push	r26
 138:	bf 93       	push	r27
 13a:	ef 93       	push	r30
 13c:	ff 93       	push	r31
	//PORTB^=1<<0;
	char rchar=UDR0;
 13e:	40 91 c6 00 	lds	r20, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
	
	uint8_t i=0;
 142:	e0 e0       	ldi	r30, 0x00	; 0
	
	while(rxvalue[i]){
 144:	ae 2f       	mov	r26, r30
 146:	b0 e0       	ldi	r27, 0x00	; 0
 148:	aa 5f       	subi	r26, 0xFA	; 250
 14a:	bd 4f       	sbci	r27, 0xFD	; 253
 14c:	8c 91       	ld	r24, X
 14e:	88 23       	and	r24, r24
 150:	19 f0       	breq	.+6      	; 0x158 <__vector_18+0x36>
	i++;
 152:	ef 5f       	subi	r30, 0xFF	; 255
	if (i==rxshiftNum)
 154:	e4 36       	cpi	r30, 0x64	; 100
 156:	b1 f7       	brne	.-20     	; 0x144 <__vector_18+0x22>
	{break;
	}
	}
	if (i<rxshiftNum)
 158:	e4 36       	cpi	r30, 0x64	; 100
 15a:	28 f4       	brcc	.+10     	; 0x166 <__vector_18+0x44>
	{rxvalue[i]=rchar;
 15c:	f0 e0       	ldi	r31, 0x00	; 0
 15e:	ea 5f       	subi	r30, 0xFA	; 250
 160:	fd 4f       	sbci	r31, 0xFD	; 253
 162:	40 83       	st	Z, r20
 164:	11 c0       	rjmp	.+34     	; 0x188 <__vector_18+0x66>
 166:	20 e0       	ldi	r18, 0x00	; 0
	} 
	else
	{
		for(uint8_t i=0;i<rxshiftNum-1;i++){
 168:	23 36       	cpi	r18, 0x63	; 99
 16a:	60 f4       	brcc	.+24     	; 0x184 <__vector_18+0x62>
		rxvalue[i]=rxvalue[i+1];
 16c:	82 2f       	mov	r24, r18
 16e:	90 e0       	ldi	r25, 0x00	; 0
 170:	fc 01       	movw	r30, r24
 172:	e9 5f       	subi	r30, 0xF9	; 249
 174:	fd 4f       	sbci	r31, 0xFD	; 253
 176:	30 81       	ld	r19, Z
 178:	fc 01       	movw	r30, r24
 17a:	ea 5f       	subi	r30, 0xFA	; 250
 17c:	fd 4f       	sbci	r31, 0xFD	; 253
 17e:	30 83       	st	Z, r19
	if (i<rxshiftNum)
	{rxvalue[i]=rchar;
	} 
	else
	{
		for(uint8_t i=0;i<rxshiftNum-1;i++){
 180:	2f 5f       	subi	r18, 0xFF	; 255
 182:	f2 cf       	rjmp	.-28     	; 0x168 <__vector_18+0x46>
		rxvalue[i]=rxvalue[i+1];
	}
	rxvalue[rxshiftNum-1]=rchar;
 184:	40 93 69 02 	sts	0x0269, r20	; 0x800269 <rxvalue+0x63>
		
	}
	
		
}
 188:	ff 91       	pop	r31
 18a:	ef 91       	pop	r30
 18c:	bf 91       	pop	r27
 18e:	af 91       	pop	r26
 190:	9f 91       	pop	r25
 192:	8f 91       	pop	r24
 194:	4f 91       	pop	r20
 196:	3f 91       	pop	r19
 198:	2f 91       	pop	r18
 19a:	0f 90       	pop	r0
 19c:	0f be       	out	0x3f, r0	; 63
 19e:	0f 90       	pop	r0
 1a0:	1f 90       	pop	r1
 1a2:	18 95       	reti

000001a4 <_Z16USART_ReciveWaitPcib>:



bool USART_ReciveWait(char*wait=0,int16_t timeout=0,bool deleteWait=0){
 1a4:	ef 92       	push	r14
 1a6:	ff 92       	push	r15
 1a8:	0f 93       	push	r16
 1aa:	1f 93       	push	r17
 1ac:	cf 93       	push	r28
 1ae:	7c 01       	movw	r14, r24
 1b0:	cb 01       	movw	r24, r22
	bool waitbool=0;
	uint8_t temptimeOut=0;
	timeout=timeout/100;
 1b2:	64 e6       	ldi	r22, 0x64	; 100
 1b4:	70 e0       	ldi	r23, 0x00	; 0
 1b6:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <__divmodhi4>
	if (wait!=0)
 1ba:	e1 14       	cp	r14, r1
 1bc:	f1 04       	cpc	r15, r1
 1be:	89 f1       	breq	.+98     	; 0x222 <_Z16USART_ReciveWaitPcib+0x7e>
 1c0:	8b 01       	movw	r16, r22
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1c2:	2f ef       	ldi	r18, 0xFF	; 255
 1c4:	40 e7       	ldi	r20, 0x70	; 112
 1c6:	82 e0       	ldi	r24, 0x02	; 2
 1c8:	21 50       	subi	r18, 0x01	; 1
 1ca:	40 40       	sbci	r20, 0x00	; 0
 1cc:	80 40       	sbci	r24, 0x00	; 0
 1ce:	e1 f7       	brne	.-8      	; 0x1c8 <_Z16USART_ReciveWaitPcib+0x24>
 1d0:	00 c0       	rjmp	.+0      	; 0x1d2 <_Z16USART_ReciveWaitPcib+0x2e>
 1d2:	00 00       	nop
	{  _delay_ms(100);
		char*tempwait={0};
 1d4:	20 e0       	ldi	r18, 0x00	; 0
 1d6:	30 e0       	ldi	r19, 0x00	; 0



bool USART_ReciveWait(char*wait=0,int16_t timeout=0,bool deleteWait=0){
	bool waitbool=0;
	uint8_t temptimeOut=0;
 1d8:	c0 e0       	ldi	r28, 0x00	; 0
	timeout=timeout/100;
	if (wait!=0)
	{  _delay_ms(100);
		char*tempwait={0};
		while(tempwait==0){
 1da:	23 2b       	or	r18, r19
 1dc:	21 f5       	brne	.+72     	; 0x226 <_Z16USART_ReciveWaitPcib+0x82>
			tempwait =strstr(rxvalue,wait);
 1de:	b7 01       	movw	r22, r14
 1e0:	86 e0       	ldi	r24, 0x06	; 6
 1e2:	92 e0       	ldi	r25, 0x02	; 2
 1e4:	0e 94 ac 04 	call	0x958	; 0x958 <strstr>
 1e8:	9c 01       	movw	r18, r24
 1ea:	9f ef       	ldi	r25, 0xFF	; 255
 1ec:	40 e7       	ldi	r20, 0x70	; 112
 1ee:	82 e0       	ldi	r24, 0x02	; 2
 1f0:	91 50       	subi	r25, 0x01	; 1
 1f2:	40 40       	sbci	r20, 0x00	; 0
 1f4:	80 40       	sbci	r24, 0x00	; 0
 1f6:	e1 f7       	brne	.-8      	; 0x1f0 <_Z16USART_ReciveWaitPcib+0x4c>
 1f8:	00 c0       	rjmp	.+0      	; 0x1fa <_Z16USART_ReciveWaitPcib+0x56>
 1fa:	00 00       	nop
					
			_delay_ms(100);
			temptimeOut++;
 1fc:	cf 5f       	subi	r28, 0xFF	; 255
			if ((temptimeOut>timeout)&(timeout!=0))
 1fe:	4c 2f       	mov	r20, r28
 200:	50 e0       	ldi	r21, 0x00	; 0
 202:	91 e0       	ldi	r25, 0x01	; 1
 204:	04 17       	cp	r16, r20
 206:	15 07       	cpc	r17, r21
 208:	0c f0       	brlt	.+2      	; 0x20c <_Z16USART_ReciveWaitPcib+0x68>
 20a:	90 e0       	ldi	r25, 0x00	; 0
 20c:	99 23       	and	r25, r25
 20e:	29 f3       	breq	.-54     	; 0x1da <_Z16USART_ReciveWaitPcib+0x36>
 210:	81 e0       	ldi	r24, 0x01	; 1
 212:	01 15       	cp	r16, r1
 214:	11 05       	cpc	r17, r1
 216:	09 f4       	brne	.+2      	; 0x21a <_Z16USART_ReciveWaitPcib+0x76>
 218:	80 e0       	ldi	r24, 0x00	; 0
 21a:	88 23       	and	r24, r24
 21c:	f1 f2       	breq	.-68     	; 0x1da <_Z16USART_ReciveWaitPcib+0x36>
			{waitbool=0;
				return waitbool;
 21e:	80 e0       	ldi	r24, 0x00	; 0
 220:	03 c0       	rjmp	.+6      	; 0x228 <_Z16USART_ReciveWaitPcib+0x84>
}



bool USART_ReciveWait(char*wait=0,int16_t timeout=0,bool deleteWait=0){
	bool waitbool=0;
 222:	80 e0       	ldi	r24, 0x00	; 0
 224:	01 c0       	rjmp	.+2      	; 0x228 <_Z16USART_ReciveWaitPcib+0x84>
				return waitbool;
				
			}
			
		}
		waitbool=1;
 226:	81 e0       	ldi	r24, 0x01	; 1
		
	}
	
	return waitbool;
}
 228:	cf 91       	pop	r28
 22a:	1f 91       	pop	r17
 22c:	0f 91       	pop	r16
 22e:	ff 90       	pop	r15
 230:	ef 90       	pop	r14
 232:	08 95       	ret

00000234 <_Z13USART_ClearRXv>:


void USART_ClearRX(){
	for(uint8_t i=0;i<rxshiftNum;i++){
 234:	80 e0       	ldi	r24, 0x00	; 0
 236:	84 36       	cpi	r24, 0x64	; 100
 238:	38 f4       	brcc	.+14     	; 0x248 <_Z13USART_ClearRXv+0x14>
		rxvalue[i]=NULL;
 23a:	e8 2f       	mov	r30, r24
 23c:	f0 e0       	ldi	r31, 0x00	; 0
 23e:	ea 5f       	subi	r30, 0xFA	; 250
 240:	fd 4f       	sbci	r31, 0xFD	; 253
 242:	10 82       	st	Z, r1
	return waitbool;
}


void USART_ClearRX(){
	for(uint8_t i=0;i<rxshiftNum;i++){
 244:	8f 5f       	subi	r24, 0xFF	; 255
 246:	f7 cf       	rjmp	.-18     	; 0x236 <_Z13USART_ClearRXv+0x2>
 248:	08 95       	ret

0000024a <_Z8checkGSMv>:
	PORTD&=~(1<<7);
	_delay_ms(100);
}


bool checkGSM(){
 24a:	cf 93       	push	r28
	DDRD|=(1<<2);
 24c:	8a b1       	in	r24, 0x0a	; 10
 24e:	84 60       	ori	r24, 0x04	; 4
 250:	8a b9       	out	0x0a, r24	; 10
	PORTD|=(1<<2);
 252:	8b b1       	in	r24, 0x0b	; 11
 254:	84 60       	ori	r24, 0x04	; 4
 256:	8b b9       	out	0x0b, r24	; 11
	for(uint8_t i=0;i<20;i++){
 258:	c0 e0       	ldi	r28, 0x00	; 0
 25a:	c4 31       	cpi	r28, 0x14	; 20
 25c:	a8 f4       	brcc	.+42     	; 0x288 <_Z8checkGSMv+0x3e>
		USART_TxStringln("AT");
 25e:	80 e0       	ldi	r24, 0x00	; 0
 260:	91 e0       	ldi	r25, 0x01	; 1
 262:	0e 94 7e 00 	call	0xfc	; 0xfc <_Z16USART_TxStringlnPc>
		if (USART_ReciveWait("OK",1000))
 266:	40 e0       	ldi	r20, 0x00	; 0
 268:	68 ee       	ldi	r22, 0xE8	; 232
 26a:	73 e0       	ldi	r23, 0x03	; 3
 26c:	83 e0       	ldi	r24, 0x03	; 3
 26e:	91 e0       	ldi	r25, 0x01	; 1
 270:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <_Z16USART_ReciveWaitPcib>
 274:	88 23       	and	r24, r24
 276:	19 f0       	breq	.+6      	; 0x27e <_Z8checkGSMv+0x34>
		{
			USART_ClearRX();
 278:	0e 94 1a 01 	call	0x234	; 0x234 <_Z13USART_ClearRXv>
			break;
 27c:	05 c0       	rjmp	.+10     	; 0x288 <_Z8checkGSMv+0x3e>
		}
		if (i==19)
 27e:	c3 31       	cpi	r28, 0x13	; 19
 280:	09 f4       	brne	.+2      	; 0x284 <_Z8checkGSMv+0x3a>
 282:	4e c0       	rjmp	.+156    	; 0x320 <_Z8checkGSMv+0xd6>


bool checkGSM(){
	DDRD|=(1<<2);
	PORTD|=(1<<2);
	for(uint8_t i=0;i<20;i++){
 284:	cf 5f       	subi	r28, 0xFF	; 255
 286:	e9 cf       	rjmp	.-46     	; 0x25a <_Z8checkGSMv+0x10>
		}
		if (i==19)
		{return 0;
		}
	}
	USART_TxStringln("AT+CPIN?");//sim check
 288:	86 e0       	ldi	r24, 0x06	; 6
 28a:	91 e0       	ldi	r25, 0x01	; 1
 28c:	0e 94 7e 00 	call	0xfc	; 0xfc <_Z16USART_TxStringlnPc>
	if (USART_ReciveWait("READY",10000)==1)                 //Command and time out
 290:	40 e0       	ldi	r20, 0x00	; 0
 292:	60 e1       	ldi	r22, 0x10	; 16
 294:	77 e2       	ldi	r23, 0x27	; 39
 296:	8f e0       	ldi	r24, 0x0F	; 15
 298:	91 e0       	ldi	r25, 0x01	; 1
 29a:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <_Z16USART_ReciveWaitPcib>
 29e:	88 23       	and	r24, r24
 2a0:	21 f0       	breq	.+8      	; 0x2aa <_Z8checkGSMv+0x60>
	{
		USART_ClearRX();
 2a2:	0e 94 1a 01 	call	0x234	; 0x234 <_Z13USART_ClearRXv>
	{
		USART_ClearRX();
		return 0;
	}
	
	for(uint8_t i=0;i<20;i++){
 2a6:	c0 e0       	ldi	r28, 0x00	; 0
 2a8:	03 c0       	rjmp	.+6      	; 0x2b0 <_Z8checkGSMv+0x66>
		USART_ClearRX();
	//	return 1;
	}
	else
	{
		USART_ClearRX();
 2aa:	0e 94 1a 01 	call	0x234	; 0x234 <_Z13USART_ClearRXv>
		return 0;
 2ae:	38 c0       	rjmp	.+112    	; 0x320 <_Z8checkGSMv+0xd6>
	}
	
	for(uint8_t i=0;i<20;i++){
 2b0:	c4 31       	cpi	r28, 0x14	; 20
 2b2:	a8 f5       	brcc	.+106    	; 0x31e <_Z8checkGSMv+0xd4>
	USART_TxStringln("AT+CSQ");  //signal strength
 2b4:	85 e1       	ldi	r24, 0x15	; 21
 2b6:	91 e0       	ldi	r25, 0x01	; 1
 2b8:	0e 94 7e 00 	call	0xfc	; 0xfc <_Z16USART_TxStringlnPc>
 2bc:	2f ef       	ldi	r18, 0xFF	; 255
 2be:	84 e3       	ldi	r24, 0x34	; 52
 2c0:	9c e0       	ldi	r25, 0x0C	; 12
 2c2:	21 50       	subi	r18, 0x01	; 1
 2c4:	80 40       	sbci	r24, 0x00	; 0
 2c6:	90 40       	sbci	r25, 0x00	; 0
 2c8:	e1 f7       	brne	.-8      	; 0x2c2 <_Z8checkGSMv+0x78>
 2ca:	00 c0       	rjmp	.+0      	; 0x2cc <_Z8checkGSMv+0x82>
 2cc:	00 00       	nop
		_delay_ms(500);
		strncpy(lengthcal,strstr(rxvalue,"CSQ: ")+5,2);
 2ce:	6c e1       	ldi	r22, 0x1C	; 28
 2d0:	71 e0       	ldi	r23, 0x01	; 1
 2d2:	86 e0       	ldi	r24, 0x06	; 6
 2d4:	92 e0       	ldi	r25, 0x02	; 2
 2d6:	0e 94 ac 04 	call	0x958	; 0x958 <strstr>
 2da:	bc 01       	movw	r22, r24
 2dc:	6b 5f       	subi	r22, 0xFB	; 251
 2de:	7f 4f       	sbci	r23, 0xFF	; 255
 2e0:	42 e0       	ldi	r20, 0x02	; 2
 2e2:	50 e0       	ldi	r21, 0x00	; 0
 2e4:	87 ec       	ldi	r24, 0xC7	; 199
 2e6:	91 e0       	ldi	r25, 0x01	; 1
 2e8:	0e 94 9d 04 	call	0x93a	; 0x93a <strncpy>
		gsm=atoi(lengthcal);
 2ec:	87 ec       	ldi	r24, 0xC7	; 199
 2ee:	91 e0       	ldi	r25, 0x01	; 1
 2f0:	0e 94 3e 04 	call	0x87c	; 0x87c <atoi>
 2f4:	90 93 c6 01 	sts	0x01C6, r25	; 0x8001c6 <gsm+0x1>
 2f8:	80 93 c5 01 	sts	0x01C5, r24	; 0x8001c5 <gsm>
		if (gsm>15)
 2fc:	40 97       	sbiw	r24, 0x10	; 16
 2fe:	7c f4       	brge	.+30     	; 0x31e <_Z8checkGSMv+0xd4>
		{break;
		}
		else{
		USART_ClearRX();
 300:	0e 94 1a 01 	call	0x234	; 0x234 <_Z13USART_ClearRXv>
 304:	2f ef       	ldi	r18, 0xFF	; 255
 306:	89 e6       	ldi	r24, 0x69	; 105
 308:	98 e1       	ldi	r25, 0x18	; 24
 30a:	21 50       	subi	r18, 0x01	; 1
 30c:	80 40       	sbci	r24, 0x00	; 0
 30e:	90 40       	sbci	r25, 0x00	; 0
 310:	e1 f7       	brne	.-8      	; 0x30a <_Z8checkGSMv+0xc0>
 312:	00 c0       	rjmp	.+0      	; 0x314 <_Z8checkGSMv+0xca>
 314:	00 00       	nop
		_delay_ms(1000);		
		}
	USART_ClearRX();	
 316:	0e 94 1a 01 	call	0x234	; 0x234 <_Z13USART_ClearRXv>
	{
		USART_ClearRX();
		return 0;
	}
	
	for(uint8_t i=0;i<20;i++){
 31a:	cf 5f       	subi	r28, 0xFF	; 255
 31c:	c9 cf       	rjmp	.-110    	; 0x2b0 <_Z8checkGSMv+0x66>
	
	
	
	
	
}
 31e:	01 c0       	rjmp	.+2      	; 0x322 <_Z8checkGSMv+0xd8>
 320:	80 e0       	ldi	r24, 0x00	; 0
 322:	cf 91       	pop	r28
 324:	08 95       	ret

00000326 <_Z8setupGSMv>:

bool setupGSM(){
	//******SMS Functions
	USART_TxStringln("AT+CMGF=1");
 326:	82 e2       	ldi	r24, 0x22	; 34
 328:	91 e0       	ldi	r25, 0x01	; 1
 32a:	0e 94 7e 00 	call	0xfc	; 0xfc <_Z16USART_TxStringlnPc>
	USART_ReciveWait("OK",1000,1);
 32e:	41 e0       	ldi	r20, 0x01	; 1
 330:	68 ee       	ldi	r22, 0xE8	; 232
 332:	73 e0       	ldi	r23, 0x03	; 3
 334:	83 e0       	ldi	r24, 0x03	; 3
 336:	91 e0       	ldi	r25, 0x01	; 1
 338:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <_Z16USART_ReciveWaitPcib>
 33c:	2f ef       	ldi	r18, 0xFF	; 255
 33e:	81 ee       	ldi	r24, 0xE1	; 225
 340:	94 e0       	ldi	r25, 0x04	; 4
 342:	21 50       	subi	r18, 0x01	; 1
 344:	80 40       	sbci	r24, 0x00	; 0
 346:	90 40       	sbci	r25, 0x00	; 0
 348:	e1 f7       	brne	.-8      	; 0x342 <_Z8setupGSMv+0x1c>
 34a:	00 c0       	rjmp	.+0      	; 0x34c <_Z8setupGSMv+0x26>
 34c:	00 00       	nop
	_delay_ms(200);
	USART_ClearRX();
 34e:	0e 94 1a 01 	call	0x234	; 0x234 <_Z13USART_ClearRXv>
	
	USART_TxStringln("AT+CNMI=1,2,0,0,0");//sms read
 352:	8c e2       	ldi	r24, 0x2C	; 44
 354:	91 e0       	ldi	r25, 0x01	; 1
 356:	0e 94 7e 00 	call	0xfc	; 0xfc <_Z16USART_TxStringlnPc>
	USART_ReciveWait("OK",1000,1);
 35a:	41 e0       	ldi	r20, 0x01	; 1
 35c:	68 ee       	ldi	r22, 0xE8	; 232
 35e:	73 e0       	ldi	r23, 0x03	; 3
 360:	83 e0       	ldi	r24, 0x03	; 3
 362:	91 e0       	ldi	r25, 0x01	; 1
 364:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <_Z16USART_ReciveWaitPcib>
 368:	2f ef       	ldi	r18, 0xFF	; 255
 36a:	81 ee       	ldi	r24, 0xE1	; 225
 36c:	94 e0       	ldi	r25, 0x04	; 4
 36e:	21 50       	subi	r18, 0x01	; 1
 370:	80 40       	sbci	r24, 0x00	; 0
 372:	90 40       	sbci	r25, 0x00	; 0
 374:	e1 f7       	brne	.-8      	; 0x36e <_Z8setupGSMv+0x48>
 376:	00 c0       	rjmp	.+0      	; 0x378 <_Z8setupGSMv+0x52>
 378:	00 00       	nop
	_delay_ms(200);
		
	//****Data function
	
	
}
 37a:	08 95       	ret

0000037c <_Z16mainfunctionInitv>:
	}
    }
}

void mainfunctionInit(){
	DDRD|=(1<<7);
 37c:	8a b1       	in	r24, 0x0a	; 10
 37e:	80 68       	ori	r24, 0x80	; 128
 380:	8a b9       	out	0x0a, r24	; 10
	PORTD|=(1<<7);
 382:	8b b1       	in	r24, 0x0b	; 11
 384:	80 68       	ori	r24, 0x80	; 128
 386:	8b b9       	out	0x0b, r24	; 11
	DDRB|=(1<<0);
 388:	84 b1       	in	r24, 0x04	; 4
 38a:	81 60       	ori	r24, 0x01	; 1
 38c:	84 b9       	out	0x04, r24	; 4
 38e:	2f ef       	ldi	r18, 0xFF	; 255
 390:	89 ef       	ldi	r24, 0xF9	; 249
 392:	90 e0       	ldi	r25, 0x00	; 0
 394:	21 50       	subi	r18, 0x01	; 1
 396:	80 40       	sbci	r24, 0x00	; 0
 398:	90 40       	sbci	r25, 0x00	; 0
 39a:	e1 f7       	brne	.-8      	; 0x394 <_Z16mainfunctionInitv+0x18>
 39c:	00 c0       	rjmp	.+0      	; 0x39e <_Z16mainfunctionInitv+0x22>
 39e:	00 00       	nop
	_delay_ms(40);
	PORTD&=~(1<<7);
 3a0:	8b b1       	in	r24, 0x0b	; 11
 3a2:	8f 77       	andi	r24, 0x7F	; 127
 3a4:	8b b9       	out	0x0b, r24	; 11
	
	if (eeprom_read_byte((uint8_t*)0)==1)
 3a6:	80 e0       	ldi	r24, 0x00	; 0
 3a8:	90 e0       	ldi	r25, 0x00	; 0
 3aa:	0e 94 91 07 	call	0xf22	; 0xf22 <eeprom_read_byte>
 3ae:	81 30       	cpi	r24, 0x01	; 1
 3b0:	19 f4       	brne	.+6      	; 0x3b8 <_Z16mainfunctionInitv+0x3c>
	{state=1;
 3b2:	80 93 b5 01 	sts	0x01B5, r24	; 0x8001b5 <state>
 3b6:	02 c0       	rjmp	.+4      	; 0x3bc <_Z16mainfunctionInitv+0x40>
	} 
	else
	{state=0;
 3b8:	10 92 b5 01 	sts	0x01B5, r1	; 0x8001b5 <state>
	}
	USART_Init(9600);
 3bc:	80 e8       	ldi	r24, 0x80	; 128
 3be:	95 e2       	ldi	r25, 0x25	; 37
 3c0:	0e 94 53 00 	call	0xa6	; 0xa6 <_Z10USART_Initj>
	if (!checkGSM())
 3c4:	0e 94 25 01 	call	0x24a	; 0x24a <_Z8checkGSMv>
 3c8:	81 11       	cpse	r24, r1
 3ca:	06 c0       	rjmp	.+12     	; 0x3d8 <_Z16mainfunctionInitv+0x5c>
	{longjmp(mainstart,1);
 3cc:	61 e0       	ldi	r22, 0x01	; 1
 3ce:	70 e0       	ldi	r23, 0x00	; 0
 3d0:	8f ee       	ldi	r24, 0xEF	; 239
 3d2:	91 e0       	ldi	r25, 0x01	; 1
 3d4:	0e 94 7c 04 	call	0x8f8	; 0x8f8 <longjmp>
	}
	setupGSM();
 3d8:	0e 94 93 01 	call	0x326	; 0x326 <_Z8setupGSMv>
	USART_ClearRX();
 3dc:	0e 94 1a 01 	call	0x234	; 0x234 <_Z13USART_ClearRXv>
	PORTD|=(1<<7);
 3e0:	8b b1       	in	r24, 0x0b	; 11
 3e2:	80 68       	ori	r24, 0x80	; 128
 3e4:	8b b9       	out	0x0b, r24	; 11
 3e6:	2f ef       	ldi	r18, 0xFF	; 255
 3e8:	80 e7       	ldi	r24, 0x70	; 112
 3ea:	92 e0       	ldi	r25, 0x02	; 2
 3ec:	21 50       	subi	r18, 0x01	; 1
 3ee:	80 40       	sbci	r24, 0x00	; 0
 3f0:	90 40       	sbci	r25, 0x00	; 0
 3f2:	e1 f7       	brne	.-8      	; 0x3ec <_Z16mainfunctionInitv+0x70>
 3f4:	00 c0       	rjmp	.+0      	; 0x3f6 <_Z16mainfunctionInitv+0x7a>
 3f6:	00 00       	nop
	_delay_ms(100);
	PORTD&=~(1<<7);
 3f8:	8b b1       	in	r24, 0x0b	; 11
 3fa:	8f 77       	andi	r24, 0x7F	; 127
 3fc:	8b b9       	out	0x0b, r24	; 11
 3fe:	2f ef       	ldi	r18, 0xFF	; 255
 400:	80 e7       	ldi	r24, 0x70	; 112
 402:	92 e0       	ldi	r25, 0x02	; 2
 404:	21 50       	subi	r18, 0x01	; 1
 406:	80 40       	sbci	r24, 0x00	; 0
 408:	90 40       	sbci	r25, 0x00	; 0
 40a:	e1 f7       	brne	.-8      	; 0x404 <__EEPROM_REGION_LENGTH__+0x4>
 40c:	00 c0       	rjmp	.+0      	; 0x40e <__EEPROM_REGION_LENGTH__+0xe>
 40e:	00 00       	nop
	_delay_ms(100);
	PORTD|=(1<<7);
 410:	8b b1       	in	r24, 0x0b	; 11
 412:	80 68       	ori	r24, 0x80	; 128
 414:	8b b9       	out	0x0b, r24	; 11
 416:	2f ef       	ldi	r18, 0xFF	; 255
 418:	80 e7       	ldi	r24, 0x70	; 112
 41a:	92 e0       	ldi	r25, 0x02	; 2
 41c:	21 50       	subi	r18, 0x01	; 1
 41e:	80 40       	sbci	r24, 0x00	; 0
 420:	90 40       	sbci	r25, 0x00	; 0
 422:	e1 f7       	brne	.-8      	; 0x41c <__EEPROM_REGION_LENGTH__+0x1c>
 424:	00 c0       	rjmp	.+0      	; 0x426 <__EEPROM_REGION_LENGTH__+0x26>
 426:	00 00       	nop
	_delay_ms(100);
	PORTD&=~(1<<7);
 428:	8b b1       	in	r24, 0x0b	; 11
 42a:	8f 77       	andi	r24, 0x7F	; 127
 42c:	8b b9       	out	0x0b, r24	; 11
 42e:	2f ef       	ldi	r18, 0xFF	; 255
 430:	80 e7       	ldi	r24, 0x70	; 112
 432:	92 e0       	ldi	r25, 0x02	; 2
 434:	21 50       	subi	r18, 0x01	; 1
 436:	80 40       	sbci	r24, 0x00	; 0
 438:	90 40       	sbci	r25, 0x00	; 0
 43a:	e1 f7       	brne	.-8      	; 0x434 <__EEPROM_REGION_LENGTH__+0x34>
 43c:	00 c0       	rjmp	.+0      	; 0x43e <__EEPROM_REGION_LENGTH__+0x3e>
 43e:	00 00       	nop
 440:	08 95       	ret

00000442 <main>:
bool checkGSM(); //network connect check
bool setupGSM();
void eepromNumR();

int main(void)
{	DDRD|=(1<<2);
 442:	cf 93       	push	r28
 444:	df 93       	push	r29
 446:	cd b7       	in	r28, 0x3d	; 61
 448:	de b7       	in	r29, 0x3e	; 62
 44a:	28 97       	sbiw	r28, 0x08	; 8
 44c:	0f b6       	in	r0, 0x3f	; 63
 44e:	f8 94       	cli
 450:	de bf       	out	0x3e, r29	; 62
 452:	0f be       	out	0x3f, r0	; 63
 454:	cd bf       	out	0x3d, r28	; 61
 456:	8a b1       	in	r24, 0x0a	; 10
 458:	84 60       	ori	r24, 0x04	; 4
 45a:	8a b9       	out	0x0a, r24	; 10
	PORTD&=~(1<<2);
 45c:	8b b1       	in	r24, 0x0b	; 11
 45e:	8b 7f       	andi	r24, 0xFB	; 251
 460:	8b b9       	out	0x0b, r24	; 11
   setjmp (mainstart);//reset point
 462:	8f ee       	ldi	r24, 0xEF	; 239
 464:	91 e0       	ldi	r25, 0x01	; 1
 466:	0e 94 5c 04 	call	0x8b8	; 0x8b8 <setjmp>
   mainfunctionInit();
 46a:	0e 94 be 01 	call	0x37c	; 0x37c <_Z16mainfunctionInitv>
   sei();
 46e:	78 94       	sei
   
    while (1) 
    {
		
		if (USART_ReciveWait("RG",200))
 470:	40 e0       	ldi	r20, 0x00	; 0
 472:	68 ec       	ldi	r22, 0xC8	; 200
 474:	70 e0       	ldi	r23, 0x00	; 0
 476:	8e e3       	ldi	r24, 0x3E	; 62
 478:	91 e0       	ldi	r25, 0x01	; 1
 47a:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <_Z16USART_ReciveWaitPcib>
 47e:	88 23       	and	r24, r24
 480:	09 f4       	brne	.+2      	; 0x484 <main+0x42>
 482:	6d c0       	rjmp	.+218    	; 0x55e <main+0x11c>
 484:	2f ef       	ldi	r18, 0xFF	; 255
 486:	80 e7       	ldi	r24, 0x70	; 112
 488:	92 e0       	ldi	r25, 0x02	; 2
 48a:	21 50       	subi	r18, 0x01	; 1
 48c:	80 40       	sbci	r24, 0x00	; 0
 48e:	90 40       	sbci	r25, 0x00	; 0
 490:	e1 f7       	brne	.-8      	; 0x48a <main+0x48>
 492:	00 c0       	rjmp	.+0      	; 0x494 <main+0x52>
 494:	00 00       	nop
		{	_delay_ms(100);
			char filtere[8];
			strncpy(filtere,strstr(rxvalue,"RG")+3,10);
 496:	6e e3       	ldi	r22, 0x3E	; 62
 498:	71 e0       	ldi	r23, 0x01	; 1
 49a:	86 e0       	ldi	r24, 0x06	; 6
 49c:	92 e0       	ldi	r25, 0x02	; 2
 49e:	0e 94 ac 04 	call	0x958	; 0x958 <strstr>
 4a2:	bc 01       	movw	r22, r24
 4a4:	6d 5f       	subi	r22, 0xFD	; 253
 4a6:	7f 4f       	sbci	r23, 0xFF	; 255
 4a8:	4a e0       	ldi	r20, 0x0A	; 10
 4aa:	50 e0       	ldi	r21, 0x00	; 0
 4ac:	ce 01       	movw	r24, r28
 4ae:	01 96       	adiw	r24, 0x01	; 1
 4b0:	0e 94 9d 04 	call	0x93a	; 0x93a <strncpy>
			eeprom_write_block((char*)filtere,(uint8_t*)8,10);
 4b4:	4a e0       	ldi	r20, 0x0A	; 10
 4b6:	50 e0       	ldi	r21, 0x00	; 0
 4b8:	68 e0       	ldi	r22, 0x08	; 8
 4ba:	70 e0       	ldi	r23, 0x00	; 0
 4bc:	ce 01       	movw	r24, r28
 4be:	01 96       	adiw	r24, 0x01	; 1
 4c0:	0e 94 99 07 	call	0xf32	; 0xf32 <eeprom_write_block>
			eeprom_read_block((char*)numbr,(uint8_t*)9,9);
 4c4:	49 e0       	ldi	r20, 0x09	; 9
 4c6:	50 e0       	ldi	r21, 0x00	; 0
 4c8:	69 e0       	ldi	r22, 0x09	; 9
 4ca:	70 e0       	ldi	r23, 0x00	; 0
 4cc:	86 eb       	ldi	r24, 0xB6	; 182
 4ce:	91 e0       	ldi	r25, 0x01	; 1
 4d0:	0e 94 81 07 	call	0xf02	; 0xf02 <eeprom_read_block>
			sprintf(lengthcal,"AT+CMGS=\"+94%s\"",numbr);
 4d4:	86 eb       	ldi	r24, 0xB6	; 182
 4d6:	91 e0       	ldi	r25, 0x01	; 1
 4d8:	9f 93       	push	r25
 4da:	8f 93       	push	r24
 4dc:	81 e4       	ldi	r24, 0x41	; 65
 4de:	91 e0       	ldi	r25, 0x01	; 1
 4e0:	9f 93       	push	r25
 4e2:	8f 93       	push	r24
 4e4:	87 ec       	ldi	r24, 0xC7	; 199
 4e6:	91 e0       	ldi	r25, 0x01	; 1
 4e8:	9f 93       	push	r25
 4ea:	8f 93       	push	r24
 4ec:	0e 94 ce 04 	call	0x99c	; 0x99c <sprintf>
 4f0:	0f 90       	pop	r0
 4f2:	0f 90       	pop	r0
 4f4:	0f 90       	pop	r0
 4f6:	0f 90       	pop	r0
 4f8:	0f 90       	pop	r0
 4fa:	0f 90       	pop	r0
			USART_TxStringln(lengthcal);
 4fc:	87 ec       	ldi	r24, 0xC7	; 199
 4fe:	91 e0       	ldi	r25, 0x01	; 1
 500:	0e 94 7e 00 	call	0xfc	; 0xfc <_Z16USART_TxStringlnPc>
 504:	2f ef       	ldi	r18, 0xFF	; 255
 506:	81 ee       	ldi	r24, 0xE1	; 225
 508:	94 e0       	ldi	r25, 0x04	; 4
 50a:	21 50       	subi	r18, 0x01	; 1
 50c:	80 40       	sbci	r24, 0x00	; 0
 50e:	90 40       	sbci	r25, 0x00	; 0
 510:	e1 f7       	brne	.-8      	; 0x50a <main+0xc8>
 512:	00 c0       	rjmp	.+0      	; 0x514 <main+0xd2>
 514:	00 00       	nop
			_delay_ms(200);
			USART_TxString("Your Number is registered");
 516:	81 e5       	ldi	r24, 0x51	; 81
 518:	91 e0       	ldi	r25, 0x01	; 1
 51a:	0e 94 71 00 	call	0xe2	; 0xe2 <_Z14USART_TxStringPc>
 51e:	2f ef       	ldi	r18, 0xFF	; 255
 520:	81 ee       	ldi	r24, 0xE1	; 225
 522:	94 e0       	ldi	r25, 0x04	; 4
 524:	21 50       	subi	r18, 0x01	; 1
 526:	80 40       	sbci	r24, 0x00	; 0
 528:	90 40       	sbci	r25, 0x00	; 0
 52a:	e1 f7       	brne	.-8      	; 0x524 <main+0xe2>
 52c:	00 c0       	rjmp	.+0      	; 0x52e <main+0xec>
 52e:	00 00       	nop
			_delay_ms(200);
			USART_Transmit(26);
 530:	8a e1       	ldi	r24, 0x1A	; 26
 532:	0e 94 6a 00 	call	0xd4	; 0xd4 <_Z14USART_Transmith>
 536:	2f ef       	ldi	r18, 0xFF	; 255
 538:	81 ee       	ldi	r24, 0xE1	; 225
 53a:	94 e0       	ldi	r25, 0x04	; 4
 53c:	21 50       	subi	r18, 0x01	; 1
 53e:	80 40       	sbci	r24, 0x00	; 0
 540:	90 40       	sbci	r25, 0x00	; 0
 542:	e1 f7       	brne	.-8      	; 0x53c <main+0xfa>
 544:	00 c0       	rjmp	.+0      	; 0x546 <main+0x104>
 546:	00 00       	nop
			_delay_ms(200);
			USART_ClearRX();
 548:	0e 94 1a 01 	call	0x234	; 0x234 <_Z13USART_ClearRXv>
 54c:	2f ef       	ldi	r18, 0xFF	; 255
 54e:	8d e3       	ldi	r24, 0x3D	; 61
 550:	99 e4       	ldi	r25, 0x49	; 73
 552:	21 50       	subi	r18, 0x01	; 1
 554:	80 40       	sbci	r24, 0x00	; 0
 556:	90 40       	sbci	r25, 0x00	; 0
 558:	e1 f7       	brne	.-8      	; 0x552 <main+0x110>
 55a:	00 c0       	rjmp	.+0      	; 0x55c <main+0x11a>
 55c:	00 00       	nop
			_delay_ms(3000);
		}
		
		if (USART_ReciveWait("SMS ON",200))
 55e:	40 e0       	ldi	r20, 0x00	; 0
 560:	68 ec       	ldi	r22, 0xC8	; 200
 562:	70 e0       	ldi	r23, 0x00	; 0
 564:	8b e6       	ldi	r24, 0x6B	; 107
 566:	91 e0       	ldi	r25, 0x01	; 1
 568:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <_Z16USART_ReciveWaitPcib>
 56c:	88 23       	and	r24, r24
 56e:	09 f4       	brne	.+2      	; 0x572 <main+0x130>
 570:	60 c0       	rjmp	.+192    	; 0x632 <main+0x1f0>
 572:	2f ef       	ldi	r18, 0xFF	; 255
 574:	80 e7       	ldi	r24, 0x70	; 112
 576:	92 e0       	ldi	r25, 0x02	; 2
 578:	21 50       	subi	r18, 0x01	; 1
 57a:	80 40       	sbci	r24, 0x00	; 0
 57c:	90 40       	sbci	r25, 0x00	; 0
 57e:	e1 f7       	brne	.-8      	; 0x578 <main+0x136>
 580:	00 c0       	rjmp	.+0      	; 0x582 <main+0x140>
 582:	00 00       	nop
		{	_delay_ms(100);
			state=1;sendState=0;
 584:	81 e0       	ldi	r24, 0x01	; 1
 586:	80 93 b5 01 	sts	0x01B5, r24	; 0x8001b5 <state>
 58a:	10 92 b4 01 	sts	0x01B4, r1	; 0x8001b4 <__data_end>
			eeprom_write_byte((uint8_t*)0,1);
 58e:	61 e0       	ldi	r22, 0x01	; 1
 590:	80 e0       	ldi	r24, 0x00	; 0
 592:	90 e0       	ldi	r25, 0x00	; 0
 594:	0e 94 a3 07 	call	0xf46	; 0xf46 <eeprom_write_byte>
			eeprom_read_block((char*)numbr,(uint8_t*)9,9);
 598:	49 e0       	ldi	r20, 0x09	; 9
 59a:	50 e0       	ldi	r21, 0x00	; 0
 59c:	69 e0       	ldi	r22, 0x09	; 9
 59e:	70 e0       	ldi	r23, 0x00	; 0
 5a0:	86 eb       	ldi	r24, 0xB6	; 182
 5a2:	91 e0       	ldi	r25, 0x01	; 1
 5a4:	0e 94 81 07 	call	0xf02	; 0xf02 <eeprom_read_block>
			sprintf(lengthcal,"AT+CMGS=\"+94%s\"",numbr);
 5a8:	86 eb       	ldi	r24, 0xB6	; 182
 5aa:	91 e0       	ldi	r25, 0x01	; 1
 5ac:	9f 93       	push	r25
 5ae:	8f 93       	push	r24
 5b0:	81 e4       	ldi	r24, 0x41	; 65
 5b2:	91 e0       	ldi	r25, 0x01	; 1
 5b4:	9f 93       	push	r25
 5b6:	8f 93       	push	r24
 5b8:	87 ec       	ldi	r24, 0xC7	; 199
 5ba:	91 e0       	ldi	r25, 0x01	; 1
 5bc:	9f 93       	push	r25
 5be:	8f 93       	push	r24
 5c0:	0e 94 ce 04 	call	0x99c	; 0x99c <sprintf>
 5c4:	0f 90       	pop	r0
 5c6:	0f 90       	pop	r0
 5c8:	0f 90       	pop	r0
 5ca:	0f 90       	pop	r0
 5cc:	0f 90       	pop	r0
 5ce:	0f 90       	pop	r0
			USART_TxStringln(lengthcal);
 5d0:	87 ec       	ldi	r24, 0xC7	; 199
 5d2:	91 e0       	ldi	r25, 0x01	; 1
 5d4:	0e 94 7e 00 	call	0xfc	; 0xfc <_Z16USART_TxStringlnPc>
 5d8:	2f ef       	ldi	r18, 0xFF	; 255
 5da:	81 ee       	ldi	r24, 0xE1	; 225
 5dc:	94 e0       	ldi	r25, 0x04	; 4
 5de:	21 50       	subi	r18, 0x01	; 1
 5e0:	80 40       	sbci	r24, 0x00	; 0
 5e2:	90 40       	sbci	r25, 0x00	; 0
 5e4:	e1 f7       	brne	.-8      	; 0x5de <main+0x19c>
 5e6:	00 c0       	rjmp	.+0      	; 0x5e8 <main+0x1a6>
 5e8:	00 00       	nop
			_delay_ms(200);
			USART_TxString("SMS Alert activated");
 5ea:	82 e7       	ldi	r24, 0x72	; 114
 5ec:	91 e0       	ldi	r25, 0x01	; 1
 5ee:	0e 94 71 00 	call	0xe2	; 0xe2 <_Z14USART_TxStringPc>
 5f2:	2f ef       	ldi	r18, 0xFF	; 255
 5f4:	81 ee       	ldi	r24, 0xE1	; 225
 5f6:	94 e0       	ldi	r25, 0x04	; 4
 5f8:	21 50       	subi	r18, 0x01	; 1
 5fa:	80 40       	sbci	r24, 0x00	; 0
 5fc:	90 40       	sbci	r25, 0x00	; 0
 5fe:	e1 f7       	brne	.-8      	; 0x5f8 <main+0x1b6>
 600:	00 c0       	rjmp	.+0      	; 0x602 <main+0x1c0>
 602:	00 00       	nop
			_delay_ms(200);
			USART_Transmit(26);
 604:	8a e1       	ldi	r24, 0x1A	; 26
 606:	0e 94 6a 00 	call	0xd4	; 0xd4 <_Z14USART_Transmith>
 60a:	2f ef       	ldi	r18, 0xFF	; 255
 60c:	81 ee       	ldi	r24, 0xE1	; 225
 60e:	94 e0       	ldi	r25, 0x04	; 4
 610:	21 50       	subi	r18, 0x01	; 1
 612:	80 40       	sbci	r24, 0x00	; 0
 614:	90 40       	sbci	r25, 0x00	; 0
 616:	e1 f7       	brne	.-8      	; 0x610 <main+0x1ce>
 618:	00 c0       	rjmp	.+0      	; 0x61a <main+0x1d8>
 61a:	00 00       	nop
			_delay_ms(200);
			USART_ClearRX();
 61c:	0e 94 1a 01 	call	0x234	; 0x234 <_Z13USART_ClearRXv>
 620:	2f ef       	ldi	r18, 0xFF	; 255
 622:	8d e3       	ldi	r24, 0x3D	; 61
 624:	99 e4       	ldi	r25, 0x49	; 73
 626:	21 50       	subi	r18, 0x01	; 1
 628:	80 40       	sbci	r24, 0x00	; 0
 62a:	90 40       	sbci	r25, 0x00	; 0
 62c:	e1 f7       	brne	.-8      	; 0x626 <main+0x1e4>
 62e:	00 c0       	rjmp	.+0      	; 0x630 <main+0x1ee>
 630:	00 00       	nop
			_delay_ms(3000);
		}
		
		if (USART_ReciveWait("SMS OFF",200))
 632:	40 e0       	ldi	r20, 0x00	; 0
 634:	68 ec       	ldi	r22, 0xC8	; 200
 636:	70 e0       	ldi	r23, 0x00	; 0
 638:	86 e8       	ldi	r24, 0x86	; 134
 63a:	91 e0       	ldi	r25, 0x01	; 1
 63c:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <_Z16USART_ReciveWaitPcib>
 640:	88 23       	and	r24, r24
 642:	09 f4       	brne	.+2      	; 0x646 <main+0x204>
 644:	5d c0       	rjmp	.+186    	; 0x700 <main+0x2be>
 646:	2f ef       	ldi	r18, 0xFF	; 255
 648:	80 e7       	ldi	r24, 0x70	; 112
 64a:	92 e0       	ldi	r25, 0x02	; 2
 64c:	21 50       	subi	r18, 0x01	; 1
 64e:	80 40       	sbci	r24, 0x00	; 0
 650:	90 40       	sbci	r25, 0x00	; 0
 652:	e1 f7       	brne	.-8      	; 0x64c <main+0x20a>
 654:	00 c0       	rjmp	.+0      	; 0x656 <main+0x214>
 656:	00 00       	nop
		{	_delay_ms(100);
			state=0;
 658:	10 92 b5 01 	sts	0x01B5, r1	; 0x8001b5 <state>
			
			eeprom_write_byte((uint8_t*)0,0);
 65c:	60 e0       	ldi	r22, 0x00	; 0
 65e:	80 e0       	ldi	r24, 0x00	; 0
 660:	90 e0       	ldi	r25, 0x00	; 0
 662:	0e 94 a3 07 	call	0xf46	; 0xf46 <eeprom_write_byte>
			eeprom_read_block((char*)numbr,(uint8_t*)9,9);
 666:	49 e0       	ldi	r20, 0x09	; 9
 668:	50 e0       	ldi	r21, 0x00	; 0
 66a:	69 e0       	ldi	r22, 0x09	; 9
 66c:	70 e0       	ldi	r23, 0x00	; 0
 66e:	86 eb       	ldi	r24, 0xB6	; 182
 670:	91 e0       	ldi	r25, 0x01	; 1
 672:	0e 94 81 07 	call	0xf02	; 0xf02 <eeprom_read_block>
			sprintf(lengthcal,"AT+CMGS=\"+94%s\"",numbr);
 676:	86 eb       	ldi	r24, 0xB6	; 182
 678:	91 e0       	ldi	r25, 0x01	; 1
 67a:	9f 93       	push	r25
 67c:	8f 93       	push	r24
 67e:	81 e4       	ldi	r24, 0x41	; 65
 680:	91 e0       	ldi	r25, 0x01	; 1
 682:	9f 93       	push	r25
 684:	8f 93       	push	r24
 686:	87 ec       	ldi	r24, 0xC7	; 199
 688:	91 e0       	ldi	r25, 0x01	; 1
 68a:	9f 93       	push	r25
 68c:	8f 93       	push	r24
 68e:	0e 94 ce 04 	call	0x99c	; 0x99c <sprintf>
 692:	0f 90       	pop	r0
 694:	0f 90       	pop	r0
 696:	0f 90       	pop	r0
 698:	0f 90       	pop	r0
 69a:	0f 90       	pop	r0
 69c:	0f 90       	pop	r0
			USART_TxStringln(lengthcal);
 69e:	87 ec       	ldi	r24, 0xC7	; 199
 6a0:	91 e0       	ldi	r25, 0x01	; 1
 6a2:	0e 94 7e 00 	call	0xfc	; 0xfc <_Z16USART_TxStringlnPc>
 6a6:	2f ef       	ldi	r18, 0xFF	; 255
 6a8:	81 ee       	ldi	r24, 0xE1	; 225
 6aa:	94 e0       	ldi	r25, 0x04	; 4
 6ac:	21 50       	subi	r18, 0x01	; 1
 6ae:	80 40       	sbci	r24, 0x00	; 0
 6b0:	90 40       	sbci	r25, 0x00	; 0
 6b2:	e1 f7       	brne	.-8      	; 0x6ac <main+0x26a>
 6b4:	00 c0       	rjmp	.+0      	; 0x6b6 <main+0x274>
 6b6:	00 00       	nop
			_delay_ms(200);
			USART_TxString("SMS Alert deactivated");
 6b8:	8e e8       	ldi	r24, 0x8E	; 142
 6ba:	91 e0       	ldi	r25, 0x01	; 1
 6bc:	0e 94 71 00 	call	0xe2	; 0xe2 <_Z14USART_TxStringPc>
 6c0:	2f ef       	ldi	r18, 0xFF	; 255
 6c2:	81 ee       	ldi	r24, 0xE1	; 225
 6c4:	94 e0       	ldi	r25, 0x04	; 4
 6c6:	21 50       	subi	r18, 0x01	; 1
 6c8:	80 40       	sbci	r24, 0x00	; 0
 6ca:	90 40       	sbci	r25, 0x00	; 0
 6cc:	e1 f7       	brne	.-8      	; 0x6c6 <main+0x284>
 6ce:	00 c0       	rjmp	.+0      	; 0x6d0 <main+0x28e>
 6d0:	00 00       	nop
			_delay_ms(200);
			USART_Transmit(26);
 6d2:	8a e1       	ldi	r24, 0x1A	; 26
 6d4:	0e 94 6a 00 	call	0xd4	; 0xd4 <_Z14USART_Transmith>
 6d8:	2f ef       	ldi	r18, 0xFF	; 255
 6da:	81 ee       	ldi	r24, 0xE1	; 225
 6dc:	94 e0       	ldi	r25, 0x04	; 4
 6de:	21 50       	subi	r18, 0x01	; 1
 6e0:	80 40       	sbci	r24, 0x00	; 0
 6e2:	90 40       	sbci	r25, 0x00	; 0
 6e4:	e1 f7       	brne	.-8      	; 0x6de <main+0x29c>
 6e6:	00 c0       	rjmp	.+0      	; 0x6e8 <main+0x2a6>
 6e8:	00 00       	nop
			_delay_ms(200);
			USART_ClearRX();
 6ea:	0e 94 1a 01 	call	0x234	; 0x234 <_Z13USART_ClearRXv>
 6ee:	2f ef       	ldi	r18, 0xFF	; 255
 6f0:	8d e3       	ldi	r24, 0x3D	; 61
 6f2:	99 e4       	ldi	r25, 0x49	; 73
 6f4:	21 50       	subi	r18, 0x01	; 1
 6f6:	80 40       	sbci	r24, 0x00	; 0
 6f8:	90 40       	sbci	r25, 0x00	; 0
 6fa:	e1 f7       	brne	.-8      	; 0x6f4 <main+0x2b2>
 6fc:	00 c0       	rjmp	.+0      	; 0x6fe <main+0x2bc>
 6fe:	00 00       	nop
			_delay_ms(3000);
		}
		
	if (((PINB&0b1000000)>>1)&&(!sendState))
 700:	1e 9b       	sbis	0x03, 6	; 3
 702:	06 c0       	rjmp	.+12     	; 0x710 <main+0x2ce>
 704:	80 91 b4 01 	lds	r24, 0x01B4	; 0x8001b4 <__data_end>
 708:	88 23       	and	r24, r24
 70a:	21 f0       	breq	.+8      	; 0x714 <main+0x2d2>
 70c:	80 e0       	ldi	r24, 0x00	; 0
 70e:	03 c0       	rjmp	.+6      	; 0x716 <main+0x2d4>
 710:	80 e0       	ldi	r24, 0x00	; 0
 712:	01 c0       	rjmp	.+2      	; 0x716 <main+0x2d4>
 714:	81 e0       	ldi	r24, 0x01	; 1
 716:	88 23       	and	r24, r24
 718:	09 f4       	brne	.+2      	; 0x71c <main+0x2da>
 71a:	5b c0       	rjmp	.+182    	; 0x7d2 <main+0x390>
    {PORTD|=(1<<7);
 71c:	8b b1       	in	r24, 0x0b	; 11
 71e:	80 68       	ori	r24, 0x80	; 128
 720:	8b b9       	out	0x0b, r24	; 11
		PORTB|=(1<<0);
 722:	85 b1       	in	r24, 0x05	; 5
 724:	81 60       	ori	r24, 0x01	; 1
 726:	85 b9       	out	0x05, r24	; 5
		sendState=1;
 728:	81 e0       	ldi	r24, 0x01	; 1
 72a:	80 93 b4 01 	sts	0x01B4, r24	; 0x8001b4 <__data_end>
		if (state)
 72e:	80 91 b5 01 	lds	r24, 0x01B5	; 0x8001b5 <state>
 732:	88 23       	and	r24, r24
 734:	09 f4       	brne	.+2      	; 0x738 <main+0x2f6>
 736:	4d c0       	rjmp	.+154    	; 0x7d2 <main+0x390>
		{eeprom_read_block((char*)numbr,(uint8_t*)9,9);
 738:	49 e0       	ldi	r20, 0x09	; 9
 73a:	50 e0       	ldi	r21, 0x00	; 0
 73c:	69 e0       	ldi	r22, 0x09	; 9
 73e:	70 e0       	ldi	r23, 0x00	; 0
 740:	86 eb       	ldi	r24, 0xB6	; 182
 742:	91 e0       	ldi	r25, 0x01	; 1
 744:	0e 94 81 07 	call	0xf02	; 0xf02 <eeprom_read_block>
			sprintf(lengthcal,"AT+CMGS=\"+94%s\"",numbr);
 748:	86 eb       	ldi	r24, 0xB6	; 182
 74a:	91 e0       	ldi	r25, 0x01	; 1
 74c:	9f 93       	push	r25
 74e:	8f 93       	push	r24
 750:	81 e4       	ldi	r24, 0x41	; 65
 752:	91 e0       	ldi	r25, 0x01	; 1
 754:	9f 93       	push	r25
 756:	8f 93       	push	r24
 758:	87 ec       	ldi	r24, 0xC7	; 199
 75a:	91 e0       	ldi	r25, 0x01	; 1
 75c:	9f 93       	push	r25
 75e:	8f 93       	push	r24
 760:	0e 94 ce 04 	call	0x99c	; 0x99c <sprintf>
 764:	0f 90       	pop	r0
 766:	0f 90       	pop	r0
 768:	0f 90       	pop	r0
 76a:	0f 90       	pop	r0
 76c:	0f 90       	pop	r0
 76e:	0f 90       	pop	r0
			USART_TxStringln(lengthcal);
 770:	87 ec       	ldi	r24, 0xC7	; 199
 772:	91 e0       	ldi	r25, 0x01	; 1
 774:	0e 94 7e 00 	call	0xfc	; 0xfc <_Z16USART_TxStringlnPc>
 778:	2f ef       	ldi	r18, 0xFF	; 255
 77a:	81 ee       	ldi	r24, 0xE1	; 225
 77c:	94 e0       	ldi	r25, 0x04	; 4
 77e:	21 50       	subi	r18, 0x01	; 1
 780:	80 40       	sbci	r24, 0x00	; 0
 782:	90 40       	sbci	r25, 0x00	; 0
 784:	e1 f7       	brne	.-8      	; 0x77e <main+0x33c>
 786:	00 c0       	rjmp	.+0      	; 0x788 <main+0x346>
 788:	00 00       	nop
			_delay_ms(200);
			USART_TxString("Motion Detected");
 78a:	84 ea       	ldi	r24, 0xA4	; 164
 78c:	91 e0       	ldi	r25, 0x01	; 1
 78e:	0e 94 71 00 	call	0xe2	; 0xe2 <_Z14USART_TxStringPc>
 792:	2f ef       	ldi	r18, 0xFF	; 255
 794:	81 ee       	ldi	r24, 0xE1	; 225
 796:	94 e0       	ldi	r25, 0x04	; 4
 798:	21 50       	subi	r18, 0x01	; 1
 79a:	80 40       	sbci	r24, 0x00	; 0
 79c:	90 40       	sbci	r25, 0x00	; 0
 79e:	e1 f7       	brne	.-8      	; 0x798 <main+0x356>
 7a0:	00 c0       	rjmp	.+0      	; 0x7a2 <main+0x360>
 7a2:	00 00       	nop
			_delay_ms(200);
			USART_Transmit(26);
 7a4:	8a e1       	ldi	r24, 0x1A	; 26
 7a6:	0e 94 6a 00 	call	0xd4	; 0xd4 <_Z14USART_Transmith>
 7aa:	2f ef       	ldi	r18, 0xFF	; 255
 7ac:	81 ee       	ldi	r24, 0xE1	; 225
 7ae:	94 e0       	ldi	r25, 0x04	; 4
 7b0:	21 50       	subi	r18, 0x01	; 1
 7b2:	80 40       	sbci	r24, 0x00	; 0
 7b4:	90 40       	sbci	r25, 0x00	; 0
 7b6:	e1 f7       	brne	.-8      	; 0x7b0 <main+0x36e>
 7b8:	00 c0       	rjmp	.+0      	; 0x7ba <main+0x378>
 7ba:	00 00       	nop
			_delay_ms(200);
			USART_ClearRX();
 7bc:	0e 94 1a 01 	call	0x234	; 0x234 <_Z13USART_ClearRXv>
 7c0:	2f ef       	ldi	r18, 0xFF	; 255
 7c2:	81 e1       	ldi	r24, 0x11	; 17
 7c4:	9a e7       	ldi	r25, 0x7A	; 122
 7c6:	21 50       	subi	r18, 0x01	; 1
 7c8:	80 40       	sbci	r24, 0x00	; 0
 7ca:	90 40       	sbci	r25, 0x00	; 0
 7cc:	e1 f7       	brne	.-8      	; 0x7c6 <main+0x384>
 7ce:	00 c0       	rjmp	.+0      	; 0x7d0 <main+0x38e>
 7d0:	00 00       	nop
			_delay_ms(5000);
		}
		
    }
	if(!((PINB&0b1000000)>>1)){
 7d2:	1e 99       	sbic	0x03, 6	; 3
 7d4:	4d ce       	rjmp	.-870    	; 0x470 <main+0x2e>
		PORTD&=~(1<<7);
 7d6:	8b b1       	in	r24, 0x0b	; 11
 7d8:	8f 77       	andi	r24, 0x7F	; 127
 7da:	8b b9       	out	0x0b, r24	; 11
		PORTB&=~(1<<0);
 7dc:	85 b1       	in	r24, 0x05	; 5
 7de:	8e 7f       	andi	r24, 0xFE	; 254
 7e0:	85 b9       	out	0x05, r24	; 5
		sendState=0;
 7e2:	10 92 b4 01 	sts	0x01B4, r1	; 0x8001b4 <__data_end>
 7e6:	44 ce       	rjmp	.-888    	; 0x470 <main+0x2e>

000007e8 <__divmodhi4>:
 7e8:	97 fb       	bst	r25, 7
 7ea:	07 2e       	mov	r0, r23
 7ec:	16 f4       	brtc	.+4      	; 0x7f2 <__divmodhi4+0xa>
 7ee:	00 94       	com	r0
 7f0:	07 d0       	rcall	.+14     	; 0x800 <__divmodhi4_neg1>
 7f2:	77 fd       	sbrc	r23, 7
 7f4:	09 d0       	rcall	.+18     	; 0x808 <__divmodhi4_neg2>
 7f6:	0e 94 2a 04 	call	0x854	; 0x854 <__udivmodhi4>
 7fa:	07 fc       	sbrc	r0, 7
 7fc:	05 d0       	rcall	.+10     	; 0x808 <__divmodhi4_neg2>
 7fe:	3e f4       	brtc	.+14     	; 0x80e <__divmodhi4_exit>

00000800 <__divmodhi4_neg1>:
 800:	90 95       	com	r25
 802:	81 95       	neg	r24
 804:	9f 4f       	sbci	r25, 0xFF	; 255
 806:	08 95       	ret

00000808 <__divmodhi4_neg2>:
 808:	70 95       	com	r23
 80a:	61 95       	neg	r22
 80c:	7f 4f       	sbci	r23, 0xFF	; 255

0000080e <__divmodhi4_exit>:
 80e:	08 95       	ret

00000810 <__udivmodsi4>:
 810:	a1 e2       	ldi	r26, 0x21	; 33
 812:	1a 2e       	mov	r1, r26
 814:	aa 1b       	sub	r26, r26
 816:	bb 1b       	sub	r27, r27
 818:	fd 01       	movw	r30, r26
 81a:	0d c0       	rjmp	.+26     	; 0x836 <__udivmodsi4_ep>

0000081c <__udivmodsi4_loop>:
 81c:	aa 1f       	adc	r26, r26
 81e:	bb 1f       	adc	r27, r27
 820:	ee 1f       	adc	r30, r30
 822:	ff 1f       	adc	r31, r31
 824:	a2 17       	cp	r26, r18
 826:	b3 07       	cpc	r27, r19
 828:	e4 07       	cpc	r30, r20
 82a:	f5 07       	cpc	r31, r21
 82c:	20 f0       	brcs	.+8      	; 0x836 <__udivmodsi4_ep>
 82e:	a2 1b       	sub	r26, r18
 830:	b3 0b       	sbc	r27, r19
 832:	e4 0b       	sbc	r30, r20
 834:	f5 0b       	sbc	r31, r21

00000836 <__udivmodsi4_ep>:
 836:	66 1f       	adc	r22, r22
 838:	77 1f       	adc	r23, r23
 83a:	88 1f       	adc	r24, r24
 83c:	99 1f       	adc	r25, r25
 83e:	1a 94       	dec	r1
 840:	69 f7       	brne	.-38     	; 0x81c <__udivmodsi4_loop>
 842:	60 95       	com	r22
 844:	70 95       	com	r23
 846:	80 95       	com	r24
 848:	90 95       	com	r25
 84a:	9b 01       	movw	r18, r22
 84c:	ac 01       	movw	r20, r24
 84e:	bd 01       	movw	r22, r26
 850:	cf 01       	movw	r24, r30
 852:	08 95       	ret

00000854 <__udivmodhi4>:
 854:	aa 1b       	sub	r26, r26
 856:	bb 1b       	sub	r27, r27
 858:	51 e1       	ldi	r21, 0x11	; 17
 85a:	07 c0       	rjmp	.+14     	; 0x86a <__udivmodhi4_ep>

0000085c <__udivmodhi4_loop>:
 85c:	aa 1f       	adc	r26, r26
 85e:	bb 1f       	adc	r27, r27
 860:	a6 17       	cp	r26, r22
 862:	b7 07       	cpc	r27, r23
 864:	10 f0       	brcs	.+4      	; 0x86a <__udivmodhi4_ep>
 866:	a6 1b       	sub	r26, r22
 868:	b7 0b       	sbc	r27, r23

0000086a <__udivmodhi4_ep>:
 86a:	88 1f       	adc	r24, r24
 86c:	99 1f       	adc	r25, r25
 86e:	5a 95       	dec	r21
 870:	a9 f7       	brne	.-22     	; 0x85c <__udivmodhi4_loop>
 872:	80 95       	com	r24
 874:	90 95       	com	r25
 876:	bc 01       	movw	r22, r24
 878:	cd 01       	movw	r24, r26
 87a:	08 95       	ret

0000087c <atoi>:
 87c:	fc 01       	movw	r30, r24
 87e:	88 27       	eor	r24, r24
 880:	99 27       	eor	r25, r25
 882:	e8 94       	clt
 884:	21 91       	ld	r18, Z+
 886:	20 32       	cpi	r18, 0x20	; 32
 888:	e9 f3       	breq	.-6      	; 0x884 <atoi+0x8>
 88a:	29 30       	cpi	r18, 0x09	; 9
 88c:	10 f0       	brcs	.+4      	; 0x892 <atoi+0x16>
 88e:	2e 30       	cpi	r18, 0x0E	; 14
 890:	c8 f3       	brcs	.-14     	; 0x884 <atoi+0x8>
 892:	2b 32       	cpi	r18, 0x2B	; 43
 894:	41 f0       	breq	.+16     	; 0x8a6 <atoi+0x2a>
 896:	2d 32       	cpi	r18, 0x2D	; 45
 898:	39 f4       	brne	.+14     	; 0x8a8 <atoi+0x2c>
 89a:	68 94       	set
 89c:	04 c0       	rjmp	.+8      	; 0x8a6 <atoi+0x2a>
 89e:	0e 94 c6 04 	call	0x98c	; 0x98c <__mulhi_const_10>
 8a2:	82 0f       	add	r24, r18
 8a4:	91 1d       	adc	r25, r1
 8a6:	21 91       	ld	r18, Z+
 8a8:	20 53       	subi	r18, 0x30	; 48
 8aa:	2a 30       	cpi	r18, 0x0A	; 10
 8ac:	c0 f3       	brcs	.-16     	; 0x89e <atoi+0x22>
 8ae:	1e f4       	brtc	.+6      	; 0x8b6 <atoi+0x3a>
 8b0:	90 95       	com	r25
 8b2:	81 95       	neg	r24
 8b4:	9f 4f       	sbci	r25, 0xFF	; 255
 8b6:	08 95       	ret

000008b8 <setjmp>:
 8b8:	dc 01       	movw	r26, r24
 8ba:	2d 92       	st	X+, r2
 8bc:	3d 92       	st	X+, r3
 8be:	4d 92       	st	X+, r4
 8c0:	5d 92       	st	X+, r5
 8c2:	6d 92       	st	X+, r6
 8c4:	7d 92       	st	X+, r7
 8c6:	8d 92       	st	X+, r8
 8c8:	9d 92       	st	X+, r9
 8ca:	ad 92       	st	X+, r10
 8cc:	bd 92       	st	X+, r11
 8ce:	cd 92       	st	X+, r12
 8d0:	dd 92       	st	X+, r13
 8d2:	ed 92       	st	X+, r14
 8d4:	fd 92       	st	X+, r15
 8d6:	0d 93       	st	X+, r16
 8d8:	1d 93       	st	X+, r17
 8da:	cd 93       	st	X+, r28
 8dc:	dd 93       	st	X+, r29
 8de:	ff 91       	pop	r31
 8e0:	ef 91       	pop	r30
 8e2:	8d b7       	in	r24, 0x3d	; 61
 8e4:	8d 93       	st	X+, r24
 8e6:	8e b7       	in	r24, 0x3e	; 62
 8e8:	8d 93       	st	X+, r24
 8ea:	8f b7       	in	r24, 0x3f	; 63
 8ec:	8d 93       	st	X+, r24
 8ee:	ed 93       	st	X+, r30
 8f0:	fd 93       	st	X+, r31
 8f2:	88 27       	eor	r24, r24
 8f4:	99 27       	eor	r25, r25
 8f6:	09 94       	ijmp

000008f8 <longjmp>:
 8f8:	dc 01       	movw	r26, r24
 8fa:	cb 01       	movw	r24, r22
 8fc:	81 30       	cpi	r24, 0x01	; 1
 8fe:	91 05       	cpc	r25, r1
 900:	81 1d       	adc	r24, r1
 902:	2d 90       	ld	r2, X+
 904:	3d 90       	ld	r3, X+
 906:	4d 90       	ld	r4, X+
 908:	5d 90       	ld	r5, X+
 90a:	6d 90       	ld	r6, X+
 90c:	7d 90       	ld	r7, X+
 90e:	8d 90       	ld	r8, X+
 910:	9d 90       	ld	r9, X+
 912:	ad 90       	ld	r10, X+
 914:	bd 90       	ld	r11, X+
 916:	cd 90       	ld	r12, X+
 918:	dd 90       	ld	r13, X+
 91a:	ed 90       	ld	r14, X+
 91c:	fd 90       	ld	r15, X+
 91e:	0d 91       	ld	r16, X+
 920:	1d 91       	ld	r17, X+
 922:	cd 91       	ld	r28, X+
 924:	dd 91       	ld	r29, X+
 926:	ed 91       	ld	r30, X+
 928:	fd 91       	ld	r31, X+
 92a:	0d 90       	ld	r0, X+
 92c:	f8 94       	cli
 92e:	fe bf       	out	0x3e, r31	; 62
 930:	0f be       	out	0x3f, r0	; 63
 932:	ed bf       	out	0x3d, r30	; 61
 934:	ed 91       	ld	r30, X+
 936:	fd 91       	ld	r31, X+
 938:	09 94       	ijmp

0000093a <strncpy>:
 93a:	fb 01       	movw	r30, r22
 93c:	dc 01       	movw	r26, r24
 93e:	41 50       	subi	r20, 0x01	; 1
 940:	50 40       	sbci	r21, 0x00	; 0
 942:	48 f0       	brcs	.+18     	; 0x956 <strncpy+0x1c>
 944:	01 90       	ld	r0, Z+
 946:	0d 92       	st	X+, r0
 948:	00 20       	and	r0, r0
 94a:	c9 f7       	brne	.-14     	; 0x93e <strncpy+0x4>
 94c:	01 c0       	rjmp	.+2      	; 0x950 <strncpy+0x16>
 94e:	1d 92       	st	X+, r1
 950:	41 50       	subi	r20, 0x01	; 1
 952:	50 40       	sbci	r21, 0x00	; 0
 954:	e0 f7       	brcc	.-8      	; 0x94e <strncpy+0x14>
 956:	08 95       	ret

00000958 <strstr>:
 958:	fb 01       	movw	r30, r22
 95a:	51 91       	ld	r21, Z+
 95c:	55 23       	and	r21, r21
 95e:	a9 f0       	breq	.+42     	; 0x98a <strstr+0x32>
 960:	bf 01       	movw	r22, r30
 962:	dc 01       	movw	r26, r24
 964:	4d 91       	ld	r20, X+
 966:	45 17       	cp	r20, r21
 968:	41 11       	cpse	r20, r1
 96a:	e1 f7       	brne	.-8      	; 0x964 <strstr+0xc>
 96c:	59 f4       	brne	.+22     	; 0x984 <strstr+0x2c>
 96e:	cd 01       	movw	r24, r26
 970:	01 90       	ld	r0, Z+
 972:	00 20       	and	r0, r0
 974:	49 f0       	breq	.+18     	; 0x988 <strstr+0x30>
 976:	4d 91       	ld	r20, X+
 978:	40 15       	cp	r20, r0
 97a:	41 11       	cpse	r20, r1
 97c:	c9 f3       	breq	.-14     	; 0x970 <strstr+0x18>
 97e:	fb 01       	movw	r30, r22
 980:	41 11       	cpse	r20, r1
 982:	ef cf       	rjmp	.-34     	; 0x962 <strstr+0xa>
 984:	81 e0       	ldi	r24, 0x01	; 1
 986:	90 e0       	ldi	r25, 0x00	; 0
 988:	01 97       	sbiw	r24, 0x01	; 1
 98a:	08 95       	ret

0000098c <__mulhi_const_10>:
 98c:	7a e0       	ldi	r23, 0x0A	; 10
 98e:	97 9f       	mul	r25, r23
 990:	90 2d       	mov	r25, r0
 992:	87 9f       	mul	r24, r23
 994:	80 2d       	mov	r24, r0
 996:	91 0d       	add	r25, r1
 998:	11 24       	eor	r1, r1
 99a:	08 95       	ret

0000099c <sprintf>:
 99c:	ae e0       	ldi	r26, 0x0E	; 14
 99e:	b0 e0       	ldi	r27, 0x00	; 0
 9a0:	e4 ed       	ldi	r30, 0xD4	; 212
 9a2:	f4 e0       	ldi	r31, 0x04	; 4
 9a4:	0c 94 bf 07 	jmp	0xf7e	; 0xf7e <__prologue_saves__+0x1c>
 9a8:	0d 89       	ldd	r16, Y+21	; 0x15
 9aa:	1e 89       	ldd	r17, Y+22	; 0x16
 9ac:	86 e0       	ldi	r24, 0x06	; 6
 9ae:	8c 83       	std	Y+4, r24	; 0x04
 9b0:	1a 83       	std	Y+2, r17	; 0x02
 9b2:	09 83       	std	Y+1, r16	; 0x01
 9b4:	8f ef       	ldi	r24, 0xFF	; 255
 9b6:	9f e7       	ldi	r25, 0x7F	; 127
 9b8:	9e 83       	std	Y+6, r25	; 0x06
 9ba:	8d 83       	std	Y+5, r24	; 0x05
 9bc:	ae 01       	movw	r20, r28
 9be:	47 5e       	subi	r20, 0xE7	; 231
 9c0:	5f 4f       	sbci	r21, 0xFF	; 255
 9c2:	6f 89       	ldd	r22, Y+23	; 0x17
 9c4:	78 8d       	ldd	r23, Y+24	; 0x18
 9c6:	ce 01       	movw	r24, r28
 9c8:	01 96       	adiw	r24, 0x01	; 1
 9ca:	0e 94 f0 04 	call	0x9e0	; 0x9e0 <vfprintf>
 9ce:	ef 81       	ldd	r30, Y+7	; 0x07
 9d0:	f8 85       	ldd	r31, Y+8	; 0x08
 9d2:	e0 0f       	add	r30, r16
 9d4:	f1 1f       	adc	r31, r17
 9d6:	10 82       	st	Z, r1
 9d8:	2e 96       	adiw	r28, 0x0e	; 14
 9da:	e4 e0       	ldi	r30, 0x04	; 4
 9dc:	0c 94 db 07 	jmp	0xfb6	; 0xfb6 <__epilogue_restores__+0x1c>

000009e0 <vfprintf>:
 9e0:	ab e0       	ldi	r26, 0x0B	; 11
 9e2:	b0 e0       	ldi	r27, 0x00	; 0
 9e4:	e6 ef       	ldi	r30, 0xF6	; 246
 9e6:	f4 e0       	ldi	r31, 0x04	; 4
 9e8:	0c 94 b1 07 	jmp	0xf62	; 0xf62 <__prologue_saves__>
 9ec:	6c 01       	movw	r12, r24
 9ee:	7b 01       	movw	r14, r22
 9f0:	8a 01       	movw	r16, r20
 9f2:	fc 01       	movw	r30, r24
 9f4:	17 82       	std	Z+7, r1	; 0x07
 9f6:	16 82       	std	Z+6, r1	; 0x06
 9f8:	83 81       	ldd	r24, Z+3	; 0x03
 9fa:	81 ff       	sbrs	r24, 1
 9fc:	cc c1       	rjmp	.+920    	; 0xd96 <vfprintf+0x3b6>
 9fe:	ce 01       	movw	r24, r28
 a00:	01 96       	adiw	r24, 0x01	; 1
 a02:	3c 01       	movw	r6, r24
 a04:	f6 01       	movw	r30, r12
 a06:	93 81       	ldd	r25, Z+3	; 0x03
 a08:	f7 01       	movw	r30, r14
 a0a:	93 fd       	sbrc	r25, 3
 a0c:	85 91       	lpm	r24, Z+
 a0e:	93 ff       	sbrs	r25, 3
 a10:	81 91       	ld	r24, Z+
 a12:	7f 01       	movw	r14, r30
 a14:	88 23       	and	r24, r24
 a16:	09 f4       	brne	.+2      	; 0xa1a <vfprintf+0x3a>
 a18:	ba c1       	rjmp	.+884    	; 0xd8e <vfprintf+0x3ae>
 a1a:	85 32       	cpi	r24, 0x25	; 37
 a1c:	39 f4       	brne	.+14     	; 0xa2c <vfprintf+0x4c>
 a1e:	93 fd       	sbrc	r25, 3
 a20:	85 91       	lpm	r24, Z+
 a22:	93 ff       	sbrs	r25, 3
 a24:	81 91       	ld	r24, Z+
 a26:	7f 01       	movw	r14, r30
 a28:	85 32       	cpi	r24, 0x25	; 37
 a2a:	29 f4       	brne	.+10     	; 0xa36 <vfprintf+0x56>
 a2c:	b6 01       	movw	r22, r12
 a2e:	90 e0       	ldi	r25, 0x00	; 0
 a30:	0e 94 e7 06 	call	0xdce	; 0xdce <fputc>
 a34:	e7 cf       	rjmp	.-50     	; 0xa04 <vfprintf+0x24>
 a36:	91 2c       	mov	r9, r1
 a38:	21 2c       	mov	r2, r1
 a3a:	31 2c       	mov	r3, r1
 a3c:	ff e1       	ldi	r31, 0x1F	; 31
 a3e:	f3 15       	cp	r31, r3
 a40:	d8 f0       	brcs	.+54     	; 0xa78 <vfprintf+0x98>
 a42:	8b 32       	cpi	r24, 0x2B	; 43
 a44:	79 f0       	breq	.+30     	; 0xa64 <vfprintf+0x84>
 a46:	38 f4       	brcc	.+14     	; 0xa56 <vfprintf+0x76>
 a48:	80 32       	cpi	r24, 0x20	; 32
 a4a:	79 f0       	breq	.+30     	; 0xa6a <vfprintf+0x8a>
 a4c:	83 32       	cpi	r24, 0x23	; 35
 a4e:	a1 f4       	brne	.+40     	; 0xa78 <vfprintf+0x98>
 a50:	23 2d       	mov	r18, r3
 a52:	20 61       	ori	r18, 0x10	; 16
 a54:	1d c0       	rjmp	.+58     	; 0xa90 <vfprintf+0xb0>
 a56:	8d 32       	cpi	r24, 0x2D	; 45
 a58:	61 f0       	breq	.+24     	; 0xa72 <vfprintf+0x92>
 a5a:	80 33       	cpi	r24, 0x30	; 48
 a5c:	69 f4       	brne	.+26     	; 0xa78 <vfprintf+0x98>
 a5e:	23 2d       	mov	r18, r3
 a60:	21 60       	ori	r18, 0x01	; 1
 a62:	16 c0       	rjmp	.+44     	; 0xa90 <vfprintf+0xb0>
 a64:	83 2d       	mov	r24, r3
 a66:	82 60       	ori	r24, 0x02	; 2
 a68:	38 2e       	mov	r3, r24
 a6a:	e3 2d       	mov	r30, r3
 a6c:	e4 60       	ori	r30, 0x04	; 4
 a6e:	3e 2e       	mov	r3, r30
 a70:	2a c0       	rjmp	.+84     	; 0xac6 <vfprintf+0xe6>
 a72:	f3 2d       	mov	r31, r3
 a74:	f8 60       	ori	r31, 0x08	; 8
 a76:	1d c0       	rjmp	.+58     	; 0xab2 <vfprintf+0xd2>
 a78:	37 fc       	sbrc	r3, 7
 a7a:	2d c0       	rjmp	.+90     	; 0xad6 <vfprintf+0xf6>
 a7c:	20 ed       	ldi	r18, 0xD0	; 208
 a7e:	28 0f       	add	r18, r24
 a80:	2a 30       	cpi	r18, 0x0A	; 10
 a82:	40 f0       	brcs	.+16     	; 0xa94 <vfprintf+0xb4>
 a84:	8e 32       	cpi	r24, 0x2E	; 46
 a86:	b9 f4       	brne	.+46     	; 0xab6 <vfprintf+0xd6>
 a88:	36 fc       	sbrc	r3, 6
 a8a:	81 c1       	rjmp	.+770    	; 0xd8e <vfprintf+0x3ae>
 a8c:	23 2d       	mov	r18, r3
 a8e:	20 64       	ori	r18, 0x40	; 64
 a90:	32 2e       	mov	r3, r18
 a92:	19 c0       	rjmp	.+50     	; 0xac6 <vfprintf+0xe6>
 a94:	36 fe       	sbrs	r3, 6
 a96:	06 c0       	rjmp	.+12     	; 0xaa4 <vfprintf+0xc4>
 a98:	8a e0       	ldi	r24, 0x0A	; 10
 a9a:	98 9e       	mul	r9, r24
 a9c:	20 0d       	add	r18, r0
 a9e:	11 24       	eor	r1, r1
 aa0:	92 2e       	mov	r9, r18
 aa2:	11 c0       	rjmp	.+34     	; 0xac6 <vfprintf+0xe6>
 aa4:	ea e0       	ldi	r30, 0x0A	; 10
 aa6:	2e 9e       	mul	r2, r30
 aa8:	20 0d       	add	r18, r0
 aaa:	11 24       	eor	r1, r1
 aac:	22 2e       	mov	r2, r18
 aae:	f3 2d       	mov	r31, r3
 ab0:	f0 62       	ori	r31, 0x20	; 32
 ab2:	3f 2e       	mov	r3, r31
 ab4:	08 c0       	rjmp	.+16     	; 0xac6 <vfprintf+0xe6>
 ab6:	8c 36       	cpi	r24, 0x6C	; 108
 ab8:	21 f4       	brne	.+8      	; 0xac2 <vfprintf+0xe2>
 aba:	83 2d       	mov	r24, r3
 abc:	80 68       	ori	r24, 0x80	; 128
 abe:	38 2e       	mov	r3, r24
 ac0:	02 c0       	rjmp	.+4      	; 0xac6 <vfprintf+0xe6>
 ac2:	88 36       	cpi	r24, 0x68	; 104
 ac4:	41 f4       	brne	.+16     	; 0xad6 <vfprintf+0xf6>
 ac6:	f7 01       	movw	r30, r14
 ac8:	93 fd       	sbrc	r25, 3
 aca:	85 91       	lpm	r24, Z+
 acc:	93 ff       	sbrs	r25, 3
 ace:	81 91       	ld	r24, Z+
 ad0:	7f 01       	movw	r14, r30
 ad2:	81 11       	cpse	r24, r1
 ad4:	b3 cf       	rjmp	.-154    	; 0xa3c <vfprintf+0x5c>
 ad6:	98 2f       	mov	r25, r24
 ad8:	9f 7d       	andi	r25, 0xDF	; 223
 ada:	95 54       	subi	r25, 0x45	; 69
 adc:	93 30       	cpi	r25, 0x03	; 3
 ade:	28 f4       	brcc	.+10     	; 0xaea <vfprintf+0x10a>
 ae0:	0c 5f       	subi	r16, 0xFC	; 252
 ae2:	1f 4f       	sbci	r17, 0xFF	; 255
 ae4:	9f e3       	ldi	r25, 0x3F	; 63
 ae6:	99 83       	std	Y+1, r25	; 0x01
 ae8:	0d c0       	rjmp	.+26     	; 0xb04 <vfprintf+0x124>
 aea:	83 36       	cpi	r24, 0x63	; 99
 aec:	31 f0       	breq	.+12     	; 0xafa <vfprintf+0x11a>
 aee:	83 37       	cpi	r24, 0x73	; 115
 af0:	71 f0       	breq	.+28     	; 0xb0e <vfprintf+0x12e>
 af2:	83 35       	cpi	r24, 0x53	; 83
 af4:	09 f0       	breq	.+2      	; 0xaf8 <vfprintf+0x118>
 af6:	59 c0       	rjmp	.+178    	; 0xbaa <vfprintf+0x1ca>
 af8:	21 c0       	rjmp	.+66     	; 0xb3c <vfprintf+0x15c>
 afa:	f8 01       	movw	r30, r16
 afc:	80 81       	ld	r24, Z
 afe:	89 83       	std	Y+1, r24	; 0x01
 b00:	0e 5f       	subi	r16, 0xFE	; 254
 b02:	1f 4f       	sbci	r17, 0xFF	; 255
 b04:	88 24       	eor	r8, r8
 b06:	83 94       	inc	r8
 b08:	91 2c       	mov	r9, r1
 b0a:	53 01       	movw	r10, r6
 b0c:	13 c0       	rjmp	.+38     	; 0xb34 <vfprintf+0x154>
 b0e:	28 01       	movw	r4, r16
 b10:	f2 e0       	ldi	r31, 0x02	; 2
 b12:	4f 0e       	add	r4, r31
 b14:	51 1c       	adc	r5, r1
 b16:	f8 01       	movw	r30, r16
 b18:	a0 80       	ld	r10, Z
 b1a:	b1 80       	ldd	r11, Z+1	; 0x01
 b1c:	36 fe       	sbrs	r3, 6
 b1e:	03 c0       	rjmp	.+6      	; 0xb26 <vfprintf+0x146>
 b20:	69 2d       	mov	r22, r9
 b22:	70 e0       	ldi	r23, 0x00	; 0
 b24:	02 c0       	rjmp	.+4      	; 0xb2a <vfprintf+0x14a>
 b26:	6f ef       	ldi	r22, 0xFF	; 255
 b28:	7f ef       	ldi	r23, 0xFF	; 255
 b2a:	c5 01       	movw	r24, r10
 b2c:	0e 94 dc 06 	call	0xdb8	; 0xdb8 <strnlen>
 b30:	4c 01       	movw	r8, r24
 b32:	82 01       	movw	r16, r4
 b34:	f3 2d       	mov	r31, r3
 b36:	ff 77       	andi	r31, 0x7F	; 127
 b38:	3f 2e       	mov	r3, r31
 b3a:	16 c0       	rjmp	.+44     	; 0xb68 <vfprintf+0x188>
 b3c:	28 01       	movw	r4, r16
 b3e:	22 e0       	ldi	r18, 0x02	; 2
 b40:	42 0e       	add	r4, r18
 b42:	51 1c       	adc	r5, r1
 b44:	f8 01       	movw	r30, r16
 b46:	a0 80       	ld	r10, Z
 b48:	b1 80       	ldd	r11, Z+1	; 0x01
 b4a:	36 fe       	sbrs	r3, 6
 b4c:	03 c0       	rjmp	.+6      	; 0xb54 <vfprintf+0x174>
 b4e:	69 2d       	mov	r22, r9
 b50:	70 e0       	ldi	r23, 0x00	; 0
 b52:	02 c0       	rjmp	.+4      	; 0xb58 <vfprintf+0x178>
 b54:	6f ef       	ldi	r22, 0xFF	; 255
 b56:	7f ef       	ldi	r23, 0xFF	; 255
 b58:	c5 01       	movw	r24, r10
 b5a:	0e 94 d1 06 	call	0xda2	; 0xda2 <strnlen_P>
 b5e:	4c 01       	movw	r8, r24
 b60:	f3 2d       	mov	r31, r3
 b62:	f0 68       	ori	r31, 0x80	; 128
 b64:	3f 2e       	mov	r3, r31
 b66:	82 01       	movw	r16, r4
 b68:	33 fc       	sbrc	r3, 3
 b6a:	1b c0       	rjmp	.+54     	; 0xba2 <vfprintf+0x1c2>
 b6c:	82 2d       	mov	r24, r2
 b6e:	90 e0       	ldi	r25, 0x00	; 0
 b70:	88 16       	cp	r8, r24
 b72:	99 06       	cpc	r9, r25
 b74:	b0 f4       	brcc	.+44     	; 0xba2 <vfprintf+0x1c2>
 b76:	b6 01       	movw	r22, r12
 b78:	80 e2       	ldi	r24, 0x20	; 32
 b7a:	90 e0       	ldi	r25, 0x00	; 0
 b7c:	0e 94 e7 06 	call	0xdce	; 0xdce <fputc>
 b80:	2a 94       	dec	r2
 b82:	f4 cf       	rjmp	.-24     	; 0xb6c <vfprintf+0x18c>
 b84:	f5 01       	movw	r30, r10
 b86:	37 fc       	sbrc	r3, 7
 b88:	85 91       	lpm	r24, Z+
 b8a:	37 fe       	sbrs	r3, 7
 b8c:	81 91       	ld	r24, Z+
 b8e:	5f 01       	movw	r10, r30
 b90:	b6 01       	movw	r22, r12
 b92:	90 e0       	ldi	r25, 0x00	; 0
 b94:	0e 94 e7 06 	call	0xdce	; 0xdce <fputc>
 b98:	21 10       	cpse	r2, r1
 b9a:	2a 94       	dec	r2
 b9c:	21 e0       	ldi	r18, 0x01	; 1
 b9e:	82 1a       	sub	r8, r18
 ba0:	91 08       	sbc	r9, r1
 ba2:	81 14       	cp	r8, r1
 ba4:	91 04       	cpc	r9, r1
 ba6:	71 f7       	brne	.-36     	; 0xb84 <vfprintf+0x1a4>
 ba8:	e8 c0       	rjmp	.+464    	; 0xd7a <vfprintf+0x39a>
 baa:	84 36       	cpi	r24, 0x64	; 100
 bac:	11 f0       	breq	.+4      	; 0xbb2 <vfprintf+0x1d2>
 bae:	89 36       	cpi	r24, 0x69	; 105
 bb0:	41 f5       	brne	.+80     	; 0xc02 <vfprintf+0x222>
 bb2:	f8 01       	movw	r30, r16
 bb4:	37 fe       	sbrs	r3, 7
 bb6:	07 c0       	rjmp	.+14     	; 0xbc6 <vfprintf+0x1e6>
 bb8:	60 81       	ld	r22, Z
 bba:	71 81       	ldd	r23, Z+1	; 0x01
 bbc:	82 81       	ldd	r24, Z+2	; 0x02
 bbe:	93 81       	ldd	r25, Z+3	; 0x03
 bc0:	0c 5f       	subi	r16, 0xFC	; 252
 bc2:	1f 4f       	sbci	r17, 0xFF	; 255
 bc4:	08 c0       	rjmp	.+16     	; 0xbd6 <vfprintf+0x1f6>
 bc6:	60 81       	ld	r22, Z
 bc8:	71 81       	ldd	r23, Z+1	; 0x01
 bca:	07 2e       	mov	r0, r23
 bcc:	00 0c       	add	r0, r0
 bce:	88 0b       	sbc	r24, r24
 bd0:	99 0b       	sbc	r25, r25
 bd2:	0e 5f       	subi	r16, 0xFE	; 254
 bd4:	1f 4f       	sbci	r17, 0xFF	; 255
 bd6:	f3 2d       	mov	r31, r3
 bd8:	ff 76       	andi	r31, 0x6F	; 111
 bda:	3f 2e       	mov	r3, r31
 bdc:	97 ff       	sbrs	r25, 7
 bde:	09 c0       	rjmp	.+18     	; 0xbf2 <vfprintf+0x212>
 be0:	90 95       	com	r25
 be2:	80 95       	com	r24
 be4:	70 95       	com	r23
 be6:	61 95       	neg	r22
 be8:	7f 4f       	sbci	r23, 0xFF	; 255
 bea:	8f 4f       	sbci	r24, 0xFF	; 255
 bec:	9f 4f       	sbci	r25, 0xFF	; 255
 bee:	f0 68       	ori	r31, 0x80	; 128
 bf0:	3f 2e       	mov	r3, r31
 bf2:	2a e0       	ldi	r18, 0x0A	; 10
 bf4:	30 e0       	ldi	r19, 0x00	; 0
 bf6:	a3 01       	movw	r20, r6
 bf8:	0e 94 23 07 	call	0xe46	; 0xe46 <__ultoa_invert>
 bfc:	88 2e       	mov	r8, r24
 bfe:	86 18       	sub	r8, r6
 c00:	45 c0       	rjmp	.+138    	; 0xc8c <vfprintf+0x2ac>
 c02:	85 37       	cpi	r24, 0x75	; 117
 c04:	31 f4       	brne	.+12     	; 0xc12 <vfprintf+0x232>
 c06:	23 2d       	mov	r18, r3
 c08:	2f 7e       	andi	r18, 0xEF	; 239
 c0a:	b2 2e       	mov	r11, r18
 c0c:	2a e0       	ldi	r18, 0x0A	; 10
 c0e:	30 e0       	ldi	r19, 0x00	; 0
 c10:	25 c0       	rjmp	.+74     	; 0xc5c <vfprintf+0x27c>
 c12:	93 2d       	mov	r25, r3
 c14:	99 7f       	andi	r25, 0xF9	; 249
 c16:	b9 2e       	mov	r11, r25
 c18:	8f 36       	cpi	r24, 0x6F	; 111
 c1a:	c1 f0       	breq	.+48     	; 0xc4c <vfprintf+0x26c>
 c1c:	18 f4       	brcc	.+6      	; 0xc24 <vfprintf+0x244>
 c1e:	88 35       	cpi	r24, 0x58	; 88
 c20:	79 f0       	breq	.+30     	; 0xc40 <vfprintf+0x260>
 c22:	b5 c0       	rjmp	.+362    	; 0xd8e <vfprintf+0x3ae>
 c24:	80 37       	cpi	r24, 0x70	; 112
 c26:	19 f0       	breq	.+6      	; 0xc2e <vfprintf+0x24e>
 c28:	88 37       	cpi	r24, 0x78	; 120
 c2a:	21 f0       	breq	.+8      	; 0xc34 <vfprintf+0x254>
 c2c:	b0 c0       	rjmp	.+352    	; 0xd8e <vfprintf+0x3ae>
 c2e:	e9 2f       	mov	r30, r25
 c30:	e0 61       	ori	r30, 0x10	; 16
 c32:	be 2e       	mov	r11, r30
 c34:	b4 fe       	sbrs	r11, 4
 c36:	0d c0       	rjmp	.+26     	; 0xc52 <vfprintf+0x272>
 c38:	fb 2d       	mov	r31, r11
 c3a:	f4 60       	ori	r31, 0x04	; 4
 c3c:	bf 2e       	mov	r11, r31
 c3e:	09 c0       	rjmp	.+18     	; 0xc52 <vfprintf+0x272>
 c40:	34 fe       	sbrs	r3, 4
 c42:	0a c0       	rjmp	.+20     	; 0xc58 <vfprintf+0x278>
 c44:	29 2f       	mov	r18, r25
 c46:	26 60       	ori	r18, 0x06	; 6
 c48:	b2 2e       	mov	r11, r18
 c4a:	06 c0       	rjmp	.+12     	; 0xc58 <vfprintf+0x278>
 c4c:	28 e0       	ldi	r18, 0x08	; 8
 c4e:	30 e0       	ldi	r19, 0x00	; 0
 c50:	05 c0       	rjmp	.+10     	; 0xc5c <vfprintf+0x27c>
 c52:	20 e1       	ldi	r18, 0x10	; 16
 c54:	30 e0       	ldi	r19, 0x00	; 0
 c56:	02 c0       	rjmp	.+4      	; 0xc5c <vfprintf+0x27c>
 c58:	20 e1       	ldi	r18, 0x10	; 16
 c5a:	32 e0       	ldi	r19, 0x02	; 2
 c5c:	f8 01       	movw	r30, r16
 c5e:	b7 fe       	sbrs	r11, 7
 c60:	07 c0       	rjmp	.+14     	; 0xc70 <vfprintf+0x290>
 c62:	60 81       	ld	r22, Z
 c64:	71 81       	ldd	r23, Z+1	; 0x01
 c66:	82 81       	ldd	r24, Z+2	; 0x02
 c68:	93 81       	ldd	r25, Z+3	; 0x03
 c6a:	0c 5f       	subi	r16, 0xFC	; 252
 c6c:	1f 4f       	sbci	r17, 0xFF	; 255
 c6e:	06 c0       	rjmp	.+12     	; 0xc7c <vfprintf+0x29c>
 c70:	60 81       	ld	r22, Z
 c72:	71 81       	ldd	r23, Z+1	; 0x01
 c74:	80 e0       	ldi	r24, 0x00	; 0
 c76:	90 e0       	ldi	r25, 0x00	; 0
 c78:	0e 5f       	subi	r16, 0xFE	; 254
 c7a:	1f 4f       	sbci	r17, 0xFF	; 255
 c7c:	a3 01       	movw	r20, r6
 c7e:	0e 94 23 07 	call	0xe46	; 0xe46 <__ultoa_invert>
 c82:	88 2e       	mov	r8, r24
 c84:	86 18       	sub	r8, r6
 c86:	fb 2d       	mov	r31, r11
 c88:	ff 77       	andi	r31, 0x7F	; 127
 c8a:	3f 2e       	mov	r3, r31
 c8c:	36 fe       	sbrs	r3, 6
 c8e:	0d c0       	rjmp	.+26     	; 0xcaa <vfprintf+0x2ca>
 c90:	23 2d       	mov	r18, r3
 c92:	2e 7f       	andi	r18, 0xFE	; 254
 c94:	a2 2e       	mov	r10, r18
 c96:	89 14       	cp	r8, r9
 c98:	58 f4       	brcc	.+22     	; 0xcb0 <vfprintf+0x2d0>
 c9a:	34 fe       	sbrs	r3, 4
 c9c:	0b c0       	rjmp	.+22     	; 0xcb4 <vfprintf+0x2d4>
 c9e:	32 fc       	sbrc	r3, 2
 ca0:	09 c0       	rjmp	.+18     	; 0xcb4 <vfprintf+0x2d4>
 ca2:	83 2d       	mov	r24, r3
 ca4:	8e 7e       	andi	r24, 0xEE	; 238
 ca6:	a8 2e       	mov	r10, r24
 ca8:	05 c0       	rjmp	.+10     	; 0xcb4 <vfprintf+0x2d4>
 caa:	b8 2c       	mov	r11, r8
 cac:	a3 2c       	mov	r10, r3
 cae:	03 c0       	rjmp	.+6      	; 0xcb6 <vfprintf+0x2d6>
 cb0:	b8 2c       	mov	r11, r8
 cb2:	01 c0       	rjmp	.+2      	; 0xcb6 <vfprintf+0x2d6>
 cb4:	b9 2c       	mov	r11, r9
 cb6:	a4 fe       	sbrs	r10, 4
 cb8:	0f c0       	rjmp	.+30     	; 0xcd8 <vfprintf+0x2f8>
 cba:	fe 01       	movw	r30, r28
 cbc:	e8 0d       	add	r30, r8
 cbe:	f1 1d       	adc	r31, r1
 cc0:	80 81       	ld	r24, Z
 cc2:	80 33       	cpi	r24, 0x30	; 48
 cc4:	21 f4       	brne	.+8      	; 0xcce <vfprintf+0x2ee>
 cc6:	9a 2d       	mov	r25, r10
 cc8:	99 7e       	andi	r25, 0xE9	; 233
 cca:	a9 2e       	mov	r10, r25
 ccc:	09 c0       	rjmp	.+18     	; 0xce0 <vfprintf+0x300>
 cce:	a2 fe       	sbrs	r10, 2
 cd0:	06 c0       	rjmp	.+12     	; 0xcde <vfprintf+0x2fe>
 cd2:	b3 94       	inc	r11
 cd4:	b3 94       	inc	r11
 cd6:	04 c0       	rjmp	.+8      	; 0xce0 <vfprintf+0x300>
 cd8:	8a 2d       	mov	r24, r10
 cda:	86 78       	andi	r24, 0x86	; 134
 cdc:	09 f0       	breq	.+2      	; 0xce0 <vfprintf+0x300>
 cde:	b3 94       	inc	r11
 ce0:	a3 fc       	sbrc	r10, 3
 ce2:	11 c0       	rjmp	.+34     	; 0xd06 <vfprintf+0x326>
 ce4:	a0 fe       	sbrs	r10, 0
 ce6:	06 c0       	rjmp	.+12     	; 0xcf4 <vfprintf+0x314>
 ce8:	b2 14       	cp	r11, r2
 cea:	88 f4       	brcc	.+34     	; 0xd0e <vfprintf+0x32e>
 cec:	28 0c       	add	r2, r8
 cee:	92 2c       	mov	r9, r2
 cf0:	9b 18       	sub	r9, r11
 cf2:	0e c0       	rjmp	.+28     	; 0xd10 <vfprintf+0x330>
 cf4:	b2 14       	cp	r11, r2
 cf6:	60 f4       	brcc	.+24     	; 0xd10 <vfprintf+0x330>
 cf8:	b6 01       	movw	r22, r12
 cfa:	80 e2       	ldi	r24, 0x20	; 32
 cfc:	90 e0       	ldi	r25, 0x00	; 0
 cfe:	0e 94 e7 06 	call	0xdce	; 0xdce <fputc>
 d02:	b3 94       	inc	r11
 d04:	f7 cf       	rjmp	.-18     	; 0xcf4 <vfprintf+0x314>
 d06:	b2 14       	cp	r11, r2
 d08:	18 f4       	brcc	.+6      	; 0xd10 <vfprintf+0x330>
 d0a:	2b 18       	sub	r2, r11
 d0c:	02 c0       	rjmp	.+4      	; 0xd12 <vfprintf+0x332>
 d0e:	98 2c       	mov	r9, r8
 d10:	21 2c       	mov	r2, r1
 d12:	a4 fe       	sbrs	r10, 4
 d14:	10 c0       	rjmp	.+32     	; 0xd36 <vfprintf+0x356>
 d16:	b6 01       	movw	r22, r12
 d18:	80 e3       	ldi	r24, 0x30	; 48
 d1a:	90 e0       	ldi	r25, 0x00	; 0
 d1c:	0e 94 e7 06 	call	0xdce	; 0xdce <fputc>
 d20:	a2 fe       	sbrs	r10, 2
 d22:	17 c0       	rjmp	.+46     	; 0xd52 <vfprintf+0x372>
 d24:	a1 fc       	sbrc	r10, 1
 d26:	03 c0       	rjmp	.+6      	; 0xd2e <vfprintf+0x34e>
 d28:	88 e7       	ldi	r24, 0x78	; 120
 d2a:	90 e0       	ldi	r25, 0x00	; 0
 d2c:	02 c0       	rjmp	.+4      	; 0xd32 <vfprintf+0x352>
 d2e:	88 e5       	ldi	r24, 0x58	; 88
 d30:	90 e0       	ldi	r25, 0x00	; 0
 d32:	b6 01       	movw	r22, r12
 d34:	0c c0       	rjmp	.+24     	; 0xd4e <vfprintf+0x36e>
 d36:	8a 2d       	mov	r24, r10
 d38:	86 78       	andi	r24, 0x86	; 134
 d3a:	59 f0       	breq	.+22     	; 0xd52 <vfprintf+0x372>
 d3c:	a1 fe       	sbrs	r10, 1
 d3e:	02 c0       	rjmp	.+4      	; 0xd44 <vfprintf+0x364>
 d40:	8b e2       	ldi	r24, 0x2B	; 43
 d42:	01 c0       	rjmp	.+2      	; 0xd46 <vfprintf+0x366>
 d44:	80 e2       	ldi	r24, 0x20	; 32
 d46:	a7 fc       	sbrc	r10, 7
 d48:	8d e2       	ldi	r24, 0x2D	; 45
 d4a:	b6 01       	movw	r22, r12
 d4c:	90 e0       	ldi	r25, 0x00	; 0
 d4e:	0e 94 e7 06 	call	0xdce	; 0xdce <fputc>
 d52:	89 14       	cp	r8, r9
 d54:	38 f4       	brcc	.+14     	; 0xd64 <vfprintf+0x384>
 d56:	b6 01       	movw	r22, r12
 d58:	80 e3       	ldi	r24, 0x30	; 48
 d5a:	90 e0       	ldi	r25, 0x00	; 0
 d5c:	0e 94 e7 06 	call	0xdce	; 0xdce <fputc>
 d60:	9a 94       	dec	r9
 d62:	f7 cf       	rjmp	.-18     	; 0xd52 <vfprintf+0x372>
 d64:	8a 94       	dec	r8
 d66:	f3 01       	movw	r30, r6
 d68:	e8 0d       	add	r30, r8
 d6a:	f1 1d       	adc	r31, r1
 d6c:	80 81       	ld	r24, Z
 d6e:	b6 01       	movw	r22, r12
 d70:	90 e0       	ldi	r25, 0x00	; 0
 d72:	0e 94 e7 06 	call	0xdce	; 0xdce <fputc>
 d76:	81 10       	cpse	r8, r1
 d78:	f5 cf       	rjmp	.-22     	; 0xd64 <vfprintf+0x384>
 d7a:	22 20       	and	r2, r2
 d7c:	09 f4       	brne	.+2      	; 0xd80 <vfprintf+0x3a0>
 d7e:	42 ce       	rjmp	.-892    	; 0xa04 <vfprintf+0x24>
 d80:	b6 01       	movw	r22, r12
 d82:	80 e2       	ldi	r24, 0x20	; 32
 d84:	90 e0       	ldi	r25, 0x00	; 0
 d86:	0e 94 e7 06 	call	0xdce	; 0xdce <fputc>
 d8a:	2a 94       	dec	r2
 d8c:	f6 cf       	rjmp	.-20     	; 0xd7a <vfprintf+0x39a>
 d8e:	f6 01       	movw	r30, r12
 d90:	86 81       	ldd	r24, Z+6	; 0x06
 d92:	97 81       	ldd	r25, Z+7	; 0x07
 d94:	02 c0       	rjmp	.+4      	; 0xd9a <vfprintf+0x3ba>
 d96:	8f ef       	ldi	r24, 0xFF	; 255
 d98:	9f ef       	ldi	r25, 0xFF	; 255
 d9a:	2b 96       	adiw	r28, 0x0b	; 11
 d9c:	e2 e1       	ldi	r30, 0x12	; 18
 d9e:	0c 94 cd 07 	jmp	0xf9a	; 0xf9a <__epilogue_restores__>

00000da2 <strnlen_P>:
 da2:	fc 01       	movw	r30, r24
 da4:	05 90       	lpm	r0, Z+
 da6:	61 50       	subi	r22, 0x01	; 1
 da8:	70 40       	sbci	r23, 0x00	; 0
 daa:	01 10       	cpse	r0, r1
 dac:	d8 f7       	brcc	.-10     	; 0xda4 <strnlen_P+0x2>
 dae:	80 95       	com	r24
 db0:	90 95       	com	r25
 db2:	8e 0f       	add	r24, r30
 db4:	9f 1f       	adc	r25, r31
 db6:	08 95       	ret

00000db8 <strnlen>:
 db8:	fc 01       	movw	r30, r24
 dba:	61 50       	subi	r22, 0x01	; 1
 dbc:	70 40       	sbci	r23, 0x00	; 0
 dbe:	01 90       	ld	r0, Z+
 dc0:	01 10       	cpse	r0, r1
 dc2:	d8 f7       	brcc	.-10     	; 0xdba <strnlen+0x2>
 dc4:	80 95       	com	r24
 dc6:	90 95       	com	r25
 dc8:	8e 0f       	add	r24, r30
 dca:	9f 1f       	adc	r25, r31
 dcc:	08 95       	ret

00000dce <fputc>:
 dce:	0f 93       	push	r16
 dd0:	1f 93       	push	r17
 dd2:	cf 93       	push	r28
 dd4:	df 93       	push	r29
 dd6:	fb 01       	movw	r30, r22
 dd8:	23 81       	ldd	r18, Z+3	; 0x03
 dda:	21 fd       	sbrc	r18, 1
 ddc:	03 c0       	rjmp	.+6      	; 0xde4 <fputc+0x16>
 dde:	8f ef       	ldi	r24, 0xFF	; 255
 de0:	9f ef       	ldi	r25, 0xFF	; 255
 de2:	2c c0       	rjmp	.+88     	; 0xe3c <fputc+0x6e>
 de4:	22 ff       	sbrs	r18, 2
 de6:	16 c0       	rjmp	.+44     	; 0xe14 <fputc+0x46>
 de8:	46 81       	ldd	r20, Z+6	; 0x06
 dea:	57 81       	ldd	r21, Z+7	; 0x07
 dec:	24 81       	ldd	r18, Z+4	; 0x04
 dee:	35 81       	ldd	r19, Z+5	; 0x05
 df0:	42 17       	cp	r20, r18
 df2:	53 07       	cpc	r21, r19
 df4:	44 f4       	brge	.+16     	; 0xe06 <fputc+0x38>
 df6:	a0 81       	ld	r26, Z
 df8:	b1 81       	ldd	r27, Z+1	; 0x01
 dfa:	9d 01       	movw	r18, r26
 dfc:	2f 5f       	subi	r18, 0xFF	; 255
 dfe:	3f 4f       	sbci	r19, 0xFF	; 255
 e00:	31 83       	std	Z+1, r19	; 0x01
 e02:	20 83       	st	Z, r18
 e04:	8c 93       	st	X, r24
 e06:	26 81       	ldd	r18, Z+6	; 0x06
 e08:	37 81       	ldd	r19, Z+7	; 0x07
 e0a:	2f 5f       	subi	r18, 0xFF	; 255
 e0c:	3f 4f       	sbci	r19, 0xFF	; 255
 e0e:	37 83       	std	Z+7, r19	; 0x07
 e10:	26 83       	std	Z+6, r18	; 0x06
 e12:	14 c0       	rjmp	.+40     	; 0xe3c <fputc+0x6e>
 e14:	8b 01       	movw	r16, r22
 e16:	ec 01       	movw	r28, r24
 e18:	fb 01       	movw	r30, r22
 e1a:	00 84       	ldd	r0, Z+8	; 0x08
 e1c:	f1 85       	ldd	r31, Z+9	; 0x09
 e1e:	e0 2d       	mov	r30, r0
 e20:	09 95       	icall
 e22:	89 2b       	or	r24, r25
 e24:	e1 f6       	brne	.-72     	; 0xdde <fputc+0x10>
 e26:	d8 01       	movw	r26, r16
 e28:	16 96       	adiw	r26, 0x06	; 6
 e2a:	8d 91       	ld	r24, X+
 e2c:	9c 91       	ld	r25, X
 e2e:	17 97       	sbiw	r26, 0x07	; 7
 e30:	01 96       	adiw	r24, 0x01	; 1
 e32:	17 96       	adiw	r26, 0x07	; 7
 e34:	9c 93       	st	X, r25
 e36:	8e 93       	st	-X, r24
 e38:	16 97       	sbiw	r26, 0x06	; 6
 e3a:	ce 01       	movw	r24, r28
 e3c:	df 91       	pop	r29
 e3e:	cf 91       	pop	r28
 e40:	1f 91       	pop	r17
 e42:	0f 91       	pop	r16
 e44:	08 95       	ret

00000e46 <__ultoa_invert>:
 e46:	fa 01       	movw	r30, r20
 e48:	aa 27       	eor	r26, r26
 e4a:	28 30       	cpi	r18, 0x08	; 8
 e4c:	51 f1       	breq	.+84     	; 0xea2 <__ultoa_invert+0x5c>
 e4e:	20 31       	cpi	r18, 0x10	; 16
 e50:	81 f1       	breq	.+96     	; 0xeb2 <__ultoa_invert+0x6c>
 e52:	e8 94       	clt
 e54:	6f 93       	push	r22
 e56:	6e 7f       	andi	r22, 0xFE	; 254
 e58:	6e 5f       	subi	r22, 0xFE	; 254
 e5a:	7f 4f       	sbci	r23, 0xFF	; 255
 e5c:	8f 4f       	sbci	r24, 0xFF	; 255
 e5e:	9f 4f       	sbci	r25, 0xFF	; 255
 e60:	af 4f       	sbci	r26, 0xFF	; 255
 e62:	b1 e0       	ldi	r27, 0x01	; 1
 e64:	3e d0       	rcall	.+124    	; 0xee2 <__ultoa_invert+0x9c>
 e66:	b4 e0       	ldi	r27, 0x04	; 4
 e68:	3c d0       	rcall	.+120    	; 0xee2 <__ultoa_invert+0x9c>
 e6a:	67 0f       	add	r22, r23
 e6c:	78 1f       	adc	r23, r24
 e6e:	89 1f       	adc	r24, r25
 e70:	9a 1f       	adc	r25, r26
 e72:	a1 1d       	adc	r26, r1
 e74:	68 0f       	add	r22, r24
 e76:	79 1f       	adc	r23, r25
 e78:	8a 1f       	adc	r24, r26
 e7a:	91 1d       	adc	r25, r1
 e7c:	a1 1d       	adc	r26, r1
 e7e:	6a 0f       	add	r22, r26
 e80:	71 1d       	adc	r23, r1
 e82:	81 1d       	adc	r24, r1
 e84:	91 1d       	adc	r25, r1
 e86:	a1 1d       	adc	r26, r1
 e88:	20 d0       	rcall	.+64     	; 0xeca <__ultoa_invert+0x84>
 e8a:	09 f4       	brne	.+2      	; 0xe8e <__ultoa_invert+0x48>
 e8c:	68 94       	set
 e8e:	3f 91       	pop	r19
 e90:	2a e0       	ldi	r18, 0x0A	; 10
 e92:	26 9f       	mul	r18, r22
 e94:	11 24       	eor	r1, r1
 e96:	30 19       	sub	r19, r0
 e98:	30 5d       	subi	r19, 0xD0	; 208
 e9a:	31 93       	st	Z+, r19
 e9c:	de f6       	brtc	.-74     	; 0xe54 <__ultoa_invert+0xe>
 e9e:	cf 01       	movw	r24, r30
 ea0:	08 95       	ret
 ea2:	46 2f       	mov	r20, r22
 ea4:	47 70       	andi	r20, 0x07	; 7
 ea6:	40 5d       	subi	r20, 0xD0	; 208
 ea8:	41 93       	st	Z+, r20
 eaa:	b3 e0       	ldi	r27, 0x03	; 3
 eac:	0f d0       	rcall	.+30     	; 0xecc <__ultoa_invert+0x86>
 eae:	c9 f7       	brne	.-14     	; 0xea2 <__ultoa_invert+0x5c>
 eb0:	f6 cf       	rjmp	.-20     	; 0xe9e <__ultoa_invert+0x58>
 eb2:	46 2f       	mov	r20, r22
 eb4:	4f 70       	andi	r20, 0x0F	; 15
 eb6:	40 5d       	subi	r20, 0xD0	; 208
 eb8:	4a 33       	cpi	r20, 0x3A	; 58
 eba:	18 f0       	brcs	.+6      	; 0xec2 <__ultoa_invert+0x7c>
 ebc:	49 5d       	subi	r20, 0xD9	; 217
 ebe:	31 fd       	sbrc	r19, 1
 ec0:	40 52       	subi	r20, 0x20	; 32
 ec2:	41 93       	st	Z+, r20
 ec4:	02 d0       	rcall	.+4      	; 0xeca <__ultoa_invert+0x84>
 ec6:	a9 f7       	brne	.-22     	; 0xeb2 <__ultoa_invert+0x6c>
 ec8:	ea cf       	rjmp	.-44     	; 0xe9e <__ultoa_invert+0x58>
 eca:	b4 e0       	ldi	r27, 0x04	; 4
 ecc:	a6 95       	lsr	r26
 ece:	97 95       	ror	r25
 ed0:	87 95       	ror	r24
 ed2:	77 95       	ror	r23
 ed4:	67 95       	ror	r22
 ed6:	ba 95       	dec	r27
 ed8:	c9 f7       	brne	.-14     	; 0xecc <__ultoa_invert+0x86>
 eda:	00 97       	sbiw	r24, 0x00	; 0
 edc:	61 05       	cpc	r22, r1
 ede:	71 05       	cpc	r23, r1
 ee0:	08 95       	ret
 ee2:	9b 01       	movw	r18, r22
 ee4:	ac 01       	movw	r20, r24
 ee6:	0a 2e       	mov	r0, r26
 ee8:	06 94       	lsr	r0
 eea:	57 95       	ror	r21
 eec:	47 95       	ror	r20
 eee:	37 95       	ror	r19
 ef0:	27 95       	ror	r18
 ef2:	ba 95       	dec	r27
 ef4:	c9 f7       	brne	.-14     	; 0xee8 <__ultoa_invert+0xa2>
 ef6:	62 0f       	add	r22, r18
 ef8:	73 1f       	adc	r23, r19
 efa:	84 1f       	adc	r24, r20
 efc:	95 1f       	adc	r25, r21
 efe:	a0 1d       	adc	r26, r0
 f00:	08 95       	ret

00000f02 <eeprom_read_block>:
 f02:	dc 01       	movw	r26, r24
 f04:	cb 01       	movw	r24, r22

00000f06 <eeprom_read_blraw>:
 f06:	fc 01       	movw	r30, r24
 f08:	f9 99       	sbic	0x1f, 1	; 31
 f0a:	fe cf       	rjmp	.-4      	; 0xf08 <eeprom_read_blraw+0x2>
 f0c:	06 c0       	rjmp	.+12     	; 0xf1a <eeprom_read_blraw+0x14>
 f0e:	f2 bd       	out	0x22, r31	; 34
 f10:	e1 bd       	out	0x21, r30	; 33
 f12:	f8 9a       	sbi	0x1f, 0	; 31
 f14:	31 96       	adiw	r30, 0x01	; 1
 f16:	00 b4       	in	r0, 0x20	; 32
 f18:	0d 92       	st	X+, r0
 f1a:	41 50       	subi	r20, 0x01	; 1
 f1c:	50 40       	sbci	r21, 0x00	; 0
 f1e:	b8 f7       	brcc	.-18     	; 0xf0e <eeprom_read_blraw+0x8>
 f20:	08 95       	ret

00000f22 <eeprom_read_byte>:
 f22:	f9 99       	sbic	0x1f, 1	; 31
 f24:	fe cf       	rjmp	.-4      	; 0xf22 <eeprom_read_byte>
 f26:	92 bd       	out	0x22, r25	; 34
 f28:	81 bd       	out	0x21, r24	; 33
 f2a:	f8 9a       	sbi	0x1f, 0	; 31
 f2c:	99 27       	eor	r25, r25
 f2e:	80 b5       	in	r24, 0x20	; 32
 f30:	08 95       	ret

00000f32 <eeprom_write_block>:
 f32:	dc 01       	movw	r26, r24
 f34:	cb 01       	movw	r24, r22
 f36:	03 c0       	rjmp	.+6      	; 0xf3e <eeprom_write_block+0xc>
 f38:	2d 91       	ld	r18, X+
 f3a:	0e 94 a4 07 	call	0xf48	; 0xf48 <eeprom_write_r18>
 f3e:	41 50       	subi	r20, 0x01	; 1
 f40:	50 40       	sbci	r21, 0x00	; 0
 f42:	d0 f7       	brcc	.-12     	; 0xf38 <eeprom_write_block+0x6>
 f44:	08 95       	ret

00000f46 <eeprom_write_byte>:
 f46:	26 2f       	mov	r18, r22

00000f48 <eeprom_write_r18>:
 f48:	f9 99       	sbic	0x1f, 1	; 31
 f4a:	fe cf       	rjmp	.-4      	; 0xf48 <eeprom_write_r18>
 f4c:	1f ba       	out	0x1f, r1	; 31
 f4e:	92 bd       	out	0x22, r25	; 34
 f50:	81 bd       	out	0x21, r24	; 33
 f52:	20 bd       	out	0x20, r18	; 32
 f54:	0f b6       	in	r0, 0x3f	; 63
 f56:	f8 94       	cli
 f58:	fa 9a       	sbi	0x1f, 2	; 31
 f5a:	f9 9a       	sbi	0x1f, 1	; 31
 f5c:	0f be       	out	0x3f, r0	; 63
 f5e:	01 96       	adiw	r24, 0x01	; 1
 f60:	08 95       	ret

00000f62 <__prologue_saves__>:
 f62:	2f 92       	push	r2
 f64:	3f 92       	push	r3
 f66:	4f 92       	push	r4
 f68:	5f 92       	push	r5
 f6a:	6f 92       	push	r6
 f6c:	7f 92       	push	r7
 f6e:	8f 92       	push	r8
 f70:	9f 92       	push	r9
 f72:	af 92       	push	r10
 f74:	bf 92       	push	r11
 f76:	cf 92       	push	r12
 f78:	df 92       	push	r13
 f7a:	ef 92       	push	r14
 f7c:	ff 92       	push	r15
 f7e:	0f 93       	push	r16
 f80:	1f 93       	push	r17
 f82:	cf 93       	push	r28
 f84:	df 93       	push	r29
 f86:	cd b7       	in	r28, 0x3d	; 61
 f88:	de b7       	in	r29, 0x3e	; 62
 f8a:	ca 1b       	sub	r28, r26
 f8c:	db 0b       	sbc	r29, r27
 f8e:	0f b6       	in	r0, 0x3f	; 63
 f90:	f8 94       	cli
 f92:	de bf       	out	0x3e, r29	; 62
 f94:	0f be       	out	0x3f, r0	; 63
 f96:	cd bf       	out	0x3d, r28	; 61
 f98:	09 94       	ijmp

00000f9a <__epilogue_restores__>:
 f9a:	2a 88       	ldd	r2, Y+18	; 0x12
 f9c:	39 88       	ldd	r3, Y+17	; 0x11
 f9e:	48 88       	ldd	r4, Y+16	; 0x10
 fa0:	5f 84       	ldd	r5, Y+15	; 0x0f
 fa2:	6e 84       	ldd	r6, Y+14	; 0x0e
 fa4:	7d 84       	ldd	r7, Y+13	; 0x0d
 fa6:	8c 84       	ldd	r8, Y+12	; 0x0c
 fa8:	9b 84       	ldd	r9, Y+11	; 0x0b
 faa:	aa 84       	ldd	r10, Y+10	; 0x0a
 fac:	b9 84       	ldd	r11, Y+9	; 0x09
 fae:	c8 84       	ldd	r12, Y+8	; 0x08
 fb0:	df 80       	ldd	r13, Y+7	; 0x07
 fb2:	ee 80       	ldd	r14, Y+6	; 0x06
 fb4:	fd 80       	ldd	r15, Y+5	; 0x05
 fb6:	0c 81       	ldd	r16, Y+4	; 0x04
 fb8:	1b 81       	ldd	r17, Y+3	; 0x03
 fba:	aa 81       	ldd	r26, Y+2	; 0x02
 fbc:	b9 81       	ldd	r27, Y+1	; 0x01
 fbe:	ce 0f       	add	r28, r30
 fc0:	d1 1d       	adc	r29, r1
 fc2:	0f b6       	in	r0, 0x3f	; 63
 fc4:	f8 94       	cli
 fc6:	de bf       	out	0x3e, r29	; 62
 fc8:	0f be       	out	0x3f, r0	; 63
 fca:	cd bf       	out	0x3d, r28	; 61
 fcc:	ed 01       	movw	r28, r26
 fce:	08 95       	ret

00000fd0 <_exit>:
 fd0:	f8 94       	cli

00000fd2 <__stop_program>:
 fd2:	ff cf       	rjmp	.-2      	; 0xfd2 <__stop_program>
