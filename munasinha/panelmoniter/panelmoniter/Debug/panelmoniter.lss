
panelmoniter.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000110  00800100  00001b0e  00001ba2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001b0e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000001cc  00800210  00800210  00001cb2  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001cb2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001d10  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a0  00000000  00000000  00001d50  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001428  00000000  00000000  00001df0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000943  00000000  00000000  00003218  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000828  00000000  00000000  00003b5b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002ac  00000000  00000000  00004384  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000755  00000000  00000000  00004630  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000c9b  00000000  00000000  00004d85  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b0  00000000  00000000  00005a20  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__ctors_end>
       4:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
       8:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
       c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      10:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      14:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      18:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      1c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      20:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      24:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      28:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      2c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      30:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      34:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      38:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      3c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      40:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      44:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      48:	0c 94 17 01 	jmp	0x22e	; 0x22e <__vector_18>
      4c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      50:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      54:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      58:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      5c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      60:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      64:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	6e 61       	ori	r22, 0x1E	; 30
      6a:	6e 00       	.word	0x006e	; ????

0000006c <__c.2332>:
      6c:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      7c:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      8c:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      9c:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      ac:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      bc:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      cc:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      dc:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      ec:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      fc:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     10c:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     11c:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     12c:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     13c:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     14c:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     15c:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000016a <__ctors_end>:
     16a:	11 24       	eor	r1, r1
     16c:	1f be       	out	0x3f, r1	; 63
     16e:	cf ef       	ldi	r28, 0xFF	; 255
     170:	d8 e0       	ldi	r29, 0x08	; 8
     172:	de bf       	out	0x3e, r29	; 62
     174:	cd bf       	out	0x3d, r28	; 61

00000176 <__do_copy_data>:
     176:	12 e0       	ldi	r17, 0x02	; 2
     178:	a0 e0       	ldi	r26, 0x00	; 0
     17a:	b1 e0       	ldi	r27, 0x01	; 1
     17c:	ee e0       	ldi	r30, 0x0E	; 14
     17e:	fb e1       	ldi	r31, 0x1B	; 27
     180:	02 c0       	rjmp	.+4      	; 0x186 <__do_copy_data+0x10>
     182:	05 90       	lpm	r0, Z+
     184:	0d 92       	st	X+, r0
     186:	a0 31       	cpi	r26, 0x10	; 16
     188:	b1 07       	cpc	r27, r17
     18a:	d9 f7       	brne	.-10     	; 0x182 <__do_copy_data+0xc>

0000018c <__do_clear_bss>:
     18c:	23 e0       	ldi	r18, 0x03	; 3
     18e:	a0 e1       	ldi	r26, 0x10	; 16
     190:	b2 e0       	ldi	r27, 0x02	; 2
     192:	01 c0       	rjmp	.+2      	; 0x196 <.do_clear_bss_start>

00000194 <.do_clear_bss_loop>:
     194:	1d 92       	st	X+, r1

00000196 <.do_clear_bss_start>:
     196:	ac 3d       	cpi	r26, 0xDC	; 220
     198:	b2 07       	cpc	r27, r18
     19a:	e1 f7       	brne	.-8      	; 0x194 <.do_clear_bss_loop>
     19c:	0e 94 d7 04 	call	0x9ae	; 0x9ae <main>
     1a0:	0c 94 85 0d 	jmp	0x1b0a	; 0x1b0a <_exit>

000001a4 <__bad_interrupt>:
     1a4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001a8 <_Z10USART_Initj>:
	
	char fString[10];
	dtostrf(number,length,deciP,fString);
	USART_TxString(fString);
	
}
     1a8:	9c 01       	movw	r18, r24
     1aa:	40 e0       	ldi	r20, 0x00	; 0
     1ac:	50 e0       	ldi	r21, 0x00	; 0
     1ae:	60 e2       	ldi	r22, 0x20	; 32
     1b0:	71 ea       	ldi	r23, 0xA1	; 161
     1b2:	87 e0       	ldi	r24, 0x07	; 7
     1b4:	90 e0       	ldi	r25, 0x00	; 0
     1b6:	0e 94 13 0b 	call	0x1626	; 0x1626 <__udivmodsi4>
     1ba:	21 50       	subi	r18, 0x01	; 1
     1bc:	31 09       	sbc	r19, r1
     1be:	30 93 c5 00 	sts	0x00C5, r19	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
     1c2:	20 93 c4 00 	sts	0x00C4, r18	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
     1c6:	88 e9       	ldi	r24, 0x98	; 152
     1c8:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
     1cc:	86 e0       	ldi	r24, 0x06	; 6
     1ce:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__DATA_REGION_ORIGIN__+0x62>
     1d2:	78 94       	sei
     1d4:	08 95       	ret

000001d6 <_Z14USART_Transmith>:
     1d6:	e0 ec       	ldi	r30, 0xC0	; 192
     1d8:	f0 e0       	ldi	r31, 0x00	; 0
     1da:	90 81       	ld	r25, Z
     1dc:	95 ff       	sbrs	r25, 5
     1de:	fd cf       	rjmp	.-6      	; 0x1da <_Z14USART_Transmith+0x4>
     1e0:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
     1e4:	08 95       	ret

000001e6 <_Z14USART_TxStringPc>:
     1e6:	cf 93       	push	r28
     1e8:	df 93       	push	r29
     1ea:	ec 01       	movw	r28, r24
     1ec:	88 81       	ld	r24, Y
     1ee:	88 23       	and	r24, r24
     1f0:	31 f0       	breq	.+12     	; 0x1fe <_Z14USART_TxStringPc+0x18>
     1f2:	21 96       	adiw	r28, 0x01	; 1
     1f4:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <_Z14USART_Transmith>
     1f8:	89 91       	ld	r24, Y+
     1fa:	81 11       	cpse	r24, r1
     1fc:	fb cf       	rjmp	.-10     	; 0x1f4 <_Z14USART_TxStringPc+0xe>
     1fe:	df 91       	pop	r29
     200:	cf 91       	pop	r28
     202:	08 95       	ret

00000204 <_Z16USART_TxStringlnPc>:
     204:	cf 93       	push	r28
     206:	df 93       	push	r29
     208:	ec 01       	movw	r28, r24
     20a:	88 81       	ld	r24, Y
     20c:	88 23       	and	r24, r24
     20e:	31 f0       	breq	.+12     	; 0x21c <_Z16USART_TxStringlnPc+0x18>
     210:	21 96       	adiw	r28, 0x01	; 1
     212:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <_Z14USART_Transmith>
     216:	89 91       	ld	r24, Y+
     218:	81 11       	cpse	r24, r1
     21a:	fb cf       	rjmp	.-10     	; 0x212 <_Z16USART_TxStringlnPc+0xe>
     21c:	8d e0       	ldi	r24, 0x0D	; 13
     21e:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <_Z14USART_Transmith>
     222:	8a e0       	ldi	r24, 0x0A	; 10
     224:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <_Z14USART_Transmith>
     228:	df 91       	pop	r29
     22a:	cf 91       	pop	r28
     22c:	08 95       	ret

0000022e <__vector_18>:


ISR(USART_RX_vect){
     22e:	1f 92       	push	r1
     230:	0f 92       	push	r0
     232:	0f b6       	in	r0, 0x3f	; 63
     234:	0f 92       	push	r0
     236:	11 24       	eor	r1, r1
     238:	2f 93       	push	r18
     23a:	3f 93       	push	r19
     23c:	4f 93       	push	r20
     23e:	8f 93       	push	r24
     240:	9f 93       	push	r25
     242:	af 93       	push	r26
     244:	bf 93       	push	r27
     246:	ef 93       	push	r30
     248:	ff 93       	push	r31
	
	char rchar=UDR0;
     24a:	40 91 c6 00 	lds	r20, 0x00C6	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
     24e:	e8 e7       	ldi	r30, 0x78	; 120
     250:	f3 e0       	ldi	r31, 0x03	; 3
     252:	df 01       	movw	r26, r30
	
	uint8_t i=0;
     254:	80 e0       	ldi	r24, 0x00	; 0
	while(rxvalue[i]){
     256:	9d 91       	ld	r25, X+
     258:	99 23       	and	r25, r25
     25a:	a1 f0       	breq	.+40     	; 0x284 <__vector_18+0x56>
	i++;
     25c:	8f 5f       	subi	r24, 0xFF	; 255
	if (i==rxshiftNum)
     25e:	84 36       	cpi	r24, 0x64	; 100
     260:	d1 f7       	brne	.-12     	; 0x256 <__vector_18+0x28>
     262:	06 c0       	rjmp	.+12     	; 0x270 <__vector_18+0x42>
	{break;
	}
	}
	if (i<rxshiftNum)
	{rxvalue[i]=rchar;
     264:	e8 2f       	mov	r30, r24
     266:	f0 e0       	ldi	r31, 0x00	; 0
     268:	e8 58       	subi	r30, 0x88	; 136
     26a:	fc 4f       	sbci	r31, 0xFC	; 252
     26c:	40 83       	st	Z, r20
     26e:	0d c0       	rjmp	.+26     	; 0x28a <__vector_18+0x5c>
     270:	2b ed       	ldi	r18, 0xDB	; 219
     272:	33 e0       	ldi	r19, 0x03	; 3
	} 
	else
	{
		for(uint8_t i=0;i<rxshiftNum-1;i++){
		rxvalue[i]=rxvalue[i+1];
     274:	81 81       	ldd	r24, Z+1	; 0x01
     276:	81 93       	st	Z+, r24
	if (i<rxshiftNum)
	{rxvalue[i]=rchar;
	} 
	else
	{
		for(uint8_t i=0;i<rxshiftNum-1;i++){
     278:	e2 17       	cp	r30, r18
     27a:	f3 07       	cpc	r31, r19
     27c:	d9 f7       	brne	.-10     	; 0x274 <__vector_18+0x46>
		rxvalue[i]=rxvalue[i+1];
	}
	rxvalue[rxshiftNum-1]=rchar;
     27e:	40 93 db 03 	sts	0x03DB, r20	; 0x8003db <rxvalue+0x63>
		
	}
	
		
}
     282:	03 c0       	rjmp	.+6      	; 0x28a <__vector_18+0x5c>
	i++;
	if (i==rxshiftNum)
	{break;
	}
	}
	if (i<rxshiftNum)
     284:	84 36       	cpi	r24, 0x64	; 100
     286:	a0 f7       	brcc	.-24     	; 0x270 <__vector_18+0x42>
     288:	ed cf       	rjmp	.-38     	; 0x264 <__vector_18+0x36>
	rxvalue[rxshiftNum-1]=rchar;
		
	}
	
		
}
     28a:	ff 91       	pop	r31
     28c:	ef 91       	pop	r30
     28e:	bf 91       	pop	r27
     290:	af 91       	pop	r26
     292:	9f 91       	pop	r25
     294:	8f 91       	pop	r24
     296:	4f 91       	pop	r20
     298:	3f 91       	pop	r19
     29a:	2f 91       	pop	r18
     29c:	0f 90       	pop	r0
     29e:	0f be       	out	0x3f, r0	; 63
     2a0:	0f 90       	pop	r0
     2a2:	1f 90       	pop	r1
     2a4:	18 95       	reti

000002a6 <_Z16USART_ReciveWaitPcib>:



bool USART_ReciveWait(char*wait=0,int16_t timeout=0,bool deleteWait=0){
     2a6:	df 92       	push	r13
     2a8:	ef 92       	push	r14
     2aa:	ff 92       	push	r15
     2ac:	0f 93       	push	r16
     2ae:	1f 93       	push	r17
     2b0:	cf 93       	push	r28
     2b2:	df 93       	push	r29
	bool waitbool=0;
	timeout/=100;
	uint8_t temptimeOut=0;
	if (wait!=0)
     2b4:	00 97       	sbiw	r24, 0x00	; 0
     2b6:	c1 f1       	breq	.+112    	; 0x328 <_Z16USART_ReciveWaitPcib+0x82>
     2b8:	7c 01       	movw	r14, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     2ba:	2f ef       	ldi	r18, 0xFF	; 255
     2bc:	80 e7       	ldi	r24, 0x70	; 112
     2be:	92 e0       	ldi	r25, 0x02	; 2
     2c0:	21 50       	subi	r18, 0x01	; 1
     2c2:	80 40       	sbci	r24, 0x00	; 0
     2c4:	90 40       	sbci	r25, 0x00	; 0
     2c6:	e1 f7       	brne	.-8      	; 0x2c0 <_Z16USART_ReciveWaitPcib+0x1a>
     2c8:	00 c0       	rjmp	.+0      	; 0x2ca <_Z16USART_ReciveWaitPcib+0x24>
     2ca:	00 00       	nop



bool USART_ReciveWait(char*wait=0,int16_t timeout=0,bool deleteWait=0){
	bool waitbool=0;
	timeout/=100;
     2cc:	cb 01       	movw	r24, r22
     2ce:	64 e6       	ldi	r22, 0x64	; 100
     2d0:	70 e0       	ldi	r23, 0x00	; 0
     2d2:	0e 94 ff 0a 	call	0x15fe	; 0x15fe <__divmodhi4>
     2d6:	8b 01       	movw	r16, r22
     2d8:	c0 e0       	ldi	r28, 0x00	; 0
			//SoftUSART_tx_strln(".");
			//SoftUSART_tx_strln(rxvalue);
			
			_delay_ms(100);
			temptimeOut++;
			if ((temptimeOut>timeout)&(timeout!=0))
     2da:	d1 e0       	ldi	r29, 0x01	; 1
     2dc:	d1 2c       	mov	r13, r1
     2de:	02 c0       	rjmp	.+4      	; 0x2e4 <_Z16USART_ReciveWaitPcib+0x3e>
	timeout/=100;
	uint8_t temptimeOut=0;
	if (wait!=0)
	{  _delay_ms(100);
		char*tempwait;
		while(tempwait==0){
     2e0:	45 2b       	or	r20, r21
     2e2:	21 f5       	brne	.+72     	; 0x32c <_Z16USART_ReciveWaitPcib+0x86>
			tempwait =strstr(rxvalue,wait);
     2e4:	b7 01       	movw	r22, r14
     2e6:	88 e7       	ldi	r24, 0x78	; 120
     2e8:	93 e0       	ldi	r25, 0x03	; 3
     2ea:	0e 94 af 0c 	call	0x195e	; 0x195e <strstr>
     2ee:	ac 01       	movw	r20, r24
     2f0:	2f ef       	ldi	r18, 0xFF	; 255
     2f2:	80 e7       	ldi	r24, 0x70	; 112
     2f4:	92 e0       	ldi	r25, 0x02	; 2
     2f6:	21 50       	subi	r18, 0x01	; 1
     2f8:	80 40       	sbci	r24, 0x00	; 0
     2fa:	90 40       	sbci	r25, 0x00	; 0
     2fc:	e1 f7       	brne	.-8      	; 0x2f6 <_Z16USART_ReciveWaitPcib+0x50>
     2fe:	00 c0       	rjmp	.+0      	; 0x300 <_Z16USART_ReciveWaitPcib+0x5a>
     300:	00 00       	nop
			//SoftUSART_tx_strln(".");
			//SoftUSART_tx_strln(rxvalue);
			
			_delay_ms(100);
			temptimeOut++;
     302:	cf 5f       	subi	r28, 0xFF	; 255
			if ((temptimeOut>timeout)&(timeout!=0))
     304:	2c 2f       	mov	r18, r28
     306:	30 e0       	ldi	r19, 0x00	; 0
     308:	9d 2f       	mov	r25, r29
     30a:	02 17       	cp	r16, r18
     30c:	13 07       	cpc	r17, r19
     30e:	0c f0       	brlt	.+2      	; 0x312 <_Z16USART_ReciveWaitPcib+0x6c>
     310:	9d 2d       	mov	r25, r13
     312:	99 23       	and	r25, r25
     314:	29 f3       	breq	.-54     	; 0x2e0 <_Z16USART_ReciveWaitPcib+0x3a>
     316:	8d 2f       	mov	r24, r29
     318:	01 15       	cp	r16, r1
     31a:	11 05       	cpc	r17, r1
     31c:	09 f4       	brne	.+2      	; 0x320 <_Z16USART_ReciveWaitPcib+0x7a>
     31e:	8d 2d       	mov	r24, r13
     320:	88 23       	and	r24, r24
     322:	f1 f2       	breq	.-68     	; 0x2e0 <_Z16USART_ReciveWaitPcib+0x3a>
			{waitbool=0;
				return waitbool;
     324:	80 e0       	ldi	r24, 0x00	; 0
     326:	03 c0       	rjmp	.+6      	; 0x32e <_Z16USART_ReciveWaitPcib+0x88>
}



bool USART_ReciveWait(char*wait=0,int16_t timeout=0,bool deleteWait=0){
	bool waitbool=0;
     328:	80 e0       	ldi	r24, 0x00	; 0
     32a:	01 c0       	rjmp	.+2      	; 0x32e <_Z16USART_ReciveWaitPcib+0x88>
				return waitbool;
				
			}
			
		}
		waitbool=1;
     32c:	81 e0       	ldi	r24, 0x01	; 1
		
	}
	
	return waitbool;
}
     32e:	df 91       	pop	r29
     330:	cf 91       	pop	r28
     332:	1f 91       	pop	r17
     334:	0f 91       	pop	r16
     336:	ff 90       	pop	r15
     338:	ef 90       	pop	r14
     33a:	df 90       	pop	r13
     33c:	08 95       	ret

0000033e <_Z13USART_ClearRXv>:


void USART_ClearRX(){
     33e:	e8 e7       	ldi	r30, 0x78	; 120
     340:	f3 e0       	ldi	r31, 0x03	; 3
     342:	8c ed       	ldi	r24, 0xDC	; 220
     344:	93 e0       	ldi	r25, 0x03	; 3
	for(uint8_t i=0;i<rxshiftNum;i++){
		rxvalue[i]=NULL;
     346:	11 92       	st	Z+, r1
	return waitbool;
}


void USART_ClearRX(){
	for(uint8_t i=0;i<rxshiftNum;i++){
     348:	e8 17       	cp	r30, r24
     34a:	f9 07       	cpc	r31, r25
     34c:	e1 f7       	brne	.-8      	; 0x346 <_Z13USART_ClearRXv+0x8>
		rxvalue[i]=NULL;
	}
	
     34e:	08 95       	ret

00000350 <_Z8checkEspv>:
int new_val;
int old_val = 0;
float rms;
float IRMS;

bool checkEsp(){
     350:	cf 93       	push	r28
	USART_ClearRX();
     352:	0e 94 9f 01 	call	0x33e	; 0x33e <_Z13USART_ClearRXv>
	USART_TxStringln("AT");
     356:	8c e0       	ldi	r24, 0x0C	; 12
     358:	91 e0       	ldi	r25, 0x01	; 1
     35a:	0e 94 02 01 	call	0x204	; 0x204 <_Z16USART_TxStringlnPc>
     35e:	2f ef       	ldi	r18, 0xFF	; 255
     360:	80 e7       	ldi	r24, 0x70	; 112
     362:	92 e0       	ldi	r25, 0x02	; 2
     364:	21 50       	subi	r18, 0x01	; 1
     366:	80 40       	sbci	r24, 0x00	; 0
     368:	90 40       	sbci	r25, 0x00	; 0
     36a:	e1 f7       	brne	.-8      	; 0x364 <_Z8checkEspv+0x14>
     36c:	00 c0       	rjmp	.+0      	; 0x36e <_Z8checkEspv+0x1e>
     36e:	00 00       	nop
	_delay_ms(100);
	USART_TxStringln("AT");
     370:	8c e0       	ldi	r24, 0x0C	; 12
     372:	91 e0       	ldi	r25, 0x01	; 1
     374:	0e 94 02 01 	call	0x204	; 0x204 <_Z16USART_TxStringlnPc>
     378:	2f ef       	ldi	r18, 0xFF	; 255
     37a:	80 e7       	ldi	r24, 0x70	; 112
     37c:	92 e0       	ldi	r25, 0x02	; 2
     37e:	21 50       	subi	r18, 0x01	; 1
     380:	80 40       	sbci	r24, 0x00	; 0
     382:	90 40       	sbci	r25, 0x00	; 0
     384:	e1 f7       	brne	.-8      	; 0x37e <_Z8checkEspv+0x2e>
     386:	00 c0       	rjmp	.+0      	; 0x388 <_Z8checkEspv+0x38>
     388:	00 00       	nop
	_delay_ms(100);
	if (USART_ReciveWait("OK",200))
     38a:	40 e0       	ldi	r20, 0x00	; 0
     38c:	68 ec       	ldi	r22, 0xC8	; 200
     38e:	70 e0       	ldi	r23, 0x00	; 0
     390:	8f e0       	ldi	r24, 0x0F	; 15
     392:	91 e0       	ldi	r25, 0x01	; 1
     394:	0e 94 53 01 	call	0x2a6	; 0x2a6 <_Z16USART_ReciveWaitPcib>
     398:	c8 2f       	mov	r28, r24
     39a:	81 11       	cpse	r24, r1
	{USART_ClearRX();
     39c:	0e 94 9f 01 	call	0x33e	; 0x33e <_Z13USART_ClearRXv>
		
	}
	else{
		return 0;
	}
}
     3a0:	8c 2f       	mov	r24, r28
     3a2:	cf 91       	pop	r28
     3a4:	08 95       	ret

000003a6 <_Z8setupESPv>:
bool setupESP(){
     3a6:	1f 93       	push	r17
     3a8:	cf 93       	push	r28
     3aa:	df 93       	push	r29
	USART_ClearRX();
     3ac:	0e 94 9f 01 	call	0x33e	; 0x33e <_Z13USART_ClearRXv>
	USART_TxStringln("AT+CWMODE=1");
     3b0:	82 e1       	ldi	r24, 0x12	; 18
     3b2:	91 e0       	ldi	r25, 0x01	; 1
     3b4:	0e 94 02 01 	call	0x204	; 0x204 <_Z16USART_TxStringlnPc>
     3b8:	2f ef       	ldi	r18, 0xFF	; 255
     3ba:	80 e7       	ldi	r24, 0x70	; 112
     3bc:	92 e0       	ldi	r25, 0x02	; 2
     3be:	21 50       	subi	r18, 0x01	; 1
     3c0:	80 40       	sbci	r24, 0x00	; 0
     3c2:	90 40       	sbci	r25, 0x00	; 0
     3c4:	e1 f7       	brne	.-8      	; 0x3be <_Z8setupESPv+0x18>
     3c6:	00 c0       	rjmp	.+0      	; 0x3c8 <_Z8setupESPv+0x22>
     3c8:	00 00       	nop
	_delay_ms(100);
	if (USART_ReciveWait("OK",500))
     3ca:	40 e0       	ldi	r20, 0x00	; 0
     3cc:	64 ef       	ldi	r22, 0xF4	; 244
     3ce:	71 e0       	ldi	r23, 0x01	; 1
     3d0:	8f e0       	ldi	r24, 0x0F	; 15
     3d2:	91 e0       	ldi	r25, 0x01	; 1
     3d4:	0e 94 53 01 	call	0x2a6	; 0x2a6 <_Z16USART_ReciveWaitPcib>
     3d8:	c8 2f       	mov	r28, r24
     3da:	88 23       	and	r24, r24
     3dc:	09 f4       	brne	.+2      	; 0x3e0 <_Z8setupESPv+0x3a>
     3de:	f6 c0       	rjmp	.+492    	; 0x5cc <__LOCK_REGION_LENGTH__+0x1cc>
	{USART_ClearRX();
     3e0:	0e 94 9f 01 	call	0x33e	; 0x33e <_Z13USART_ClearRXv>
	{	
		return 0;
	}
	
	
	USART_TxStringln("AT+CIPMUX=1");
     3e4:	8e e1       	ldi	r24, 0x1E	; 30
     3e6:	91 e0       	ldi	r25, 0x01	; 1
     3e8:	0e 94 02 01 	call	0x204	; 0x204 <_Z16USART_TxStringlnPc>
     3ec:	2f ef       	ldi	r18, 0xFF	; 255
     3ee:	80 e7       	ldi	r24, 0x70	; 112
     3f0:	92 e0       	ldi	r25, 0x02	; 2
     3f2:	21 50       	subi	r18, 0x01	; 1
     3f4:	80 40       	sbci	r24, 0x00	; 0
     3f6:	90 40       	sbci	r25, 0x00	; 0
     3f8:	e1 f7       	brne	.-8      	; 0x3f2 <_Z8setupESPv+0x4c>
     3fa:	00 c0       	rjmp	.+0      	; 0x3fc <_Z8setupESPv+0x56>
     3fc:	00 00       	nop
	_delay_ms(100);
	if (USART_ReciveWait("OK",500))
     3fe:	40 e0       	ldi	r20, 0x00	; 0
     400:	64 ef       	ldi	r22, 0xF4	; 244
     402:	71 e0       	ldi	r23, 0x01	; 1
     404:	8f e0       	ldi	r24, 0x0F	; 15
     406:	91 e0       	ldi	r25, 0x01	; 1
     408:	0e 94 53 01 	call	0x2a6	; 0x2a6 <_Z16USART_ReciveWaitPcib>
     40c:	c8 2f       	mov	r28, r24
     40e:	88 23       	and	r24, r24
     410:	91 f0       	breq	.+36     	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
	{
		USART_ClearRX();
     412:	0e 94 9f 01 	call	0x33e	; 0x33e <_Z13USART_ClearRXv>
		return 0;
	}
	
	/*USART_TxStringln("AT+CWQAP");
	while(1);*/
	USART_TxStringln("AT+CWJAP?");
     416:	8a e2       	ldi	r24, 0x2A	; 42
     418:	91 e0       	ldi	r25, 0x01	; 1
     41a:	0e 94 02 01 	call	0x204	; 0x204 <_Z16USART_TxStringlnPc>
	if (USART_ReciveWait("OK",1000))
     41e:	40 e0       	ldi	r20, 0x00	; 0
     420:	68 ee       	ldi	r22, 0xE8	; 232
     422:	73 e0       	ldi	r23, 0x03	; 3
     424:	8f e0       	ldi	r24, 0x0F	; 15
     426:	91 e0       	ldi	r25, 0x01	; 1
     428:	0e 94 53 01 	call	0x2a6	; 0x2a6 <_Z16USART_ReciveWaitPcib>
     42c:	c8 2f       	mov	r28, r24
     42e:	88 23       	and	r24, r24
     430:	09 f4       	brne	.+2      	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
     432:	cc c0       	rjmp	.+408    	; 0x5cc <__LOCK_REGION_LENGTH__+0x1cc>
     434:	0e c0       	rjmp	.+28     	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
	{
		USART_ClearRX();
		
	}
	else
	{	USART_TxStringln("AT+RST");
     436:	84 e3       	ldi	r24, 0x34	; 52
     438:	91 e0       	ldi	r25, 0x01	; 1
     43a:	0e 94 02 01 	call	0x204	; 0x204 <_Z16USART_TxStringlnPc>
     43e:	2f ef       	ldi	r18, 0xFF	; 255
     440:	89 e6       	ldi	r24, 0x69	; 105
     442:	98 e1       	ldi	r25, 0x18	; 24
     444:	21 50       	subi	r18, 0x01	; 1
     446:	80 40       	sbci	r24, 0x00	; 0
     448:	90 40       	sbci	r25, 0x00	; 0
     44a:	e1 f7       	brne	.-8      	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
     44c:	00 c0       	rjmp	.+0      	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
     44e:	00 00       	nop
		_delay_ms(1000);
		
		return 0;
     450:	bd c0       	rjmp	.+378    	; 0x5cc <__LOCK_REGION_LENGTH__+0x1cc>
     452:	2f ef       	ldi	r18, 0xFF	; 255
     454:	80 e7       	ldi	r24, 0x70	; 112
     456:	92 e0       	ldi	r25, 0x02	; 2
     458:	21 50       	subi	r18, 0x01	; 1
     45a:	80 40       	sbci	r24, 0x00	; 0
     45c:	90 40       	sbci	r25, 0x00	; 0
     45e:	e1 f7       	brne	.-8      	; 0x458 <__LOCK_REGION_LENGTH__+0x58>
     460:	00 c0       	rjmp	.+0      	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
     462:	00 00       	nop
	while(1);*/
	USART_TxStringln("AT+CWJAP?");
	if (USART_ReciveWait("OK",1000))
	{	_delay_ms(100);
		
		tempcharacter=strstr(rxvalue,wifiusername);
     464:	d0 91 0a 01 	lds	r29, 0x010A	; 0x80010a <wifiusername>
     468:	10 91 0b 01 	lds	r17, 0x010B	; 0x80010b <wifiusername+0x1>
     46c:	6d 2f       	mov	r22, r29
     46e:	71 2f       	mov	r23, r17
     470:	88 e7       	ldi	r24, 0x78	; 120
     472:	93 e0       	ldi	r25, 0x03	; 3
     474:	0e 94 af 0c 	call	0x195e	; 0x195e <strstr>
     478:	90 93 77 03 	sts	0x0377, r25	; 0x800377 <tempcharacter+0x1>
     47c:	80 93 76 03 	sts	0x0376, r24	; 0x800376 <tempcharacter>
		
		
		if (tempcharacter) //connected no problem
     480:	89 2b       	or	r24, r25
     482:	09 f0       	breq	.+2      	; 0x486 <__LOCK_REGION_LENGTH__+0x86>
     484:	a3 c0       	rjmp	.+326    	; 0x5cc <__LOCK_REGION_LENGTH__+0x1cc>
		{return 1;
		} 
		 else // check not connocted or no ap
		{
			tempcharacter=strstr(rxvalue,"No");
     486:	6b e3       	ldi	r22, 0x3B	; 59
     488:	71 e0       	ldi	r23, 0x01	; 1
     48a:	88 e7       	ldi	r24, 0x78	; 120
     48c:	93 e0       	ldi	r25, 0x03	; 3
     48e:	0e 94 af 0c 	call	0x195e	; 0x195e <strstr>
     492:	90 93 77 03 	sts	0x0377, r25	; 0x800377 <tempcharacter+0x1>
     496:	80 93 76 03 	sts	0x0376, r24	; 0x800376 <tempcharacter>
			
			if(tempcharacter){
     49a:	00 97       	sbiw	r24, 0x00	; 0
     49c:	f1 f1       	breq	.+124    	; 0x51a <__LOCK_REGION_LENGTH__+0x11a>
				/*/connect/ */
				
				sprintf(tempcharacter,"AT+CWJAP=\"%s\",\"%s\"",wifiusername,wifipassword);
     49e:	20 91 09 01 	lds	r18, 0x0109	; 0x800109 <wifipassword+0x1>
     4a2:	2f 93       	push	r18
     4a4:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <wifipassword>
     4a8:	2f 93       	push	r18
     4aa:	1f 93       	push	r17
     4ac:	df 93       	push	r29
     4ae:	2e e3       	ldi	r18, 0x3E	; 62
     4b0:	31 e0       	ldi	r19, 0x01	; 1
     4b2:	3f 93       	push	r19
     4b4:	2f 93       	push	r18
     4b6:	9f 93       	push	r25
     4b8:	8f 93       	push	r24
     4ba:	0e 94 05 0d 	call	0x1a0a	; 0x1a0a <sprintf>
				
				USART_TxStringln(tempcharacter);
     4be:	80 91 76 03 	lds	r24, 0x0376	; 0x800376 <tempcharacter>
     4c2:	90 91 77 03 	lds	r25, 0x0377	; 0x800377 <tempcharacter+0x1>
     4c6:	0e 94 02 01 	call	0x204	; 0x204 <_Z16USART_TxStringlnPc>
				
				if (USART_ReciveWait("GOT",8000))
     4ca:	40 e0       	ldi	r20, 0x00	; 0
     4cc:	60 e4       	ldi	r22, 0x40	; 64
     4ce:	7f e1       	ldi	r23, 0x1F	; 31
     4d0:	81 e5       	ldi	r24, 0x51	; 81
     4d2:	91 e0       	ldi	r25, 0x01	; 1
     4d4:	0e 94 53 01 	call	0x2a6	; 0x2a6 <_Z16USART_ReciveWaitPcib>
     4d8:	c8 2f       	mov	r28, r24
     4da:	8d b7       	in	r24, 0x3d	; 61
     4dc:	9e b7       	in	r25, 0x3e	; 62
     4de:	08 96       	adiw	r24, 0x08	; 8
     4e0:	0f b6       	in	r0, 0x3f	; 63
     4e2:	f8 94       	cli
     4e4:	9e bf       	out	0x3e, r25	; 62
     4e6:	0f be       	out	0x3f, r0	; 63
     4e8:	8d bf       	out	0x3d, r24	; 61
     4ea:	cc 23       	and	r28, r28
     4ec:	19 f0       	breq	.+6      	; 0x4f4 <__LOCK_REGION_LENGTH__+0xf4>
				{	
					
					USART_ClearRX();
     4ee:	0e 94 9f 01 	call	0x33e	; 0x33e <_Z13USART_ClearRXv>
					return 1;
     4f2:	6c c0       	rjmp	.+216    	; 0x5cc <__LOCK_REGION_LENGTH__+0x1cc>
				} 
				else
				{	USART_ReciveWait("FAIL",5000);
     4f4:	40 e0       	ldi	r20, 0x00	; 0
     4f6:	68 e8       	ldi	r22, 0x88	; 136
     4f8:	73 e1       	ldi	r23, 0x13	; 19
     4fa:	85 e5       	ldi	r24, 0x55	; 85
     4fc:	91 e0       	ldi	r25, 0x01	; 1
     4fe:	0e 94 53 01 	call	0x2a6	; 0x2a6 <_Z16USART_ReciveWaitPcib>
     502:	9f ef       	ldi	r25, 0xFF	; 255
     504:	23 ed       	ldi	r18, 0xD3	; 211
     506:	80 e3       	ldi	r24, 0x30	; 48
     508:	91 50       	subi	r25, 0x01	; 1
     50a:	20 40       	sbci	r18, 0x00	; 0
     50c:	80 40       	sbci	r24, 0x00	; 0
     50e:	e1 f7       	brne	.-8      	; 0x508 <__LOCK_REGION_LENGTH__+0x108>
     510:	00 c0       	rjmp	.+0      	; 0x512 <__LOCK_REGION_LENGTH__+0x112>
     512:	00 00       	nop
					_delay_ms(2000);
					USART_ClearRX();
     514:	0e 94 9f 01 	call	0x33e	; 0x33e <_Z13USART_ClearRXv>
					return 0;
     518:	59 c0       	rjmp	.+178    	; 0x5cc <__LOCK_REGION_LENGTH__+0x1cc>
				}
			/*end of connect	*/
			}
			else{
				/*/disconnect and connect/*/
				USART_ClearRX();
     51a:	0e 94 9f 01 	call	0x33e	; 0x33e <_Z13USART_ClearRXv>
				USART_TxStringln("AT+CWQAP");
     51e:	8a e5       	ldi	r24, 0x5A	; 90
     520:	91 e0       	ldi	r25, 0x01	; 1
     522:	0e 94 02 01 	call	0x204	; 0x204 <_Z16USART_TxStringlnPc>
				if (USART_ReciveWait("OK",1000))
     526:	40 e0       	ldi	r20, 0x00	; 0
     528:	68 ee       	ldi	r22, 0xE8	; 232
     52a:	73 e0       	ldi	r23, 0x03	; 3
     52c:	8f e0       	ldi	r24, 0x0F	; 15
     52e:	91 e0       	ldi	r25, 0x01	; 1
     530:	0e 94 53 01 	call	0x2a6	; 0x2a6 <_Z16USART_ReciveWaitPcib>
     534:	88 23       	and	r24, r24
     536:	09 f4       	brne	.+2      	; 0x53a <__LOCK_REGION_LENGTH__+0x13a>
     538:	48 c0       	rjmp	.+144    	; 0x5ca <__LOCK_REGION_LENGTH__+0x1ca>
				{
					USART_ClearRX();
     53a:	0e 94 9f 01 	call	0x33e	; 0x33e <_Z13USART_ClearRXv>
					
				sprintf(tempcharacter,"AT+CWJAP=\"%s\",\"%s\"",wifiusername,wifipassword);
     53e:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <wifipassword+0x1>
     542:	8f 93       	push	r24
     544:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <wifipassword>
     548:	8f 93       	push	r24
     54a:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <wifiusername+0x1>
     54e:	8f 93       	push	r24
     550:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <wifiusername>
     554:	8f 93       	push	r24
     556:	8e e3       	ldi	r24, 0x3E	; 62
     558:	91 e0       	ldi	r25, 0x01	; 1
     55a:	9f 93       	push	r25
     55c:	8f 93       	push	r24
     55e:	80 91 77 03 	lds	r24, 0x0377	; 0x800377 <tempcharacter+0x1>
     562:	8f 93       	push	r24
     564:	80 91 76 03 	lds	r24, 0x0376	; 0x800376 <tempcharacter>
     568:	8f 93       	push	r24
     56a:	0e 94 05 0d 	call	0x1a0a	; 0x1a0a <sprintf>
				
				USART_TxStringln(tempcharacter);
     56e:	80 91 76 03 	lds	r24, 0x0376	; 0x800376 <tempcharacter>
     572:	90 91 77 03 	lds	r25, 0x0377	; 0x800377 <tempcharacter+0x1>
     576:	0e 94 02 01 	call	0x204	; 0x204 <_Z16USART_TxStringlnPc>
				
				if (USART_ReciveWait("GOT",5000))
     57a:	40 e0       	ldi	r20, 0x00	; 0
     57c:	68 e8       	ldi	r22, 0x88	; 136
     57e:	73 e1       	ldi	r23, 0x13	; 19
     580:	81 e5       	ldi	r24, 0x51	; 81
     582:	91 e0       	ldi	r25, 0x01	; 1
     584:	0e 94 53 01 	call	0x2a6	; 0x2a6 <_Z16USART_ReciveWaitPcib>
     588:	c8 2f       	mov	r28, r24
     58a:	8d b7       	in	r24, 0x3d	; 61
     58c:	9e b7       	in	r25, 0x3e	; 62
     58e:	08 96       	adiw	r24, 0x08	; 8
     590:	0f b6       	in	r0, 0x3f	; 63
     592:	f8 94       	cli
     594:	9e bf       	out	0x3e, r25	; 62
     596:	0f be       	out	0x3f, r0	; 63
     598:	8d bf       	out	0x3d, r24	; 61
     59a:	cc 23       	and	r28, r28
     59c:	19 f0       	breq	.+6      	; 0x5a4 <__LOCK_REGION_LENGTH__+0x1a4>
				{	
					
					USART_ClearRX();
     59e:	0e 94 9f 01 	call	0x33e	; 0x33e <_Z13USART_ClearRXv>
					return 1;
     5a2:	14 c0       	rjmp	.+40     	; 0x5cc <__LOCK_REGION_LENGTH__+0x1cc>
				} 
				else
				{	USART_ReciveWait("FAIL",5000);
     5a4:	40 e0       	ldi	r20, 0x00	; 0
     5a6:	68 e8       	ldi	r22, 0x88	; 136
     5a8:	73 e1       	ldi	r23, 0x13	; 19
     5aa:	85 e5       	ldi	r24, 0x55	; 85
     5ac:	91 e0       	ldi	r25, 0x01	; 1
     5ae:	0e 94 53 01 	call	0x2a6	; 0x2a6 <_Z16USART_ReciveWaitPcib>
     5b2:	9f ef       	ldi	r25, 0xFF	; 255
     5b4:	23 ed       	ldi	r18, 0xD3	; 211
     5b6:	80 e3       	ldi	r24, 0x30	; 48
     5b8:	91 50       	subi	r25, 0x01	; 1
     5ba:	20 40       	sbci	r18, 0x00	; 0
     5bc:	80 40       	sbci	r24, 0x00	; 0
     5be:	e1 f7       	brne	.-8      	; 0x5b8 <__LOCK_REGION_LENGTH__+0x1b8>
     5c0:	00 c0       	rjmp	.+0      	; 0x5c2 <__LOCK_REGION_LENGTH__+0x1c2>
     5c2:	00 00       	nop
					_delay_ms(2000);
					USART_ClearRX();
     5c4:	0e 94 9f 01 	call	0x33e	; 0x33e <_Z13USART_ClearRXv>
					return 0;
     5c8:	01 c0       	rjmp	.+2      	; 0x5cc <__LOCK_REGION_LENGTH__+0x1cc>
	else
	{ return 0;
	}
	
	
}
     5ca:	01 c0       	rjmp	.+2      	; 0x5ce <__LOCK_REGION_LENGTH__+0x1ce>
     5cc:	8c 2f       	mov	r24, r28
     5ce:	df 91       	pop	r29
     5d0:	cf 91       	pop	r28
     5d2:	1f 91       	pop	r17
     5d4:	08 95       	ret

000005d6 <_Z10uploaddatav>:

bool uploaddata(){
     5d6:	cf 93       	push	r28
     5d8:	df 93       	push	r29
	
		
	USART_ClearRX();
     5da:	0e 94 9f 01 	call	0x33e	; 0x33e <_Z13USART_ClearRXv>
	sprintf(tempcharacter,"AT+CIPSTART=4,\"TCP\",\"%s\",80",server);
     5de:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <server+0x1>
     5e2:	8f 93       	push	r24
     5e4:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <server>
     5e8:	8f 93       	push	r24
     5ea:	83 e6       	ldi	r24, 0x63	; 99
     5ec:	91 e0       	ldi	r25, 0x01	; 1
     5ee:	9f 93       	push	r25
     5f0:	8f 93       	push	r24
     5f2:	80 91 77 03 	lds	r24, 0x0377	; 0x800377 <tempcharacter+0x1>
     5f6:	8f 93       	push	r24
     5f8:	80 91 76 03 	lds	r24, 0x0376	; 0x800376 <tempcharacter>
     5fc:	8f 93       	push	r24
     5fe:	0e 94 05 0d 	call	0x1a0a	; 0x1a0a <sprintf>
	USART_TxStringln(tempcharacter);
     602:	80 91 76 03 	lds	r24, 0x0376	; 0x800376 <tempcharacter>
     606:	90 91 77 03 	lds	r25, 0x0377	; 0x800377 <tempcharacter+0x1>
     60a:	0e 94 02 01 	call	0x204	; 0x204 <_Z16USART_TxStringlnPc>
	if (USART_ReciveWait("CONNECT",3000))
     60e:	40 e0       	ldi	r20, 0x00	; 0
     610:	68 eb       	ldi	r22, 0xB8	; 184
     612:	7b e0       	ldi	r23, 0x0B	; 11
     614:	8f e7       	ldi	r24, 0x7F	; 127
     616:	91 e0       	ldi	r25, 0x01	; 1
     618:	0e 94 53 01 	call	0x2a6	; 0x2a6 <_Z16USART_ReciveWaitPcib>
     61c:	c8 2f       	mov	r28, r24
     61e:	0f 90       	pop	r0
     620:	0f 90       	pop	r0
     622:	0f 90       	pop	r0
     624:	0f 90       	pop	r0
     626:	0f 90       	pop	r0
     628:	0f 90       	pop	r0
     62a:	88 23       	and	r24, r24
     62c:	09 f4       	brne	.+2      	; 0x630 <_Z10uploaddatav+0x5a>
     62e:	52 c0       	rjmp	.+164    	; 0x6d4 <_Z10uploaddatav+0xfe>
	{USART_ClearRX();
     630:	0e 94 9f 01 	call	0x33e	; 0x33e <_Z13USART_ClearRXv>
	{
		USART_ClearRX();
		return 0;
	}
	
	sprintf(getreqvest,"GET /powerpanel/write.php?up=L%d%d%dV%dA%dE\r\n",relay[0],relay[1],relay[2],voltage,amp);
     634:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <__data_start+0x3>
     638:	8f 93       	push	r24
     63a:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <__data_start+0x2>
     63e:	8f 93       	push	r24
     640:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <__data_start+0x1>
     644:	8f 93       	push	r24
     646:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     64a:	8f 93       	push	r24
     64c:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <voltage+0x1>
     650:	8f 93       	push	r24
     652:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <voltage>
     656:	8f 93       	push	r24
     658:	e8 ef       	ldi	r30, 0xF8	; 248
     65a:	f2 e0       	ldi	r31, 0x02	; 2
     65c:	82 81       	ldd	r24, Z+2	; 0x02
     65e:	1f 92       	push	r1
     660:	8f 93       	push	r24
     662:	81 81       	ldd	r24, Z+1	; 0x01
     664:	1f 92       	push	r1
     666:	8f 93       	push	r24
     668:	80 81       	ld	r24, Z
     66a:	1f 92       	push	r1
     66c:	8f 93       	push	r24
     66e:	87 e8       	ldi	r24, 0x87	; 135
     670:	91 e0       	ldi	r25, 0x01	; 1
     672:	9f 93       	push	r25
     674:	8f 93       	push	r24
     676:	c6 e2       	ldi	r28, 0x26	; 38
     678:	d3 e0       	ldi	r29, 0x03	; 3
     67a:	df 93       	push	r29
     67c:	cf 93       	push	r28
     67e:	0e 94 05 0d 	call	0x1a0a	; 0x1a0a <sprintf>
	
	
	sprintf(lengthcal,"AT+CIPSEND=4,%d\r\n",strlen(getreqvest));
     682:	09 90       	ld	r0, Y+
     684:	00 20       	and	r0, r0
     686:	e9 f7       	brne	.-6      	; 0x682 <_Z10uploaddatav+0xac>
     688:	21 97       	sbiw	r28, 0x01	; 1
     68a:	c6 52       	subi	r28, 0x26	; 38
     68c:	d3 40       	sbci	r29, 0x03	; 3
     68e:	df 93       	push	r29
     690:	cf 93       	push	r28
     692:	85 eb       	ldi	r24, 0xB5	; 181
     694:	91 e0       	ldi	r25, 0x01	; 1
     696:	9f 93       	push	r25
     698:	8f 93       	push	r24
     69a:	82 e1       	ldi	r24, 0x12	; 18
     69c:	93 e0       	ldi	r25, 0x03	; 3
     69e:	9f 93       	push	r25
     6a0:	8f 93       	push	r24
     6a2:	0e 94 05 0d 	call	0x1a0a	; 0x1a0a <sprintf>
	;
	
	USART_TxString(lengthcal);
     6a6:	82 e1       	ldi	r24, 0x12	; 18
     6a8:	93 e0       	ldi	r25, 0x03	; 3
     6aa:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <_Z14USART_TxStringPc>
	if (USART_ReciveWait("OK",2000))
     6ae:	40 e0       	ldi	r20, 0x00	; 0
     6b0:	60 ed       	ldi	r22, 0xD0	; 208
     6b2:	77 e0       	ldi	r23, 0x07	; 7
     6b4:	8f e0       	ldi	r24, 0x0F	; 15
     6b6:	91 e0       	ldi	r25, 0x01	; 1
     6b8:	0e 94 53 01 	call	0x2a6	; 0x2a6 <_Z16USART_ReciveWaitPcib>
     6bc:	c8 2f       	mov	r28, r24
     6be:	8d b7       	in	r24, 0x3d	; 61
     6c0:	9e b7       	in	r25, 0x3e	; 62
     6c2:	46 96       	adiw	r24, 0x16	; 22
     6c4:	0f b6       	in	r0, 0x3f	; 63
     6c6:	f8 94       	cli
     6c8:	9e bf       	out	0x3e, r25	; 62
     6ca:	0f be       	out	0x3f, r0	; 63
     6cc:	8d bf       	out	0x3d, r24	; 61
     6ce:	c1 11       	cpse	r28, r1
     6d0:	04 c0       	rjmp	.+8      	; 0x6da <_Z10uploaddatav+0x104>
     6d2:	14 c0       	rjmp	.+40     	; 0x6fc <_Z10uploaddatav+0x126>
	if (USART_ReciveWait("CONNECT",3000))
	{USART_ClearRX();
	} 
	else
	{
		USART_ClearRX();
     6d4:	0e 94 9f 01 	call	0x33e	; 0x33e <_Z13USART_ClearRXv>
		return 0;
     6d8:	19 c0       	rjmp	.+50     	; 0x70c <_Z10uploaddatav+0x136>
	;
	
	USART_TxString(lengthcal);
	if (USART_ReciveWait("OK",2000))
	{
		USART_ClearRX();
     6da:	0e 94 9f 01 	call	0x33e	; 0x33e <_Z13USART_ClearRXv>
	}
	
	

	
	USART_TxString(getreqvest);
     6de:	86 e2       	ldi	r24, 0x26	; 38
     6e0:	93 e0       	ldi	r25, 0x03	; 3
     6e2:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <_Z14USART_TxStringPc>
	if (USART_ReciveWait("DATA"))
     6e6:	40 e0       	ldi	r20, 0x00	; 0
     6e8:	60 e0       	ldi	r22, 0x00	; 0
     6ea:	70 e0       	ldi	r23, 0x00	; 0
     6ec:	87 ec       	ldi	r24, 0xC7	; 199
     6ee:	91 e0       	ldi	r25, 0x01	; 1
     6f0:	0e 94 53 01 	call	0x2a6	; 0x2a6 <_Z16USART_ReciveWaitPcib>
     6f4:	c8 2f       	mov	r28, r24
     6f6:	88 23       	and	r24, r24
     6f8:	39 f0       	breq	.+14     	; 0x708 <_Z10uploaddatav+0x132>
     6fa:	03 c0       	rjmp	.+6      	; 0x702 <_Z10uploaddatav+0x12c>
	{
		USART_ClearRX();
	} 
	else
	{
		USART_ClearRX();
     6fc:	0e 94 9f 01 	call	0x33e	; 0x33e <_Z13USART_ClearRXv>
		return 0; 
     700:	05 c0       	rjmp	.+10     	; 0x70c <_Z10uploaddatav+0x136>

	
	USART_TxString(getreqvest);
	if (USART_ReciveWait("DATA"))
	{
		USART_ClearRX();
     702:	0e 94 9f 01 	call	0x33e	; 0x33e <_Z13USART_ClearRXv>
		;
		return 1;
     706:	02 c0       	rjmp	.+4      	; 0x70c <_Z10uploaddatav+0x136>
	} 
	else
	{	
		
		
		USART_ClearRX();
     708:	0e 94 9f 01 	call	0x33e	; 0x33e <_Z13USART_ClearRXv>
		return 0;
	}

	
}
     70c:	8c 2f       	mov	r24, r28
     70e:	df 91       	pop	r29
     710:	cf 91       	pop	r28
     712:	08 95       	ret

00000714 <_Z7ReadADCh>:
uint16_t ReadADC(uint8_t ADCchannel)
{
	//select ADC channel with safety mask
	ADMUX = (ADMUX & 0xF0) | (ADCchannel & 0x0F);
     714:	ec e7       	ldi	r30, 0x7C	; 124
     716:	f0 e0       	ldi	r31, 0x00	; 0
     718:	90 81       	ld	r25, Z
     71a:	90 7f       	andi	r25, 0xF0	; 240
     71c:	8f 70       	andi	r24, 0x0F	; 15
     71e:	89 2b       	or	r24, r25
     720:	80 83       	st	Z, r24
	//single conversion mode
	ADCSRA |= (1<<ADSC);
     722:	ea e7       	ldi	r30, 0x7A	; 122
     724:	f0 e0       	ldi	r31, 0x00	; 0
     726:	80 81       	ld	r24, Z
     728:	80 64       	ori	r24, 0x40	; 64
     72a:	80 83       	st	Z, r24
	// wait until ADC conversion is complete
	while( ADCSRA & (1<<ADSC) );
     72c:	80 81       	ld	r24, Z
     72e:	86 fd       	sbrc	r24, 6
     730:	fd cf       	rjmp	.-6      	; 0x72c <_Z7ReadADCh+0x18>
	return ADC;
     732:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__DATA_REGION_ORIGIN__+0x18>
     736:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__DATA_REGION_ORIGIN__+0x19>
}
     73a:	08 95       	ret

0000073c <_Z11ReadVoltagev>:
float ReadVoltage(){
     73c:	cf 92       	push	r12
     73e:	df 92       	push	r13
     740:	ef 92       	push	r14
     742:	ff 92       	push	r15
     744:	0f 93       	push	r16
     746:	1f 93       	push	r17
     748:	cf 93       	push	r28
     74a:	df 93       	push	r29
     74c:	cc e2       	ldi	r28, 0x2C	; 44
     74e:	d2 e0       	ldi	r29, 0x02	; 2
     750:	0f 2e       	mov	r0, r31
     752:	f4 ef       	ldi	r31, 0xF4	; 244
     754:	ef 2e       	mov	r14, r31
     756:	f2 e0       	ldi	r31, 0x02	; 2
     758:	ff 2e       	mov	r15, r31
     75a:	f0 2d       	mov	r31, r0
     75c:	8e 01       	movw	r16, r28
	for ( int i = 0; i < 100; i++ ) {
		sensorValue1 = ReadADC(2);
     75e:	82 e0       	ldi	r24, 0x02	; 2
     760:	0e 94 8a 03 	call	0x714	; 0x714 <_Z7ReadADCh>
     764:	bc 01       	movw	r22, r24
     766:	80 e0       	ldi	r24, 0x00	; 0
     768:	90 e0       	ldi	r25, 0x00	; 0
     76a:	0e 94 63 06 	call	0xcc6	; 0xcc6 <__floatunsisf>
     76e:	60 93 f4 02 	sts	0x02F4, r22	; 0x8002f4 <sensorValue1>
     772:	70 93 f5 02 	sts	0x02F5, r23	; 0x8002f5 <sensorValue1+0x1>
     776:	80 93 f6 02 	sts	0x02F6, r24	; 0x8002f6 <sensorValue1+0x2>
     77a:	90 93 f7 02 	sts	0x02F7, r25	; 0x8002f7 <sensorValue1+0x3>
		if (ReadADC(2) > 511) {
     77e:	82 e0       	ldi	r24, 0x02	; 2
     780:	0e 94 8a 03 	call	0x714	; 0x714 <_Z7ReadADCh>
     784:	81 15       	cp	r24, r1
     786:	92 40       	sbci	r25, 0x02	; 2
     788:	70 f0       	brcs	.+28     	; 0x7a6 <_Z11ReadVoltagev+0x6a>
			val[i] = sensorValue1;
     78a:	60 91 f4 02 	lds	r22, 0x02F4	; 0x8002f4 <sensorValue1>
     78e:	70 91 f5 02 	lds	r23, 0x02F5	; 0x8002f5 <sensorValue1+0x1>
     792:	80 91 f6 02 	lds	r24, 0x02F6	; 0x8002f6 <sensorValue1+0x2>
     796:	90 91 f7 02 	lds	r25, 0x02F7	; 0x8002f7 <sensorValue1+0x3>
     79a:	0e 94 2d 06 	call	0xc5a	; 0xc5a <__fixsfsi>
     79e:	f8 01       	movw	r30, r16
     7a0:	71 83       	std	Z+1, r23	; 0x01
     7a2:	60 83       	st	Z, r22
     7a4:	03 c0       	rjmp	.+6      	; 0x7ac <_Z11ReadVoltagev+0x70>
		}
		else {
			val[i] = 0;
     7a6:	f8 01       	movw	r30, r16
     7a8:	11 82       	std	Z+1, r1	; 0x01
     7aa:	10 82       	st	Z, r1
     7ac:	8f ec       	ldi	r24, 0xCF	; 207
     7ae:	97 e0       	ldi	r25, 0x07	; 7
     7b0:	01 97       	sbiw	r24, 0x01	; 1
     7b2:	f1 f7       	brne	.-4      	; 0x7b0 <_Z11ReadVoltagev+0x74>
     7b4:	00 c0       	rjmp	.+0      	; 0x7b6 <_Z11ReadVoltagev+0x7a>
     7b6:	00 00       	nop
     7b8:	0e 5f       	subi	r16, 0xFE	; 254
     7ba:	1f 4f       	sbci	r17, 0xFF	; 255
	// wait until ADC conversion is complete
	while( ADCSRA & (1<<ADSC) );
	return ADC;
}
float ReadVoltage(){
	for ( int i = 0; i < 100; i++ ) {
     7bc:	0e 15       	cp	r16, r14
     7be:	1f 05       	cpc	r17, r15
     7c0:	71 f6       	brne	.-100    	; 0x75e <_Z11ReadVoltagev+0x22>
     7c2:	60 e0       	ldi	r22, 0x00	; 0
     7c4:	70 e0       	ldi	r23, 0x00	; 0
     7c6:	fe 01       	movw	r30, r28
     7c8:	88 81       	ld	r24, Y
     7ca:	99 81       	ldd	r25, Y+1	; 0x01
     7cc:	68 17       	cp	r22, r24
     7ce:	79 07       	cpc	r23, r25
     7d0:	0c f4       	brge	.+2      	; 0x7d4 <_Z11ReadVoltagev+0x98>
     7d2:	bc 01       	movw	r22, r24
	{
		if ( val[i] > max_v )
		{
			max_v = val[i];
		}
		val[i] = 0;
     7d4:	11 82       	std	Z+1, r1	; 0x01
     7d6:	10 82       	st	Z, r1
     7d8:	22 96       	adiw	r28, 0x02	; 2
		_delay_ms(1);
	}

	max_v = 0;

	for ( int i = 0; i < 100; i++ )
     7da:	ce 15       	cp	r28, r14
     7dc:	df 05       	cpc	r29, r15
     7de:	99 f7       	brne	.-26     	; 0x7c6 <_Z11ReadVoltagev+0x8a>
     7e0:	70 93 2b 02 	sts	0x022B, r23	; 0x80022b <max_v+0x1>
     7e4:	60 93 2a 02 	sts	0x022A, r22	; 0x80022a <max_v>
		{
			max_v = val[i];
		}
		val[i] = 0;
	}
	if (max_v != 0) {
     7e8:	61 15       	cp	r22, r1
     7ea:	71 05       	cpc	r23, r1
     7ec:	a9 f1       	breq	.+106    	; 0x858 <_Z11ReadVoltagev+0x11c>


		VmaxD = max_v;
		VeffD = VmaxD / sqrt(2);
     7ee:	07 2e       	mov	r0, r23
     7f0:	00 0c       	add	r0, r0
     7f2:	88 0b       	sbc	r24, r24
     7f4:	99 0b       	sbc	r25, r25
     7f6:	0e 94 65 06 	call	0xcca	; 0xcca <__floatsisf>
     7fa:	23 ef       	ldi	r18, 0xF3	; 243
     7fc:	34 e0       	ldi	r19, 0x04	; 4
     7fe:	45 eb       	ldi	r20, 0xB5	; 181
     800:	5f e3       	ldi	r21, 0x3F	; 63
     802:	0e 94 bb 05 	call	0xb76	; 0xb76 <__divsf3>
     806:	60 93 22 02 	sts	0x0222, r22	; 0x800222 <VeffD>
     80a:	70 93 23 02 	sts	0x0223, r23	; 0x800223 <VeffD+0x1>
     80e:	80 93 24 02 	sts	0x0224, r24	; 0x800224 <VeffD+0x2>
     812:	90 93 25 02 	sts	0x0225, r25	; 0x800225 <VeffD+0x3>
		Veff = (((VeffD - 420.76) / -90.24) * -210.2) + 210.2;
     816:	28 e4       	ldi	r18, 0x48	; 72
     818:	31 e6       	ldi	r19, 0x61	; 97
     81a:	42 ed       	ldi	r20, 0xD2	; 210
     81c:	53 e4       	ldi	r21, 0x43	; 67
     81e:	0e 94 49 05 	call	0xa92	; 0xa92 <__subsf3>
     822:	21 ee       	ldi	r18, 0xE1	; 225
     824:	3a e7       	ldi	r19, 0x7A	; 122
     826:	44 eb       	ldi	r20, 0xB4	; 180
     828:	52 ec       	ldi	r21, 0xC2	; 194
     82a:	0e 94 bb 05 	call	0xb76	; 0xb76 <__divsf3>
     82e:	23 e3       	ldi	r18, 0x33	; 51
     830:	33 e3       	ldi	r19, 0x33	; 51
     832:	42 e5       	ldi	r20, 0x52	; 82
     834:	53 ec       	ldi	r21, 0xC3	; 195
     836:	0e 94 15 07 	call	0xe2a	; 0xe2a <__mulsf3>
     83a:	23 e3       	ldi	r18, 0x33	; 51
     83c:	33 e3       	ldi	r19, 0x33	; 51
     83e:	42 e5       	ldi	r20, 0x52	; 82
     840:	53 e4       	ldi	r21, 0x43	; 67
     842:	0e 94 4a 05 	call	0xa94	; 0xa94 <__addsf3>
     846:	60 93 1e 02 	sts	0x021E, r22	; 0x80021e <Veff>
     84a:	70 93 1f 02 	sts	0x021F, r23	; 0x80021f <Veff+0x1>
     84e:	80 93 20 02 	sts	0x0220, r24	; 0x800220 <Veff+0x2>
     852:	90 93 21 02 	sts	0x0221, r25	; 0x800221 <Veff+0x3>
     856:	08 c0       	rjmp	.+16     	; 0x868 <_Z11ReadVoltagev+0x12c>
	}
	else {
		Veff = 0;
     858:	10 92 1e 02 	sts	0x021E, r1	; 0x80021e <Veff>
     85c:	10 92 1f 02 	sts	0x021F, r1	; 0x80021f <Veff+0x1>
     860:	10 92 20 02 	sts	0x0220, r1	; 0x800220 <Veff+0x2>
     864:	10 92 21 02 	sts	0x0221, r1	; 0x800221 <Veff+0x3>
	}
	
	VmaxD = 0;
     868:	10 92 26 02 	sts	0x0226, r1	; 0x800226 <VmaxD>
     86c:	10 92 27 02 	sts	0x0227, r1	; 0x800227 <VmaxD+0x1>
     870:	10 92 28 02 	sts	0x0228, r1	; 0x800228 <VmaxD+0x2>
     874:	10 92 29 02 	sts	0x0229, r1	; 0x800229 <VmaxD+0x3>
	if (Veff<110)
     878:	c0 90 1e 02 	lds	r12, 0x021E	; 0x80021e <Veff>
     87c:	d0 90 1f 02 	lds	r13, 0x021F	; 0x80021f <Veff+0x1>
     880:	e0 90 20 02 	lds	r14, 0x0220	; 0x800220 <Veff+0x2>
     884:	f0 90 21 02 	lds	r15, 0x0221	; 0x800221 <Veff+0x3>
     888:	20 e0       	ldi	r18, 0x00	; 0
     88a:	30 e0       	ldi	r19, 0x00	; 0
     88c:	4c ed       	ldi	r20, 0xDC	; 220
     88e:	52 e4       	ldi	r21, 0x42	; 66
     890:	c7 01       	movw	r24, r14
     892:	b6 01       	movw	r22, r12
     894:	0e 94 b6 05 	call	0xb6c	; 0xb6c <__cmpsf2>
     898:	88 23       	and	r24, r24
     89a:	1c f4       	brge	.+6      	; 0x8a2 <_Z11ReadVoltagev+0x166>
	{return 0;
     89c:	c1 2c       	mov	r12, r1
     89e:	d1 2c       	mov	r13, r1
     8a0:	76 01       	movw	r14, r12
	}
	return Veff;
}
     8a2:	c7 01       	movw	r24, r14
     8a4:	b6 01       	movw	r22, r12
     8a6:	df 91       	pop	r29
     8a8:	cf 91       	pop	r28
     8aa:	1f 91       	pop	r17
     8ac:	0f 91       	pop	r16
     8ae:	ff 90       	pop	r15
     8b0:	ef 90       	pop	r14
     8b2:	df 90       	pop	r13
     8b4:	cf 90       	pop	r12
     8b6:	08 95       	ret

000008b8 <_Z11readcurrentv>:

float readcurrent(){
     8b8:	0f 93       	push	r16
     8ba:	1f 93       	push	r17
	new_val = ReadADC(3);
     8bc:	83 e0       	ldi	r24, 0x03	; 3
     8be:	0e 94 8a 03 	call	0x714	; 0x714 <_Z7ReadADCh>
     8c2:	90 93 1b 02 	sts	0x021B, r25	; 0x80021b <new_val+0x1>
     8c6:	80 93 1a 02 	sts	0x021A, r24	; 0x80021a <new_val>
  if(new_val > old_val) {
     8ca:	20 91 18 02 	lds	r18, 0x0218	; 0x800218 <old_val>
     8ce:	30 91 19 02 	lds	r19, 0x0219	; 0x800219 <old_val+0x1>
     8d2:	28 17       	cp	r18, r24
     8d4:	39 07       	cpc	r19, r25
     8d6:	2c f4       	brge	.+10     	; 0x8e2 <_Z11readcurrentv+0x2a>
    old_val = new_val;
     8d8:	90 93 19 02 	sts	0x0219, r25	; 0x800219 <old_val+0x1>
     8dc:	80 93 18 02 	sts	0x0218, r24	; 0x800218 <old_val>
    
    rms = max_val * 5.00 * 0.707 / 1024;
    IRMS = rms * calibration_const;
	return IRMS;
}
}
     8e0:	54 c0       	rjmp	.+168    	; 0x98a <__stack+0x8b>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     8e2:	85 e8       	ldi	r24, 0x85	; 133
     8e4:	8a 95       	dec	r24
     8e6:	f1 f7       	brne	.-4      	; 0x8e4 <_Z11readcurrentv+0x2c>
     8e8:	00 00       	nop
    old_val = new_val;
  }
  
  else {
   _delay_us(50);
    new_val = ReadADC(3);
     8ea:	83 e0       	ldi	r24, 0x03	; 3
     8ec:	0e 94 8a 03 	call	0x714	; 0x714 <_Z7ReadADCh>
     8f0:	90 93 1b 02 	sts	0x021B, r25	; 0x80021b <new_val+0x1>
     8f4:	80 93 1a 02 	sts	0x021A, r24	; 0x80021a <new_val>
    if(new_val < old_val) {
     8f8:	20 91 18 02 	lds	r18, 0x0218	; 0x800218 <old_val>
     8fc:	30 91 19 02 	lds	r19, 0x0219	; 0x800219 <old_val+0x1>
     900:	82 17       	cp	r24, r18
     902:	93 07       	cpc	r25, r19
     904:	44 f4       	brge	.+16     	; 0x916 <__stack+0x17>
      max_val = old_val;
     906:	30 93 1d 02 	sts	0x021D, r19	; 0x80021d <max_val+0x1>
     90a:	20 93 1c 02 	sts	0x021C, r18	; 0x80021c <max_val>
      old_val = 0;
     90e:	10 92 19 02 	sts	0x0219, r1	; 0x800219 <old_val+0x1>
     912:	10 92 18 02 	sts	0x0218, r1	; 0x800218 <old_val>
    }
    
    rms = max_val * 5.00 * 0.707 / 1024;
     916:	60 91 1c 02 	lds	r22, 0x021C	; 0x80021c <max_val>
     91a:	70 91 1d 02 	lds	r23, 0x021D	; 0x80021d <max_val+0x1>
     91e:	07 2e       	mov	r0, r23
     920:	00 0c       	add	r0, r0
     922:	88 0b       	sbc	r24, r24
     924:	99 0b       	sbc	r25, r25
     926:	0e 94 65 06 	call	0xcca	; 0xcca <__floatsisf>
     92a:	20 e0       	ldi	r18, 0x00	; 0
     92c:	30 e0       	ldi	r19, 0x00	; 0
     92e:	40 ea       	ldi	r20, 0xA0	; 160
     930:	50 e4       	ldi	r21, 0x40	; 64
     932:	0e 94 15 07 	call	0xe2a	; 0xe2a <__mulsf3>
     936:	24 ef       	ldi	r18, 0xF4	; 244
     938:	3d ef       	ldi	r19, 0xFD	; 253
     93a:	44 e3       	ldi	r20, 0x34	; 52
     93c:	5f e3       	ldi	r21, 0x3F	; 63
     93e:	0e 94 15 07 	call	0xe2a	; 0xe2a <__mulsf3>
     942:	20 e0       	ldi	r18, 0x00	; 0
     944:	30 e0       	ldi	r19, 0x00	; 0
     946:	40 e8       	ldi	r20, 0x80	; 128
     948:	5a e3       	ldi	r21, 0x3A	; 58
     94a:	0e 94 15 07 	call	0xe2a	; 0xe2a <__mulsf3>
     94e:	60 93 14 02 	sts	0x0214, r22	; 0x800214 <rms>
     952:	70 93 15 02 	sts	0x0215, r23	; 0x800215 <rms+0x1>
     956:	80 93 16 02 	sts	0x0216, r24	; 0x800216 <rms+0x2>
     95a:	90 93 17 02 	sts	0x0217, r25	; 0x800217 <rms+0x3>
    IRMS = rms * calibration_const;
     95e:	26 e6       	ldi	r18, 0x66	; 102
     960:	36 ec       	ldi	r19, 0xC6	; 198
     962:	41 eb       	ldi	r20, 0xB1	; 177
     964:	53 e4       	ldi	r21, 0x43	; 67
     966:	0e 94 15 07 	call	0xe2a	; 0xe2a <__mulsf3>
     96a:	06 2f       	mov	r16, r22
     96c:	17 2f       	mov	r17, r23
     96e:	28 2f       	mov	r18, r24
     970:	39 2f       	mov	r19, r25
     972:	00 93 10 02 	sts	0x0210, r16	; 0x800210 <__data_end>
     976:	10 93 11 02 	sts	0x0211, r17	; 0x800211 <__data_end+0x1>
     97a:	20 93 12 02 	sts	0x0212, r18	; 0x800212 <__data_end+0x2>
     97e:	30 93 13 02 	sts	0x0213, r19	; 0x800213 <__data_end+0x3>
	return IRMS;
     982:	56 2f       	mov	r21, r22
     984:	47 2f       	mov	r20, r23
     986:	38 2f       	mov	r19, r24
     988:	29 2f       	mov	r18, r25
}
}
     98a:	65 2f       	mov	r22, r21
     98c:	74 2f       	mov	r23, r20
     98e:	83 2f       	mov	r24, r19
     990:	92 2f       	mov	r25, r18
     992:	1f 91       	pop	r17
     994:	0f 91       	pop	r16
     996:	08 95       	ret

00000998 <_Z7InitADCv>:
void InitADC()
{
	// Select Vref=AVcc
	ADMUX |= (1<<REFS0);
     998:	ec e7       	ldi	r30, 0x7C	; 124
     99a:	f0 e0       	ldi	r31, 0x00	; 0
     99c:	80 81       	ld	r24, Z
     99e:	80 64       	ori	r24, 0x40	; 64
     9a0:	80 83       	st	Z, r24
	//set prescaller to 128 and enable ADC
	ADCSRA |= (1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0)|(1<<ADEN);
     9a2:	ea e7       	ldi	r30, 0x7A	; 122
     9a4:	f0 e0       	ldi	r31, 0x00	; 0
     9a6:	80 81       	ld	r24, Z
     9a8:	87 68       	ori	r24, 0x87	; 135
     9aa:	80 83       	st	Z, r24
     9ac:	08 95       	ret

000009ae <main>:
}



int main(void)
{	if (setjmp (mainstart))
     9ae:	cf 93       	push	r28
     9b0:	df 93       	push	r29
     9b2:	cd b7       	in	r28, 0x3d	; 61
     9b4:	de b7       	in	r29, 0x3e	; 62
     9b6:	8b ef       	ldi	r24, 0xFB	; 251
     9b8:	92 e0       	ldi	r25, 0x02	; 2
     9ba:	0e 94 58 0c 	call	0x18b0	; 0x18b0 <setjmp>
{ 
}
	InitADC();
     9be:	0e 94 cc 04 	call	0x998	; 0x998 <_Z7InitADCv>
	DDRB&=~(1<<6); //pin 9
     9c2:	26 98       	cbi	0x04, 6	; 4
	DDRB&=~(1<<7); //pin 10
     9c4:	27 98       	cbi	0x04, 7	; 4
	DDRD&=~(1<<5); //pin 11
     9c6:	55 98       	cbi	0x0a, 5	; 10
	
    USART_Init(9600);
     9c8:	80 e8       	ldi	r24, 0x80	; 128
     9ca:	95 e2       	ldi	r25, 0x25	; 37
     9cc:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <_Z10USART_Initj>
	
	
	
	if (!checkEsp())
     9d0:	0e 94 a8 01 	call	0x350	; 0x350 <_Z8checkEspv>
     9d4:	81 11       	cpse	r24, r1
     9d6:	0f c0       	rjmp	.+30     	; 0x9f6 <main+0x48>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     9d8:	2f ef       	ldi	r18, 0xFF	; 255
     9da:	89 e6       	ldi	r24, 0x69	; 105
     9dc:	98 e1       	ldi	r25, 0x18	; 24
     9de:	21 50       	subi	r18, 0x01	; 1
     9e0:	80 40       	sbci	r24, 0x00	; 0
     9e2:	90 40       	sbci	r25, 0x00	; 0
     9e4:	e1 f7       	brne	.-8      	; 0x9de <main+0x30>
     9e6:	00 c0       	rjmp	.+0      	; 0x9e8 <main+0x3a>
     9e8:	00 00       	nop
	{	_delay_ms(1000);
		longjmp (mainstart, 1);
     9ea:	61 e0       	ldi	r22, 0x01	; 1
     9ec:	70 e0       	ldi	r23, 0x00	; 0
     9ee:	8b ef       	ldi	r24, 0xFB	; 251
     9f0:	92 e0       	ldi	r25, 0x02	; 2
     9f2:	0e 94 78 0c 	call	0x18f0	; 0x18f0 <longjmp>
	} 
	
	if (!setupESP())
     9f6:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <_Z8setupESPv>
     9fa:	81 11       	cpse	r24, r1
     9fc:	0f c0       	rjmp	.+30     	; 0xa1c <main+0x6e>
     9fe:	ef ef       	ldi	r30, 0xFF	; 255
     a00:	f9 e6       	ldi	r31, 0x69	; 105
     a02:	28 e1       	ldi	r18, 0x18	; 24
     a04:	e1 50       	subi	r30, 0x01	; 1
     a06:	f0 40       	sbci	r31, 0x00	; 0
     a08:	20 40       	sbci	r18, 0x00	; 0
     a0a:	e1 f7       	brne	.-8      	; 0xa04 <main+0x56>
     a0c:	00 c0       	rjmp	.+0      	; 0xa0e <main+0x60>
     a0e:	00 00       	nop
	{	_delay_ms(1000);
		longjmp (mainstart, 1);
     a10:	61 e0       	ldi	r22, 0x01	; 1
     a12:	70 e0       	ldi	r23, 0x00	; 0
     a14:	8b ef       	ldi	r24, 0xFB	; 251
     a16:	92 e0       	ldi	r25, 0x02	; 2
     a18:	0e 94 78 0c 	call	0x18f0	; 0x18f0 <longjmp>
     a1c:	8f ef       	ldi	r24, 0xFF	; 255
     a1e:	90 e7       	ldi	r25, 0x70	; 112
     a20:	e2 e0       	ldi	r30, 0x02	; 2
     a22:	81 50       	subi	r24, 0x01	; 1
     a24:	90 40       	sbci	r25, 0x00	; 0
     a26:	e0 40       	sbci	r30, 0x00	; 0
     a28:	e1 f7       	brne	.-8      	; 0xa22 <main+0x74>
     a2a:	00 c0       	rjmp	.+0      	; 0xa2c <main+0x7e>
     a2c:	00 00       	nop
	}
	
	
	_delay_ms(100);
    while (1) 
    {	relay[0]=!((PINB&0b1000000)>>6);
     a2e:	08 ef       	ldi	r16, 0xF8	; 248
     a30:	12 e0       	ldi	r17, 0x02	; 2
     a32:	ff 24       	eor	r15, r15
     a34:	f3 94       	inc	r15
     a36:	e1 2c       	mov	r14, r1
     a38:	8f 2d       	mov	r24, r15
     a3a:	1e 99       	sbic	0x03, 6	; 3
     a3c:	8e 2d       	mov	r24, r14
     a3e:	f8 01       	movw	r30, r16
     a40:	80 83       	st	Z, r24
		relay[1]=!((PINB&0b10000000)>>7);
     a42:	83 b1       	in	r24, 0x03	; 3
     a44:	80 95       	com	r24
     a46:	88 1f       	adc	r24, r24
     a48:	88 27       	eor	r24, r24
     a4a:	88 1f       	adc	r24, r24
     a4c:	81 83       	std	Z+1, r24	; 0x01
		relay[2]=!((PIND&0b100000)>>5);
     a4e:	8f 2d       	mov	r24, r15
     a50:	4d 99       	sbic	0x09, 5	; 9
     a52:	8e 2d       	mov	r24, r14
     a54:	f8 01       	movw	r30, r16
     a56:	82 83       	std	Z+2, r24	; 0x02
		voltage=ReadVoltage();
     a58:	0e 94 9e 03 	call	0x73c	; 0x73c <_Z11ReadVoltagev>
     a5c:	0e 94 34 06 	call	0xc68	; 0xc68 <__fixunssfsi>
     a60:	70 93 05 01 	sts	0x0105, r23	; 0x800105 <voltage+0x1>
     a64:	60 93 04 01 	sts	0x0104, r22	; 0x800104 <voltage>
		readcurrent();
     a68:	0e 94 5c 04 	call	0x8b8	; 0x8b8 <_Z11readcurrentv>
		if (!uploaddata())
     a6c:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <_Z10uploaddatav>
     a70:	81 11       	cpse	r24, r1
     a72:	e2 cf       	rjmp	.-60     	; 0xa38 <main+0x8a>
     a74:	ff ef       	ldi	r31, 0xFF	; 255
     a76:	21 e1       	ldi	r18, 0x11	; 17
     a78:	8a e7       	ldi	r24, 0x7A	; 122
     a7a:	f1 50       	subi	r31, 0x01	; 1
     a7c:	20 40       	sbci	r18, 0x00	; 0
     a7e:	80 40       	sbci	r24, 0x00	; 0
     a80:	e1 f7       	brne	.-8      	; 0xa7a <main+0xcc>
     a82:	00 c0       	rjmp	.+0      	; 0xa84 <main+0xd6>
     a84:	00 00       	nop
		{	_delay_ms(5000);
			longjmp (mainstart, 1);
     a86:	61 e0       	ldi	r22, 0x01	; 1
     a88:	70 e0       	ldi	r23, 0x00	; 0
     a8a:	8b ef       	ldi	r24, 0xFB	; 251
     a8c:	92 e0       	ldi	r25, 0x02	; 2
     a8e:	0e 94 78 0c 	call	0x18f0	; 0x18f0 <longjmp>

00000a92 <__subsf3>:
     a92:	50 58       	subi	r21, 0x80	; 128

00000a94 <__addsf3>:
     a94:	bb 27       	eor	r27, r27
     a96:	aa 27       	eor	r26, r26
     a98:	0e 94 61 05 	call	0xac2	; 0xac2 <__addsf3x>
     a9c:	0c 94 db 06 	jmp	0xdb6	; 0xdb6 <__fp_round>
     aa0:	0e 94 cd 06 	call	0xd9a	; 0xd9a <__fp_pscA>
     aa4:	38 f0       	brcs	.+14     	; 0xab4 <__addsf3+0x20>
     aa6:	0e 94 d4 06 	call	0xda8	; 0xda8 <__fp_pscB>
     aaa:	20 f0       	brcs	.+8      	; 0xab4 <__addsf3+0x20>
     aac:	39 f4       	brne	.+14     	; 0xabc <__addsf3+0x28>
     aae:	9f 3f       	cpi	r25, 0xFF	; 255
     ab0:	19 f4       	brne	.+6      	; 0xab8 <__addsf3+0x24>
     ab2:	26 f4       	brtc	.+8      	; 0xabc <__addsf3+0x28>
     ab4:	0c 94 ca 06 	jmp	0xd94	; 0xd94 <__fp_nan>
     ab8:	0e f4       	brtc	.+2      	; 0xabc <__addsf3+0x28>
     aba:	e0 95       	com	r30
     abc:	e7 fb       	bst	r30, 7
     abe:	0c 94 c4 06 	jmp	0xd88	; 0xd88 <__fp_inf>

00000ac2 <__addsf3x>:
     ac2:	e9 2f       	mov	r30, r25
     ac4:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <__fp_split3>
     ac8:	58 f3       	brcs	.-42     	; 0xaa0 <__addsf3+0xc>
     aca:	ba 17       	cp	r27, r26
     acc:	62 07       	cpc	r22, r18
     ace:	73 07       	cpc	r23, r19
     ad0:	84 07       	cpc	r24, r20
     ad2:	95 07       	cpc	r25, r21
     ad4:	20 f0       	brcs	.+8      	; 0xade <__addsf3x+0x1c>
     ad6:	79 f4       	brne	.+30     	; 0xaf6 <__addsf3x+0x34>
     ad8:	a6 f5       	brtc	.+104    	; 0xb42 <__addsf3x+0x80>
     ada:	0c 94 0e 07 	jmp	0xe1c	; 0xe1c <__fp_zero>
     ade:	0e f4       	brtc	.+2      	; 0xae2 <__addsf3x+0x20>
     ae0:	e0 95       	com	r30
     ae2:	0b 2e       	mov	r0, r27
     ae4:	ba 2f       	mov	r27, r26
     ae6:	a0 2d       	mov	r26, r0
     ae8:	0b 01       	movw	r0, r22
     aea:	b9 01       	movw	r22, r18
     aec:	90 01       	movw	r18, r0
     aee:	0c 01       	movw	r0, r24
     af0:	ca 01       	movw	r24, r20
     af2:	a0 01       	movw	r20, r0
     af4:	11 24       	eor	r1, r1
     af6:	ff 27       	eor	r31, r31
     af8:	59 1b       	sub	r21, r25
     afa:	99 f0       	breq	.+38     	; 0xb22 <__addsf3x+0x60>
     afc:	59 3f       	cpi	r21, 0xF9	; 249
     afe:	50 f4       	brcc	.+20     	; 0xb14 <__addsf3x+0x52>
     b00:	50 3e       	cpi	r21, 0xE0	; 224
     b02:	68 f1       	brcs	.+90     	; 0xb5e <__addsf3x+0x9c>
     b04:	1a 16       	cp	r1, r26
     b06:	f0 40       	sbci	r31, 0x00	; 0
     b08:	a2 2f       	mov	r26, r18
     b0a:	23 2f       	mov	r18, r19
     b0c:	34 2f       	mov	r19, r20
     b0e:	44 27       	eor	r20, r20
     b10:	58 5f       	subi	r21, 0xF8	; 248
     b12:	f3 cf       	rjmp	.-26     	; 0xafa <__addsf3x+0x38>
     b14:	46 95       	lsr	r20
     b16:	37 95       	ror	r19
     b18:	27 95       	ror	r18
     b1a:	a7 95       	ror	r26
     b1c:	f0 40       	sbci	r31, 0x00	; 0
     b1e:	53 95       	inc	r21
     b20:	c9 f7       	brne	.-14     	; 0xb14 <__addsf3x+0x52>
     b22:	7e f4       	brtc	.+30     	; 0xb42 <__addsf3x+0x80>
     b24:	1f 16       	cp	r1, r31
     b26:	ba 0b       	sbc	r27, r26
     b28:	62 0b       	sbc	r22, r18
     b2a:	73 0b       	sbc	r23, r19
     b2c:	84 0b       	sbc	r24, r20
     b2e:	ba f0       	brmi	.+46     	; 0xb5e <__addsf3x+0x9c>
     b30:	91 50       	subi	r25, 0x01	; 1
     b32:	a1 f0       	breq	.+40     	; 0xb5c <__addsf3x+0x9a>
     b34:	ff 0f       	add	r31, r31
     b36:	bb 1f       	adc	r27, r27
     b38:	66 1f       	adc	r22, r22
     b3a:	77 1f       	adc	r23, r23
     b3c:	88 1f       	adc	r24, r24
     b3e:	c2 f7       	brpl	.-16     	; 0xb30 <__addsf3x+0x6e>
     b40:	0e c0       	rjmp	.+28     	; 0xb5e <__addsf3x+0x9c>
     b42:	ba 0f       	add	r27, r26
     b44:	62 1f       	adc	r22, r18
     b46:	73 1f       	adc	r23, r19
     b48:	84 1f       	adc	r24, r20
     b4a:	48 f4       	brcc	.+18     	; 0xb5e <__addsf3x+0x9c>
     b4c:	87 95       	ror	r24
     b4e:	77 95       	ror	r23
     b50:	67 95       	ror	r22
     b52:	b7 95       	ror	r27
     b54:	f7 95       	ror	r31
     b56:	9e 3f       	cpi	r25, 0xFE	; 254
     b58:	08 f0       	brcs	.+2      	; 0xb5c <__addsf3x+0x9a>
     b5a:	b0 cf       	rjmp	.-160    	; 0xabc <__addsf3+0x28>
     b5c:	93 95       	inc	r25
     b5e:	88 0f       	add	r24, r24
     b60:	08 f0       	brcs	.+2      	; 0xb64 <__addsf3x+0xa2>
     b62:	99 27       	eor	r25, r25
     b64:	ee 0f       	add	r30, r30
     b66:	97 95       	ror	r25
     b68:	87 95       	ror	r24
     b6a:	08 95       	ret

00000b6c <__cmpsf2>:
     b6c:	0e 94 a0 06 	call	0xd40	; 0xd40 <__fp_cmp>
     b70:	08 f4       	brcc	.+2      	; 0xb74 <__cmpsf2+0x8>
     b72:	81 e0       	ldi	r24, 0x01	; 1
     b74:	08 95       	ret

00000b76 <__divsf3>:
     b76:	0e 94 cf 05 	call	0xb9e	; 0xb9e <__divsf3x>
     b7a:	0c 94 db 06 	jmp	0xdb6	; 0xdb6 <__fp_round>
     b7e:	0e 94 d4 06 	call	0xda8	; 0xda8 <__fp_pscB>
     b82:	58 f0       	brcs	.+22     	; 0xb9a <__divsf3+0x24>
     b84:	0e 94 cd 06 	call	0xd9a	; 0xd9a <__fp_pscA>
     b88:	40 f0       	brcs	.+16     	; 0xb9a <__divsf3+0x24>
     b8a:	29 f4       	brne	.+10     	; 0xb96 <__divsf3+0x20>
     b8c:	5f 3f       	cpi	r21, 0xFF	; 255
     b8e:	29 f0       	breq	.+10     	; 0xb9a <__divsf3+0x24>
     b90:	0c 94 c4 06 	jmp	0xd88	; 0xd88 <__fp_inf>
     b94:	51 11       	cpse	r21, r1
     b96:	0c 94 0f 07 	jmp	0xe1e	; 0xe1e <__fp_szero>
     b9a:	0c 94 ca 06 	jmp	0xd94	; 0xd94 <__fp_nan>

00000b9e <__divsf3x>:
     b9e:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <__fp_split3>
     ba2:	68 f3       	brcs	.-38     	; 0xb7e <__divsf3+0x8>

00000ba4 <__divsf3_pse>:
     ba4:	99 23       	and	r25, r25
     ba6:	b1 f3       	breq	.-20     	; 0xb94 <__divsf3+0x1e>
     ba8:	55 23       	and	r21, r21
     baa:	91 f3       	breq	.-28     	; 0xb90 <__divsf3+0x1a>
     bac:	95 1b       	sub	r25, r21
     bae:	55 0b       	sbc	r21, r21
     bb0:	bb 27       	eor	r27, r27
     bb2:	aa 27       	eor	r26, r26
     bb4:	62 17       	cp	r22, r18
     bb6:	73 07       	cpc	r23, r19
     bb8:	84 07       	cpc	r24, r20
     bba:	38 f0       	brcs	.+14     	; 0xbca <__divsf3_pse+0x26>
     bbc:	9f 5f       	subi	r25, 0xFF	; 255
     bbe:	5f 4f       	sbci	r21, 0xFF	; 255
     bc0:	22 0f       	add	r18, r18
     bc2:	33 1f       	adc	r19, r19
     bc4:	44 1f       	adc	r20, r20
     bc6:	aa 1f       	adc	r26, r26
     bc8:	a9 f3       	breq	.-22     	; 0xbb4 <__divsf3_pse+0x10>
     bca:	35 d0       	rcall	.+106    	; 0xc36 <__divsf3_pse+0x92>
     bcc:	0e 2e       	mov	r0, r30
     bce:	3a f0       	brmi	.+14     	; 0xbde <__divsf3_pse+0x3a>
     bd0:	e0 e8       	ldi	r30, 0x80	; 128
     bd2:	32 d0       	rcall	.+100    	; 0xc38 <__divsf3_pse+0x94>
     bd4:	91 50       	subi	r25, 0x01	; 1
     bd6:	50 40       	sbci	r21, 0x00	; 0
     bd8:	e6 95       	lsr	r30
     bda:	00 1c       	adc	r0, r0
     bdc:	ca f7       	brpl	.-14     	; 0xbd0 <__divsf3_pse+0x2c>
     bde:	2b d0       	rcall	.+86     	; 0xc36 <__divsf3_pse+0x92>
     be0:	fe 2f       	mov	r31, r30
     be2:	29 d0       	rcall	.+82     	; 0xc36 <__divsf3_pse+0x92>
     be4:	66 0f       	add	r22, r22
     be6:	77 1f       	adc	r23, r23
     be8:	88 1f       	adc	r24, r24
     bea:	bb 1f       	adc	r27, r27
     bec:	26 17       	cp	r18, r22
     bee:	37 07       	cpc	r19, r23
     bf0:	48 07       	cpc	r20, r24
     bf2:	ab 07       	cpc	r26, r27
     bf4:	b0 e8       	ldi	r27, 0x80	; 128
     bf6:	09 f0       	breq	.+2      	; 0xbfa <__divsf3_pse+0x56>
     bf8:	bb 0b       	sbc	r27, r27
     bfa:	80 2d       	mov	r24, r0
     bfc:	bf 01       	movw	r22, r30
     bfe:	ff 27       	eor	r31, r31
     c00:	93 58       	subi	r25, 0x83	; 131
     c02:	5f 4f       	sbci	r21, 0xFF	; 255
     c04:	3a f0       	brmi	.+14     	; 0xc14 <__divsf3_pse+0x70>
     c06:	9e 3f       	cpi	r25, 0xFE	; 254
     c08:	51 05       	cpc	r21, r1
     c0a:	78 f0       	brcs	.+30     	; 0xc2a <__divsf3_pse+0x86>
     c0c:	0c 94 c4 06 	jmp	0xd88	; 0xd88 <__fp_inf>
     c10:	0c 94 0f 07 	jmp	0xe1e	; 0xe1e <__fp_szero>
     c14:	5f 3f       	cpi	r21, 0xFF	; 255
     c16:	e4 f3       	brlt	.-8      	; 0xc10 <__divsf3_pse+0x6c>
     c18:	98 3e       	cpi	r25, 0xE8	; 232
     c1a:	d4 f3       	brlt	.-12     	; 0xc10 <__divsf3_pse+0x6c>
     c1c:	86 95       	lsr	r24
     c1e:	77 95       	ror	r23
     c20:	67 95       	ror	r22
     c22:	b7 95       	ror	r27
     c24:	f7 95       	ror	r31
     c26:	9f 5f       	subi	r25, 0xFF	; 255
     c28:	c9 f7       	brne	.-14     	; 0xc1c <__divsf3_pse+0x78>
     c2a:	88 0f       	add	r24, r24
     c2c:	91 1d       	adc	r25, r1
     c2e:	96 95       	lsr	r25
     c30:	87 95       	ror	r24
     c32:	97 f9       	bld	r25, 7
     c34:	08 95       	ret
     c36:	e1 e0       	ldi	r30, 0x01	; 1
     c38:	66 0f       	add	r22, r22
     c3a:	77 1f       	adc	r23, r23
     c3c:	88 1f       	adc	r24, r24
     c3e:	bb 1f       	adc	r27, r27
     c40:	62 17       	cp	r22, r18
     c42:	73 07       	cpc	r23, r19
     c44:	84 07       	cpc	r24, r20
     c46:	ba 07       	cpc	r27, r26
     c48:	20 f0       	brcs	.+8      	; 0xc52 <__divsf3_pse+0xae>
     c4a:	62 1b       	sub	r22, r18
     c4c:	73 0b       	sbc	r23, r19
     c4e:	84 0b       	sbc	r24, r20
     c50:	ba 0b       	sbc	r27, r26
     c52:	ee 1f       	adc	r30, r30
     c54:	88 f7       	brcc	.-30     	; 0xc38 <__divsf3_pse+0x94>
     c56:	e0 95       	com	r30
     c58:	08 95       	ret

00000c5a <__fixsfsi>:
     c5a:	0e 94 34 06 	call	0xc68	; 0xc68 <__fixunssfsi>
     c5e:	68 94       	set
     c60:	b1 11       	cpse	r27, r1
     c62:	0c 94 0f 07 	jmp	0xe1e	; 0xe1e <__fp_szero>
     c66:	08 95       	ret

00000c68 <__fixunssfsi>:
     c68:	0e 94 f4 06 	call	0xde8	; 0xde8 <__fp_splitA>
     c6c:	88 f0       	brcs	.+34     	; 0xc90 <__fixunssfsi+0x28>
     c6e:	9f 57       	subi	r25, 0x7F	; 127
     c70:	98 f0       	brcs	.+38     	; 0xc98 <__fixunssfsi+0x30>
     c72:	b9 2f       	mov	r27, r25
     c74:	99 27       	eor	r25, r25
     c76:	b7 51       	subi	r27, 0x17	; 23
     c78:	b0 f0       	brcs	.+44     	; 0xca6 <__fixunssfsi+0x3e>
     c7a:	e1 f0       	breq	.+56     	; 0xcb4 <__fixunssfsi+0x4c>
     c7c:	66 0f       	add	r22, r22
     c7e:	77 1f       	adc	r23, r23
     c80:	88 1f       	adc	r24, r24
     c82:	99 1f       	adc	r25, r25
     c84:	1a f0       	brmi	.+6      	; 0xc8c <__fixunssfsi+0x24>
     c86:	ba 95       	dec	r27
     c88:	c9 f7       	brne	.-14     	; 0xc7c <__fixunssfsi+0x14>
     c8a:	14 c0       	rjmp	.+40     	; 0xcb4 <__fixunssfsi+0x4c>
     c8c:	b1 30       	cpi	r27, 0x01	; 1
     c8e:	91 f0       	breq	.+36     	; 0xcb4 <__fixunssfsi+0x4c>
     c90:	0e 94 0e 07 	call	0xe1c	; 0xe1c <__fp_zero>
     c94:	b1 e0       	ldi	r27, 0x01	; 1
     c96:	08 95       	ret
     c98:	0c 94 0e 07 	jmp	0xe1c	; 0xe1c <__fp_zero>
     c9c:	67 2f       	mov	r22, r23
     c9e:	78 2f       	mov	r23, r24
     ca0:	88 27       	eor	r24, r24
     ca2:	b8 5f       	subi	r27, 0xF8	; 248
     ca4:	39 f0       	breq	.+14     	; 0xcb4 <__fixunssfsi+0x4c>
     ca6:	b9 3f       	cpi	r27, 0xF9	; 249
     ca8:	cc f3       	brlt	.-14     	; 0xc9c <__fixunssfsi+0x34>
     caa:	86 95       	lsr	r24
     cac:	77 95       	ror	r23
     cae:	67 95       	ror	r22
     cb0:	b3 95       	inc	r27
     cb2:	d9 f7       	brne	.-10     	; 0xcaa <__fixunssfsi+0x42>
     cb4:	3e f4       	brtc	.+14     	; 0xcc4 <__fixunssfsi+0x5c>
     cb6:	90 95       	com	r25
     cb8:	80 95       	com	r24
     cba:	70 95       	com	r23
     cbc:	61 95       	neg	r22
     cbe:	7f 4f       	sbci	r23, 0xFF	; 255
     cc0:	8f 4f       	sbci	r24, 0xFF	; 255
     cc2:	9f 4f       	sbci	r25, 0xFF	; 255
     cc4:	08 95       	ret

00000cc6 <__floatunsisf>:
     cc6:	e8 94       	clt
     cc8:	09 c0       	rjmp	.+18     	; 0xcdc <__floatsisf+0x12>

00000cca <__floatsisf>:
     cca:	97 fb       	bst	r25, 7
     ccc:	3e f4       	brtc	.+14     	; 0xcdc <__floatsisf+0x12>
     cce:	90 95       	com	r25
     cd0:	80 95       	com	r24
     cd2:	70 95       	com	r23
     cd4:	61 95       	neg	r22
     cd6:	7f 4f       	sbci	r23, 0xFF	; 255
     cd8:	8f 4f       	sbci	r24, 0xFF	; 255
     cda:	9f 4f       	sbci	r25, 0xFF	; 255
     cdc:	99 23       	and	r25, r25
     cde:	a9 f0       	breq	.+42     	; 0xd0a <__floatsisf+0x40>
     ce0:	f9 2f       	mov	r31, r25
     ce2:	96 e9       	ldi	r25, 0x96	; 150
     ce4:	bb 27       	eor	r27, r27
     ce6:	93 95       	inc	r25
     ce8:	f6 95       	lsr	r31
     cea:	87 95       	ror	r24
     cec:	77 95       	ror	r23
     cee:	67 95       	ror	r22
     cf0:	b7 95       	ror	r27
     cf2:	f1 11       	cpse	r31, r1
     cf4:	f8 cf       	rjmp	.-16     	; 0xce6 <__floatsisf+0x1c>
     cf6:	fa f4       	brpl	.+62     	; 0xd36 <__floatsisf+0x6c>
     cf8:	bb 0f       	add	r27, r27
     cfa:	11 f4       	brne	.+4      	; 0xd00 <__floatsisf+0x36>
     cfc:	60 ff       	sbrs	r22, 0
     cfe:	1b c0       	rjmp	.+54     	; 0xd36 <__floatsisf+0x6c>
     d00:	6f 5f       	subi	r22, 0xFF	; 255
     d02:	7f 4f       	sbci	r23, 0xFF	; 255
     d04:	8f 4f       	sbci	r24, 0xFF	; 255
     d06:	9f 4f       	sbci	r25, 0xFF	; 255
     d08:	16 c0       	rjmp	.+44     	; 0xd36 <__floatsisf+0x6c>
     d0a:	88 23       	and	r24, r24
     d0c:	11 f0       	breq	.+4      	; 0xd12 <__floatsisf+0x48>
     d0e:	96 e9       	ldi	r25, 0x96	; 150
     d10:	11 c0       	rjmp	.+34     	; 0xd34 <__floatsisf+0x6a>
     d12:	77 23       	and	r23, r23
     d14:	21 f0       	breq	.+8      	; 0xd1e <__floatsisf+0x54>
     d16:	9e e8       	ldi	r25, 0x8E	; 142
     d18:	87 2f       	mov	r24, r23
     d1a:	76 2f       	mov	r23, r22
     d1c:	05 c0       	rjmp	.+10     	; 0xd28 <__floatsisf+0x5e>
     d1e:	66 23       	and	r22, r22
     d20:	71 f0       	breq	.+28     	; 0xd3e <__floatsisf+0x74>
     d22:	96 e8       	ldi	r25, 0x86	; 134
     d24:	86 2f       	mov	r24, r22
     d26:	70 e0       	ldi	r23, 0x00	; 0
     d28:	60 e0       	ldi	r22, 0x00	; 0
     d2a:	2a f0       	brmi	.+10     	; 0xd36 <__floatsisf+0x6c>
     d2c:	9a 95       	dec	r25
     d2e:	66 0f       	add	r22, r22
     d30:	77 1f       	adc	r23, r23
     d32:	88 1f       	adc	r24, r24
     d34:	da f7       	brpl	.-10     	; 0xd2c <__floatsisf+0x62>
     d36:	88 0f       	add	r24, r24
     d38:	96 95       	lsr	r25
     d3a:	87 95       	ror	r24
     d3c:	97 f9       	bld	r25, 7
     d3e:	08 95       	ret

00000d40 <__fp_cmp>:
     d40:	99 0f       	add	r25, r25
     d42:	00 08       	sbc	r0, r0
     d44:	55 0f       	add	r21, r21
     d46:	aa 0b       	sbc	r26, r26
     d48:	e0 e8       	ldi	r30, 0x80	; 128
     d4a:	fe ef       	ldi	r31, 0xFE	; 254
     d4c:	16 16       	cp	r1, r22
     d4e:	17 06       	cpc	r1, r23
     d50:	e8 07       	cpc	r30, r24
     d52:	f9 07       	cpc	r31, r25
     d54:	c0 f0       	brcs	.+48     	; 0xd86 <__fp_cmp+0x46>
     d56:	12 16       	cp	r1, r18
     d58:	13 06       	cpc	r1, r19
     d5a:	e4 07       	cpc	r30, r20
     d5c:	f5 07       	cpc	r31, r21
     d5e:	98 f0       	brcs	.+38     	; 0xd86 <__fp_cmp+0x46>
     d60:	62 1b       	sub	r22, r18
     d62:	73 0b       	sbc	r23, r19
     d64:	84 0b       	sbc	r24, r20
     d66:	95 0b       	sbc	r25, r21
     d68:	39 f4       	brne	.+14     	; 0xd78 <__fp_cmp+0x38>
     d6a:	0a 26       	eor	r0, r26
     d6c:	61 f0       	breq	.+24     	; 0xd86 <__fp_cmp+0x46>
     d6e:	23 2b       	or	r18, r19
     d70:	24 2b       	or	r18, r20
     d72:	25 2b       	or	r18, r21
     d74:	21 f4       	brne	.+8      	; 0xd7e <__fp_cmp+0x3e>
     d76:	08 95       	ret
     d78:	0a 26       	eor	r0, r26
     d7a:	09 f4       	brne	.+2      	; 0xd7e <__fp_cmp+0x3e>
     d7c:	a1 40       	sbci	r26, 0x01	; 1
     d7e:	a6 95       	lsr	r26
     d80:	8f ef       	ldi	r24, 0xFF	; 255
     d82:	81 1d       	adc	r24, r1
     d84:	81 1d       	adc	r24, r1
     d86:	08 95       	ret

00000d88 <__fp_inf>:
     d88:	97 f9       	bld	r25, 7
     d8a:	9f 67       	ori	r25, 0x7F	; 127
     d8c:	80 e8       	ldi	r24, 0x80	; 128
     d8e:	70 e0       	ldi	r23, 0x00	; 0
     d90:	60 e0       	ldi	r22, 0x00	; 0
     d92:	08 95       	ret

00000d94 <__fp_nan>:
     d94:	9f ef       	ldi	r25, 0xFF	; 255
     d96:	80 ec       	ldi	r24, 0xC0	; 192
     d98:	08 95       	ret

00000d9a <__fp_pscA>:
     d9a:	00 24       	eor	r0, r0
     d9c:	0a 94       	dec	r0
     d9e:	16 16       	cp	r1, r22
     da0:	17 06       	cpc	r1, r23
     da2:	18 06       	cpc	r1, r24
     da4:	09 06       	cpc	r0, r25
     da6:	08 95       	ret

00000da8 <__fp_pscB>:
     da8:	00 24       	eor	r0, r0
     daa:	0a 94       	dec	r0
     dac:	12 16       	cp	r1, r18
     dae:	13 06       	cpc	r1, r19
     db0:	14 06       	cpc	r1, r20
     db2:	05 06       	cpc	r0, r21
     db4:	08 95       	ret

00000db6 <__fp_round>:
     db6:	09 2e       	mov	r0, r25
     db8:	03 94       	inc	r0
     dba:	00 0c       	add	r0, r0
     dbc:	11 f4       	brne	.+4      	; 0xdc2 <__fp_round+0xc>
     dbe:	88 23       	and	r24, r24
     dc0:	52 f0       	brmi	.+20     	; 0xdd6 <__fp_round+0x20>
     dc2:	bb 0f       	add	r27, r27
     dc4:	40 f4       	brcc	.+16     	; 0xdd6 <__fp_round+0x20>
     dc6:	bf 2b       	or	r27, r31
     dc8:	11 f4       	brne	.+4      	; 0xdce <__fp_round+0x18>
     dca:	60 ff       	sbrs	r22, 0
     dcc:	04 c0       	rjmp	.+8      	; 0xdd6 <__fp_round+0x20>
     dce:	6f 5f       	subi	r22, 0xFF	; 255
     dd0:	7f 4f       	sbci	r23, 0xFF	; 255
     dd2:	8f 4f       	sbci	r24, 0xFF	; 255
     dd4:	9f 4f       	sbci	r25, 0xFF	; 255
     dd6:	08 95       	ret

00000dd8 <__fp_split3>:
     dd8:	57 fd       	sbrc	r21, 7
     dda:	90 58       	subi	r25, 0x80	; 128
     ddc:	44 0f       	add	r20, r20
     dde:	55 1f       	adc	r21, r21
     de0:	59 f0       	breq	.+22     	; 0xdf8 <__fp_splitA+0x10>
     de2:	5f 3f       	cpi	r21, 0xFF	; 255
     de4:	71 f0       	breq	.+28     	; 0xe02 <__fp_splitA+0x1a>
     de6:	47 95       	ror	r20

00000de8 <__fp_splitA>:
     de8:	88 0f       	add	r24, r24
     dea:	97 fb       	bst	r25, 7
     dec:	99 1f       	adc	r25, r25
     dee:	61 f0       	breq	.+24     	; 0xe08 <__fp_splitA+0x20>
     df0:	9f 3f       	cpi	r25, 0xFF	; 255
     df2:	79 f0       	breq	.+30     	; 0xe12 <__fp_splitA+0x2a>
     df4:	87 95       	ror	r24
     df6:	08 95       	ret
     df8:	12 16       	cp	r1, r18
     dfa:	13 06       	cpc	r1, r19
     dfc:	14 06       	cpc	r1, r20
     dfe:	55 1f       	adc	r21, r21
     e00:	f2 cf       	rjmp	.-28     	; 0xde6 <__fp_split3+0xe>
     e02:	46 95       	lsr	r20
     e04:	f1 df       	rcall	.-30     	; 0xde8 <__fp_splitA>
     e06:	08 c0       	rjmp	.+16     	; 0xe18 <__fp_splitA+0x30>
     e08:	16 16       	cp	r1, r22
     e0a:	17 06       	cpc	r1, r23
     e0c:	18 06       	cpc	r1, r24
     e0e:	99 1f       	adc	r25, r25
     e10:	f1 cf       	rjmp	.-30     	; 0xdf4 <__fp_splitA+0xc>
     e12:	86 95       	lsr	r24
     e14:	71 05       	cpc	r23, r1
     e16:	61 05       	cpc	r22, r1
     e18:	08 94       	sec
     e1a:	08 95       	ret

00000e1c <__fp_zero>:
     e1c:	e8 94       	clt

00000e1e <__fp_szero>:
     e1e:	bb 27       	eor	r27, r27
     e20:	66 27       	eor	r22, r22
     e22:	77 27       	eor	r23, r23
     e24:	cb 01       	movw	r24, r22
     e26:	97 f9       	bld	r25, 7
     e28:	08 95       	ret

00000e2a <__mulsf3>:
     e2a:	0e 94 28 07 	call	0xe50	; 0xe50 <__mulsf3x>
     e2e:	0c 94 db 06 	jmp	0xdb6	; 0xdb6 <__fp_round>
     e32:	0e 94 cd 06 	call	0xd9a	; 0xd9a <__fp_pscA>
     e36:	38 f0       	brcs	.+14     	; 0xe46 <__mulsf3+0x1c>
     e38:	0e 94 d4 06 	call	0xda8	; 0xda8 <__fp_pscB>
     e3c:	20 f0       	brcs	.+8      	; 0xe46 <__mulsf3+0x1c>
     e3e:	95 23       	and	r25, r21
     e40:	11 f0       	breq	.+4      	; 0xe46 <__mulsf3+0x1c>
     e42:	0c 94 c4 06 	jmp	0xd88	; 0xd88 <__fp_inf>
     e46:	0c 94 ca 06 	jmp	0xd94	; 0xd94 <__fp_nan>
     e4a:	11 24       	eor	r1, r1
     e4c:	0c 94 0f 07 	jmp	0xe1e	; 0xe1e <__fp_szero>

00000e50 <__mulsf3x>:
     e50:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <__fp_split3>
     e54:	70 f3       	brcs	.-36     	; 0xe32 <__mulsf3+0x8>

00000e56 <__mulsf3_pse>:
     e56:	95 9f       	mul	r25, r21
     e58:	c1 f3       	breq	.-16     	; 0xe4a <__mulsf3+0x20>
     e5a:	95 0f       	add	r25, r21
     e5c:	50 e0       	ldi	r21, 0x00	; 0
     e5e:	55 1f       	adc	r21, r21
     e60:	62 9f       	mul	r22, r18
     e62:	f0 01       	movw	r30, r0
     e64:	72 9f       	mul	r23, r18
     e66:	bb 27       	eor	r27, r27
     e68:	f0 0d       	add	r31, r0
     e6a:	b1 1d       	adc	r27, r1
     e6c:	63 9f       	mul	r22, r19
     e6e:	aa 27       	eor	r26, r26
     e70:	f0 0d       	add	r31, r0
     e72:	b1 1d       	adc	r27, r1
     e74:	aa 1f       	adc	r26, r26
     e76:	64 9f       	mul	r22, r20
     e78:	66 27       	eor	r22, r22
     e7a:	b0 0d       	add	r27, r0
     e7c:	a1 1d       	adc	r26, r1
     e7e:	66 1f       	adc	r22, r22
     e80:	82 9f       	mul	r24, r18
     e82:	22 27       	eor	r18, r18
     e84:	b0 0d       	add	r27, r0
     e86:	a1 1d       	adc	r26, r1
     e88:	62 1f       	adc	r22, r18
     e8a:	73 9f       	mul	r23, r19
     e8c:	b0 0d       	add	r27, r0
     e8e:	a1 1d       	adc	r26, r1
     e90:	62 1f       	adc	r22, r18
     e92:	83 9f       	mul	r24, r19
     e94:	a0 0d       	add	r26, r0
     e96:	61 1d       	adc	r22, r1
     e98:	22 1f       	adc	r18, r18
     e9a:	74 9f       	mul	r23, r20
     e9c:	33 27       	eor	r19, r19
     e9e:	a0 0d       	add	r26, r0
     ea0:	61 1d       	adc	r22, r1
     ea2:	23 1f       	adc	r18, r19
     ea4:	84 9f       	mul	r24, r20
     ea6:	60 0d       	add	r22, r0
     ea8:	21 1d       	adc	r18, r1
     eaa:	82 2f       	mov	r24, r18
     eac:	76 2f       	mov	r23, r22
     eae:	6a 2f       	mov	r22, r26
     eb0:	11 24       	eor	r1, r1
     eb2:	9f 57       	subi	r25, 0x7F	; 127
     eb4:	50 40       	sbci	r21, 0x00	; 0
     eb6:	9a f0       	brmi	.+38     	; 0xede <__mulsf3_pse+0x88>
     eb8:	f1 f0       	breq	.+60     	; 0xef6 <__mulsf3_pse+0xa0>
     eba:	88 23       	and	r24, r24
     ebc:	4a f0       	brmi	.+18     	; 0xed0 <__mulsf3_pse+0x7a>
     ebe:	ee 0f       	add	r30, r30
     ec0:	ff 1f       	adc	r31, r31
     ec2:	bb 1f       	adc	r27, r27
     ec4:	66 1f       	adc	r22, r22
     ec6:	77 1f       	adc	r23, r23
     ec8:	88 1f       	adc	r24, r24
     eca:	91 50       	subi	r25, 0x01	; 1
     ecc:	50 40       	sbci	r21, 0x00	; 0
     ece:	a9 f7       	brne	.-22     	; 0xeba <__mulsf3_pse+0x64>
     ed0:	9e 3f       	cpi	r25, 0xFE	; 254
     ed2:	51 05       	cpc	r21, r1
     ed4:	80 f0       	brcs	.+32     	; 0xef6 <__mulsf3_pse+0xa0>
     ed6:	0c 94 c4 06 	jmp	0xd88	; 0xd88 <__fp_inf>
     eda:	0c 94 0f 07 	jmp	0xe1e	; 0xe1e <__fp_szero>
     ede:	5f 3f       	cpi	r21, 0xFF	; 255
     ee0:	e4 f3       	brlt	.-8      	; 0xeda <__mulsf3_pse+0x84>
     ee2:	98 3e       	cpi	r25, 0xE8	; 232
     ee4:	d4 f3       	brlt	.-12     	; 0xeda <__mulsf3_pse+0x84>
     ee6:	86 95       	lsr	r24
     ee8:	77 95       	ror	r23
     eea:	67 95       	ror	r22
     eec:	b7 95       	ror	r27
     eee:	f7 95       	ror	r31
     ef0:	e7 95       	ror	r30
     ef2:	9f 5f       	subi	r25, 0xFF	; 255
     ef4:	c1 f7       	brne	.-16     	; 0xee6 <__mulsf3_pse+0x90>
     ef6:	fe 2b       	or	r31, r30
     ef8:	88 0f       	add	r24, r24
     efa:	91 1d       	adc	r25, r1
     efc:	96 95       	lsr	r25
     efe:	87 95       	ror	r24
     f00:	97 f9       	bld	r25, 7
     f02:	08 95       	ret

00000f04 <vfprintf>:
     f04:	a0 e1       	ldi	r26, 0x10	; 16
     f06:	b0 e0       	ldi	r27, 0x00	; 0
     f08:	e8 e8       	ldi	r30, 0x88	; 136
     f0a:	f7 e0       	ldi	r31, 0x07	; 7
     f0c:	0c 94 35 0b 	jmp	0x166a	; 0x166a <__prologue_saves__>
     f10:	7c 01       	movw	r14, r24
     f12:	1b 01       	movw	r2, r22
     f14:	6a 01       	movw	r12, r20
     f16:	fc 01       	movw	r30, r24
     f18:	17 82       	std	Z+7, r1	; 0x07
     f1a:	16 82       	std	Z+6, r1	; 0x06
     f1c:	83 81       	ldd	r24, Z+3	; 0x03
     f1e:	81 ff       	sbrs	r24, 1
     f20:	44 c3       	rjmp	.+1672   	; 0x15aa <vfprintf+0x6a6>
     f22:	9e 01       	movw	r18, r28
     f24:	2f 5f       	subi	r18, 0xFF	; 255
     f26:	3f 4f       	sbci	r19, 0xFF	; 255
     f28:	39 01       	movw	r6, r18
     f2a:	f7 01       	movw	r30, r14
     f2c:	93 81       	ldd	r25, Z+3	; 0x03
     f2e:	f1 01       	movw	r30, r2
     f30:	93 fd       	sbrc	r25, 3
     f32:	85 91       	lpm	r24, Z+
     f34:	93 ff       	sbrs	r25, 3
     f36:	81 91       	ld	r24, Z+
     f38:	1f 01       	movw	r2, r30
     f3a:	88 23       	and	r24, r24
     f3c:	09 f4       	brne	.+2      	; 0xf40 <vfprintf+0x3c>
     f3e:	31 c3       	rjmp	.+1634   	; 0x15a2 <vfprintf+0x69e>
     f40:	85 32       	cpi	r24, 0x25	; 37
     f42:	39 f4       	brne	.+14     	; 0xf52 <vfprintf+0x4e>
     f44:	93 fd       	sbrc	r25, 3
     f46:	85 91       	lpm	r24, Z+
     f48:	93 ff       	sbrs	r25, 3
     f4a:	81 91       	ld	r24, Z+
     f4c:	1f 01       	movw	r2, r30
     f4e:	85 32       	cpi	r24, 0x25	; 37
     f50:	39 f4       	brne	.+14     	; 0xf60 <vfprintf+0x5c>
     f52:	b7 01       	movw	r22, r14
     f54:	90 e0       	ldi	r25, 0x00	; 0
     f56:	0e 94 c9 0c 	call	0x1992	; 0x1992 <fputc>
     f5a:	56 01       	movw	r10, r12
     f5c:	65 01       	movw	r12, r10
     f5e:	e5 cf       	rjmp	.-54     	; 0xf2a <vfprintf+0x26>
     f60:	10 e0       	ldi	r17, 0x00	; 0
     f62:	51 2c       	mov	r5, r1
     f64:	91 2c       	mov	r9, r1
     f66:	ff e1       	ldi	r31, 0x1F	; 31
     f68:	f9 15       	cp	r31, r9
     f6a:	d8 f0       	brcs	.+54     	; 0xfa2 <vfprintf+0x9e>
     f6c:	8b 32       	cpi	r24, 0x2B	; 43
     f6e:	79 f0       	breq	.+30     	; 0xf8e <vfprintf+0x8a>
     f70:	38 f4       	brcc	.+14     	; 0xf80 <vfprintf+0x7c>
     f72:	80 32       	cpi	r24, 0x20	; 32
     f74:	79 f0       	breq	.+30     	; 0xf94 <vfprintf+0x90>
     f76:	83 32       	cpi	r24, 0x23	; 35
     f78:	a1 f4       	brne	.+40     	; 0xfa2 <vfprintf+0x9e>
     f7a:	f9 2d       	mov	r31, r9
     f7c:	f0 61       	ori	r31, 0x10	; 16
     f7e:	2e c0       	rjmp	.+92     	; 0xfdc <vfprintf+0xd8>
     f80:	8d 32       	cpi	r24, 0x2D	; 45
     f82:	61 f0       	breq	.+24     	; 0xf9c <vfprintf+0x98>
     f84:	80 33       	cpi	r24, 0x30	; 48
     f86:	69 f4       	brne	.+26     	; 0xfa2 <vfprintf+0x9e>
     f88:	29 2d       	mov	r18, r9
     f8a:	21 60       	ori	r18, 0x01	; 1
     f8c:	2d c0       	rjmp	.+90     	; 0xfe8 <vfprintf+0xe4>
     f8e:	39 2d       	mov	r19, r9
     f90:	32 60       	ori	r19, 0x02	; 2
     f92:	93 2e       	mov	r9, r19
     f94:	89 2d       	mov	r24, r9
     f96:	84 60       	ori	r24, 0x04	; 4
     f98:	98 2e       	mov	r9, r24
     f9a:	2a c0       	rjmp	.+84     	; 0xff0 <vfprintf+0xec>
     f9c:	e9 2d       	mov	r30, r9
     f9e:	e8 60       	ori	r30, 0x08	; 8
     fa0:	15 c0       	rjmp	.+42     	; 0xfcc <vfprintf+0xc8>
     fa2:	97 fc       	sbrc	r9, 7
     fa4:	2d c0       	rjmp	.+90     	; 0x1000 <vfprintf+0xfc>
     fa6:	20 ed       	ldi	r18, 0xD0	; 208
     fa8:	28 0f       	add	r18, r24
     faa:	2a 30       	cpi	r18, 0x0A	; 10
     fac:	88 f4       	brcc	.+34     	; 0xfd0 <vfprintf+0xcc>
     fae:	96 fe       	sbrs	r9, 6
     fb0:	06 c0       	rjmp	.+12     	; 0xfbe <vfprintf+0xba>
     fb2:	3a e0       	ldi	r19, 0x0A	; 10
     fb4:	13 9f       	mul	r17, r19
     fb6:	20 0d       	add	r18, r0
     fb8:	11 24       	eor	r1, r1
     fba:	12 2f       	mov	r17, r18
     fbc:	19 c0       	rjmp	.+50     	; 0xff0 <vfprintf+0xec>
     fbe:	8a e0       	ldi	r24, 0x0A	; 10
     fc0:	58 9e       	mul	r5, r24
     fc2:	20 0d       	add	r18, r0
     fc4:	11 24       	eor	r1, r1
     fc6:	52 2e       	mov	r5, r18
     fc8:	e9 2d       	mov	r30, r9
     fca:	e0 62       	ori	r30, 0x20	; 32
     fcc:	9e 2e       	mov	r9, r30
     fce:	10 c0       	rjmp	.+32     	; 0xff0 <vfprintf+0xec>
     fd0:	8e 32       	cpi	r24, 0x2E	; 46
     fd2:	31 f4       	brne	.+12     	; 0xfe0 <vfprintf+0xdc>
     fd4:	96 fc       	sbrc	r9, 6
     fd6:	e5 c2       	rjmp	.+1482   	; 0x15a2 <vfprintf+0x69e>
     fd8:	f9 2d       	mov	r31, r9
     fda:	f0 64       	ori	r31, 0x40	; 64
     fdc:	9f 2e       	mov	r9, r31
     fde:	08 c0       	rjmp	.+16     	; 0xff0 <vfprintf+0xec>
     fe0:	8c 36       	cpi	r24, 0x6C	; 108
     fe2:	21 f4       	brne	.+8      	; 0xfec <vfprintf+0xe8>
     fe4:	29 2d       	mov	r18, r9
     fe6:	20 68       	ori	r18, 0x80	; 128
     fe8:	92 2e       	mov	r9, r18
     fea:	02 c0       	rjmp	.+4      	; 0xff0 <vfprintf+0xec>
     fec:	88 36       	cpi	r24, 0x68	; 104
     fee:	41 f4       	brne	.+16     	; 0x1000 <vfprintf+0xfc>
     ff0:	f1 01       	movw	r30, r2
     ff2:	93 fd       	sbrc	r25, 3
     ff4:	85 91       	lpm	r24, Z+
     ff6:	93 ff       	sbrs	r25, 3
     ff8:	81 91       	ld	r24, Z+
     ffa:	1f 01       	movw	r2, r30
     ffc:	81 11       	cpse	r24, r1
     ffe:	b3 cf       	rjmp	.-154    	; 0xf66 <vfprintf+0x62>
    1000:	9b eb       	ldi	r25, 0xBB	; 187
    1002:	98 0f       	add	r25, r24
    1004:	93 30       	cpi	r25, 0x03	; 3
    1006:	20 f4       	brcc	.+8      	; 0x1010 <vfprintf+0x10c>
    1008:	99 2d       	mov	r25, r9
    100a:	90 61       	ori	r25, 0x10	; 16
    100c:	80 5e       	subi	r24, 0xE0	; 224
    100e:	07 c0       	rjmp	.+14     	; 0x101e <vfprintf+0x11a>
    1010:	9b e9       	ldi	r25, 0x9B	; 155
    1012:	98 0f       	add	r25, r24
    1014:	93 30       	cpi	r25, 0x03	; 3
    1016:	08 f0       	brcs	.+2      	; 0x101a <vfprintf+0x116>
    1018:	66 c1       	rjmp	.+716    	; 0x12e6 <vfprintf+0x3e2>
    101a:	99 2d       	mov	r25, r9
    101c:	9f 7e       	andi	r25, 0xEF	; 239
    101e:	96 ff       	sbrs	r25, 6
    1020:	16 e0       	ldi	r17, 0x06	; 6
    1022:	9f 73       	andi	r25, 0x3F	; 63
    1024:	99 2e       	mov	r9, r25
    1026:	85 36       	cpi	r24, 0x65	; 101
    1028:	19 f4       	brne	.+6      	; 0x1030 <vfprintf+0x12c>
    102a:	90 64       	ori	r25, 0x40	; 64
    102c:	99 2e       	mov	r9, r25
    102e:	08 c0       	rjmp	.+16     	; 0x1040 <vfprintf+0x13c>
    1030:	86 36       	cpi	r24, 0x66	; 102
    1032:	21 f4       	brne	.+8      	; 0x103c <vfprintf+0x138>
    1034:	39 2f       	mov	r19, r25
    1036:	30 68       	ori	r19, 0x80	; 128
    1038:	93 2e       	mov	r9, r19
    103a:	02 c0       	rjmp	.+4      	; 0x1040 <vfprintf+0x13c>
    103c:	11 11       	cpse	r17, r1
    103e:	11 50       	subi	r17, 0x01	; 1
    1040:	97 fe       	sbrs	r9, 7
    1042:	07 c0       	rjmp	.+14     	; 0x1052 <vfprintf+0x14e>
    1044:	1c 33       	cpi	r17, 0x3C	; 60
    1046:	50 f4       	brcc	.+20     	; 0x105c <vfprintf+0x158>
    1048:	44 24       	eor	r4, r4
    104a:	43 94       	inc	r4
    104c:	41 0e       	add	r4, r17
    104e:	27 e0       	ldi	r18, 0x07	; 7
    1050:	0b c0       	rjmp	.+22     	; 0x1068 <vfprintf+0x164>
    1052:	18 30       	cpi	r17, 0x08	; 8
    1054:	38 f0       	brcs	.+14     	; 0x1064 <vfprintf+0x160>
    1056:	27 e0       	ldi	r18, 0x07	; 7
    1058:	17 e0       	ldi	r17, 0x07	; 7
    105a:	05 c0       	rjmp	.+10     	; 0x1066 <vfprintf+0x162>
    105c:	27 e0       	ldi	r18, 0x07	; 7
    105e:	9c e3       	ldi	r25, 0x3C	; 60
    1060:	49 2e       	mov	r4, r25
    1062:	02 c0       	rjmp	.+4      	; 0x1068 <vfprintf+0x164>
    1064:	21 2f       	mov	r18, r17
    1066:	41 2c       	mov	r4, r1
    1068:	56 01       	movw	r10, r12
    106a:	84 e0       	ldi	r24, 0x04	; 4
    106c:	a8 0e       	add	r10, r24
    106e:	b1 1c       	adc	r11, r1
    1070:	f6 01       	movw	r30, r12
    1072:	60 81       	ld	r22, Z
    1074:	71 81       	ldd	r23, Z+1	; 0x01
    1076:	82 81       	ldd	r24, Z+2	; 0x02
    1078:	93 81       	ldd	r25, Z+3	; 0x03
    107a:	04 2d       	mov	r16, r4
    107c:	a3 01       	movw	r20, r6
    107e:	0e 94 80 0b 	call	0x1700	; 0x1700 <__ftoa_engine>
    1082:	6c 01       	movw	r12, r24
    1084:	f9 81       	ldd	r31, Y+1	; 0x01
    1086:	fc 87       	std	Y+12, r31	; 0x0c
    1088:	f0 ff       	sbrs	r31, 0
    108a:	02 c0       	rjmp	.+4      	; 0x1090 <vfprintf+0x18c>
    108c:	f3 ff       	sbrs	r31, 3
    108e:	06 c0       	rjmp	.+12     	; 0x109c <vfprintf+0x198>
    1090:	91 fc       	sbrc	r9, 1
    1092:	06 c0       	rjmp	.+12     	; 0x10a0 <vfprintf+0x19c>
    1094:	92 fe       	sbrs	r9, 2
    1096:	06 c0       	rjmp	.+12     	; 0x10a4 <vfprintf+0x1a0>
    1098:	00 e2       	ldi	r16, 0x20	; 32
    109a:	05 c0       	rjmp	.+10     	; 0x10a6 <vfprintf+0x1a2>
    109c:	0d e2       	ldi	r16, 0x2D	; 45
    109e:	03 c0       	rjmp	.+6      	; 0x10a6 <vfprintf+0x1a2>
    10a0:	0b e2       	ldi	r16, 0x2B	; 43
    10a2:	01 c0       	rjmp	.+2      	; 0x10a6 <vfprintf+0x1a2>
    10a4:	00 e0       	ldi	r16, 0x00	; 0
    10a6:	8c 85       	ldd	r24, Y+12	; 0x0c
    10a8:	8c 70       	andi	r24, 0x0C	; 12
    10aa:	19 f0       	breq	.+6      	; 0x10b2 <vfprintf+0x1ae>
    10ac:	01 11       	cpse	r16, r1
    10ae:	5a c2       	rjmp	.+1204   	; 0x1564 <vfprintf+0x660>
    10b0:	9b c2       	rjmp	.+1334   	; 0x15e8 <vfprintf+0x6e4>
    10b2:	97 fe       	sbrs	r9, 7
    10b4:	10 c0       	rjmp	.+32     	; 0x10d6 <vfprintf+0x1d2>
    10b6:	4c 0c       	add	r4, r12
    10b8:	fc 85       	ldd	r31, Y+12	; 0x0c
    10ba:	f4 ff       	sbrs	r31, 4
    10bc:	04 c0       	rjmp	.+8      	; 0x10c6 <vfprintf+0x1c2>
    10be:	8a 81       	ldd	r24, Y+2	; 0x02
    10c0:	81 33       	cpi	r24, 0x31	; 49
    10c2:	09 f4       	brne	.+2      	; 0x10c6 <vfprintf+0x1c2>
    10c4:	4a 94       	dec	r4
    10c6:	14 14       	cp	r1, r4
    10c8:	74 f5       	brge	.+92     	; 0x1126 <vfprintf+0x222>
    10ca:	28 e0       	ldi	r18, 0x08	; 8
    10cc:	24 15       	cp	r18, r4
    10ce:	78 f5       	brcc	.+94     	; 0x112e <vfprintf+0x22a>
    10d0:	88 e0       	ldi	r24, 0x08	; 8
    10d2:	48 2e       	mov	r4, r24
    10d4:	2c c0       	rjmp	.+88     	; 0x112e <vfprintf+0x22a>
    10d6:	96 fc       	sbrc	r9, 6
    10d8:	2a c0       	rjmp	.+84     	; 0x112e <vfprintf+0x22a>
    10da:	81 2f       	mov	r24, r17
    10dc:	90 e0       	ldi	r25, 0x00	; 0
    10de:	8c 15       	cp	r24, r12
    10e0:	9d 05       	cpc	r25, r13
    10e2:	9c f0       	brlt	.+38     	; 0x110a <vfprintf+0x206>
    10e4:	3c ef       	ldi	r19, 0xFC	; 252
    10e6:	c3 16       	cp	r12, r19
    10e8:	3f ef       	ldi	r19, 0xFF	; 255
    10ea:	d3 06       	cpc	r13, r19
    10ec:	74 f0       	brlt	.+28     	; 0x110a <vfprintf+0x206>
    10ee:	89 2d       	mov	r24, r9
    10f0:	80 68       	ori	r24, 0x80	; 128
    10f2:	98 2e       	mov	r9, r24
    10f4:	0a c0       	rjmp	.+20     	; 0x110a <vfprintf+0x206>
    10f6:	e2 e0       	ldi	r30, 0x02	; 2
    10f8:	f0 e0       	ldi	r31, 0x00	; 0
    10fa:	ec 0f       	add	r30, r28
    10fc:	fd 1f       	adc	r31, r29
    10fe:	e1 0f       	add	r30, r17
    1100:	f1 1d       	adc	r31, r1
    1102:	80 81       	ld	r24, Z
    1104:	80 33       	cpi	r24, 0x30	; 48
    1106:	19 f4       	brne	.+6      	; 0x110e <vfprintf+0x20a>
    1108:	11 50       	subi	r17, 0x01	; 1
    110a:	11 11       	cpse	r17, r1
    110c:	f4 cf       	rjmp	.-24     	; 0x10f6 <vfprintf+0x1f2>
    110e:	97 fe       	sbrs	r9, 7
    1110:	0e c0       	rjmp	.+28     	; 0x112e <vfprintf+0x22a>
    1112:	44 24       	eor	r4, r4
    1114:	43 94       	inc	r4
    1116:	41 0e       	add	r4, r17
    1118:	81 2f       	mov	r24, r17
    111a:	90 e0       	ldi	r25, 0x00	; 0
    111c:	c8 16       	cp	r12, r24
    111e:	d9 06       	cpc	r13, r25
    1120:	2c f4       	brge	.+10     	; 0x112c <vfprintf+0x228>
    1122:	1c 19       	sub	r17, r12
    1124:	04 c0       	rjmp	.+8      	; 0x112e <vfprintf+0x22a>
    1126:	44 24       	eor	r4, r4
    1128:	43 94       	inc	r4
    112a:	01 c0       	rjmp	.+2      	; 0x112e <vfprintf+0x22a>
    112c:	10 e0       	ldi	r17, 0x00	; 0
    112e:	97 fe       	sbrs	r9, 7
    1130:	06 c0       	rjmp	.+12     	; 0x113e <vfprintf+0x23a>
    1132:	1c 14       	cp	r1, r12
    1134:	1d 04       	cpc	r1, r13
    1136:	34 f4       	brge	.+12     	; 0x1144 <vfprintf+0x240>
    1138:	c6 01       	movw	r24, r12
    113a:	01 96       	adiw	r24, 0x01	; 1
    113c:	05 c0       	rjmp	.+10     	; 0x1148 <vfprintf+0x244>
    113e:	85 e0       	ldi	r24, 0x05	; 5
    1140:	90 e0       	ldi	r25, 0x00	; 0
    1142:	02 c0       	rjmp	.+4      	; 0x1148 <vfprintf+0x244>
    1144:	81 e0       	ldi	r24, 0x01	; 1
    1146:	90 e0       	ldi	r25, 0x00	; 0
    1148:	01 11       	cpse	r16, r1
    114a:	01 96       	adiw	r24, 0x01	; 1
    114c:	11 23       	and	r17, r17
    114e:	31 f0       	breq	.+12     	; 0x115c <vfprintf+0x258>
    1150:	21 2f       	mov	r18, r17
    1152:	30 e0       	ldi	r19, 0x00	; 0
    1154:	2f 5f       	subi	r18, 0xFF	; 255
    1156:	3f 4f       	sbci	r19, 0xFF	; 255
    1158:	82 0f       	add	r24, r18
    115a:	93 1f       	adc	r25, r19
    115c:	25 2d       	mov	r18, r5
    115e:	30 e0       	ldi	r19, 0x00	; 0
    1160:	82 17       	cp	r24, r18
    1162:	93 07       	cpc	r25, r19
    1164:	14 f4       	brge	.+4      	; 0x116a <vfprintf+0x266>
    1166:	58 1a       	sub	r5, r24
    1168:	01 c0       	rjmp	.+2      	; 0x116c <vfprintf+0x268>
    116a:	51 2c       	mov	r5, r1
    116c:	89 2d       	mov	r24, r9
    116e:	89 70       	andi	r24, 0x09	; 9
    1170:	49 f4       	brne	.+18     	; 0x1184 <vfprintf+0x280>
    1172:	55 20       	and	r5, r5
    1174:	39 f0       	breq	.+14     	; 0x1184 <vfprintf+0x280>
    1176:	b7 01       	movw	r22, r14
    1178:	80 e2       	ldi	r24, 0x20	; 32
    117a:	90 e0       	ldi	r25, 0x00	; 0
    117c:	0e 94 c9 0c 	call	0x1992	; 0x1992 <fputc>
    1180:	5a 94       	dec	r5
    1182:	f7 cf       	rjmp	.-18     	; 0x1172 <vfprintf+0x26e>
    1184:	00 23       	and	r16, r16
    1186:	29 f0       	breq	.+10     	; 0x1192 <vfprintf+0x28e>
    1188:	b7 01       	movw	r22, r14
    118a:	80 2f       	mov	r24, r16
    118c:	90 e0       	ldi	r25, 0x00	; 0
    118e:	0e 94 c9 0c 	call	0x1992	; 0x1992 <fputc>
    1192:	93 fc       	sbrc	r9, 3
    1194:	09 c0       	rjmp	.+18     	; 0x11a8 <vfprintf+0x2a4>
    1196:	55 20       	and	r5, r5
    1198:	39 f0       	breq	.+14     	; 0x11a8 <vfprintf+0x2a4>
    119a:	b7 01       	movw	r22, r14
    119c:	80 e3       	ldi	r24, 0x30	; 48
    119e:	90 e0       	ldi	r25, 0x00	; 0
    11a0:	0e 94 c9 0c 	call	0x1992	; 0x1992 <fputc>
    11a4:	5a 94       	dec	r5
    11a6:	f7 cf       	rjmp	.-18     	; 0x1196 <vfprintf+0x292>
    11a8:	97 fe       	sbrs	r9, 7
    11aa:	4c c0       	rjmp	.+152    	; 0x1244 <vfprintf+0x340>
    11ac:	46 01       	movw	r8, r12
    11ae:	d7 fe       	sbrs	r13, 7
    11b0:	02 c0       	rjmp	.+4      	; 0x11b6 <vfprintf+0x2b2>
    11b2:	81 2c       	mov	r8, r1
    11b4:	91 2c       	mov	r9, r1
    11b6:	c6 01       	movw	r24, r12
    11b8:	88 19       	sub	r24, r8
    11ba:	99 09       	sbc	r25, r9
    11bc:	f3 01       	movw	r30, r6
    11be:	e8 0f       	add	r30, r24
    11c0:	f9 1f       	adc	r31, r25
    11c2:	fe 87       	std	Y+14, r31	; 0x0e
    11c4:	ed 87       	std	Y+13, r30	; 0x0d
    11c6:	96 01       	movw	r18, r12
    11c8:	24 19       	sub	r18, r4
    11ca:	31 09       	sbc	r19, r1
    11cc:	38 8b       	std	Y+16, r19	; 0x10
    11ce:	2f 87       	std	Y+15, r18	; 0x0f
    11d0:	01 2f       	mov	r16, r17
    11d2:	10 e0       	ldi	r17, 0x00	; 0
    11d4:	11 95       	neg	r17
    11d6:	01 95       	neg	r16
    11d8:	11 09       	sbc	r17, r1
    11da:	3f ef       	ldi	r19, 0xFF	; 255
    11dc:	83 16       	cp	r8, r19
    11de:	93 06       	cpc	r9, r19
    11e0:	29 f4       	brne	.+10     	; 0x11ec <vfprintf+0x2e8>
    11e2:	b7 01       	movw	r22, r14
    11e4:	8e e2       	ldi	r24, 0x2E	; 46
    11e6:	90 e0       	ldi	r25, 0x00	; 0
    11e8:	0e 94 c9 0c 	call	0x1992	; 0x1992 <fputc>
    11ec:	c8 14       	cp	r12, r8
    11ee:	d9 04       	cpc	r13, r9
    11f0:	4c f0       	brlt	.+18     	; 0x1204 <vfprintf+0x300>
    11f2:	8f 85       	ldd	r24, Y+15	; 0x0f
    11f4:	98 89       	ldd	r25, Y+16	; 0x10
    11f6:	88 15       	cp	r24, r8
    11f8:	99 05       	cpc	r25, r9
    11fa:	24 f4       	brge	.+8      	; 0x1204 <vfprintf+0x300>
    11fc:	ed 85       	ldd	r30, Y+13	; 0x0d
    11fe:	fe 85       	ldd	r31, Y+14	; 0x0e
    1200:	81 81       	ldd	r24, Z+1	; 0x01
    1202:	01 c0       	rjmp	.+2      	; 0x1206 <vfprintf+0x302>
    1204:	80 e3       	ldi	r24, 0x30	; 48
    1206:	f1 e0       	ldi	r31, 0x01	; 1
    1208:	8f 1a       	sub	r8, r31
    120a:	91 08       	sbc	r9, r1
    120c:	2d 85       	ldd	r18, Y+13	; 0x0d
    120e:	3e 85       	ldd	r19, Y+14	; 0x0e
    1210:	2f 5f       	subi	r18, 0xFF	; 255
    1212:	3f 4f       	sbci	r19, 0xFF	; 255
    1214:	3e 87       	std	Y+14, r19	; 0x0e
    1216:	2d 87       	std	Y+13, r18	; 0x0d
    1218:	80 16       	cp	r8, r16
    121a:	91 06       	cpc	r9, r17
    121c:	2c f0       	brlt	.+10     	; 0x1228 <vfprintf+0x324>
    121e:	b7 01       	movw	r22, r14
    1220:	90 e0       	ldi	r25, 0x00	; 0
    1222:	0e 94 c9 0c 	call	0x1992	; 0x1992 <fputc>
    1226:	d9 cf       	rjmp	.-78     	; 0x11da <vfprintf+0x2d6>
    1228:	c8 14       	cp	r12, r8
    122a:	d9 04       	cpc	r13, r9
    122c:	41 f4       	brne	.+16     	; 0x123e <vfprintf+0x33a>
    122e:	9a 81       	ldd	r25, Y+2	; 0x02
    1230:	96 33       	cpi	r25, 0x36	; 54
    1232:	20 f4       	brcc	.+8      	; 0x123c <vfprintf+0x338>
    1234:	95 33       	cpi	r25, 0x35	; 53
    1236:	19 f4       	brne	.+6      	; 0x123e <vfprintf+0x33a>
    1238:	3c 85       	ldd	r19, Y+12	; 0x0c
    123a:	34 ff       	sbrs	r19, 4
    123c:	81 e3       	ldi	r24, 0x31	; 49
    123e:	b7 01       	movw	r22, r14
    1240:	90 e0       	ldi	r25, 0x00	; 0
    1242:	4e c0       	rjmp	.+156    	; 0x12e0 <vfprintf+0x3dc>
    1244:	8a 81       	ldd	r24, Y+2	; 0x02
    1246:	81 33       	cpi	r24, 0x31	; 49
    1248:	19 f0       	breq	.+6      	; 0x1250 <vfprintf+0x34c>
    124a:	9c 85       	ldd	r25, Y+12	; 0x0c
    124c:	9f 7e       	andi	r25, 0xEF	; 239
    124e:	9c 87       	std	Y+12, r25	; 0x0c
    1250:	b7 01       	movw	r22, r14
    1252:	90 e0       	ldi	r25, 0x00	; 0
    1254:	0e 94 c9 0c 	call	0x1992	; 0x1992 <fputc>
    1258:	11 11       	cpse	r17, r1
    125a:	05 c0       	rjmp	.+10     	; 0x1266 <vfprintf+0x362>
    125c:	94 fc       	sbrc	r9, 4
    125e:	18 c0       	rjmp	.+48     	; 0x1290 <vfprintf+0x38c>
    1260:	85 e6       	ldi	r24, 0x65	; 101
    1262:	90 e0       	ldi	r25, 0x00	; 0
    1264:	17 c0       	rjmp	.+46     	; 0x1294 <vfprintf+0x390>
    1266:	b7 01       	movw	r22, r14
    1268:	8e e2       	ldi	r24, 0x2E	; 46
    126a:	90 e0       	ldi	r25, 0x00	; 0
    126c:	0e 94 c9 0c 	call	0x1992	; 0x1992 <fputc>
    1270:	1e 5f       	subi	r17, 0xFE	; 254
    1272:	82 e0       	ldi	r24, 0x02	; 2
    1274:	01 e0       	ldi	r16, 0x01	; 1
    1276:	08 0f       	add	r16, r24
    1278:	f3 01       	movw	r30, r6
    127a:	e8 0f       	add	r30, r24
    127c:	f1 1d       	adc	r31, r1
    127e:	80 81       	ld	r24, Z
    1280:	b7 01       	movw	r22, r14
    1282:	90 e0       	ldi	r25, 0x00	; 0
    1284:	0e 94 c9 0c 	call	0x1992	; 0x1992 <fputc>
    1288:	80 2f       	mov	r24, r16
    128a:	01 13       	cpse	r16, r17
    128c:	f3 cf       	rjmp	.-26     	; 0x1274 <vfprintf+0x370>
    128e:	e6 cf       	rjmp	.-52     	; 0x125c <vfprintf+0x358>
    1290:	85 e4       	ldi	r24, 0x45	; 69
    1292:	90 e0       	ldi	r25, 0x00	; 0
    1294:	b7 01       	movw	r22, r14
    1296:	0e 94 c9 0c 	call	0x1992	; 0x1992 <fputc>
    129a:	d7 fc       	sbrc	r13, 7
    129c:	06 c0       	rjmp	.+12     	; 0x12aa <vfprintf+0x3a6>
    129e:	c1 14       	cp	r12, r1
    12a0:	d1 04       	cpc	r13, r1
    12a2:	41 f4       	brne	.+16     	; 0x12b4 <vfprintf+0x3b0>
    12a4:	ec 85       	ldd	r30, Y+12	; 0x0c
    12a6:	e4 ff       	sbrs	r30, 4
    12a8:	05 c0       	rjmp	.+10     	; 0x12b4 <vfprintf+0x3b0>
    12aa:	d1 94       	neg	r13
    12ac:	c1 94       	neg	r12
    12ae:	d1 08       	sbc	r13, r1
    12b0:	8d e2       	ldi	r24, 0x2D	; 45
    12b2:	01 c0       	rjmp	.+2      	; 0x12b6 <vfprintf+0x3b2>
    12b4:	8b e2       	ldi	r24, 0x2B	; 43
    12b6:	b7 01       	movw	r22, r14
    12b8:	90 e0       	ldi	r25, 0x00	; 0
    12ba:	0e 94 c9 0c 	call	0x1992	; 0x1992 <fputc>
    12be:	80 e3       	ldi	r24, 0x30	; 48
    12c0:	2a e0       	ldi	r18, 0x0A	; 10
    12c2:	c2 16       	cp	r12, r18
    12c4:	d1 04       	cpc	r13, r1
    12c6:	2c f0       	brlt	.+10     	; 0x12d2 <vfprintf+0x3ce>
    12c8:	8f 5f       	subi	r24, 0xFF	; 255
    12ca:	fa e0       	ldi	r31, 0x0A	; 10
    12cc:	cf 1a       	sub	r12, r31
    12ce:	d1 08       	sbc	r13, r1
    12d0:	f7 cf       	rjmp	.-18     	; 0x12c0 <vfprintf+0x3bc>
    12d2:	b7 01       	movw	r22, r14
    12d4:	90 e0       	ldi	r25, 0x00	; 0
    12d6:	0e 94 c9 0c 	call	0x1992	; 0x1992 <fputc>
    12da:	b7 01       	movw	r22, r14
    12dc:	c6 01       	movw	r24, r12
    12de:	c0 96       	adiw	r24, 0x30	; 48
    12e0:	0e 94 c9 0c 	call	0x1992	; 0x1992 <fputc>
    12e4:	54 c1       	rjmp	.+680    	; 0x158e <vfprintf+0x68a>
    12e6:	83 36       	cpi	r24, 0x63	; 99
    12e8:	31 f0       	breq	.+12     	; 0x12f6 <vfprintf+0x3f2>
    12ea:	83 37       	cpi	r24, 0x73	; 115
    12ec:	79 f0       	breq	.+30     	; 0x130c <vfprintf+0x408>
    12ee:	83 35       	cpi	r24, 0x53	; 83
    12f0:	09 f0       	breq	.+2      	; 0x12f4 <vfprintf+0x3f0>
    12f2:	56 c0       	rjmp	.+172    	; 0x13a0 <vfprintf+0x49c>
    12f4:	20 c0       	rjmp	.+64     	; 0x1336 <vfprintf+0x432>
    12f6:	56 01       	movw	r10, r12
    12f8:	32 e0       	ldi	r19, 0x02	; 2
    12fa:	a3 0e       	add	r10, r19
    12fc:	b1 1c       	adc	r11, r1
    12fe:	f6 01       	movw	r30, r12
    1300:	80 81       	ld	r24, Z
    1302:	89 83       	std	Y+1, r24	; 0x01
    1304:	01 e0       	ldi	r16, 0x01	; 1
    1306:	10 e0       	ldi	r17, 0x00	; 0
    1308:	63 01       	movw	r12, r6
    130a:	12 c0       	rjmp	.+36     	; 0x1330 <vfprintf+0x42c>
    130c:	56 01       	movw	r10, r12
    130e:	f2 e0       	ldi	r31, 0x02	; 2
    1310:	af 0e       	add	r10, r31
    1312:	b1 1c       	adc	r11, r1
    1314:	f6 01       	movw	r30, r12
    1316:	c0 80       	ld	r12, Z
    1318:	d1 80       	ldd	r13, Z+1	; 0x01
    131a:	96 fe       	sbrs	r9, 6
    131c:	03 c0       	rjmp	.+6      	; 0x1324 <vfprintf+0x420>
    131e:	61 2f       	mov	r22, r17
    1320:	70 e0       	ldi	r23, 0x00	; 0
    1322:	02 c0       	rjmp	.+4      	; 0x1328 <vfprintf+0x424>
    1324:	6f ef       	ldi	r22, 0xFF	; 255
    1326:	7f ef       	ldi	r23, 0xFF	; 255
    1328:	c6 01       	movw	r24, r12
    132a:	0e 94 a4 0c 	call	0x1948	; 0x1948 <strnlen>
    132e:	8c 01       	movw	r16, r24
    1330:	f9 2d       	mov	r31, r9
    1332:	ff 77       	andi	r31, 0x7F	; 127
    1334:	14 c0       	rjmp	.+40     	; 0x135e <vfprintf+0x45a>
    1336:	56 01       	movw	r10, r12
    1338:	22 e0       	ldi	r18, 0x02	; 2
    133a:	a2 0e       	add	r10, r18
    133c:	b1 1c       	adc	r11, r1
    133e:	f6 01       	movw	r30, r12
    1340:	c0 80       	ld	r12, Z
    1342:	d1 80       	ldd	r13, Z+1	; 0x01
    1344:	96 fe       	sbrs	r9, 6
    1346:	03 c0       	rjmp	.+6      	; 0x134e <vfprintf+0x44a>
    1348:	61 2f       	mov	r22, r17
    134a:	70 e0       	ldi	r23, 0x00	; 0
    134c:	02 c0       	rjmp	.+4      	; 0x1352 <vfprintf+0x44e>
    134e:	6f ef       	ldi	r22, 0xFF	; 255
    1350:	7f ef       	ldi	r23, 0xFF	; 255
    1352:	c6 01       	movw	r24, r12
    1354:	0e 94 99 0c 	call	0x1932	; 0x1932 <strnlen_P>
    1358:	8c 01       	movw	r16, r24
    135a:	f9 2d       	mov	r31, r9
    135c:	f0 68       	ori	r31, 0x80	; 128
    135e:	9f 2e       	mov	r9, r31
    1360:	f3 fd       	sbrc	r31, 3
    1362:	1a c0       	rjmp	.+52     	; 0x1398 <vfprintf+0x494>
    1364:	85 2d       	mov	r24, r5
    1366:	90 e0       	ldi	r25, 0x00	; 0
    1368:	08 17       	cp	r16, r24
    136a:	19 07       	cpc	r17, r25
    136c:	a8 f4       	brcc	.+42     	; 0x1398 <vfprintf+0x494>
    136e:	b7 01       	movw	r22, r14
    1370:	80 e2       	ldi	r24, 0x20	; 32
    1372:	90 e0       	ldi	r25, 0x00	; 0
    1374:	0e 94 c9 0c 	call	0x1992	; 0x1992 <fputc>
    1378:	5a 94       	dec	r5
    137a:	f4 cf       	rjmp	.-24     	; 0x1364 <vfprintf+0x460>
    137c:	f6 01       	movw	r30, r12
    137e:	97 fc       	sbrc	r9, 7
    1380:	85 91       	lpm	r24, Z+
    1382:	97 fe       	sbrs	r9, 7
    1384:	81 91       	ld	r24, Z+
    1386:	6f 01       	movw	r12, r30
    1388:	b7 01       	movw	r22, r14
    138a:	90 e0       	ldi	r25, 0x00	; 0
    138c:	0e 94 c9 0c 	call	0x1992	; 0x1992 <fputc>
    1390:	51 10       	cpse	r5, r1
    1392:	5a 94       	dec	r5
    1394:	01 50       	subi	r16, 0x01	; 1
    1396:	11 09       	sbc	r17, r1
    1398:	01 15       	cp	r16, r1
    139a:	11 05       	cpc	r17, r1
    139c:	79 f7       	brne	.-34     	; 0x137c <vfprintf+0x478>
    139e:	f7 c0       	rjmp	.+494    	; 0x158e <vfprintf+0x68a>
    13a0:	84 36       	cpi	r24, 0x64	; 100
    13a2:	11 f0       	breq	.+4      	; 0x13a8 <vfprintf+0x4a4>
    13a4:	89 36       	cpi	r24, 0x69	; 105
    13a6:	61 f5       	brne	.+88     	; 0x1400 <vfprintf+0x4fc>
    13a8:	56 01       	movw	r10, r12
    13aa:	97 fe       	sbrs	r9, 7
    13ac:	09 c0       	rjmp	.+18     	; 0x13c0 <vfprintf+0x4bc>
    13ae:	24 e0       	ldi	r18, 0x04	; 4
    13b0:	a2 0e       	add	r10, r18
    13b2:	b1 1c       	adc	r11, r1
    13b4:	f6 01       	movw	r30, r12
    13b6:	60 81       	ld	r22, Z
    13b8:	71 81       	ldd	r23, Z+1	; 0x01
    13ba:	82 81       	ldd	r24, Z+2	; 0x02
    13bc:	93 81       	ldd	r25, Z+3	; 0x03
    13be:	0a c0       	rjmp	.+20     	; 0x13d4 <vfprintf+0x4d0>
    13c0:	f2 e0       	ldi	r31, 0x02	; 2
    13c2:	af 0e       	add	r10, r31
    13c4:	b1 1c       	adc	r11, r1
    13c6:	f6 01       	movw	r30, r12
    13c8:	60 81       	ld	r22, Z
    13ca:	71 81       	ldd	r23, Z+1	; 0x01
    13cc:	07 2e       	mov	r0, r23
    13ce:	00 0c       	add	r0, r0
    13d0:	88 0b       	sbc	r24, r24
    13d2:	99 0b       	sbc	r25, r25
    13d4:	f9 2d       	mov	r31, r9
    13d6:	ff 76       	andi	r31, 0x6F	; 111
    13d8:	9f 2e       	mov	r9, r31
    13da:	97 ff       	sbrs	r25, 7
    13dc:	09 c0       	rjmp	.+18     	; 0x13f0 <vfprintf+0x4ec>
    13de:	90 95       	com	r25
    13e0:	80 95       	com	r24
    13e2:	70 95       	com	r23
    13e4:	61 95       	neg	r22
    13e6:	7f 4f       	sbci	r23, 0xFF	; 255
    13e8:	8f 4f       	sbci	r24, 0xFF	; 255
    13ea:	9f 4f       	sbci	r25, 0xFF	; 255
    13ec:	f0 68       	ori	r31, 0x80	; 128
    13ee:	9f 2e       	mov	r9, r31
    13f0:	2a e0       	ldi	r18, 0x0A	; 10
    13f2:	30 e0       	ldi	r19, 0x00	; 0
    13f4:	a3 01       	movw	r20, r6
    13f6:	0e 94 27 0d 	call	0x1a4e	; 0x1a4e <__ultoa_invert>
    13fa:	c8 2e       	mov	r12, r24
    13fc:	c6 18       	sub	r12, r6
    13fe:	3f c0       	rjmp	.+126    	; 0x147e <vfprintf+0x57a>
    1400:	09 2d       	mov	r16, r9
    1402:	85 37       	cpi	r24, 0x75	; 117
    1404:	21 f4       	brne	.+8      	; 0x140e <vfprintf+0x50a>
    1406:	0f 7e       	andi	r16, 0xEF	; 239
    1408:	2a e0       	ldi	r18, 0x0A	; 10
    140a:	30 e0       	ldi	r19, 0x00	; 0
    140c:	1d c0       	rjmp	.+58     	; 0x1448 <vfprintf+0x544>
    140e:	09 7f       	andi	r16, 0xF9	; 249
    1410:	8f 36       	cpi	r24, 0x6F	; 111
    1412:	91 f0       	breq	.+36     	; 0x1438 <vfprintf+0x534>
    1414:	18 f4       	brcc	.+6      	; 0x141c <vfprintf+0x518>
    1416:	88 35       	cpi	r24, 0x58	; 88
    1418:	59 f0       	breq	.+22     	; 0x1430 <vfprintf+0x52c>
    141a:	c3 c0       	rjmp	.+390    	; 0x15a2 <vfprintf+0x69e>
    141c:	80 37       	cpi	r24, 0x70	; 112
    141e:	19 f0       	breq	.+6      	; 0x1426 <vfprintf+0x522>
    1420:	88 37       	cpi	r24, 0x78	; 120
    1422:	11 f0       	breq	.+4      	; 0x1428 <vfprintf+0x524>
    1424:	be c0       	rjmp	.+380    	; 0x15a2 <vfprintf+0x69e>
    1426:	00 61       	ori	r16, 0x10	; 16
    1428:	04 ff       	sbrs	r16, 4
    142a:	09 c0       	rjmp	.+18     	; 0x143e <vfprintf+0x53a>
    142c:	04 60       	ori	r16, 0x04	; 4
    142e:	07 c0       	rjmp	.+14     	; 0x143e <vfprintf+0x53a>
    1430:	94 fe       	sbrs	r9, 4
    1432:	08 c0       	rjmp	.+16     	; 0x1444 <vfprintf+0x540>
    1434:	06 60       	ori	r16, 0x06	; 6
    1436:	06 c0       	rjmp	.+12     	; 0x1444 <vfprintf+0x540>
    1438:	28 e0       	ldi	r18, 0x08	; 8
    143a:	30 e0       	ldi	r19, 0x00	; 0
    143c:	05 c0       	rjmp	.+10     	; 0x1448 <vfprintf+0x544>
    143e:	20 e1       	ldi	r18, 0x10	; 16
    1440:	30 e0       	ldi	r19, 0x00	; 0
    1442:	02 c0       	rjmp	.+4      	; 0x1448 <vfprintf+0x544>
    1444:	20 e1       	ldi	r18, 0x10	; 16
    1446:	32 e0       	ldi	r19, 0x02	; 2
    1448:	56 01       	movw	r10, r12
    144a:	07 ff       	sbrs	r16, 7
    144c:	09 c0       	rjmp	.+18     	; 0x1460 <vfprintf+0x55c>
    144e:	84 e0       	ldi	r24, 0x04	; 4
    1450:	a8 0e       	add	r10, r24
    1452:	b1 1c       	adc	r11, r1
    1454:	f6 01       	movw	r30, r12
    1456:	60 81       	ld	r22, Z
    1458:	71 81       	ldd	r23, Z+1	; 0x01
    145a:	82 81       	ldd	r24, Z+2	; 0x02
    145c:	93 81       	ldd	r25, Z+3	; 0x03
    145e:	08 c0       	rjmp	.+16     	; 0x1470 <vfprintf+0x56c>
    1460:	f2 e0       	ldi	r31, 0x02	; 2
    1462:	af 0e       	add	r10, r31
    1464:	b1 1c       	adc	r11, r1
    1466:	f6 01       	movw	r30, r12
    1468:	60 81       	ld	r22, Z
    146a:	71 81       	ldd	r23, Z+1	; 0x01
    146c:	80 e0       	ldi	r24, 0x00	; 0
    146e:	90 e0       	ldi	r25, 0x00	; 0
    1470:	a3 01       	movw	r20, r6
    1472:	0e 94 27 0d 	call	0x1a4e	; 0x1a4e <__ultoa_invert>
    1476:	c8 2e       	mov	r12, r24
    1478:	c6 18       	sub	r12, r6
    147a:	0f 77       	andi	r16, 0x7F	; 127
    147c:	90 2e       	mov	r9, r16
    147e:	96 fe       	sbrs	r9, 6
    1480:	0b c0       	rjmp	.+22     	; 0x1498 <vfprintf+0x594>
    1482:	09 2d       	mov	r16, r9
    1484:	0e 7f       	andi	r16, 0xFE	; 254
    1486:	c1 16       	cp	r12, r17
    1488:	50 f4       	brcc	.+20     	; 0x149e <vfprintf+0x59a>
    148a:	94 fe       	sbrs	r9, 4
    148c:	0a c0       	rjmp	.+20     	; 0x14a2 <vfprintf+0x59e>
    148e:	92 fc       	sbrc	r9, 2
    1490:	08 c0       	rjmp	.+16     	; 0x14a2 <vfprintf+0x59e>
    1492:	09 2d       	mov	r16, r9
    1494:	0e 7e       	andi	r16, 0xEE	; 238
    1496:	05 c0       	rjmp	.+10     	; 0x14a2 <vfprintf+0x59e>
    1498:	dc 2c       	mov	r13, r12
    149a:	09 2d       	mov	r16, r9
    149c:	03 c0       	rjmp	.+6      	; 0x14a4 <vfprintf+0x5a0>
    149e:	dc 2c       	mov	r13, r12
    14a0:	01 c0       	rjmp	.+2      	; 0x14a4 <vfprintf+0x5a0>
    14a2:	d1 2e       	mov	r13, r17
    14a4:	04 ff       	sbrs	r16, 4
    14a6:	0d c0       	rjmp	.+26     	; 0x14c2 <vfprintf+0x5be>
    14a8:	fe 01       	movw	r30, r28
    14aa:	ec 0d       	add	r30, r12
    14ac:	f1 1d       	adc	r31, r1
    14ae:	80 81       	ld	r24, Z
    14b0:	80 33       	cpi	r24, 0x30	; 48
    14b2:	11 f4       	brne	.+4      	; 0x14b8 <vfprintf+0x5b4>
    14b4:	09 7e       	andi	r16, 0xE9	; 233
    14b6:	09 c0       	rjmp	.+18     	; 0x14ca <vfprintf+0x5c6>
    14b8:	02 ff       	sbrs	r16, 2
    14ba:	06 c0       	rjmp	.+12     	; 0x14c8 <vfprintf+0x5c4>
    14bc:	d3 94       	inc	r13
    14be:	d3 94       	inc	r13
    14c0:	04 c0       	rjmp	.+8      	; 0x14ca <vfprintf+0x5c6>
    14c2:	80 2f       	mov	r24, r16
    14c4:	86 78       	andi	r24, 0x86	; 134
    14c6:	09 f0       	breq	.+2      	; 0x14ca <vfprintf+0x5c6>
    14c8:	d3 94       	inc	r13
    14ca:	03 fd       	sbrc	r16, 3
    14cc:	11 c0       	rjmp	.+34     	; 0x14f0 <vfprintf+0x5ec>
    14ce:	00 ff       	sbrs	r16, 0
    14d0:	06 c0       	rjmp	.+12     	; 0x14de <vfprintf+0x5da>
    14d2:	1c 2d       	mov	r17, r12
    14d4:	d5 14       	cp	r13, r5
    14d6:	80 f4       	brcc	.+32     	; 0x14f8 <vfprintf+0x5f4>
    14d8:	15 0d       	add	r17, r5
    14da:	1d 19       	sub	r17, r13
    14dc:	0d c0       	rjmp	.+26     	; 0x14f8 <vfprintf+0x5f4>
    14de:	d5 14       	cp	r13, r5
    14e0:	58 f4       	brcc	.+22     	; 0x14f8 <vfprintf+0x5f4>
    14e2:	b7 01       	movw	r22, r14
    14e4:	80 e2       	ldi	r24, 0x20	; 32
    14e6:	90 e0       	ldi	r25, 0x00	; 0
    14e8:	0e 94 c9 0c 	call	0x1992	; 0x1992 <fputc>
    14ec:	d3 94       	inc	r13
    14ee:	f7 cf       	rjmp	.-18     	; 0x14de <vfprintf+0x5da>
    14f0:	d5 14       	cp	r13, r5
    14f2:	10 f4       	brcc	.+4      	; 0x14f8 <vfprintf+0x5f4>
    14f4:	5d 18       	sub	r5, r13
    14f6:	01 c0       	rjmp	.+2      	; 0x14fa <vfprintf+0x5f6>
    14f8:	51 2c       	mov	r5, r1
    14fa:	04 ff       	sbrs	r16, 4
    14fc:	10 c0       	rjmp	.+32     	; 0x151e <vfprintf+0x61a>
    14fe:	b7 01       	movw	r22, r14
    1500:	80 e3       	ldi	r24, 0x30	; 48
    1502:	90 e0       	ldi	r25, 0x00	; 0
    1504:	0e 94 c9 0c 	call	0x1992	; 0x1992 <fputc>
    1508:	02 ff       	sbrs	r16, 2
    150a:	17 c0       	rjmp	.+46     	; 0x153a <vfprintf+0x636>
    150c:	01 fd       	sbrc	r16, 1
    150e:	03 c0       	rjmp	.+6      	; 0x1516 <vfprintf+0x612>
    1510:	88 e7       	ldi	r24, 0x78	; 120
    1512:	90 e0       	ldi	r25, 0x00	; 0
    1514:	02 c0       	rjmp	.+4      	; 0x151a <vfprintf+0x616>
    1516:	88 e5       	ldi	r24, 0x58	; 88
    1518:	90 e0       	ldi	r25, 0x00	; 0
    151a:	b7 01       	movw	r22, r14
    151c:	0c c0       	rjmp	.+24     	; 0x1536 <vfprintf+0x632>
    151e:	80 2f       	mov	r24, r16
    1520:	86 78       	andi	r24, 0x86	; 134
    1522:	59 f0       	breq	.+22     	; 0x153a <vfprintf+0x636>
    1524:	01 ff       	sbrs	r16, 1
    1526:	02 c0       	rjmp	.+4      	; 0x152c <vfprintf+0x628>
    1528:	8b e2       	ldi	r24, 0x2B	; 43
    152a:	01 c0       	rjmp	.+2      	; 0x152e <vfprintf+0x62a>
    152c:	80 e2       	ldi	r24, 0x20	; 32
    152e:	07 fd       	sbrc	r16, 7
    1530:	8d e2       	ldi	r24, 0x2D	; 45
    1532:	b7 01       	movw	r22, r14
    1534:	90 e0       	ldi	r25, 0x00	; 0
    1536:	0e 94 c9 0c 	call	0x1992	; 0x1992 <fputc>
    153a:	c1 16       	cp	r12, r17
    153c:	38 f4       	brcc	.+14     	; 0x154c <vfprintf+0x648>
    153e:	b7 01       	movw	r22, r14
    1540:	80 e3       	ldi	r24, 0x30	; 48
    1542:	90 e0       	ldi	r25, 0x00	; 0
    1544:	0e 94 c9 0c 	call	0x1992	; 0x1992 <fputc>
    1548:	11 50       	subi	r17, 0x01	; 1
    154a:	f7 cf       	rjmp	.-18     	; 0x153a <vfprintf+0x636>
    154c:	ca 94       	dec	r12
    154e:	f3 01       	movw	r30, r6
    1550:	ec 0d       	add	r30, r12
    1552:	f1 1d       	adc	r31, r1
    1554:	80 81       	ld	r24, Z
    1556:	b7 01       	movw	r22, r14
    1558:	90 e0       	ldi	r25, 0x00	; 0
    155a:	0e 94 c9 0c 	call	0x1992	; 0x1992 <fputc>
    155e:	c1 10       	cpse	r12, r1
    1560:	f5 cf       	rjmp	.-22     	; 0x154c <vfprintf+0x648>
    1562:	15 c0       	rjmp	.+42     	; 0x158e <vfprintf+0x68a>
    1564:	f4 e0       	ldi	r31, 0x04	; 4
    1566:	f5 15       	cp	r31, r5
    1568:	60 f5       	brcc	.+88     	; 0x15c2 <vfprintf+0x6be>
    156a:	84 e0       	ldi	r24, 0x04	; 4
    156c:	58 1a       	sub	r5, r24
    156e:	93 fe       	sbrs	r9, 3
    1570:	1f c0       	rjmp	.+62     	; 0x15b0 <vfprintf+0x6ac>
    1572:	01 11       	cpse	r16, r1
    1574:	27 c0       	rjmp	.+78     	; 0x15c4 <vfprintf+0x6c0>
    1576:	2c 85       	ldd	r18, Y+12	; 0x0c
    1578:	23 ff       	sbrs	r18, 3
    157a:	2a c0       	rjmp	.+84     	; 0x15d0 <vfprintf+0x6cc>
    157c:	08 e6       	ldi	r16, 0x68	; 104
    157e:	10 e0       	ldi	r17, 0x00	; 0
    1580:	39 2d       	mov	r19, r9
    1582:	30 71       	andi	r19, 0x10	; 16
    1584:	93 2e       	mov	r9, r19
    1586:	f8 01       	movw	r30, r16
    1588:	84 91       	lpm	r24, Z
    158a:	81 11       	cpse	r24, r1
    158c:	24 c0       	rjmp	.+72     	; 0x15d6 <vfprintf+0x6d2>
    158e:	55 20       	and	r5, r5
    1590:	09 f4       	brne	.+2      	; 0x1594 <vfprintf+0x690>
    1592:	e4 cc       	rjmp	.-1592   	; 0xf5c <vfprintf+0x58>
    1594:	b7 01       	movw	r22, r14
    1596:	80 e2       	ldi	r24, 0x20	; 32
    1598:	90 e0       	ldi	r25, 0x00	; 0
    159a:	0e 94 c9 0c 	call	0x1992	; 0x1992 <fputc>
    159e:	5a 94       	dec	r5
    15a0:	f6 cf       	rjmp	.-20     	; 0x158e <vfprintf+0x68a>
    15a2:	f7 01       	movw	r30, r14
    15a4:	86 81       	ldd	r24, Z+6	; 0x06
    15a6:	97 81       	ldd	r25, Z+7	; 0x07
    15a8:	26 c0       	rjmp	.+76     	; 0x15f6 <vfprintf+0x6f2>
    15aa:	8f ef       	ldi	r24, 0xFF	; 255
    15ac:	9f ef       	ldi	r25, 0xFF	; 255
    15ae:	23 c0       	rjmp	.+70     	; 0x15f6 <vfprintf+0x6f2>
    15b0:	b7 01       	movw	r22, r14
    15b2:	80 e2       	ldi	r24, 0x20	; 32
    15b4:	90 e0       	ldi	r25, 0x00	; 0
    15b6:	0e 94 c9 0c 	call	0x1992	; 0x1992 <fputc>
    15ba:	5a 94       	dec	r5
    15bc:	51 10       	cpse	r5, r1
    15be:	f8 cf       	rjmp	.-16     	; 0x15b0 <vfprintf+0x6ac>
    15c0:	d8 cf       	rjmp	.-80     	; 0x1572 <vfprintf+0x66e>
    15c2:	51 2c       	mov	r5, r1
    15c4:	b7 01       	movw	r22, r14
    15c6:	80 2f       	mov	r24, r16
    15c8:	90 e0       	ldi	r25, 0x00	; 0
    15ca:	0e 94 c9 0c 	call	0x1992	; 0x1992 <fputc>
    15ce:	d3 cf       	rjmp	.-90     	; 0x1576 <vfprintf+0x672>
    15d0:	0c e6       	ldi	r16, 0x6C	; 108
    15d2:	10 e0       	ldi	r17, 0x00	; 0
    15d4:	d5 cf       	rjmp	.-86     	; 0x1580 <vfprintf+0x67c>
    15d6:	91 10       	cpse	r9, r1
    15d8:	80 52       	subi	r24, 0x20	; 32
    15da:	b7 01       	movw	r22, r14
    15dc:	90 e0       	ldi	r25, 0x00	; 0
    15de:	0e 94 c9 0c 	call	0x1992	; 0x1992 <fputc>
    15e2:	0f 5f       	subi	r16, 0xFF	; 255
    15e4:	1f 4f       	sbci	r17, 0xFF	; 255
    15e6:	cf cf       	rjmp	.-98     	; 0x1586 <vfprintf+0x682>
    15e8:	23 e0       	ldi	r18, 0x03	; 3
    15ea:	25 15       	cp	r18, r5
    15ec:	10 f4       	brcc	.+4      	; 0x15f2 <vfprintf+0x6ee>
    15ee:	83 e0       	ldi	r24, 0x03	; 3
    15f0:	bd cf       	rjmp	.-134    	; 0x156c <vfprintf+0x668>
    15f2:	51 2c       	mov	r5, r1
    15f4:	c0 cf       	rjmp	.-128    	; 0x1576 <vfprintf+0x672>
    15f6:	60 96       	adiw	r28, 0x10	; 16
    15f8:	e2 e1       	ldi	r30, 0x12	; 18
    15fa:	0c 94 51 0b 	jmp	0x16a2	; 0x16a2 <__epilogue_restores__>

000015fe <__divmodhi4>:
    15fe:	97 fb       	bst	r25, 7
    1600:	07 2e       	mov	r0, r23
    1602:	16 f4       	brtc	.+4      	; 0x1608 <__divmodhi4+0xa>
    1604:	00 94       	com	r0
    1606:	07 d0       	rcall	.+14     	; 0x1616 <__divmodhi4_neg1>
    1608:	77 fd       	sbrc	r23, 7
    160a:	09 d0       	rcall	.+18     	; 0x161e <__divmodhi4_neg2>
    160c:	0e 94 6c 0b 	call	0x16d8	; 0x16d8 <__udivmodhi4>
    1610:	07 fc       	sbrc	r0, 7
    1612:	05 d0       	rcall	.+10     	; 0x161e <__divmodhi4_neg2>
    1614:	3e f4       	brtc	.+14     	; 0x1624 <__divmodhi4_exit>

00001616 <__divmodhi4_neg1>:
    1616:	90 95       	com	r25
    1618:	81 95       	neg	r24
    161a:	9f 4f       	sbci	r25, 0xFF	; 255
    161c:	08 95       	ret

0000161e <__divmodhi4_neg2>:
    161e:	70 95       	com	r23
    1620:	61 95       	neg	r22
    1622:	7f 4f       	sbci	r23, 0xFF	; 255

00001624 <__divmodhi4_exit>:
    1624:	08 95       	ret

00001626 <__udivmodsi4>:
    1626:	a1 e2       	ldi	r26, 0x21	; 33
    1628:	1a 2e       	mov	r1, r26
    162a:	aa 1b       	sub	r26, r26
    162c:	bb 1b       	sub	r27, r27
    162e:	fd 01       	movw	r30, r26
    1630:	0d c0       	rjmp	.+26     	; 0x164c <__udivmodsi4_ep>

00001632 <__udivmodsi4_loop>:
    1632:	aa 1f       	adc	r26, r26
    1634:	bb 1f       	adc	r27, r27
    1636:	ee 1f       	adc	r30, r30
    1638:	ff 1f       	adc	r31, r31
    163a:	a2 17       	cp	r26, r18
    163c:	b3 07       	cpc	r27, r19
    163e:	e4 07       	cpc	r30, r20
    1640:	f5 07       	cpc	r31, r21
    1642:	20 f0       	brcs	.+8      	; 0x164c <__udivmodsi4_ep>
    1644:	a2 1b       	sub	r26, r18
    1646:	b3 0b       	sbc	r27, r19
    1648:	e4 0b       	sbc	r30, r20
    164a:	f5 0b       	sbc	r31, r21

0000164c <__udivmodsi4_ep>:
    164c:	66 1f       	adc	r22, r22
    164e:	77 1f       	adc	r23, r23
    1650:	88 1f       	adc	r24, r24
    1652:	99 1f       	adc	r25, r25
    1654:	1a 94       	dec	r1
    1656:	69 f7       	brne	.-38     	; 0x1632 <__udivmodsi4_loop>
    1658:	60 95       	com	r22
    165a:	70 95       	com	r23
    165c:	80 95       	com	r24
    165e:	90 95       	com	r25
    1660:	9b 01       	movw	r18, r22
    1662:	ac 01       	movw	r20, r24
    1664:	bd 01       	movw	r22, r26
    1666:	cf 01       	movw	r24, r30
    1668:	08 95       	ret

0000166a <__prologue_saves__>:
    166a:	2f 92       	push	r2
    166c:	3f 92       	push	r3
    166e:	4f 92       	push	r4
    1670:	5f 92       	push	r5
    1672:	6f 92       	push	r6
    1674:	7f 92       	push	r7
    1676:	8f 92       	push	r8
    1678:	9f 92       	push	r9
    167a:	af 92       	push	r10
    167c:	bf 92       	push	r11
    167e:	cf 92       	push	r12
    1680:	df 92       	push	r13
    1682:	ef 92       	push	r14
    1684:	ff 92       	push	r15
    1686:	0f 93       	push	r16
    1688:	1f 93       	push	r17
    168a:	cf 93       	push	r28
    168c:	df 93       	push	r29
    168e:	cd b7       	in	r28, 0x3d	; 61
    1690:	de b7       	in	r29, 0x3e	; 62
    1692:	ca 1b       	sub	r28, r26
    1694:	db 0b       	sbc	r29, r27
    1696:	0f b6       	in	r0, 0x3f	; 63
    1698:	f8 94       	cli
    169a:	de bf       	out	0x3e, r29	; 62
    169c:	0f be       	out	0x3f, r0	; 63
    169e:	cd bf       	out	0x3d, r28	; 61
    16a0:	09 94       	ijmp

000016a2 <__epilogue_restores__>:
    16a2:	2a 88       	ldd	r2, Y+18	; 0x12
    16a4:	39 88       	ldd	r3, Y+17	; 0x11
    16a6:	48 88       	ldd	r4, Y+16	; 0x10
    16a8:	5f 84       	ldd	r5, Y+15	; 0x0f
    16aa:	6e 84       	ldd	r6, Y+14	; 0x0e
    16ac:	7d 84       	ldd	r7, Y+13	; 0x0d
    16ae:	8c 84       	ldd	r8, Y+12	; 0x0c
    16b0:	9b 84       	ldd	r9, Y+11	; 0x0b
    16b2:	aa 84       	ldd	r10, Y+10	; 0x0a
    16b4:	b9 84       	ldd	r11, Y+9	; 0x09
    16b6:	c8 84       	ldd	r12, Y+8	; 0x08
    16b8:	df 80       	ldd	r13, Y+7	; 0x07
    16ba:	ee 80       	ldd	r14, Y+6	; 0x06
    16bc:	fd 80       	ldd	r15, Y+5	; 0x05
    16be:	0c 81       	ldd	r16, Y+4	; 0x04
    16c0:	1b 81       	ldd	r17, Y+3	; 0x03
    16c2:	aa 81       	ldd	r26, Y+2	; 0x02
    16c4:	b9 81       	ldd	r27, Y+1	; 0x01
    16c6:	ce 0f       	add	r28, r30
    16c8:	d1 1d       	adc	r29, r1
    16ca:	0f b6       	in	r0, 0x3f	; 63
    16cc:	f8 94       	cli
    16ce:	de bf       	out	0x3e, r29	; 62
    16d0:	0f be       	out	0x3f, r0	; 63
    16d2:	cd bf       	out	0x3d, r28	; 61
    16d4:	ed 01       	movw	r28, r26
    16d6:	08 95       	ret

000016d8 <__udivmodhi4>:
    16d8:	aa 1b       	sub	r26, r26
    16da:	bb 1b       	sub	r27, r27
    16dc:	51 e1       	ldi	r21, 0x11	; 17
    16de:	07 c0       	rjmp	.+14     	; 0x16ee <__udivmodhi4_ep>

000016e0 <__udivmodhi4_loop>:
    16e0:	aa 1f       	adc	r26, r26
    16e2:	bb 1f       	adc	r27, r27
    16e4:	a6 17       	cp	r26, r22
    16e6:	b7 07       	cpc	r27, r23
    16e8:	10 f0       	brcs	.+4      	; 0x16ee <__udivmodhi4_ep>
    16ea:	a6 1b       	sub	r26, r22
    16ec:	b7 0b       	sbc	r27, r23

000016ee <__udivmodhi4_ep>:
    16ee:	88 1f       	adc	r24, r24
    16f0:	99 1f       	adc	r25, r25
    16f2:	5a 95       	dec	r21
    16f4:	a9 f7       	brne	.-22     	; 0x16e0 <__udivmodhi4_loop>
    16f6:	80 95       	com	r24
    16f8:	90 95       	com	r25
    16fa:	bc 01       	movw	r22, r24
    16fc:	cd 01       	movw	r24, r26
    16fe:	08 95       	ret

00001700 <__ftoa_engine>:
    1700:	28 30       	cpi	r18, 0x08	; 8
    1702:	08 f0       	brcs	.+2      	; 0x1706 <__ftoa_engine+0x6>
    1704:	27 e0       	ldi	r18, 0x07	; 7
    1706:	33 27       	eor	r19, r19
    1708:	da 01       	movw	r26, r20
    170a:	99 0f       	add	r25, r25
    170c:	31 1d       	adc	r19, r1
    170e:	87 fd       	sbrc	r24, 7
    1710:	91 60       	ori	r25, 0x01	; 1
    1712:	00 96       	adiw	r24, 0x00	; 0
    1714:	61 05       	cpc	r22, r1
    1716:	71 05       	cpc	r23, r1
    1718:	39 f4       	brne	.+14     	; 0x1728 <__ftoa_engine+0x28>
    171a:	32 60       	ori	r19, 0x02	; 2
    171c:	2e 5f       	subi	r18, 0xFE	; 254
    171e:	3d 93       	st	X+, r19
    1720:	30 e3       	ldi	r19, 0x30	; 48
    1722:	2a 95       	dec	r18
    1724:	e1 f7       	brne	.-8      	; 0x171e <__ftoa_engine+0x1e>
    1726:	08 95       	ret
    1728:	9f 3f       	cpi	r25, 0xFF	; 255
    172a:	30 f0       	brcs	.+12     	; 0x1738 <__ftoa_engine+0x38>
    172c:	80 38       	cpi	r24, 0x80	; 128
    172e:	71 05       	cpc	r23, r1
    1730:	61 05       	cpc	r22, r1
    1732:	09 f0       	breq	.+2      	; 0x1736 <__ftoa_engine+0x36>
    1734:	3c 5f       	subi	r19, 0xFC	; 252
    1736:	3c 5f       	subi	r19, 0xFC	; 252
    1738:	3d 93       	st	X+, r19
    173a:	91 30       	cpi	r25, 0x01	; 1
    173c:	08 f0       	brcs	.+2      	; 0x1740 <__ftoa_engine+0x40>
    173e:	80 68       	ori	r24, 0x80	; 128
    1740:	91 1d       	adc	r25, r1
    1742:	df 93       	push	r29
    1744:	cf 93       	push	r28
    1746:	1f 93       	push	r17
    1748:	0f 93       	push	r16
    174a:	ff 92       	push	r15
    174c:	ef 92       	push	r14
    174e:	19 2f       	mov	r17, r25
    1750:	98 7f       	andi	r25, 0xF8	; 248
    1752:	96 95       	lsr	r25
    1754:	e9 2f       	mov	r30, r25
    1756:	96 95       	lsr	r25
    1758:	96 95       	lsr	r25
    175a:	e9 0f       	add	r30, r25
    175c:	ff 27       	eor	r31, r31
    175e:	e6 53       	subi	r30, 0x36	; 54
    1760:	ff 4f       	sbci	r31, 0xFF	; 255
    1762:	99 27       	eor	r25, r25
    1764:	33 27       	eor	r19, r19
    1766:	ee 24       	eor	r14, r14
    1768:	ff 24       	eor	r15, r15
    176a:	a7 01       	movw	r20, r14
    176c:	e7 01       	movw	r28, r14
    176e:	05 90       	lpm	r0, Z+
    1770:	08 94       	sec
    1772:	07 94       	ror	r0
    1774:	28 f4       	brcc	.+10     	; 0x1780 <__ftoa_engine+0x80>
    1776:	36 0f       	add	r19, r22
    1778:	e7 1e       	adc	r14, r23
    177a:	f8 1e       	adc	r15, r24
    177c:	49 1f       	adc	r20, r25
    177e:	51 1d       	adc	r21, r1
    1780:	66 0f       	add	r22, r22
    1782:	77 1f       	adc	r23, r23
    1784:	88 1f       	adc	r24, r24
    1786:	99 1f       	adc	r25, r25
    1788:	06 94       	lsr	r0
    178a:	a1 f7       	brne	.-24     	; 0x1774 <__ftoa_engine+0x74>
    178c:	05 90       	lpm	r0, Z+
    178e:	07 94       	ror	r0
    1790:	28 f4       	brcc	.+10     	; 0x179c <__ftoa_engine+0x9c>
    1792:	e7 0e       	add	r14, r23
    1794:	f8 1e       	adc	r15, r24
    1796:	49 1f       	adc	r20, r25
    1798:	56 1f       	adc	r21, r22
    179a:	c1 1d       	adc	r28, r1
    179c:	77 0f       	add	r23, r23
    179e:	88 1f       	adc	r24, r24
    17a0:	99 1f       	adc	r25, r25
    17a2:	66 1f       	adc	r22, r22
    17a4:	06 94       	lsr	r0
    17a6:	a1 f7       	brne	.-24     	; 0x1790 <__ftoa_engine+0x90>
    17a8:	05 90       	lpm	r0, Z+
    17aa:	07 94       	ror	r0
    17ac:	28 f4       	brcc	.+10     	; 0x17b8 <__ftoa_engine+0xb8>
    17ae:	f8 0e       	add	r15, r24
    17b0:	49 1f       	adc	r20, r25
    17b2:	56 1f       	adc	r21, r22
    17b4:	c7 1f       	adc	r28, r23
    17b6:	d1 1d       	adc	r29, r1
    17b8:	88 0f       	add	r24, r24
    17ba:	99 1f       	adc	r25, r25
    17bc:	66 1f       	adc	r22, r22
    17be:	77 1f       	adc	r23, r23
    17c0:	06 94       	lsr	r0
    17c2:	a1 f7       	brne	.-24     	; 0x17ac <__ftoa_engine+0xac>
    17c4:	05 90       	lpm	r0, Z+
    17c6:	07 94       	ror	r0
    17c8:	20 f4       	brcc	.+8      	; 0x17d2 <__ftoa_engine+0xd2>
    17ca:	49 0f       	add	r20, r25
    17cc:	56 1f       	adc	r21, r22
    17ce:	c7 1f       	adc	r28, r23
    17d0:	d8 1f       	adc	r29, r24
    17d2:	99 0f       	add	r25, r25
    17d4:	66 1f       	adc	r22, r22
    17d6:	77 1f       	adc	r23, r23
    17d8:	88 1f       	adc	r24, r24
    17da:	06 94       	lsr	r0
    17dc:	a9 f7       	brne	.-22     	; 0x17c8 <__ftoa_engine+0xc8>
    17de:	84 91       	lpm	r24, Z
    17e0:	10 95       	com	r17
    17e2:	17 70       	andi	r17, 0x07	; 7
    17e4:	41 f0       	breq	.+16     	; 0x17f6 <__ftoa_engine+0xf6>
    17e6:	d6 95       	lsr	r29
    17e8:	c7 95       	ror	r28
    17ea:	57 95       	ror	r21
    17ec:	47 95       	ror	r20
    17ee:	f7 94       	ror	r15
    17f0:	e7 94       	ror	r14
    17f2:	1a 95       	dec	r17
    17f4:	c1 f7       	brne	.-16     	; 0x17e6 <__ftoa_engine+0xe6>
    17f6:	e0 e7       	ldi	r30, 0x70	; 112
    17f8:	f0 e0       	ldi	r31, 0x00	; 0
    17fa:	68 94       	set
    17fc:	15 90       	lpm	r1, Z+
    17fe:	15 91       	lpm	r17, Z+
    1800:	35 91       	lpm	r19, Z+
    1802:	65 91       	lpm	r22, Z+
    1804:	95 91       	lpm	r25, Z+
    1806:	05 90       	lpm	r0, Z+
    1808:	7f e2       	ldi	r23, 0x2F	; 47
    180a:	73 95       	inc	r23
    180c:	e1 18       	sub	r14, r1
    180e:	f1 0a       	sbc	r15, r17
    1810:	43 0b       	sbc	r20, r19
    1812:	56 0b       	sbc	r21, r22
    1814:	c9 0b       	sbc	r28, r25
    1816:	d0 09       	sbc	r29, r0
    1818:	c0 f7       	brcc	.-16     	; 0x180a <__ftoa_engine+0x10a>
    181a:	e1 0c       	add	r14, r1
    181c:	f1 1e       	adc	r15, r17
    181e:	43 1f       	adc	r20, r19
    1820:	56 1f       	adc	r21, r22
    1822:	c9 1f       	adc	r28, r25
    1824:	d0 1d       	adc	r29, r0
    1826:	7e f4       	brtc	.+30     	; 0x1846 <__ftoa_engine+0x146>
    1828:	70 33       	cpi	r23, 0x30	; 48
    182a:	11 f4       	brne	.+4      	; 0x1830 <__ftoa_engine+0x130>
    182c:	8a 95       	dec	r24
    182e:	e6 cf       	rjmp	.-52     	; 0x17fc <__ftoa_engine+0xfc>
    1830:	e8 94       	clt
    1832:	01 50       	subi	r16, 0x01	; 1
    1834:	30 f0       	brcs	.+12     	; 0x1842 <__ftoa_engine+0x142>
    1836:	08 0f       	add	r16, r24
    1838:	0a f4       	brpl	.+2      	; 0x183c <__ftoa_engine+0x13c>
    183a:	00 27       	eor	r16, r16
    183c:	02 17       	cp	r16, r18
    183e:	08 f4       	brcc	.+2      	; 0x1842 <__ftoa_engine+0x142>
    1840:	20 2f       	mov	r18, r16
    1842:	23 95       	inc	r18
    1844:	02 2f       	mov	r16, r18
    1846:	7a 33       	cpi	r23, 0x3A	; 58
    1848:	28 f0       	brcs	.+10     	; 0x1854 <__ftoa_engine+0x154>
    184a:	79 e3       	ldi	r23, 0x39	; 57
    184c:	7d 93       	st	X+, r23
    184e:	2a 95       	dec	r18
    1850:	e9 f7       	brne	.-6      	; 0x184c <__ftoa_engine+0x14c>
    1852:	10 c0       	rjmp	.+32     	; 0x1874 <__ftoa_engine+0x174>
    1854:	7d 93       	st	X+, r23
    1856:	2a 95       	dec	r18
    1858:	89 f6       	brne	.-94     	; 0x17fc <__ftoa_engine+0xfc>
    185a:	06 94       	lsr	r0
    185c:	97 95       	ror	r25
    185e:	67 95       	ror	r22
    1860:	37 95       	ror	r19
    1862:	17 95       	ror	r17
    1864:	17 94       	ror	r1
    1866:	e1 18       	sub	r14, r1
    1868:	f1 0a       	sbc	r15, r17
    186a:	43 0b       	sbc	r20, r19
    186c:	56 0b       	sbc	r21, r22
    186e:	c9 0b       	sbc	r28, r25
    1870:	d0 09       	sbc	r29, r0
    1872:	98 f0       	brcs	.+38     	; 0x189a <__ftoa_engine+0x19a>
    1874:	23 95       	inc	r18
    1876:	7e 91       	ld	r23, -X
    1878:	73 95       	inc	r23
    187a:	7a 33       	cpi	r23, 0x3A	; 58
    187c:	08 f0       	brcs	.+2      	; 0x1880 <__ftoa_engine+0x180>
    187e:	70 e3       	ldi	r23, 0x30	; 48
    1880:	7c 93       	st	X, r23
    1882:	20 13       	cpse	r18, r16
    1884:	b8 f7       	brcc	.-18     	; 0x1874 <__ftoa_engine+0x174>
    1886:	7e 91       	ld	r23, -X
    1888:	70 61       	ori	r23, 0x10	; 16
    188a:	7d 93       	st	X+, r23
    188c:	30 f0       	brcs	.+12     	; 0x189a <__ftoa_engine+0x19a>
    188e:	83 95       	inc	r24
    1890:	71 e3       	ldi	r23, 0x31	; 49
    1892:	7d 93       	st	X+, r23
    1894:	70 e3       	ldi	r23, 0x30	; 48
    1896:	2a 95       	dec	r18
    1898:	e1 f7       	brne	.-8      	; 0x1892 <__ftoa_engine+0x192>
    189a:	11 24       	eor	r1, r1
    189c:	ef 90       	pop	r14
    189e:	ff 90       	pop	r15
    18a0:	0f 91       	pop	r16
    18a2:	1f 91       	pop	r17
    18a4:	cf 91       	pop	r28
    18a6:	df 91       	pop	r29
    18a8:	99 27       	eor	r25, r25
    18aa:	87 fd       	sbrc	r24, 7
    18ac:	90 95       	com	r25
    18ae:	08 95       	ret

000018b0 <setjmp>:
    18b0:	dc 01       	movw	r26, r24
    18b2:	2d 92       	st	X+, r2
    18b4:	3d 92       	st	X+, r3
    18b6:	4d 92       	st	X+, r4
    18b8:	5d 92       	st	X+, r5
    18ba:	6d 92       	st	X+, r6
    18bc:	7d 92       	st	X+, r7
    18be:	8d 92       	st	X+, r8
    18c0:	9d 92       	st	X+, r9
    18c2:	ad 92       	st	X+, r10
    18c4:	bd 92       	st	X+, r11
    18c6:	cd 92       	st	X+, r12
    18c8:	dd 92       	st	X+, r13
    18ca:	ed 92       	st	X+, r14
    18cc:	fd 92       	st	X+, r15
    18ce:	0d 93       	st	X+, r16
    18d0:	1d 93       	st	X+, r17
    18d2:	cd 93       	st	X+, r28
    18d4:	dd 93       	st	X+, r29
    18d6:	ff 91       	pop	r31
    18d8:	ef 91       	pop	r30
    18da:	8d b7       	in	r24, 0x3d	; 61
    18dc:	8d 93       	st	X+, r24
    18de:	8e b7       	in	r24, 0x3e	; 62
    18e0:	8d 93       	st	X+, r24
    18e2:	8f b7       	in	r24, 0x3f	; 63
    18e4:	8d 93       	st	X+, r24
    18e6:	ed 93       	st	X+, r30
    18e8:	fd 93       	st	X+, r31
    18ea:	88 27       	eor	r24, r24
    18ec:	99 27       	eor	r25, r25
    18ee:	09 94       	ijmp

000018f0 <longjmp>:
    18f0:	dc 01       	movw	r26, r24
    18f2:	cb 01       	movw	r24, r22
    18f4:	81 30       	cpi	r24, 0x01	; 1
    18f6:	91 05       	cpc	r25, r1
    18f8:	81 1d       	adc	r24, r1
    18fa:	2d 90       	ld	r2, X+
    18fc:	3d 90       	ld	r3, X+
    18fe:	4d 90       	ld	r4, X+
    1900:	5d 90       	ld	r5, X+
    1902:	6d 90       	ld	r6, X+
    1904:	7d 90       	ld	r7, X+
    1906:	8d 90       	ld	r8, X+
    1908:	9d 90       	ld	r9, X+
    190a:	ad 90       	ld	r10, X+
    190c:	bd 90       	ld	r11, X+
    190e:	cd 90       	ld	r12, X+
    1910:	dd 90       	ld	r13, X+
    1912:	ed 90       	ld	r14, X+
    1914:	fd 90       	ld	r15, X+
    1916:	0d 91       	ld	r16, X+
    1918:	1d 91       	ld	r17, X+
    191a:	cd 91       	ld	r28, X+
    191c:	dd 91       	ld	r29, X+
    191e:	ed 91       	ld	r30, X+
    1920:	fd 91       	ld	r31, X+
    1922:	0d 90       	ld	r0, X+
    1924:	f8 94       	cli
    1926:	fe bf       	out	0x3e, r31	; 62
    1928:	0f be       	out	0x3f, r0	; 63
    192a:	ed bf       	out	0x3d, r30	; 61
    192c:	ed 91       	ld	r30, X+
    192e:	fd 91       	ld	r31, X+
    1930:	09 94       	ijmp

00001932 <strnlen_P>:
    1932:	fc 01       	movw	r30, r24
    1934:	05 90       	lpm	r0, Z+
    1936:	61 50       	subi	r22, 0x01	; 1
    1938:	70 40       	sbci	r23, 0x00	; 0
    193a:	01 10       	cpse	r0, r1
    193c:	d8 f7       	brcc	.-10     	; 0x1934 <strnlen_P+0x2>
    193e:	80 95       	com	r24
    1940:	90 95       	com	r25
    1942:	8e 0f       	add	r24, r30
    1944:	9f 1f       	adc	r25, r31
    1946:	08 95       	ret

00001948 <strnlen>:
    1948:	fc 01       	movw	r30, r24
    194a:	61 50       	subi	r22, 0x01	; 1
    194c:	70 40       	sbci	r23, 0x00	; 0
    194e:	01 90       	ld	r0, Z+
    1950:	01 10       	cpse	r0, r1
    1952:	d8 f7       	brcc	.-10     	; 0x194a <strnlen+0x2>
    1954:	80 95       	com	r24
    1956:	90 95       	com	r25
    1958:	8e 0f       	add	r24, r30
    195a:	9f 1f       	adc	r25, r31
    195c:	08 95       	ret

0000195e <strstr>:
    195e:	fb 01       	movw	r30, r22
    1960:	51 91       	ld	r21, Z+
    1962:	55 23       	and	r21, r21
    1964:	a9 f0       	breq	.+42     	; 0x1990 <strstr+0x32>
    1966:	bf 01       	movw	r22, r30
    1968:	dc 01       	movw	r26, r24
    196a:	4d 91       	ld	r20, X+
    196c:	45 17       	cp	r20, r21
    196e:	41 11       	cpse	r20, r1
    1970:	e1 f7       	brne	.-8      	; 0x196a <strstr+0xc>
    1972:	59 f4       	brne	.+22     	; 0x198a <strstr+0x2c>
    1974:	cd 01       	movw	r24, r26
    1976:	01 90       	ld	r0, Z+
    1978:	00 20       	and	r0, r0
    197a:	49 f0       	breq	.+18     	; 0x198e <strstr+0x30>
    197c:	4d 91       	ld	r20, X+
    197e:	40 15       	cp	r20, r0
    1980:	41 11       	cpse	r20, r1
    1982:	c9 f3       	breq	.-14     	; 0x1976 <strstr+0x18>
    1984:	fb 01       	movw	r30, r22
    1986:	41 11       	cpse	r20, r1
    1988:	ef cf       	rjmp	.-34     	; 0x1968 <strstr+0xa>
    198a:	81 e0       	ldi	r24, 0x01	; 1
    198c:	90 e0       	ldi	r25, 0x00	; 0
    198e:	01 97       	sbiw	r24, 0x01	; 1
    1990:	08 95       	ret

00001992 <fputc>:
    1992:	0f 93       	push	r16
    1994:	1f 93       	push	r17
    1996:	cf 93       	push	r28
    1998:	df 93       	push	r29
    199a:	fb 01       	movw	r30, r22
    199c:	23 81       	ldd	r18, Z+3	; 0x03
    199e:	21 fd       	sbrc	r18, 1
    19a0:	03 c0       	rjmp	.+6      	; 0x19a8 <fputc+0x16>
    19a2:	8f ef       	ldi	r24, 0xFF	; 255
    19a4:	9f ef       	ldi	r25, 0xFF	; 255
    19a6:	2c c0       	rjmp	.+88     	; 0x1a00 <fputc+0x6e>
    19a8:	22 ff       	sbrs	r18, 2
    19aa:	16 c0       	rjmp	.+44     	; 0x19d8 <fputc+0x46>
    19ac:	46 81       	ldd	r20, Z+6	; 0x06
    19ae:	57 81       	ldd	r21, Z+7	; 0x07
    19b0:	24 81       	ldd	r18, Z+4	; 0x04
    19b2:	35 81       	ldd	r19, Z+5	; 0x05
    19b4:	42 17       	cp	r20, r18
    19b6:	53 07       	cpc	r21, r19
    19b8:	44 f4       	brge	.+16     	; 0x19ca <fputc+0x38>
    19ba:	a0 81       	ld	r26, Z
    19bc:	b1 81       	ldd	r27, Z+1	; 0x01
    19be:	9d 01       	movw	r18, r26
    19c0:	2f 5f       	subi	r18, 0xFF	; 255
    19c2:	3f 4f       	sbci	r19, 0xFF	; 255
    19c4:	31 83       	std	Z+1, r19	; 0x01
    19c6:	20 83       	st	Z, r18
    19c8:	8c 93       	st	X, r24
    19ca:	26 81       	ldd	r18, Z+6	; 0x06
    19cc:	37 81       	ldd	r19, Z+7	; 0x07
    19ce:	2f 5f       	subi	r18, 0xFF	; 255
    19d0:	3f 4f       	sbci	r19, 0xFF	; 255
    19d2:	37 83       	std	Z+7, r19	; 0x07
    19d4:	26 83       	std	Z+6, r18	; 0x06
    19d6:	14 c0       	rjmp	.+40     	; 0x1a00 <fputc+0x6e>
    19d8:	8b 01       	movw	r16, r22
    19da:	ec 01       	movw	r28, r24
    19dc:	fb 01       	movw	r30, r22
    19de:	00 84       	ldd	r0, Z+8	; 0x08
    19e0:	f1 85       	ldd	r31, Z+9	; 0x09
    19e2:	e0 2d       	mov	r30, r0
    19e4:	09 95       	icall
    19e6:	89 2b       	or	r24, r25
    19e8:	e1 f6       	brne	.-72     	; 0x19a2 <fputc+0x10>
    19ea:	d8 01       	movw	r26, r16
    19ec:	16 96       	adiw	r26, 0x06	; 6
    19ee:	8d 91       	ld	r24, X+
    19f0:	9c 91       	ld	r25, X
    19f2:	17 97       	sbiw	r26, 0x07	; 7
    19f4:	01 96       	adiw	r24, 0x01	; 1
    19f6:	17 96       	adiw	r26, 0x07	; 7
    19f8:	9c 93       	st	X, r25
    19fa:	8e 93       	st	-X, r24
    19fc:	16 97       	sbiw	r26, 0x06	; 6
    19fe:	ce 01       	movw	r24, r28
    1a00:	df 91       	pop	r29
    1a02:	cf 91       	pop	r28
    1a04:	1f 91       	pop	r17
    1a06:	0f 91       	pop	r16
    1a08:	08 95       	ret

00001a0a <sprintf>:
    1a0a:	ae e0       	ldi	r26, 0x0E	; 14
    1a0c:	b0 e0       	ldi	r27, 0x00	; 0
    1a0e:	eb e0       	ldi	r30, 0x0B	; 11
    1a10:	fd e0       	ldi	r31, 0x0D	; 13
    1a12:	0c 94 43 0b 	jmp	0x1686	; 0x1686 <__prologue_saves__+0x1c>
    1a16:	0d 89       	ldd	r16, Y+21	; 0x15
    1a18:	1e 89       	ldd	r17, Y+22	; 0x16
    1a1a:	86 e0       	ldi	r24, 0x06	; 6
    1a1c:	8c 83       	std	Y+4, r24	; 0x04
    1a1e:	1a 83       	std	Y+2, r17	; 0x02
    1a20:	09 83       	std	Y+1, r16	; 0x01
    1a22:	8f ef       	ldi	r24, 0xFF	; 255
    1a24:	9f e7       	ldi	r25, 0x7F	; 127
    1a26:	9e 83       	std	Y+6, r25	; 0x06
    1a28:	8d 83       	std	Y+5, r24	; 0x05
    1a2a:	ae 01       	movw	r20, r28
    1a2c:	47 5e       	subi	r20, 0xE7	; 231
    1a2e:	5f 4f       	sbci	r21, 0xFF	; 255
    1a30:	6f 89       	ldd	r22, Y+23	; 0x17
    1a32:	78 8d       	ldd	r23, Y+24	; 0x18
    1a34:	ce 01       	movw	r24, r28
    1a36:	01 96       	adiw	r24, 0x01	; 1
    1a38:	0e 94 82 07 	call	0xf04	; 0xf04 <vfprintf>
    1a3c:	ef 81       	ldd	r30, Y+7	; 0x07
    1a3e:	f8 85       	ldd	r31, Y+8	; 0x08
    1a40:	e0 0f       	add	r30, r16
    1a42:	f1 1f       	adc	r31, r17
    1a44:	10 82       	st	Z, r1
    1a46:	2e 96       	adiw	r28, 0x0e	; 14
    1a48:	e4 e0       	ldi	r30, 0x04	; 4
    1a4a:	0c 94 5f 0b 	jmp	0x16be	; 0x16be <__epilogue_restores__+0x1c>

00001a4e <__ultoa_invert>:
    1a4e:	fa 01       	movw	r30, r20
    1a50:	aa 27       	eor	r26, r26
    1a52:	28 30       	cpi	r18, 0x08	; 8
    1a54:	51 f1       	breq	.+84     	; 0x1aaa <__ultoa_invert+0x5c>
    1a56:	20 31       	cpi	r18, 0x10	; 16
    1a58:	81 f1       	breq	.+96     	; 0x1aba <__ultoa_invert+0x6c>
    1a5a:	e8 94       	clt
    1a5c:	6f 93       	push	r22
    1a5e:	6e 7f       	andi	r22, 0xFE	; 254
    1a60:	6e 5f       	subi	r22, 0xFE	; 254
    1a62:	7f 4f       	sbci	r23, 0xFF	; 255
    1a64:	8f 4f       	sbci	r24, 0xFF	; 255
    1a66:	9f 4f       	sbci	r25, 0xFF	; 255
    1a68:	af 4f       	sbci	r26, 0xFF	; 255
    1a6a:	b1 e0       	ldi	r27, 0x01	; 1
    1a6c:	3e d0       	rcall	.+124    	; 0x1aea <__ultoa_invert+0x9c>
    1a6e:	b4 e0       	ldi	r27, 0x04	; 4
    1a70:	3c d0       	rcall	.+120    	; 0x1aea <__ultoa_invert+0x9c>
    1a72:	67 0f       	add	r22, r23
    1a74:	78 1f       	adc	r23, r24
    1a76:	89 1f       	adc	r24, r25
    1a78:	9a 1f       	adc	r25, r26
    1a7a:	a1 1d       	adc	r26, r1
    1a7c:	68 0f       	add	r22, r24
    1a7e:	79 1f       	adc	r23, r25
    1a80:	8a 1f       	adc	r24, r26
    1a82:	91 1d       	adc	r25, r1
    1a84:	a1 1d       	adc	r26, r1
    1a86:	6a 0f       	add	r22, r26
    1a88:	71 1d       	adc	r23, r1
    1a8a:	81 1d       	adc	r24, r1
    1a8c:	91 1d       	adc	r25, r1
    1a8e:	a1 1d       	adc	r26, r1
    1a90:	20 d0       	rcall	.+64     	; 0x1ad2 <__ultoa_invert+0x84>
    1a92:	09 f4       	brne	.+2      	; 0x1a96 <__ultoa_invert+0x48>
    1a94:	68 94       	set
    1a96:	3f 91       	pop	r19
    1a98:	2a e0       	ldi	r18, 0x0A	; 10
    1a9a:	26 9f       	mul	r18, r22
    1a9c:	11 24       	eor	r1, r1
    1a9e:	30 19       	sub	r19, r0
    1aa0:	30 5d       	subi	r19, 0xD0	; 208
    1aa2:	31 93       	st	Z+, r19
    1aa4:	de f6       	brtc	.-74     	; 0x1a5c <__ultoa_invert+0xe>
    1aa6:	cf 01       	movw	r24, r30
    1aa8:	08 95       	ret
    1aaa:	46 2f       	mov	r20, r22
    1aac:	47 70       	andi	r20, 0x07	; 7
    1aae:	40 5d       	subi	r20, 0xD0	; 208
    1ab0:	41 93       	st	Z+, r20
    1ab2:	b3 e0       	ldi	r27, 0x03	; 3
    1ab4:	0f d0       	rcall	.+30     	; 0x1ad4 <__ultoa_invert+0x86>
    1ab6:	c9 f7       	brne	.-14     	; 0x1aaa <__ultoa_invert+0x5c>
    1ab8:	f6 cf       	rjmp	.-20     	; 0x1aa6 <__ultoa_invert+0x58>
    1aba:	46 2f       	mov	r20, r22
    1abc:	4f 70       	andi	r20, 0x0F	; 15
    1abe:	40 5d       	subi	r20, 0xD0	; 208
    1ac0:	4a 33       	cpi	r20, 0x3A	; 58
    1ac2:	18 f0       	brcs	.+6      	; 0x1aca <__ultoa_invert+0x7c>
    1ac4:	49 5d       	subi	r20, 0xD9	; 217
    1ac6:	31 fd       	sbrc	r19, 1
    1ac8:	40 52       	subi	r20, 0x20	; 32
    1aca:	41 93       	st	Z+, r20
    1acc:	02 d0       	rcall	.+4      	; 0x1ad2 <__ultoa_invert+0x84>
    1ace:	a9 f7       	brne	.-22     	; 0x1aba <__ultoa_invert+0x6c>
    1ad0:	ea cf       	rjmp	.-44     	; 0x1aa6 <__ultoa_invert+0x58>
    1ad2:	b4 e0       	ldi	r27, 0x04	; 4
    1ad4:	a6 95       	lsr	r26
    1ad6:	97 95       	ror	r25
    1ad8:	87 95       	ror	r24
    1ada:	77 95       	ror	r23
    1adc:	67 95       	ror	r22
    1ade:	ba 95       	dec	r27
    1ae0:	c9 f7       	brne	.-14     	; 0x1ad4 <__ultoa_invert+0x86>
    1ae2:	00 97       	sbiw	r24, 0x00	; 0
    1ae4:	61 05       	cpc	r22, r1
    1ae6:	71 05       	cpc	r23, r1
    1ae8:	08 95       	ret
    1aea:	9b 01       	movw	r18, r22
    1aec:	ac 01       	movw	r20, r24
    1aee:	0a 2e       	mov	r0, r26
    1af0:	06 94       	lsr	r0
    1af2:	57 95       	ror	r21
    1af4:	47 95       	ror	r20
    1af6:	37 95       	ror	r19
    1af8:	27 95       	ror	r18
    1afa:	ba 95       	dec	r27
    1afc:	c9 f7       	brne	.-14     	; 0x1af0 <__ultoa_invert+0xa2>
    1afe:	62 0f       	add	r22, r18
    1b00:	73 1f       	adc	r23, r19
    1b02:	84 1f       	adc	r24, r20
    1b04:	95 1f       	adc	r25, r21
    1b06:	a0 1d       	adc	r26, r0
    1b08:	08 95       	ret

00001b0a <_exit>:
    1b0a:	f8 94       	cli

00001b0c <__stop_program>:
    1b0c:	ff cf       	rjmp	.-2      	; 0x1b0c <__stop_program>
