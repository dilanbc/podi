
m5.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000008f6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000001a  00800060  000008f6  0000098a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000012  0080007a  0080007a  000009a4  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000009a4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000a00  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a8  00000000  00000000  00000a3c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000c6b  00000000  00000000  00000ae4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000006f1  00000000  00000000  0000174f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000005b3  00000000  00000000  00001e40  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001b4  00000000  00000000  000023f4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000571  00000000  00000000  000025a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000559  00000000  00000000  00002b19  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000098  00000000  00000000  00003072  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 6b 01 	jmp	0x2d6	; 0x2d6 <__vector_1>
   8:	0c 94 7c 01 	jmp	0x2f8	; 0x2f8 <__vector_2>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e6 ef       	ldi	r30, 0xF6	; 246
  68:	f8 e0       	ldi	r31, 0x08	; 8
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	aa 37       	cpi	r26, 0x7A	; 122
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	aa e7       	ldi	r26, 0x7A	; 122
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	ac 38       	cpi	r26, 0x8C	; 140
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 2c 01 	call	0x258	; 0x258 <main>
  8a:	0c 94 79 04 	jmp	0x8f2	; 0x8f2 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <_Z7TWIInitv>:
		LcdChar(str[i]);
	}
}
void LcdCursor(bool Cursor=0){
	if (Cursor==0)
	{LcdCommand(0xC);
  92:	11 b8       	out	0x01, r1	; 1
  94:	88 e4       	ldi	r24, 0x48	; 72
  96:	80 b9       	out	0x00, r24	; 0
  98:	84 e0       	ldi	r24, 0x04	; 4
  9a:	86 bf       	out	0x36, r24	; 54
  9c:	08 95       	ret

0000009e <_Z8TWIStartv>:
  9e:	84 ea       	ldi	r24, 0xA4	; 164
  a0:	86 bf       	out	0x36, r24	; 54
  a2:	06 b6       	in	r0, 0x36	; 54
  a4:	07 fe       	sbrs	r0, 7
  a6:	fd cf       	rjmp	.-6      	; 0xa2 <_Z8TWIStartv+0x4>
  a8:	08 95       	ret

000000aa <_Z7TWIStopv>:
  aa:	84 e9       	ldi	r24, 0x94	; 148
  ac:	86 bf       	out	0x36, r24	; 54
  ae:	06 b6       	in	r0, 0x36	; 54
  b0:	04 fc       	sbrc	r0, 4
  b2:	fd cf       	rjmp	.-6      	; 0xae <_Z7TWIStopv+0x4>
  b4:	08 95       	ret

000000b6 <_Z13TWIWriteAddrshh>:
  b6:	90 e0       	ldi	r25, 0x00	; 0
  b8:	88 0f       	add	r24, r24
  ba:	99 1f       	adc	r25, r25
  bc:	86 2b       	or	r24, r22
  be:	83 b9       	out	0x03, r24	; 3
  c0:	84 e8       	ldi	r24, 0x84	; 132
  c2:	86 bf       	out	0x36, r24	; 54
  c4:	06 b6       	in	r0, 0x36	; 54
  c6:	07 fe       	sbrs	r0, 7
  c8:	fd cf       	rjmp	.-6      	; 0xc4 <_Z13TWIWriteAddrshh+0xe>
  ca:	81 b1       	in	r24, 0x01	; 1
  cc:	88 7f       	andi	r24, 0xF8	; 248
  ce:	08 95       	ret

000000d0 <_Z12TWIWriteDatah>:
  d0:	83 b9       	out	0x03, r24	; 3
  d2:	84 e8       	ldi	r24, 0x84	; 132
  d4:	86 bf       	out	0x36, r24	; 54
  d6:	06 b6       	in	r0, 0x36	; 54
  d8:	07 fe       	sbrs	r0, 7
  da:	fd cf       	rjmp	.-6      	; 0xd6 <_Z12TWIWriteDatah+0x6>
  dc:	81 b1       	in	r24, 0x01	; 1
  de:	88 7f       	andi	r24, 0xF8	; 248
  e0:	08 95       	ret

000000e2 <_Z12LcdBacklightb>:
  e2:	88 23       	and	r24, r24
  e4:	21 f0       	breq	.+8      	; 0xee <_Z12LcdBacklightb+0xc>
  e6:	88 e0       	ldi	r24, 0x08	; 8
  e8:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
  ec:	08 95       	ret
  ee:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
  f2:	08 95       	ret

000000f4 <_Z11Lcd4bitdatahb>:
  f4:	1f 93       	push	r17
  f6:	cf 93       	push	r28
  f8:	df 93       	push	r29
  fa:	d8 2f       	mov	r29, r24
  fc:	c6 2f       	mov	r28, r22
  fe:	0e 94 4f 00 	call	0x9e	; 0x9e <_Z8TWIStartv>
 102:	60 e0       	ldi	r22, 0x00	; 0
 104:	80 91 8b 00 	lds	r24, 0x008B	; 0x80008b <deviceAdress>
 108:	0e 94 5b 00 	call	0xb6	; 0xb6 <_Z13TWIWriteAddrshh>
 10c:	1c 2f       	mov	r17, r28
 10e:	1d 2b       	or	r17, r29
 110:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 114:	81 2b       	or	r24, r17
 116:	0e 94 68 00 	call	0xd0	; 0xd0 <_Z12TWIWriteDatah>
 11a:	0e 94 55 00 	call	0xaa	; 0xaa <_Z7TWIStopv>
 11e:	0e 94 4f 00 	call	0x9e	; 0x9e <_Z8TWIStartv>
 122:	60 e0       	ldi	r22, 0x00	; 0
 124:	80 91 8b 00 	lds	r24, 0x008B	; 0x80008b <deviceAdress>
 128:	0e 94 5b 00 	call	0xb6	; 0xb6 <_Z13TWIWriteAddrshh>
 12c:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 130:	81 2b       	or	r24, r17
 132:	84 60       	ori	r24, 0x04	; 4
 134:	0e 94 68 00 	call	0xd0	; 0xd0 <_Z12TWIWriteDatah>
 138:	0e 94 55 00 	call	0xaa	; 0xaa <_Z7TWIStopv>
 13c:	8f e8       	ldi	r24, 0x8F	; 143
 13e:	91 e0       	ldi	r25, 0x01	; 1
 140:	01 97       	sbiw	r24, 0x01	; 1
 142:	f1 f7       	brne	.-4      	; 0x140 <_Z11Lcd4bitdatahb+0x4c>
 144:	00 c0       	rjmp	.+0      	; 0x146 <_Z11Lcd4bitdatahb+0x52>
 146:	00 00       	nop
 148:	0e 94 4f 00 	call	0x9e	; 0x9e <_Z8TWIStartv>
 14c:	60 e0       	ldi	r22, 0x00	; 0
 14e:	80 91 8b 00 	lds	r24, 0x008B	; 0x80008b <deviceAdress>
 152:	0e 94 5b 00 	call	0xb6	; 0xb6 <_Z13TWIWriteAddrshh>
 156:	db 7f       	andi	r29, 0xFB	; 251
 158:	cd 2b       	or	r28, r29
 15a:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 15e:	8c 2b       	or	r24, r28
 160:	0e 94 68 00 	call	0xd0	; 0xd0 <_Z12TWIWriteDatah>
 164:	0e 94 55 00 	call	0xaa	; 0xaa <_Z7TWIStopv>
 168:	8f e9       	ldi	r24, 0x9F	; 159
 16a:	9f e0       	ldi	r25, 0x0F	; 15
 16c:	01 97       	sbiw	r24, 0x01	; 1
 16e:	f1 f7       	brne	.-4      	; 0x16c <_Z11Lcd4bitdatahb+0x78>
 170:	00 c0       	rjmp	.+0      	; 0x172 <_Z11Lcd4bitdatahb+0x7e>
 172:	00 00       	nop
 174:	df 91       	pop	r29
 176:	cf 91       	pop	r28
 178:	1f 91       	pop	r17
 17a:	08 95       	ret

0000017c <_Z10LcdCommandh>:
 17c:	cf 93       	push	r28
 17e:	c8 2f       	mov	r28, r24
 180:	60 e0       	ldi	r22, 0x00	; 0
 182:	80 7f       	andi	r24, 0xF0	; 240
 184:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z11Lcd4bitdatahb>
 188:	60 e0       	ldi	r22, 0x00	; 0
 18a:	8c 2f       	mov	r24, r28
 18c:	82 95       	swap	r24
 18e:	80 7f       	andi	r24, 0xF0	; 240
 190:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z11Lcd4bitdatahb>
 194:	cf 91       	pop	r28
 196:	08 95       	ret

00000198 <_Z7LcdInith>:
 198:	cf 93       	push	r28
 19a:	c8 2f       	mov	r28, r24
 19c:	0e 94 49 00 	call	0x92	; 0x92 <_Z7TWIInitv>
 1a0:	81 e0       	ldi	r24, 0x01	; 1
 1a2:	0e 94 71 00 	call	0xe2	; 0xe2 <_Z12LcdBacklightb>
 1a6:	8f e3       	ldi	r24, 0x3F	; 63
 1a8:	9c e9       	ldi	r25, 0x9C	; 156
 1aa:	01 97       	sbiw	r24, 0x01	; 1
 1ac:	f1 f7       	brne	.-4      	; 0x1aa <_Z7LcdInith+0x12>
 1ae:	00 c0       	rjmp	.+0      	; 0x1b0 <_Z7LcdInith+0x18>
 1b0:	00 00       	nop
 1b2:	c0 93 8b 00 	sts	0x008B, r28	; 0x80008b <deviceAdress>
 1b6:	82 e0       	ldi	r24, 0x02	; 2
 1b8:	0e 94 be 00 	call	0x17c	; 0x17c <_Z10LcdCommandh>
 1bc:	88 e2       	ldi	r24, 0x28	; 40
 1be:	0e 94 be 00 	call	0x17c	; 0x17c <_Z10LcdCommandh>
 1c2:	8c e0       	ldi	r24, 0x0C	; 12
 1c4:	0e 94 be 00 	call	0x17c	; 0x17c <_Z10LcdCommandh>
 1c8:	86 e0       	ldi	r24, 0x06	; 6
 1ca:	0e 94 be 00 	call	0x17c	; 0x17c <_Z10LcdCommandh>
 1ce:	81 e0       	ldi	r24, 0x01	; 1
 1d0:	0e 94 be 00 	call	0x17c	; 0x17c <_Z10LcdCommandh>
 1d4:	cf 91       	pop	r28
 1d6:	08 95       	ret

000001d8 <_Z7LcdCharh>:
	Lcd4bitdata(command&0xF0,0);
	Lcd4bitdata((command<<4)&0xF0,0);
	
}

void LcdChar(uint8_t Lcdcharval){
 1d8:	cf 93       	push	r28
 1da:	c8 2f       	mov	r28, r24
	Lcd4bitdata(Lcdcharval&0xF0,1);
 1dc:	61 e0       	ldi	r22, 0x01	; 1
 1de:	80 7f       	andi	r24, 0xF0	; 240
 1e0:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z11Lcd4bitdatahb>
	Lcd4bitdata((Lcdcharval<<4)&0xF0,1);
 1e4:	61 e0       	ldi	r22, 0x01	; 1
 1e6:	8c 2f       	mov	r24, r28
 1e8:	82 95       	swap	r24
 1ea:	80 7f       	andi	r24, 0xF0	; 240
 1ec:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z11Lcd4bitdatahb>
	
}
 1f0:	cf 91       	pop	r28
 1f2:	08 95       	ret

000001f4 <_Z9LcdStringPc>:
	LcdString(str);
	
}

void LcdString (char *str)		/* Send string to LCD function */
{
 1f4:	0f 93       	push	r16
 1f6:	1f 93       	push	r17
 1f8:	cf 93       	push	r28
 1fa:	df 93       	push	r29
 1fc:	8c 01       	movw	r16, r24
	int i;
	for(i=0;str[i]!=0;i++)		/* Send each char of string till the NULL */
 1fe:	c0 e0       	ldi	r28, 0x00	; 0
 200:	d0 e0       	ldi	r29, 0x00	; 0
 202:	f8 01       	movw	r30, r16
 204:	ec 0f       	add	r30, r28
 206:	fd 1f       	adc	r31, r29
 208:	80 81       	ld	r24, Z
 20a:	88 23       	and	r24, r24
 20c:	21 f0       	breq	.+8      	; 0x216 <_Z9LcdStringPc+0x22>
	{
		LcdChar(str[i]);
 20e:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <_Z7LcdCharh>
}

void LcdString (char *str)		/* Send string to LCD function */
{
	int i;
	for(i=0;str[i]!=0;i++)		/* Send each char of string till the NULL */
 212:	21 96       	adiw	r28, 0x01	; 1
 214:	f6 cf       	rjmp	.-20     	; 0x202 <_Z9LcdStringPc+0xe>
	{
		LcdChar(str[i]);
	}
}
 216:	df 91       	pop	r29
 218:	cf 91       	pop	r28
 21a:	1f 91       	pop	r17
 21c:	0f 91       	pop	r16
 21e:	08 95       	ret

00000220 <_Z12LcdSetCursorhhPc>:
	Lcd4bitdata(Lcdcharval&0xF0,1);
	Lcd4bitdata((Lcdcharval<<4)&0xF0,1);
	
}

void LcdSetCursor(uint8_t xaxis, uint8_t yaxis,char*str){
 220:	cf 93       	push	r28
 222:	df 93       	push	r29
 224:	ea 01       	movw	r28, r20
	uint8_t tempcommand;
	switch(yaxis){
 226:	61 30       	cpi	r22, 0x01	; 1
 228:	31 f0       	breq	.+12     	; 0x236 <_Z12LcdSetCursorhhPc+0x16>
 22a:	58 f0       	brcs	.+22     	; 0x242 <_Z12LcdSetCursorhhPc+0x22>
 22c:	62 30       	cpi	r22, 0x02	; 2
 22e:	29 f0       	breq	.+10     	; 0x23a <_Z12LcdSetCursorhhPc+0x1a>
 230:	63 30       	cpi	r22, 0x03	; 3
 232:	29 f0       	breq	.+10     	; 0x23e <_Z12LcdSetCursorhhPc+0x1e>
 234:	07 c0       	rjmp	.+14     	; 0x244 <_Z12LcdSetCursorhhPc+0x24>
		case 0:tempcommand=0x80;break;  //yaxis =0
		case 1:tempcommand=0xC0;break;
 236:	90 ec       	ldi	r25, 0xC0	; 192
 238:	05 c0       	rjmp	.+10     	; 0x244 <_Z12LcdSetCursorhhPc+0x24>
		case 2:tempcommand=0x94;break;
 23a:	94 e9       	ldi	r25, 0x94	; 148
 23c:	03 c0       	rjmp	.+6      	; 0x244 <_Z12LcdSetCursorhhPc+0x24>
		case 3:tempcommand=0xd4;break;		
 23e:	94 ed       	ldi	r25, 0xD4	; 212
 240:	01 c0       	rjmp	.+2      	; 0x244 <_Z12LcdSetCursorhhPc+0x24>
}

void LcdSetCursor(uint8_t xaxis, uint8_t yaxis,char*str){
	uint8_t tempcommand;
	switch(yaxis){
		case 0:tempcommand=0x80;break;  //yaxis =0
 242:	90 e8       	ldi	r25, 0x80	; 128
		case 1:tempcommand=0xC0;break;
		case 2:tempcommand=0x94;break;
		case 3:tempcommand=0xd4;break;		
	}
	LcdCommand(tempcommand|(0x0F&xaxis));
 244:	8f 70       	andi	r24, 0x0F	; 15
 246:	89 2b       	or	r24, r25
 248:	0e 94 be 00 	call	0x17c	; 0x17c <_Z10LcdCommandh>
	LcdString(str);
 24c:	ce 01       	movw	r24, r28
 24e:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <_Z9LcdStringPc>
	
}
 252:	df 91       	pop	r29
 254:	cf 91       	pop	r28
 256:	08 95       	ret

00000258 <main>:
uint8_t count=0;
char lcd[16];

int main(void)
{
   LcdInit();
 258:	87 e2       	ldi	r24, 0x27	; 39
 25a:	0e 94 cc 00 	call	0x198	; 0x198 <_Z7LcdInith>
   
   GICR|=(1<<INT1)|(1<<INT0);//enable int1 and int 0
 25e:	8b b7       	in	r24, 0x3b	; 59
 260:	80 6c       	ori	r24, 0xC0	; 192
 262:	8b bf       	out	0x3b, r24	; 59
   MCUCR|=(1<<ISC11)|(1<<ISC01);// falling edge inturrept
 264:	85 b7       	in	r24, 0x35	; 53
 266:	8a 60       	ori	r24, 0x0A	; 10
 268:	85 bf       	out	0x35, r24	; 53
   sei();//enable global int
 26a:	78 94       	sei
   DDRA|=(1<<2);
 26c:	8a b3       	in	r24, 0x1a	; 26
 26e:	84 60       	ori	r24, 0x04	; 4
 270:	8a bb       	out	0x1a, r24	; 26
    while (1) 
    {
		sprintf(lcd,"Count %u",count);
 272:	80 91 8a 00 	lds	r24, 0x008A	; 0x80008a <count>
 276:	1f 92       	push	r1
 278:	8f 93       	push	r24
 27a:	81 e6       	ldi	r24, 0x61	; 97
 27c:	90 e0       	ldi	r25, 0x00	; 0
 27e:	9f 93       	push	r25
 280:	8f 93       	push	r24
 282:	8a e7       	ldi	r24, 0x7A	; 122
 284:	90 e0       	ldi	r25, 0x00	; 0
 286:	9f 93       	push	r25
 288:	8f 93       	push	r24
 28a:	0e 94 8f 01 	call	0x31e	; 0x31e <sprintf>
		LcdSetCursor(4,0,lcd);
 28e:	4a e7       	ldi	r20, 0x7A	; 122
 290:	50 e0       	ldi	r21, 0x00	; 0
 292:	60 e0       	ldi	r22, 0x00	; 0
 294:	84 e0       	ldi	r24, 0x04	; 4
 296:	0e 94 10 01 	call	0x220	; 0x220 <_Z12LcdSetCursorhhPc>
		if (count<5)
 29a:	80 91 8a 00 	lds	r24, 0x008A	; 0x80008a <count>
 29e:	0f 90       	pop	r0
 2a0:	0f 90       	pop	r0
 2a2:	0f 90       	pop	r0
 2a4:	0f 90       	pop	r0
 2a6:	0f 90       	pop	r0
 2a8:	0f 90       	pop	r0
 2aa:	85 30       	cpi	r24, 0x05	; 5
 2ac:	50 f4       	brcc	.+20     	; 0x2c2 <main+0x6a>
		{LcdSetCursor(4,1,"OPEN  ");//lcd
 2ae:	4a e6       	ldi	r20, 0x6A	; 106
 2b0:	50 e0       	ldi	r21, 0x00	; 0
 2b2:	61 e0       	ldi	r22, 0x01	; 1
 2b4:	84 e0       	ldi	r24, 0x04	; 4
 2b6:	0e 94 10 01 	call	0x220	; 0x220 <_Z12LcdSetCursorhhPc>
			PORTA&=~(1<<2);
 2ba:	8b b3       	in	r24, 0x1b	; 27
 2bc:	8b 7f       	andi	r24, 0xFB	; 251
 2be:	8b bb       	out	0x1b, r24	; 27
 2c0:	d8 cf       	rjmp	.-80     	; 0x272 <main+0x1a>
		} 
		else
		{LcdSetCursor(4,1,"CLOSED ");//lcd
 2c2:	41 e7       	ldi	r20, 0x71	; 113
 2c4:	50 e0       	ldi	r21, 0x00	; 0
 2c6:	61 e0       	ldi	r22, 0x01	; 1
 2c8:	84 e0       	ldi	r24, 0x04	; 4
 2ca:	0e 94 10 01 	call	0x220	; 0x220 <_Z12LcdSetCursorhhPc>
			PORTA|=(1<<2);
 2ce:	8b b3       	in	r24, 0x1b	; 27
 2d0:	84 60       	ori	r24, 0x04	; 4
 2d2:	8b bb       	out	0x1b, r24	; 27
 2d4:	ce cf       	rjmp	.-100    	; 0x272 <main+0x1a>

000002d6 <__vector_1>:
		}
		
    }
}
ISR(INT0_vect){//in
 2d6:	1f 92       	push	r1
 2d8:	0f 92       	push	r0
 2da:	0f b6       	in	r0, 0x3f	; 63
 2dc:	0f 92       	push	r0
 2de:	11 24       	eor	r1, r1
 2e0:	8f 93       	push	r24
count++;	
 2e2:	80 91 8a 00 	lds	r24, 0x008A	; 0x80008a <count>
 2e6:	8f 5f       	subi	r24, 0xFF	; 255
 2e8:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <count>
}
 2ec:	8f 91       	pop	r24
 2ee:	0f 90       	pop	r0
 2f0:	0f be       	out	0x3f, r0	; 63
 2f2:	0f 90       	pop	r0
 2f4:	1f 90       	pop	r1
 2f6:	18 95       	reti

000002f8 <__vector_2>:
ISR(INT1_vect){//out
 2f8:	1f 92       	push	r1
 2fa:	0f 92       	push	r0
 2fc:	0f b6       	in	r0, 0x3f	; 63
 2fe:	0f 92       	push	r0
 300:	11 24       	eor	r1, r1
 302:	8f 93       	push	r24
if (count>0)
 304:	80 91 8a 00 	lds	r24, 0x008A	; 0x80008a <count>
 308:	88 23       	and	r24, r24
 30a:	19 f0       	breq	.+6      	; 0x312 <__vector_2+0x1a>
{count--;
 30c:	81 50       	subi	r24, 0x01	; 1
 30e:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <count>
}
	
}
 312:	8f 91       	pop	r24
 314:	0f 90       	pop	r0
 316:	0f be       	out	0x3f, r0	; 63
 318:	0f 90       	pop	r0
 31a:	1f 90       	pop	r1
 31c:	18 95       	reti

0000031e <sprintf>:
 31e:	ae e0       	ldi	r26, 0x0E	; 14
 320:	b0 e0       	ldi	r27, 0x00	; 0
 322:	e5 e9       	ldi	r30, 0x95	; 149
 324:	f1 e0       	ldi	r31, 0x01	; 1
 326:	0c 94 50 04 	jmp	0x8a0	; 0x8a0 <__prologue_saves__+0x1c>
 32a:	0d 89       	ldd	r16, Y+21	; 0x15
 32c:	1e 89       	ldd	r17, Y+22	; 0x16
 32e:	86 e0       	ldi	r24, 0x06	; 6
 330:	8c 83       	std	Y+4, r24	; 0x04
 332:	1a 83       	std	Y+2, r17	; 0x02
 334:	09 83       	std	Y+1, r16	; 0x01
 336:	8f ef       	ldi	r24, 0xFF	; 255
 338:	9f e7       	ldi	r25, 0x7F	; 127
 33a:	9e 83       	std	Y+6, r25	; 0x06
 33c:	8d 83       	std	Y+5, r24	; 0x05
 33e:	ae 01       	movw	r20, r28
 340:	47 5e       	subi	r20, 0xE7	; 231
 342:	5f 4f       	sbci	r21, 0xFF	; 255
 344:	6f 89       	ldd	r22, Y+23	; 0x17
 346:	78 8d       	ldd	r23, Y+24	; 0x18
 348:	ce 01       	movw	r24, r28
 34a:	01 96       	adiw	r24, 0x01	; 1
 34c:	0e 94 b1 01 	call	0x362	; 0x362 <vfprintf>
 350:	ef 81       	ldd	r30, Y+7	; 0x07
 352:	f8 85       	ldd	r31, Y+8	; 0x08
 354:	e0 0f       	add	r30, r16
 356:	f1 1f       	adc	r31, r17
 358:	10 82       	st	Z, r1
 35a:	2e 96       	adiw	r28, 0x0e	; 14
 35c:	e4 e0       	ldi	r30, 0x04	; 4
 35e:	0c 94 6c 04 	jmp	0x8d8	; 0x8d8 <__epilogue_restores__+0x1c>

00000362 <vfprintf>:
 362:	ab e0       	ldi	r26, 0x0B	; 11
 364:	b0 e0       	ldi	r27, 0x00	; 0
 366:	e7 eb       	ldi	r30, 0xB7	; 183
 368:	f1 e0       	ldi	r31, 0x01	; 1
 36a:	0c 94 42 04 	jmp	0x884	; 0x884 <__prologue_saves__>
 36e:	6c 01       	movw	r12, r24
 370:	7b 01       	movw	r14, r22
 372:	8a 01       	movw	r16, r20
 374:	fc 01       	movw	r30, r24
 376:	17 82       	std	Z+7, r1	; 0x07
 378:	16 82       	std	Z+6, r1	; 0x06
 37a:	83 81       	ldd	r24, Z+3	; 0x03
 37c:	81 ff       	sbrs	r24, 1
 37e:	cc c1       	rjmp	.+920    	; 0x718 <__EEPROM_REGION_LENGTH__+0x318>
 380:	ce 01       	movw	r24, r28
 382:	01 96       	adiw	r24, 0x01	; 1
 384:	3c 01       	movw	r6, r24
 386:	f6 01       	movw	r30, r12
 388:	93 81       	ldd	r25, Z+3	; 0x03
 38a:	f7 01       	movw	r30, r14
 38c:	93 fd       	sbrc	r25, 3
 38e:	85 91       	lpm	r24, Z+
 390:	93 ff       	sbrs	r25, 3
 392:	81 91       	ld	r24, Z+
 394:	7f 01       	movw	r14, r30
 396:	88 23       	and	r24, r24
 398:	09 f4       	brne	.+2      	; 0x39c <vfprintf+0x3a>
 39a:	ba c1       	rjmp	.+884    	; 0x710 <__EEPROM_REGION_LENGTH__+0x310>
 39c:	85 32       	cpi	r24, 0x25	; 37
 39e:	39 f4       	brne	.+14     	; 0x3ae <vfprintf+0x4c>
 3a0:	93 fd       	sbrc	r25, 3
 3a2:	85 91       	lpm	r24, Z+
 3a4:	93 ff       	sbrs	r25, 3
 3a6:	81 91       	ld	r24, Z+
 3a8:	7f 01       	movw	r14, r30
 3aa:	85 32       	cpi	r24, 0x25	; 37
 3ac:	29 f4       	brne	.+10     	; 0x3b8 <vfprintf+0x56>
 3ae:	b6 01       	movw	r22, r12
 3b0:	90 e0       	ldi	r25, 0x00	; 0
 3b2:	0e 94 a8 03 	call	0x750	; 0x750 <fputc>
 3b6:	e7 cf       	rjmp	.-50     	; 0x386 <vfprintf+0x24>
 3b8:	91 2c       	mov	r9, r1
 3ba:	21 2c       	mov	r2, r1
 3bc:	31 2c       	mov	r3, r1
 3be:	ff e1       	ldi	r31, 0x1F	; 31
 3c0:	f3 15       	cp	r31, r3
 3c2:	d8 f0       	brcs	.+54     	; 0x3fa <vfprintf+0x98>
 3c4:	8b 32       	cpi	r24, 0x2B	; 43
 3c6:	79 f0       	breq	.+30     	; 0x3e6 <vfprintf+0x84>
 3c8:	38 f4       	brcc	.+14     	; 0x3d8 <vfprintf+0x76>
 3ca:	80 32       	cpi	r24, 0x20	; 32
 3cc:	79 f0       	breq	.+30     	; 0x3ec <vfprintf+0x8a>
 3ce:	83 32       	cpi	r24, 0x23	; 35
 3d0:	a1 f4       	brne	.+40     	; 0x3fa <vfprintf+0x98>
 3d2:	23 2d       	mov	r18, r3
 3d4:	20 61       	ori	r18, 0x10	; 16
 3d6:	1d c0       	rjmp	.+58     	; 0x412 <__EEPROM_REGION_LENGTH__+0x12>
 3d8:	8d 32       	cpi	r24, 0x2D	; 45
 3da:	61 f0       	breq	.+24     	; 0x3f4 <vfprintf+0x92>
 3dc:	80 33       	cpi	r24, 0x30	; 48
 3de:	69 f4       	brne	.+26     	; 0x3fa <vfprintf+0x98>
 3e0:	23 2d       	mov	r18, r3
 3e2:	21 60       	ori	r18, 0x01	; 1
 3e4:	16 c0       	rjmp	.+44     	; 0x412 <__EEPROM_REGION_LENGTH__+0x12>
 3e6:	83 2d       	mov	r24, r3
 3e8:	82 60       	ori	r24, 0x02	; 2
 3ea:	38 2e       	mov	r3, r24
 3ec:	e3 2d       	mov	r30, r3
 3ee:	e4 60       	ori	r30, 0x04	; 4
 3f0:	3e 2e       	mov	r3, r30
 3f2:	2a c0       	rjmp	.+84     	; 0x448 <__EEPROM_REGION_LENGTH__+0x48>
 3f4:	f3 2d       	mov	r31, r3
 3f6:	f8 60       	ori	r31, 0x08	; 8
 3f8:	1d c0       	rjmp	.+58     	; 0x434 <__EEPROM_REGION_LENGTH__+0x34>
 3fa:	37 fc       	sbrc	r3, 7
 3fc:	2d c0       	rjmp	.+90     	; 0x458 <__EEPROM_REGION_LENGTH__+0x58>
 3fe:	20 ed       	ldi	r18, 0xD0	; 208
 400:	28 0f       	add	r18, r24
 402:	2a 30       	cpi	r18, 0x0A	; 10
 404:	40 f0       	brcs	.+16     	; 0x416 <__EEPROM_REGION_LENGTH__+0x16>
 406:	8e 32       	cpi	r24, 0x2E	; 46
 408:	b9 f4       	brne	.+46     	; 0x438 <__EEPROM_REGION_LENGTH__+0x38>
 40a:	36 fc       	sbrc	r3, 6
 40c:	81 c1       	rjmp	.+770    	; 0x710 <__EEPROM_REGION_LENGTH__+0x310>
 40e:	23 2d       	mov	r18, r3
 410:	20 64       	ori	r18, 0x40	; 64
 412:	32 2e       	mov	r3, r18
 414:	19 c0       	rjmp	.+50     	; 0x448 <__EEPROM_REGION_LENGTH__+0x48>
 416:	36 fe       	sbrs	r3, 6
 418:	06 c0       	rjmp	.+12     	; 0x426 <__EEPROM_REGION_LENGTH__+0x26>
 41a:	8a e0       	ldi	r24, 0x0A	; 10
 41c:	98 9e       	mul	r9, r24
 41e:	20 0d       	add	r18, r0
 420:	11 24       	eor	r1, r1
 422:	92 2e       	mov	r9, r18
 424:	11 c0       	rjmp	.+34     	; 0x448 <__EEPROM_REGION_LENGTH__+0x48>
 426:	ea e0       	ldi	r30, 0x0A	; 10
 428:	2e 9e       	mul	r2, r30
 42a:	20 0d       	add	r18, r0
 42c:	11 24       	eor	r1, r1
 42e:	22 2e       	mov	r2, r18
 430:	f3 2d       	mov	r31, r3
 432:	f0 62       	ori	r31, 0x20	; 32
 434:	3f 2e       	mov	r3, r31
 436:	08 c0       	rjmp	.+16     	; 0x448 <__EEPROM_REGION_LENGTH__+0x48>
 438:	8c 36       	cpi	r24, 0x6C	; 108
 43a:	21 f4       	brne	.+8      	; 0x444 <__EEPROM_REGION_LENGTH__+0x44>
 43c:	83 2d       	mov	r24, r3
 43e:	80 68       	ori	r24, 0x80	; 128
 440:	38 2e       	mov	r3, r24
 442:	02 c0       	rjmp	.+4      	; 0x448 <__EEPROM_REGION_LENGTH__+0x48>
 444:	88 36       	cpi	r24, 0x68	; 104
 446:	41 f4       	brne	.+16     	; 0x458 <__EEPROM_REGION_LENGTH__+0x58>
 448:	f7 01       	movw	r30, r14
 44a:	93 fd       	sbrc	r25, 3
 44c:	85 91       	lpm	r24, Z+
 44e:	93 ff       	sbrs	r25, 3
 450:	81 91       	ld	r24, Z+
 452:	7f 01       	movw	r14, r30
 454:	81 11       	cpse	r24, r1
 456:	b3 cf       	rjmp	.-154    	; 0x3be <vfprintf+0x5c>
 458:	98 2f       	mov	r25, r24
 45a:	9f 7d       	andi	r25, 0xDF	; 223
 45c:	95 54       	subi	r25, 0x45	; 69
 45e:	93 30       	cpi	r25, 0x03	; 3
 460:	28 f4       	brcc	.+10     	; 0x46c <__EEPROM_REGION_LENGTH__+0x6c>
 462:	0c 5f       	subi	r16, 0xFC	; 252
 464:	1f 4f       	sbci	r17, 0xFF	; 255
 466:	9f e3       	ldi	r25, 0x3F	; 63
 468:	99 83       	std	Y+1, r25	; 0x01
 46a:	0d c0       	rjmp	.+26     	; 0x486 <__EEPROM_REGION_LENGTH__+0x86>
 46c:	83 36       	cpi	r24, 0x63	; 99
 46e:	31 f0       	breq	.+12     	; 0x47c <__EEPROM_REGION_LENGTH__+0x7c>
 470:	83 37       	cpi	r24, 0x73	; 115
 472:	71 f0       	breq	.+28     	; 0x490 <__EEPROM_REGION_LENGTH__+0x90>
 474:	83 35       	cpi	r24, 0x53	; 83
 476:	09 f0       	breq	.+2      	; 0x47a <__EEPROM_REGION_LENGTH__+0x7a>
 478:	59 c0       	rjmp	.+178    	; 0x52c <__EEPROM_REGION_LENGTH__+0x12c>
 47a:	21 c0       	rjmp	.+66     	; 0x4be <__EEPROM_REGION_LENGTH__+0xbe>
 47c:	f8 01       	movw	r30, r16
 47e:	80 81       	ld	r24, Z
 480:	89 83       	std	Y+1, r24	; 0x01
 482:	0e 5f       	subi	r16, 0xFE	; 254
 484:	1f 4f       	sbci	r17, 0xFF	; 255
 486:	88 24       	eor	r8, r8
 488:	83 94       	inc	r8
 48a:	91 2c       	mov	r9, r1
 48c:	53 01       	movw	r10, r6
 48e:	13 c0       	rjmp	.+38     	; 0x4b6 <__EEPROM_REGION_LENGTH__+0xb6>
 490:	28 01       	movw	r4, r16
 492:	f2 e0       	ldi	r31, 0x02	; 2
 494:	4f 0e       	add	r4, r31
 496:	51 1c       	adc	r5, r1
 498:	f8 01       	movw	r30, r16
 49a:	a0 80       	ld	r10, Z
 49c:	b1 80       	ldd	r11, Z+1	; 0x01
 49e:	36 fe       	sbrs	r3, 6
 4a0:	03 c0       	rjmp	.+6      	; 0x4a8 <__EEPROM_REGION_LENGTH__+0xa8>
 4a2:	69 2d       	mov	r22, r9
 4a4:	70 e0       	ldi	r23, 0x00	; 0
 4a6:	02 c0       	rjmp	.+4      	; 0x4ac <__EEPROM_REGION_LENGTH__+0xac>
 4a8:	6f ef       	ldi	r22, 0xFF	; 255
 4aa:	7f ef       	ldi	r23, 0xFF	; 255
 4ac:	c5 01       	movw	r24, r10
 4ae:	0e 94 9d 03 	call	0x73a	; 0x73a <strnlen>
 4b2:	4c 01       	movw	r8, r24
 4b4:	82 01       	movw	r16, r4
 4b6:	f3 2d       	mov	r31, r3
 4b8:	ff 77       	andi	r31, 0x7F	; 127
 4ba:	3f 2e       	mov	r3, r31
 4bc:	16 c0       	rjmp	.+44     	; 0x4ea <__EEPROM_REGION_LENGTH__+0xea>
 4be:	28 01       	movw	r4, r16
 4c0:	22 e0       	ldi	r18, 0x02	; 2
 4c2:	42 0e       	add	r4, r18
 4c4:	51 1c       	adc	r5, r1
 4c6:	f8 01       	movw	r30, r16
 4c8:	a0 80       	ld	r10, Z
 4ca:	b1 80       	ldd	r11, Z+1	; 0x01
 4cc:	36 fe       	sbrs	r3, 6
 4ce:	03 c0       	rjmp	.+6      	; 0x4d6 <__EEPROM_REGION_LENGTH__+0xd6>
 4d0:	69 2d       	mov	r22, r9
 4d2:	70 e0       	ldi	r23, 0x00	; 0
 4d4:	02 c0       	rjmp	.+4      	; 0x4da <__EEPROM_REGION_LENGTH__+0xda>
 4d6:	6f ef       	ldi	r22, 0xFF	; 255
 4d8:	7f ef       	ldi	r23, 0xFF	; 255
 4da:	c5 01       	movw	r24, r10
 4dc:	0e 94 92 03 	call	0x724	; 0x724 <strnlen_P>
 4e0:	4c 01       	movw	r8, r24
 4e2:	f3 2d       	mov	r31, r3
 4e4:	f0 68       	ori	r31, 0x80	; 128
 4e6:	3f 2e       	mov	r3, r31
 4e8:	82 01       	movw	r16, r4
 4ea:	33 fc       	sbrc	r3, 3
 4ec:	1b c0       	rjmp	.+54     	; 0x524 <__EEPROM_REGION_LENGTH__+0x124>
 4ee:	82 2d       	mov	r24, r2
 4f0:	90 e0       	ldi	r25, 0x00	; 0
 4f2:	88 16       	cp	r8, r24
 4f4:	99 06       	cpc	r9, r25
 4f6:	b0 f4       	brcc	.+44     	; 0x524 <__EEPROM_REGION_LENGTH__+0x124>
 4f8:	b6 01       	movw	r22, r12
 4fa:	80 e2       	ldi	r24, 0x20	; 32
 4fc:	90 e0       	ldi	r25, 0x00	; 0
 4fe:	0e 94 a8 03 	call	0x750	; 0x750 <fputc>
 502:	2a 94       	dec	r2
 504:	f4 cf       	rjmp	.-24     	; 0x4ee <__EEPROM_REGION_LENGTH__+0xee>
 506:	f5 01       	movw	r30, r10
 508:	37 fc       	sbrc	r3, 7
 50a:	85 91       	lpm	r24, Z+
 50c:	37 fe       	sbrs	r3, 7
 50e:	81 91       	ld	r24, Z+
 510:	5f 01       	movw	r10, r30
 512:	b6 01       	movw	r22, r12
 514:	90 e0       	ldi	r25, 0x00	; 0
 516:	0e 94 a8 03 	call	0x750	; 0x750 <fputc>
 51a:	21 10       	cpse	r2, r1
 51c:	2a 94       	dec	r2
 51e:	21 e0       	ldi	r18, 0x01	; 1
 520:	82 1a       	sub	r8, r18
 522:	91 08       	sbc	r9, r1
 524:	81 14       	cp	r8, r1
 526:	91 04       	cpc	r9, r1
 528:	71 f7       	brne	.-36     	; 0x506 <__EEPROM_REGION_LENGTH__+0x106>
 52a:	e8 c0       	rjmp	.+464    	; 0x6fc <__EEPROM_REGION_LENGTH__+0x2fc>
 52c:	84 36       	cpi	r24, 0x64	; 100
 52e:	11 f0       	breq	.+4      	; 0x534 <__EEPROM_REGION_LENGTH__+0x134>
 530:	89 36       	cpi	r24, 0x69	; 105
 532:	41 f5       	brne	.+80     	; 0x584 <__EEPROM_REGION_LENGTH__+0x184>
 534:	f8 01       	movw	r30, r16
 536:	37 fe       	sbrs	r3, 7
 538:	07 c0       	rjmp	.+14     	; 0x548 <__EEPROM_REGION_LENGTH__+0x148>
 53a:	60 81       	ld	r22, Z
 53c:	71 81       	ldd	r23, Z+1	; 0x01
 53e:	82 81       	ldd	r24, Z+2	; 0x02
 540:	93 81       	ldd	r25, Z+3	; 0x03
 542:	0c 5f       	subi	r16, 0xFC	; 252
 544:	1f 4f       	sbci	r17, 0xFF	; 255
 546:	08 c0       	rjmp	.+16     	; 0x558 <__EEPROM_REGION_LENGTH__+0x158>
 548:	60 81       	ld	r22, Z
 54a:	71 81       	ldd	r23, Z+1	; 0x01
 54c:	07 2e       	mov	r0, r23
 54e:	00 0c       	add	r0, r0
 550:	88 0b       	sbc	r24, r24
 552:	99 0b       	sbc	r25, r25
 554:	0e 5f       	subi	r16, 0xFE	; 254
 556:	1f 4f       	sbci	r17, 0xFF	; 255
 558:	f3 2d       	mov	r31, r3
 55a:	ff 76       	andi	r31, 0x6F	; 111
 55c:	3f 2e       	mov	r3, r31
 55e:	97 ff       	sbrs	r25, 7
 560:	09 c0       	rjmp	.+18     	; 0x574 <__EEPROM_REGION_LENGTH__+0x174>
 562:	90 95       	com	r25
 564:	80 95       	com	r24
 566:	70 95       	com	r23
 568:	61 95       	neg	r22
 56a:	7f 4f       	sbci	r23, 0xFF	; 255
 56c:	8f 4f       	sbci	r24, 0xFF	; 255
 56e:	9f 4f       	sbci	r25, 0xFF	; 255
 570:	f0 68       	ori	r31, 0x80	; 128
 572:	3f 2e       	mov	r3, r31
 574:	2a e0       	ldi	r18, 0x0A	; 10
 576:	30 e0       	ldi	r19, 0x00	; 0
 578:	a3 01       	movw	r20, r6
 57a:	0e 94 e4 03 	call	0x7c8	; 0x7c8 <__ultoa_invert>
 57e:	88 2e       	mov	r8, r24
 580:	86 18       	sub	r8, r6
 582:	45 c0       	rjmp	.+138    	; 0x60e <__EEPROM_REGION_LENGTH__+0x20e>
 584:	85 37       	cpi	r24, 0x75	; 117
 586:	31 f4       	brne	.+12     	; 0x594 <__EEPROM_REGION_LENGTH__+0x194>
 588:	23 2d       	mov	r18, r3
 58a:	2f 7e       	andi	r18, 0xEF	; 239
 58c:	b2 2e       	mov	r11, r18
 58e:	2a e0       	ldi	r18, 0x0A	; 10
 590:	30 e0       	ldi	r19, 0x00	; 0
 592:	25 c0       	rjmp	.+74     	; 0x5de <__EEPROM_REGION_LENGTH__+0x1de>
 594:	93 2d       	mov	r25, r3
 596:	99 7f       	andi	r25, 0xF9	; 249
 598:	b9 2e       	mov	r11, r25
 59a:	8f 36       	cpi	r24, 0x6F	; 111
 59c:	c1 f0       	breq	.+48     	; 0x5ce <__EEPROM_REGION_LENGTH__+0x1ce>
 59e:	18 f4       	brcc	.+6      	; 0x5a6 <__EEPROM_REGION_LENGTH__+0x1a6>
 5a0:	88 35       	cpi	r24, 0x58	; 88
 5a2:	79 f0       	breq	.+30     	; 0x5c2 <__EEPROM_REGION_LENGTH__+0x1c2>
 5a4:	b5 c0       	rjmp	.+362    	; 0x710 <__EEPROM_REGION_LENGTH__+0x310>
 5a6:	80 37       	cpi	r24, 0x70	; 112
 5a8:	19 f0       	breq	.+6      	; 0x5b0 <__EEPROM_REGION_LENGTH__+0x1b0>
 5aa:	88 37       	cpi	r24, 0x78	; 120
 5ac:	21 f0       	breq	.+8      	; 0x5b6 <__EEPROM_REGION_LENGTH__+0x1b6>
 5ae:	b0 c0       	rjmp	.+352    	; 0x710 <__EEPROM_REGION_LENGTH__+0x310>
 5b0:	e9 2f       	mov	r30, r25
 5b2:	e0 61       	ori	r30, 0x10	; 16
 5b4:	be 2e       	mov	r11, r30
 5b6:	b4 fe       	sbrs	r11, 4
 5b8:	0d c0       	rjmp	.+26     	; 0x5d4 <__EEPROM_REGION_LENGTH__+0x1d4>
 5ba:	fb 2d       	mov	r31, r11
 5bc:	f4 60       	ori	r31, 0x04	; 4
 5be:	bf 2e       	mov	r11, r31
 5c0:	09 c0       	rjmp	.+18     	; 0x5d4 <__EEPROM_REGION_LENGTH__+0x1d4>
 5c2:	34 fe       	sbrs	r3, 4
 5c4:	0a c0       	rjmp	.+20     	; 0x5da <__EEPROM_REGION_LENGTH__+0x1da>
 5c6:	29 2f       	mov	r18, r25
 5c8:	26 60       	ori	r18, 0x06	; 6
 5ca:	b2 2e       	mov	r11, r18
 5cc:	06 c0       	rjmp	.+12     	; 0x5da <__EEPROM_REGION_LENGTH__+0x1da>
 5ce:	28 e0       	ldi	r18, 0x08	; 8
 5d0:	30 e0       	ldi	r19, 0x00	; 0
 5d2:	05 c0       	rjmp	.+10     	; 0x5de <__EEPROM_REGION_LENGTH__+0x1de>
 5d4:	20 e1       	ldi	r18, 0x10	; 16
 5d6:	30 e0       	ldi	r19, 0x00	; 0
 5d8:	02 c0       	rjmp	.+4      	; 0x5de <__EEPROM_REGION_LENGTH__+0x1de>
 5da:	20 e1       	ldi	r18, 0x10	; 16
 5dc:	32 e0       	ldi	r19, 0x02	; 2
 5de:	f8 01       	movw	r30, r16
 5e0:	b7 fe       	sbrs	r11, 7
 5e2:	07 c0       	rjmp	.+14     	; 0x5f2 <__EEPROM_REGION_LENGTH__+0x1f2>
 5e4:	60 81       	ld	r22, Z
 5e6:	71 81       	ldd	r23, Z+1	; 0x01
 5e8:	82 81       	ldd	r24, Z+2	; 0x02
 5ea:	93 81       	ldd	r25, Z+3	; 0x03
 5ec:	0c 5f       	subi	r16, 0xFC	; 252
 5ee:	1f 4f       	sbci	r17, 0xFF	; 255
 5f0:	06 c0       	rjmp	.+12     	; 0x5fe <__EEPROM_REGION_LENGTH__+0x1fe>
 5f2:	60 81       	ld	r22, Z
 5f4:	71 81       	ldd	r23, Z+1	; 0x01
 5f6:	80 e0       	ldi	r24, 0x00	; 0
 5f8:	90 e0       	ldi	r25, 0x00	; 0
 5fa:	0e 5f       	subi	r16, 0xFE	; 254
 5fc:	1f 4f       	sbci	r17, 0xFF	; 255
 5fe:	a3 01       	movw	r20, r6
 600:	0e 94 e4 03 	call	0x7c8	; 0x7c8 <__ultoa_invert>
 604:	88 2e       	mov	r8, r24
 606:	86 18       	sub	r8, r6
 608:	fb 2d       	mov	r31, r11
 60a:	ff 77       	andi	r31, 0x7F	; 127
 60c:	3f 2e       	mov	r3, r31
 60e:	36 fe       	sbrs	r3, 6
 610:	0d c0       	rjmp	.+26     	; 0x62c <__EEPROM_REGION_LENGTH__+0x22c>
 612:	23 2d       	mov	r18, r3
 614:	2e 7f       	andi	r18, 0xFE	; 254
 616:	a2 2e       	mov	r10, r18
 618:	89 14       	cp	r8, r9
 61a:	58 f4       	brcc	.+22     	; 0x632 <__EEPROM_REGION_LENGTH__+0x232>
 61c:	34 fe       	sbrs	r3, 4
 61e:	0b c0       	rjmp	.+22     	; 0x636 <__EEPROM_REGION_LENGTH__+0x236>
 620:	32 fc       	sbrc	r3, 2
 622:	09 c0       	rjmp	.+18     	; 0x636 <__EEPROM_REGION_LENGTH__+0x236>
 624:	83 2d       	mov	r24, r3
 626:	8e 7e       	andi	r24, 0xEE	; 238
 628:	a8 2e       	mov	r10, r24
 62a:	05 c0       	rjmp	.+10     	; 0x636 <__EEPROM_REGION_LENGTH__+0x236>
 62c:	b8 2c       	mov	r11, r8
 62e:	a3 2c       	mov	r10, r3
 630:	03 c0       	rjmp	.+6      	; 0x638 <__EEPROM_REGION_LENGTH__+0x238>
 632:	b8 2c       	mov	r11, r8
 634:	01 c0       	rjmp	.+2      	; 0x638 <__EEPROM_REGION_LENGTH__+0x238>
 636:	b9 2c       	mov	r11, r9
 638:	a4 fe       	sbrs	r10, 4
 63a:	0f c0       	rjmp	.+30     	; 0x65a <__EEPROM_REGION_LENGTH__+0x25a>
 63c:	fe 01       	movw	r30, r28
 63e:	e8 0d       	add	r30, r8
 640:	f1 1d       	adc	r31, r1
 642:	80 81       	ld	r24, Z
 644:	80 33       	cpi	r24, 0x30	; 48
 646:	21 f4       	brne	.+8      	; 0x650 <__EEPROM_REGION_LENGTH__+0x250>
 648:	9a 2d       	mov	r25, r10
 64a:	99 7e       	andi	r25, 0xE9	; 233
 64c:	a9 2e       	mov	r10, r25
 64e:	09 c0       	rjmp	.+18     	; 0x662 <__EEPROM_REGION_LENGTH__+0x262>
 650:	a2 fe       	sbrs	r10, 2
 652:	06 c0       	rjmp	.+12     	; 0x660 <__EEPROM_REGION_LENGTH__+0x260>
 654:	b3 94       	inc	r11
 656:	b3 94       	inc	r11
 658:	04 c0       	rjmp	.+8      	; 0x662 <__EEPROM_REGION_LENGTH__+0x262>
 65a:	8a 2d       	mov	r24, r10
 65c:	86 78       	andi	r24, 0x86	; 134
 65e:	09 f0       	breq	.+2      	; 0x662 <__EEPROM_REGION_LENGTH__+0x262>
 660:	b3 94       	inc	r11
 662:	a3 fc       	sbrc	r10, 3
 664:	11 c0       	rjmp	.+34     	; 0x688 <__EEPROM_REGION_LENGTH__+0x288>
 666:	a0 fe       	sbrs	r10, 0
 668:	06 c0       	rjmp	.+12     	; 0x676 <__EEPROM_REGION_LENGTH__+0x276>
 66a:	b2 14       	cp	r11, r2
 66c:	88 f4       	brcc	.+34     	; 0x690 <__EEPROM_REGION_LENGTH__+0x290>
 66e:	28 0c       	add	r2, r8
 670:	92 2c       	mov	r9, r2
 672:	9b 18       	sub	r9, r11
 674:	0e c0       	rjmp	.+28     	; 0x692 <__EEPROM_REGION_LENGTH__+0x292>
 676:	b2 14       	cp	r11, r2
 678:	60 f4       	brcc	.+24     	; 0x692 <__EEPROM_REGION_LENGTH__+0x292>
 67a:	b6 01       	movw	r22, r12
 67c:	80 e2       	ldi	r24, 0x20	; 32
 67e:	90 e0       	ldi	r25, 0x00	; 0
 680:	0e 94 a8 03 	call	0x750	; 0x750 <fputc>
 684:	b3 94       	inc	r11
 686:	f7 cf       	rjmp	.-18     	; 0x676 <__EEPROM_REGION_LENGTH__+0x276>
 688:	b2 14       	cp	r11, r2
 68a:	18 f4       	brcc	.+6      	; 0x692 <__EEPROM_REGION_LENGTH__+0x292>
 68c:	2b 18       	sub	r2, r11
 68e:	02 c0       	rjmp	.+4      	; 0x694 <__EEPROM_REGION_LENGTH__+0x294>
 690:	98 2c       	mov	r9, r8
 692:	21 2c       	mov	r2, r1
 694:	a4 fe       	sbrs	r10, 4
 696:	10 c0       	rjmp	.+32     	; 0x6b8 <__EEPROM_REGION_LENGTH__+0x2b8>
 698:	b6 01       	movw	r22, r12
 69a:	80 e3       	ldi	r24, 0x30	; 48
 69c:	90 e0       	ldi	r25, 0x00	; 0
 69e:	0e 94 a8 03 	call	0x750	; 0x750 <fputc>
 6a2:	a2 fe       	sbrs	r10, 2
 6a4:	17 c0       	rjmp	.+46     	; 0x6d4 <__EEPROM_REGION_LENGTH__+0x2d4>
 6a6:	a1 fc       	sbrc	r10, 1
 6a8:	03 c0       	rjmp	.+6      	; 0x6b0 <__EEPROM_REGION_LENGTH__+0x2b0>
 6aa:	88 e7       	ldi	r24, 0x78	; 120
 6ac:	90 e0       	ldi	r25, 0x00	; 0
 6ae:	02 c0       	rjmp	.+4      	; 0x6b4 <__EEPROM_REGION_LENGTH__+0x2b4>
 6b0:	88 e5       	ldi	r24, 0x58	; 88
 6b2:	90 e0       	ldi	r25, 0x00	; 0
 6b4:	b6 01       	movw	r22, r12
 6b6:	0c c0       	rjmp	.+24     	; 0x6d0 <__EEPROM_REGION_LENGTH__+0x2d0>
 6b8:	8a 2d       	mov	r24, r10
 6ba:	86 78       	andi	r24, 0x86	; 134
 6bc:	59 f0       	breq	.+22     	; 0x6d4 <__EEPROM_REGION_LENGTH__+0x2d4>
 6be:	a1 fe       	sbrs	r10, 1
 6c0:	02 c0       	rjmp	.+4      	; 0x6c6 <__EEPROM_REGION_LENGTH__+0x2c6>
 6c2:	8b e2       	ldi	r24, 0x2B	; 43
 6c4:	01 c0       	rjmp	.+2      	; 0x6c8 <__EEPROM_REGION_LENGTH__+0x2c8>
 6c6:	80 e2       	ldi	r24, 0x20	; 32
 6c8:	a7 fc       	sbrc	r10, 7
 6ca:	8d e2       	ldi	r24, 0x2D	; 45
 6cc:	b6 01       	movw	r22, r12
 6ce:	90 e0       	ldi	r25, 0x00	; 0
 6d0:	0e 94 a8 03 	call	0x750	; 0x750 <fputc>
 6d4:	89 14       	cp	r8, r9
 6d6:	38 f4       	brcc	.+14     	; 0x6e6 <__EEPROM_REGION_LENGTH__+0x2e6>
 6d8:	b6 01       	movw	r22, r12
 6da:	80 e3       	ldi	r24, 0x30	; 48
 6dc:	90 e0       	ldi	r25, 0x00	; 0
 6de:	0e 94 a8 03 	call	0x750	; 0x750 <fputc>
 6e2:	9a 94       	dec	r9
 6e4:	f7 cf       	rjmp	.-18     	; 0x6d4 <__EEPROM_REGION_LENGTH__+0x2d4>
 6e6:	8a 94       	dec	r8
 6e8:	f3 01       	movw	r30, r6
 6ea:	e8 0d       	add	r30, r8
 6ec:	f1 1d       	adc	r31, r1
 6ee:	80 81       	ld	r24, Z
 6f0:	b6 01       	movw	r22, r12
 6f2:	90 e0       	ldi	r25, 0x00	; 0
 6f4:	0e 94 a8 03 	call	0x750	; 0x750 <fputc>
 6f8:	81 10       	cpse	r8, r1
 6fa:	f5 cf       	rjmp	.-22     	; 0x6e6 <__EEPROM_REGION_LENGTH__+0x2e6>
 6fc:	22 20       	and	r2, r2
 6fe:	09 f4       	brne	.+2      	; 0x702 <__EEPROM_REGION_LENGTH__+0x302>
 700:	42 ce       	rjmp	.-892    	; 0x386 <vfprintf+0x24>
 702:	b6 01       	movw	r22, r12
 704:	80 e2       	ldi	r24, 0x20	; 32
 706:	90 e0       	ldi	r25, 0x00	; 0
 708:	0e 94 a8 03 	call	0x750	; 0x750 <fputc>
 70c:	2a 94       	dec	r2
 70e:	f6 cf       	rjmp	.-20     	; 0x6fc <__EEPROM_REGION_LENGTH__+0x2fc>
 710:	f6 01       	movw	r30, r12
 712:	86 81       	ldd	r24, Z+6	; 0x06
 714:	97 81       	ldd	r25, Z+7	; 0x07
 716:	02 c0       	rjmp	.+4      	; 0x71c <__EEPROM_REGION_LENGTH__+0x31c>
 718:	8f ef       	ldi	r24, 0xFF	; 255
 71a:	9f ef       	ldi	r25, 0xFF	; 255
 71c:	2b 96       	adiw	r28, 0x0b	; 11
 71e:	e2 e1       	ldi	r30, 0x12	; 18
 720:	0c 94 5e 04 	jmp	0x8bc	; 0x8bc <__epilogue_restores__>

00000724 <strnlen_P>:
 724:	fc 01       	movw	r30, r24
 726:	05 90       	lpm	r0, Z+
 728:	61 50       	subi	r22, 0x01	; 1
 72a:	70 40       	sbci	r23, 0x00	; 0
 72c:	01 10       	cpse	r0, r1
 72e:	d8 f7       	brcc	.-10     	; 0x726 <strnlen_P+0x2>
 730:	80 95       	com	r24
 732:	90 95       	com	r25
 734:	8e 0f       	add	r24, r30
 736:	9f 1f       	adc	r25, r31
 738:	08 95       	ret

0000073a <strnlen>:
 73a:	fc 01       	movw	r30, r24
 73c:	61 50       	subi	r22, 0x01	; 1
 73e:	70 40       	sbci	r23, 0x00	; 0
 740:	01 90       	ld	r0, Z+
 742:	01 10       	cpse	r0, r1
 744:	d8 f7       	brcc	.-10     	; 0x73c <strnlen+0x2>
 746:	80 95       	com	r24
 748:	90 95       	com	r25
 74a:	8e 0f       	add	r24, r30
 74c:	9f 1f       	adc	r25, r31
 74e:	08 95       	ret

00000750 <fputc>:
 750:	0f 93       	push	r16
 752:	1f 93       	push	r17
 754:	cf 93       	push	r28
 756:	df 93       	push	r29
 758:	fb 01       	movw	r30, r22
 75a:	23 81       	ldd	r18, Z+3	; 0x03
 75c:	21 fd       	sbrc	r18, 1
 75e:	03 c0       	rjmp	.+6      	; 0x766 <fputc+0x16>
 760:	8f ef       	ldi	r24, 0xFF	; 255
 762:	9f ef       	ldi	r25, 0xFF	; 255
 764:	2c c0       	rjmp	.+88     	; 0x7be <fputc+0x6e>
 766:	22 ff       	sbrs	r18, 2
 768:	16 c0       	rjmp	.+44     	; 0x796 <fputc+0x46>
 76a:	46 81       	ldd	r20, Z+6	; 0x06
 76c:	57 81       	ldd	r21, Z+7	; 0x07
 76e:	24 81       	ldd	r18, Z+4	; 0x04
 770:	35 81       	ldd	r19, Z+5	; 0x05
 772:	42 17       	cp	r20, r18
 774:	53 07       	cpc	r21, r19
 776:	44 f4       	brge	.+16     	; 0x788 <fputc+0x38>
 778:	a0 81       	ld	r26, Z
 77a:	b1 81       	ldd	r27, Z+1	; 0x01
 77c:	9d 01       	movw	r18, r26
 77e:	2f 5f       	subi	r18, 0xFF	; 255
 780:	3f 4f       	sbci	r19, 0xFF	; 255
 782:	31 83       	std	Z+1, r19	; 0x01
 784:	20 83       	st	Z, r18
 786:	8c 93       	st	X, r24
 788:	26 81       	ldd	r18, Z+6	; 0x06
 78a:	37 81       	ldd	r19, Z+7	; 0x07
 78c:	2f 5f       	subi	r18, 0xFF	; 255
 78e:	3f 4f       	sbci	r19, 0xFF	; 255
 790:	37 83       	std	Z+7, r19	; 0x07
 792:	26 83       	std	Z+6, r18	; 0x06
 794:	14 c0       	rjmp	.+40     	; 0x7be <fputc+0x6e>
 796:	8b 01       	movw	r16, r22
 798:	ec 01       	movw	r28, r24
 79a:	fb 01       	movw	r30, r22
 79c:	00 84       	ldd	r0, Z+8	; 0x08
 79e:	f1 85       	ldd	r31, Z+9	; 0x09
 7a0:	e0 2d       	mov	r30, r0
 7a2:	09 95       	icall
 7a4:	89 2b       	or	r24, r25
 7a6:	e1 f6       	brne	.-72     	; 0x760 <fputc+0x10>
 7a8:	d8 01       	movw	r26, r16
 7aa:	16 96       	adiw	r26, 0x06	; 6
 7ac:	8d 91       	ld	r24, X+
 7ae:	9c 91       	ld	r25, X
 7b0:	17 97       	sbiw	r26, 0x07	; 7
 7b2:	01 96       	adiw	r24, 0x01	; 1
 7b4:	17 96       	adiw	r26, 0x07	; 7
 7b6:	9c 93       	st	X, r25
 7b8:	8e 93       	st	-X, r24
 7ba:	16 97       	sbiw	r26, 0x06	; 6
 7bc:	ce 01       	movw	r24, r28
 7be:	df 91       	pop	r29
 7c0:	cf 91       	pop	r28
 7c2:	1f 91       	pop	r17
 7c4:	0f 91       	pop	r16
 7c6:	08 95       	ret

000007c8 <__ultoa_invert>:
 7c8:	fa 01       	movw	r30, r20
 7ca:	aa 27       	eor	r26, r26
 7cc:	28 30       	cpi	r18, 0x08	; 8
 7ce:	51 f1       	breq	.+84     	; 0x824 <__DATA_REGION_LENGTH__+0x24>
 7d0:	20 31       	cpi	r18, 0x10	; 16
 7d2:	81 f1       	breq	.+96     	; 0x834 <__DATA_REGION_LENGTH__+0x34>
 7d4:	e8 94       	clt
 7d6:	6f 93       	push	r22
 7d8:	6e 7f       	andi	r22, 0xFE	; 254
 7da:	6e 5f       	subi	r22, 0xFE	; 254
 7dc:	7f 4f       	sbci	r23, 0xFF	; 255
 7de:	8f 4f       	sbci	r24, 0xFF	; 255
 7e0:	9f 4f       	sbci	r25, 0xFF	; 255
 7e2:	af 4f       	sbci	r26, 0xFF	; 255
 7e4:	b1 e0       	ldi	r27, 0x01	; 1
 7e6:	3e d0       	rcall	.+124    	; 0x864 <__stack+0x5>
 7e8:	b4 e0       	ldi	r27, 0x04	; 4
 7ea:	3c d0       	rcall	.+120    	; 0x864 <__stack+0x5>
 7ec:	67 0f       	add	r22, r23
 7ee:	78 1f       	adc	r23, r24
 7f0:	89 1f       	adc	r24, r25
 7f2:	9a 1f       	adc	r25, r26
 7f4:	a1 1d       	adc	r26, r1
 7f6:	68 0f       	add	r22, r24
 7f8:	79 1f       	adc	r23, r25
 7fa:	8a 1f       	adc	r24, r26
 7fc:	91 1d       	adc	r25, r1
 7fe:	a1 1d       	adc	r26, r1
 800:	6a 0f       	add	r22, r26
 802:	71 1d       	adc	r23, r1
 804:	81 1d       	adc	r24, r1
 806:	91 1d       	adc	r25, r1
 808:	a1 1d       	adc	r26, r1
 80a:	20 d0       	rcall	.+64     	; 0x84c <__DATA_REGION_LENGTH__+0x4c>
 80c:	09 f4       	brne	.+2      	; 0x810 <__DATA_REGION_LENGTH__+0x10>
 80e:	68 94       	set
 810:	3f 91       	pop	r19
 812:	2a e0       	ldi	r18, 0x0A	; 10
 814:	26 9f       	mul	r18, r22
 816:	11 24       	eor	r1, r1
 818:	30 19       	sub	r19, r0
 81a:	30 5d       	subi	r19, 0xD0	; 208
 81c:	31 93       	st	Z+, r19
 81e:	de f6       	brtc	.-74     	; 0x7d6 <__ultoa_invert+0xe>
 820:	cf 01       	movw	r24, r30
 822:	08 95       	ret
 824:	46 2f       	mov	r20, r22
 826:	47 70       	andi	r20, 0x07	; 7
 828:	40 5d       	subi	r20, 0xD0	; 208
 82a:	41 93       	st	Z+, r20
 82c:	b3 e0       	ldi	r27, 0x03	; 3
 82e:	0f d0       	rcall	.+30     	; 0x84e <__DATA_REGION_LENGTH__+0x4e>
 830:	c9 f7       	brne	.-14     	; 0x824 <__DATA_REGION_LENGTH__+0x24>
 832:	f6 cf       	rjmp	.-20     	; 0x820 <__DATA_REGION_LENGTH__+0x20>
 834:	46 2f       	mov	r20, r22
 836:	4f 70       	andi	r20, 0x0F	; 15
 838:	40 5d       	subi	r20, 0xD0	; 208
 83a:	4a 33       	cpi	r20, 0x3A	; 58
 83c:	18 f0       	brcs	.+6      	; 0x844 <__DATA_REGION_LENGTH__+0x44>
 83e:	49 5d       	subi	r20, 0xD9	; 217
 840:	31 fd       	sbrc	r19, 1
 842:	40 52       	subi	r20, 0x20	; 32
 844:	41 93       	st	Z+, r20
 846:	02 d0       	rcall	.+4      	; 0x84c <__DATA_REGION_LENGTH__+0x4c>
 848:	a9 f7       	brne	.-22     	; 0x834 <__DATA_REGION_LENGTH__+0x34>
 84a:	ea cf       	rjmp	.-44     	; 0x820 <__DATA_REGION_LENGTH__+0x20>
 84c:	b4 e0       	ldi	r27, 0x04	; 4
 84e:	a6 95       	lsr	r26
 850:	97 95       	ror	r25
 852:	87 95       	ror	r24
 854:	77 95       	ror	r23
 856:	67 95       	ror	r22
 858:	ba 95       	dec	r27
 85a:	c9 f7       	brne	.-14     	; 0x84e <__DATA_REGION_LENGTH__+0x4e>
 85c:	00 97       	sbiw	r24, 0x00	; 0
 85e:	61 05       	cpc	r22, r1
 860:	71 05       	cpc	r23, r1
 862:	08 95       	ret
 864:	9b 01       	movw	r18, r22
 866:	ac 01       	movw	r20, r24
 868:	0a 2e       	mov	r0, r26
 86a:	06 94       	lsr	r0
 86c:	57 95       	ror	r21
 86e:	47 95       	ror	r20
 870:	37 95       	ror	r19
 872:	27 95       	ror	r18
 874:	ba 95       	dec	r27
 876:	c9 f7       	brne	.-14     	; 0x86a <__stack+0xb>
 878:	62 0f       	add	r22, r18
 87a:	73 1f       	adc	r23, r19
 87c:	84 1f       	adc	r24, r20
 87e:	95 1f       	adc	r25, r21
 880:	a0 1d       	adc	r26, r0
 882:	08 95       	ret

00000884 <__prologue_saves__>:
 884:	2f 92       	push	r2
 886:	3f 92       	push	r3
 888:	4f 92       	push	r4
 88a:	5f 92       	push	r5
 88c:	6f 92       	push	r6
 88e:	7f 92       	push	r7
 890:	8f 92       	push	r8
 892:	9f 92       	push	r9
 894:	af 92       	push	r10
 896:	bf 92       	push	r11
 898:	cf 92       	push	r12
 89a:	df 92       	push	r13
 89c:	ef 92       	push	r14
 89e:	ff 92       	push	r15
 8a0:	0f 93       	push	r16
 8a2:	1f 93       	push	r17
 8a4:	cf 93       	push	r28
 8a6:	df 93       	push	r29
 8a8:	cd b7       	in	r28, 0x3d	; 61
 8aa:	de b7       	in	r29, 0x3e	; 62
 8ac:	ca 1b       	sub	r28, r26
 8ae:	db 0b       	sbc	r29, r27
 8b0:	0f b6       	in	r0, 0x3f	; 63
 8b2:	f8 94       	cli
 8b4:	de bf       	out	0x3e, r29	; 62
 8b6:	0f be       	out	0x3f, r0	; 63
 8b8:	cd bf       	out	0x3d, r28	; 61
 8ba:	09 94       	ijmp

000008bc <__epilogue_restores__>:
 8bc:	2a 88       	ldd	r2, Y+18	; 0x12
 8be:	39 88       	ldd	r3, Y+17	; 0x11
 8c0:	48 88       	ldd	r4, Y+16	; 0x10
 8c2:	5f 84       	ldd	r5, Y+15	; 0x0f
 8c4:	6e 84       	ldd	r6, Y+14	; 0x0e
 8c6:	7d 84       	ldd	r7, Y+13	; 0x0d
 8c8:	8c 84       	ldd	r8, Y+12	; 0x0c
 8ca:	9b 84       	ldd	r9, Y+11	; 0x0b
 8cc:	aa 84       	ldd	r10, Y+10	; 0x0a
 8ce:	b9 84       	ldd	r11, Y+9	; 0x09
 8d0:	c8 84       	ldd	r12, Y+8	; 0x08
 8d2:	df 80       	ldd	r13, Y+7	; 0x07
 8d4:	ee 80       	ldd	r14, Y+6	; 0x06
 8d6:	fd 80       	ldd	r15, Y+5	; 0x05
 8d8:	0c 81       	ldd	r16, Y+4	; 0x04
 8da:	1b 81       	ldd	r17, Y+3	; 0x03
 8dc:	aa 81       	ldd	r26, Y+2	; 0x02
 8de:	b9 81       	ldd	r27, Y+1	; 0x01
 8e0:	ce 0f       	add	r28, r30
 8e2:	d1 1d       	adc	r29, r1
 8e4:	0f b6       	in	r0, 0x3f	; 63
 8e6:	f8 94       	cli
 8e8:	de bf       	out	0x3e, r29	; 62
 8ea:	0f be       	out	0x3f, r0	; 63
 8ec:	cd bf       	out	0x3d, r28	; 61
 8ee:	ed 01       	movw	r28, r26
 8f0:	08 95       	ret

000008f2 <_exit>:
 8f2:	f8 94       	cli

000008f4 <__stop_program>:
 8f4:	ff cf       	rjmp	.-2      	; 0x8f4 <__stop_program>
