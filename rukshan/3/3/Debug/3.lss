
3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000003a0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000032c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00800100  00800100  000003a0  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000003a0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000003d0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000030  00000000  00000000  00000410  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000006fc  00000000  00000000  00000440  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000635  00000000  00000000  00000b3c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000003a2  00000000  00000000  00001171  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000088  00000000  00000000  00001514  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003a1  00000000  00000000  0000159c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000000d3  00000000  00000000  0000193d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000020  00000000  00000000  00001a10  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 48 00 	jmp	0x90	; 0x90 <__ctors_end>
   4:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
   8:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
   c:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  10:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  14:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  18:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  1c:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  20:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  24:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  28:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  2c:	0c 94 9a 00 	jmp	0x134	; 0x134 <__vector_11>
  30:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  34:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  38:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__vector_14>
  3c:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  40:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  44:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  48:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  4c:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  50:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  54:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  58:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  5c:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  60:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  64:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  68:	2a 01       	movw	r4, r20
  6a:	2d 01       	movw	r4, r26
  6c:	30 01       	movw	r6, r0
  6e:	33 01       	movw	r6, r6
  70:	36 01       	movw	r6, r12
  72:	39 01       	movw	r6, r18
  74:	3c 01       	movw	r6, r24
  76:	3f 01       	movw	r6, r30
  78:	42 01       	movw	r8, r4
  7a:	45 01       	movw	r8, r10
  7c:	60 01       	movw	r12, r0
  7e:	63 01       	movw	r12, r6
  80:	66 01       	movw	r12, r12
  82:	69 01       	movw	r12, r18
  84:	6c 01       	movw	r12, r24
  86:	6f 01       	movw	r12, r30
  88:	72 01       	movw	r14, r4
  8a:	75 01       	movw	r14, r10
  8c:	78 01       	movw	r14, r16
  8e:	7b 01       	movw	r14, r22

00000090 <__ctors_end>:
  90:	11 24       	eor	r1, r1
  92:	1f be       	out	0x3f, r1	; 63
  94:	cf ef       	ldi	r28, 0xFF	; 255
  96:	d8 e0       	ldi	r29, 0x08	; 8
  98:	de bf       	out	0x3e, r29	; 62
  9a:	cd bf       	out	0x3d, r28	; 61

0000009c <__do_clear_bss>:
  9c:	21 e0       	ldi	r18, 0x01	; 1
  9e:	a0 e0       	ldi	r26, 0x00	; 0
  a0:	b1 e0       	ldi	r27, 0x01	; 1
  a2:	01 c0       	rjmp	.+2      	; 0xa6 <.do_clear_bss_start>

000000a4 <.do_clear_bss_loop>:
  a4:	1d 92       	st	X+, r1

000000a6 <.do_clear_bss_start>:
  a6:	a4 30       	cpi	r26, 0x04	; 4
  a8:	b2 07       	cpc	r27, r18
  aa:	e1 f7       	brne	.-8      	; 0xa4 <.do_clear_bss_loop>
  ac:	0e 94 5c 00 	call	0xb8	; 0xb8 <main>
  b0:	0c 94 94 01 	jmp	0x328	; 0x328 <_exit>

000000b4 <__bad_interrupt>:
  b4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000b8 <main>:
volatile uint8_t i=0;
volatile bool push=0;
volatile uint8_t segNum=0;
volatile bool segPos=0;
int main(void)
{	DDRB=0b11111111;
  b8:	8f ef       	ldi	r24, 0xFF	; 255
  ba:	84 b9       	out	0x04, r24	; 4
	DDRC|=(0b11111);
  bc:	87 b1       	in	r24, 0x07	; 7
  be:	8f 61       	ori	r24, 0x1F	; 31
  c0:	87 b9       	out	0x07, r24	; 7
	PORTD|=(1<<0);
  c2:	8b b1       	in	r24, 0x0b	; 11
  c4:	81 60       	ori	r24, 0x01	; 1
  c6:	8b b9       	out	0x0b, r24	; 11
	
	TCCR1B|=(1<<WGM12);//ctc
  c8:	e1 e8       	ldi	r30, 0x81	; 129
  ca:	f0 e0       	ldi	r31, 0x00	; 0
  cc:	80 81       	ld	r24, Z
  ce:	88 60       	ori	r24, 0x08	; 8
  d0:	80 83       	st	Z, r24
	TCCR1B|=(1<<CS12); //prescaler=256
  d2:	80 81       	ld	r24, Z
  d4:	84 60       	ori	r24, 0x04	; 4
  d6:	80 83       	st	Z, r24
	TCNT1=0;
  d8:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
  dc:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
	OCR1A=31250;
  e0:	82 e1       	ldi	r24, 0x12	; 18
  e2:	9a e7       	ldi	r25, 0x7A	; 122
  e4:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
  e8:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
	TIMSK1|=(1<<OCIE1A);
  ec:	ef e6       	ldi	r30, 0x6F	; 111
  ee:	f0 e0       	ldi	r31, 0x00	; 0
  f0:	80 81       	ld	r24, Z
  f2:	82 60       	ori	r24, 0x02	; 2
  f4:	80 83       	st	Z, r24
	//
	TCCR0A|=(1<<WGM01);
  f6:	84 b5       	in	r24, 0x24	; 36
  f8:	82 60       	ori	r24, 0x02	; 2
  fa:	84 bd       	out	0x24, r24	; 36
	TCCR0B|=(0b11);//64
  fc:	85 b5       	in	r24, 0x25	; 37
  fe:	83 60       	ori	r24, 0x03	; 3
 100:	85 bd       	out	0x25, r24	; 37
	TCNT0=0;
 102:	16 bc       	out	0x26, r1	; 38
	OCR0A=125;
 104:	8d e7       	ldi	r24, 0x7D	; 125
 106:	87 bd       	out	0x27, r24	; 39
	TIMSK0|=(1<<OCIE0A);
 108:	ee e6       	ldi	r30, 0x6E	; 110
 10a:	f0 e0       	ldi	r31, 0x00	; 0
 10c:	80 81       	ld	r24, Z
 10e:	82 60       	ori	r24, 0x02	; 2
 110:	80 83       	st	Z, r24
	sei();
 112:	78 94       	sei
	while (1)
	{if ((!push)&&(!(PIND&1)))
 114:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <push>
 118:	81 11       	cpse	r24, r1
 11a:	03 c0       	rjmp	.+6      	; 0x122 <main+0x6a>
 11c:	48 9b       	sbis	0x09, 0	; 9
 11e:	03 c0       	rjmp	.+6      	; 0x126 <main+0x6e>
 120:	03 c0       	rjmp	.+6      	; 0x128 <main+0x70>
 122:	80 e0       	ldi	r24, 0x00	; 0
 124:	01 c0       	rjmp	.+2      	; 0x128 <main+0x70>
 126:	81 e0       	ldi	r24, 0x01	; 1
 128:	88 23       	and	r24, r24
 12a:	a1 f3       	breq	.-24     	; 0x114 <main+0x5c>
	{push=1;
 12c:	81 e0       	ldi	r24, 0x01	; 1
 12e:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <push>
 132:	f0 cf       	rjmp	.-32     	; 0x114 <main+0x5c>

00000134 <__vector_11>:
	}
	}
}

ISR(TIMER1_COMPA_vect){
 134:	1f 92       	push	r1
 136:	0f 92       	push	r0
 138:	0f b6       	in	r0, 0x3f	; 63
 13a:	0f 92       	push	r0
 13c:	11 24       	eor	r1, r1
 13e:	2f 93       	push	r18
 140:	8f 93       	push	r24
 142:	9f 93       	push	r25
	TCNT1=0;
 144:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
 148:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
	if (push)
 14c:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <push>
 150:	88 23       	and	r24, r24
 152:	e1 f1       	breq	.+120    	; 0x1cc <__vector_11+0x98>
	{i++;
 154:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <i>
 158:	9f 5f       	subi	r25, 0xFF	; 255
 15a:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <i>
	
	if ((i)&&(i<6))
 15e:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <i>
 162:	99 23       	and	r25, r25
 164:	31 f0       	breq	.+12     	; 0x172 <__vector_11+0x3e>
 166:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <i>
 16a:	96 30       	cpi	r25, 0x06	; 6
 16c:	20 f0       	brcs	.+8      	; 0x176 <__vector_11+0x42>
 16e:	90 e0       	ldi	r25, 0x00	; 0
 170:	03 c0       	rjmp	.+6      	; 0x178 <__vector_11+0x44>
 172:	90 e0       	ldi	r25, 0x00	; 0
 174:	01 c0       	rjmp	.+2      	; 0x178 <__vector_11+0x44>
 176:	98 2f       	mov	r25, r24
 178:	99 23       	and	r25, r25
 17a:	39 f0       	breq	.+14     	; 0x18a <__vector_11+0x56>
	{segNum=0;
 17c:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <segNum>
		PORTC=(PORTC&0b00000011)|0b001000;
 180:	88 b1       	in	r24, 0x08	; 8
 182:	83 70       	andi	r24, 0x03	; 3
 184:	88 60       	ori	r24, 0x08	; 8
 186:	88 b9       	out	0x08, r24	; 8
 188:	2b c0       	rjmp	.+86     	; 0x1e0 <__vector_11+0xac>
		
	}
	else if ((i)&&(i<16))
 18a:	20 91 03 01 	lds	r18, 0x0103	; 0x800103 <i>
 18e:	22 23       	and	r18, r18
 190:	29 f0       	breq	.+10     	; 0x19c <__vector_11+0x68>
 192:	20 91 03 01 	lds	r18, 0x0103	; 0x800103 <i>
 196:	20 31       	cpi	r18, 0x10	; 16
 198:	08 f4       	brcc	.+2      	; 0x19c <__vector_11+0x68>
 19a:	98 2f       	mov	r25, r24
 19c:	99 23       	and	r25, r25
 19e:	59 f0       	breq	.+22     	; 0x1b6 <__vector_11+0x82>
	{segNum=15-i;
 1a0:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <i>
 1a4:	8f e0       	ldi	r24, 0x0F	; 15
 1a6:	89 1b       	sub	r24, r25
 1a8:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <segNum>
		PORTC=(PORTC&0b00000011)|0b000100;
 1ac:	88 b1       	in	r24, 0x08	; 8
 1ae:	83 70       	andi	r24, 0x03	; 3
 1b0:	84 60       	ori	r24, 0x04	; 4
 1b2:	88 b9       	out	0x08, r24	; 8
 1b4:	15 c0       	rjmp	.+42     	; 0x1e0 <__vector_11+0xac>
	}
	else 
	{segNum=0;push=0;i=0;
 1b6:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <segNum>
 1ba:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <push>
 1be:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <i>
		PORTC=(PORTC&0b00000011)|0b010000;
 1c2:	88 b1       	in	r24, 0x08	; 8
 1c4:	83 70       	andi	r24, 0x03	; 3
 1c6:	80 61       	ori	r24, 0x10	; 16
 1c8:	88 b9       	out	0x08, r24	; 8
 1ca:	0a c0       	rjmp	.+20     	; 0x1e0 <__vector_11+0xac>
	}
	}
	else {
	segNum=0;push=0;i=0;
 1cc:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <segNum>
 1d0:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <push>
 1d4:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <i>
	PORTC=(PORTC&0b00000011)|0b010000;	
 1d8:	88 b1       	in	r24, 0x08	; 8
 1da:	83 70       	andi	r24, 0x03	; 3
 1dc:	80 61       	ori	r24, 0x10	; 16
 1de:	88 b9       	out	0x08, r24	; 8
	//PORTB=0b111;//7
	//PORTB=0b1111111;//8
	//PORTB=0b1100111;//9
	//PORTB=0b111111;//0
	
}
 1e0:	9f 91       	pop	r25
 1e2:	8f 91       	pop	r24
 1e4:	2f 91       	pop	r18
 1e6:	0f 90       	pop	r0
 1e8:	0f be       	out	0x3f, r0	; 63
 1ea:	0f 90       	pop	r0
 1ec:	1f 90       	pop	r1
 1ee:	18 95       	reti

000001f0 <__vector_14>:
ISR(TIMER0_COMPA_vect){
 1f0:	1f 92       	push	r1
 1f2:	0f 92       	push	r0
 1f4:	0f b6       	in	r0, 0x3f	; 63
 1f6:	0f 92       	push	r0
 1f8:	11 24       	eor	r1, r1
 1fa:	8f 93       	push	r24
 1fc:	9f 93       	push	r25
 1fe:	af 93       	push	r26
 200:	bf 93       	push	r27
 202:	ef 93       	push	r30
 204:	ff 93       	push	r31
	TCNT0=0;
 206:	16 bc       	out	0x26, r1	; 38
	
	if (segPos)
 208:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 20c:	88 23       	and	r24, r24
 20e:	09 f4       	brne	.+2      	; 0x212 <__vector_14+0x22>
 210:	3f c0       	rjmp	.+126    	; 0x290 <__vector_14+0xa0>
	{PORTC=(PORTC&0b11111100)|0b01;
 212:	88 b1       	in	r24, 0x08	; 8
 214:	8c 7f       	andi	r24, 0xFC	; 252
 216:	81 60       	ori	r24, 0x01	; 1
 218:	88 b9       	out	0x08, r24	; 8
		switch(segNum%10){
 21a:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <segNum>
 21e:	8d ec       	ldi	r24, 0xCD	; 205
 220:	98 9f       	mul	r25, r24
 222:	81 2d       	mov	r24, r1
 224:	11 24       	eor	r1, r1
 226:	e8 2f       	mov	r30, r24
 228:	e6 95       	lsr	r30
 22a:	e6 95       	lsr	r30
 22c:	e6 95       	lsr	r30
 22e:	8e 2f       	mov	r24, r30
 230:	88 0f       	add	r24, r24
 232:	e8 2f       	mov	r30, r24
 234:	ee 0f       	add	r30, r30
 236:	ee 0f       	add	r30, r30
 238:	8e 0f       	add	r24, r30
 23a:	e9 2f       	mov	r30, r25
 23c:	e8 1b       	sub	r30, r24
 23e:	8e 2f       	mov	r24, r30
 240:	90 e0       	ldi	r25, 0x00	; 0
 242:	8a 30       	cpi	r24, 0x0A	; 10
 244:	91 05       	cpc	r25, r1
 246:	08 f0       	brcs	.+2      	; 0x24a <__vector_14+0x5a>
 248:	58 c0       	rjmp	.+176    	; 0x2fa <__vector_14+0x10a>
 24a:	fc 01       	movw	r30, r24
 24c:	ec 5c       	subi	r30, 0xCC	; 204
 24e:	ff 4f       	sbci	r31, 0xFF	; 255
 250:	0c 94 8e 01 	jmp	0x31c	; 0x31c <__tablejump2__>
			case 0:PORTB=0b111111;break;
 254:	8f e3       	ldi	r24, 0x3F	; 63
 256:	85 b9       	out	0x05, r24	; 5
 258:	50 c0       	rjmp	.+160    	; 0x2fa <__vector_14+0x10a>
			case 1:PORTB=0b110;break;
 25a:	86 e0       	ldi	r24, 0x06	; 6
 25c:	85 b9       	out	0x05, r24	; 5
 25e:	4d c0       	rjmp	.+154    	; 0x2fa <__vector_14+0x10a>
			case 2:PORTB=0b1011011;break;
 260:	8b e5       	ldi	r24, 0x5B	; 91
 262:	85 b9       	out	0x05, r24	; 5
 264:	4a c0       	rjmp	.+148    	; 0x2fa <__vector_14+0x10a>
			case 3:PORTB=0b1001111;break;
 266:	8f e4       	ldi	r24, 0x4F	; 79
 268:	85 b9       	out	0x05, r24	; 5
 26a:	47 c0       	rjmp	.+142    	; 0x2fa <__vector_14+0x10a>
			case 4:PORTB=0b1100110;break;
 26c:	86 e6       	ldi	r24, 0x66	; 102
 26e:	85 b9       	out	0x05, r24	; 5
 270:	44 c0       	rjmp	.+136    	; 0x2fa <__vector_14+0x10a>
			case 5:PORTB=0b1101101;break;
 272:	8d e6       	ldi	r24, 0x6D	; 109
 274:	85 b9       	out	0x05, r24	; 5
 276:	41 c0       	rjmp	.+130    	; 0x2fa <__vector_14+0x10a>
			case 6:PORTB=0b1111101;break;
 278:	8d e7       	ldi	r24, 0x7D	; 125
 27a:	85 b9       	out	0x05, r24	; 5
 27c:	3e c0       	rjmp	.+124    	; 0x2fa <__vector_14+0x10a>
			case 7:PORTB=0b111;break;
 27e:	87 e0       	ldi	r24, 0x07	; 7
 280:	85 b9       	out	0x05, r24	; 5
 282:	3b c0       	rjmp	.+118    	; 0x2fa <__vector_14+0x10a>
			case 8:PORTB=0b1111111;break;
 284:	8f e7       	ldi	r24, 0x7F	; 127
 286:	85 b9       	out	0x05, r24	; 5
 288:	38 c0       	rjmp	.+112    	; 0x2fa <__vector_14+0x10a>
			case 9:PORTB=0b1100111;break;
 28a:	87 e6       	ldi	r24, 0x67	; 103
 28c:	85 b9       	out	0x05, r24	; 5
 28e:	35 c0       	rjmp	.+106    	; 0x2fa <__vector_14+0x10a>
		}
	}
	else
	{PORTC=(PORTC&0b11111100)|0b10;
 290:	88 b1       	in	r24, 0x08	; 8
 292:	8c 7f       	andi	r24, 0xFC	; 252
 294:	82 60       	ori	r24, 0x02	; 2
 296:	88 b9       	out	0x08, r24	; 8
		switch(segNum/10){
 298:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <segNum>
 29c:	ed ec       	ldi	r30, 0xCD	; 205
 29e:	8e 9f       	mul	r24, r30
 2a0:	81 2d       	mov	r24, r1
 2a2:	11 24       	eor	r1, r1
 2a4:	e8 2f       	mov	r30, r24
 2a6:	e6 95       	lsr	r30
 2a8:	e6 95       	lsr	r30
 2aa:	e6 95       	lsr	r30
 2ac:	8e 2f       	mov	r24, r30
 2ae:	90 e0       	ldi	r25, 0x00	; 0
 2b0:	8a 30       	cpi	r24, 0x0A	; 10
 2b2:	91 05       	cpc	r25, r1
 2b4:	10 f5       	brcc	.+68     	; 0x2fa <__vector_14+0x10a>
 2b6:	fc 01       	movw	r30, r24
 2b8:	e2 5c       	subi	r30, 0xC2	; 194
 2ba:	ff 4f       	sbci	r31, 0xFF	; 255
 2bc:	0c 94 8e 01 	jmp	0x31c	; 0x31c <__tablejump2__>
			case 0:PORTB=0b111111;break;
 2c0:	8f e3       	ldi	r24, 0x3F	; 63
 2c2:	85 b9       	out	0x05, r24	; 5
 2c4:	1a c0       	rjmp	.+52     	; 0x2fa <__vector_14+0x10a>
			case 1:PORTB=0b110;break;
 2c6:	86 e0       	ldi	r24, 0x06	; 6
 2c8:	85 b9       	out	0x05, r24	; 5
 2ca:	17 c0       	rjmp	.+46     	; 0x2fa <__vector_14+0x10a>
			case 2:PORTB=0b1011011;break;
 2cc:	8b e5       	ldi	r24, 0x5B	; 91
 2ce:	85 b9       	out	0x05, r24	; 5
 2d0:	14 c0       	rjmp	.+40     	; 0x2fa <__vector_14+0x10a>
			case 3:PORTB=0b1001111;break;
 2d2:	8f e4       	ldi	r24, 0x4F	; 79
 2d4:	85 b9       	out	0x05, r24	; 5
 2d6:	11 c0       	rjmp	.+34     	; 0x2fa <__vector_14+0x10a>
			case 4:PORTB=0b1100110;break;
 2d8:	86 e6       	ldi	r24, 0x66	; 102
 2da:	85 b9       	out	0x05, r24	; 5
 2dc:	0e c0       	rjmp	.+28     	; 0x2fa <__vector_14+0x10a>
			case 5:PORTB=0b1101101;break;
 2de:	8d e6       	ldi	r24, 0x6D	; 109
 2e0:	85 b9       	out	0x05, r24	; 5
 2e2:	0b c0       	rjmp	.+22     	; 0x2fa <__vector_14+0x10a>
			case 6:PORTB=0b1111101;break;
 2e4:	8d e7       	ldi	r24, 0x7D	; 125
 2e6:	85 b9       	out	0x05, r24	; 5
 2e8:	08 c0       	rjmp	.+16     	; 0x2fa <__vector_14+0x10a>
			case 7:PORTB=0b111;break;
 2ea:	87 e0       	ldi	r24, 0x07	; 7
 2ec:	85 b9       	out	0x05, r24	; 5
 2ee:	05 c0       	rjmp	.+10     	; 0x2fa <__vector_14+0x10a>
			case 8:PORTB=0b1111111;break;
 2f0:	8f e7       	ldi	r24, 0x7F	; 127
 2f2:	85 b9       	out	0x05, r24	; 5
 2f4:	02 c0       	rjmp	.+4      	; 0x2fa <__vector_14+0x10a>
			case 9:PORTB=0b1100111;break;
 2f6:	87 e6       	ldi	r24, 0x67	; 103
 2f8:	85 b9       	out	0x05, r24	; 5
		}
	}
	segPos=!segPos;
 2fa:	90 91 00 01 	lds	r25, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 2fe:	81 e0       	ldi	r24, 0x01	; 1
 300:	89 27       	eor	r24, r25
 302:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
}
 306:	ff 91       	pop	r31
 308:	ef 91       	pop	r30
 30a:	bf 91       	pop	r27
 30c:	af 91       	pop	r26
 30e:	9f 91       	pop	r25
 310:	8f 91       	pop	r24
 312:	0f 90       	pop	r0
 314:	0f be       	out	0x3f, r0	; 63
 316:	0f 90       	pop	r0
 318:	1f 90       	pop	r1
 31a:	18 95       	reti

0000031c <__tablejump2__>:
 31c:	ee 0f       	add	r30, r30
 31e:	ff 1f       	adc	r31, r31
 320:	05 90       	lpm	r0, Z+
 322:	f4 91       	lpm	r31, Z
 324:	e0 2d       	mov	r30, r0
 326:	09 94       	ijmp

00000328 <_exit>:
 328:	f8 94       	cli

0000032a <__stop_program>:
 32a:	ff cf       	rjmp	.-2      	; 0x32a <__stop_program>
