
2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000002  00800100  000002ea  0000037e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000002ea  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800102  00800102  00000380  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000380  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000003b0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000030  00000000  00000000  000003f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000006ea  00000000  00000000  00000420  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000635  00000000  00000000  00000b0a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000336  00000000  00000000  0000113f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000080  00000000  00000000  00001478  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000039c  00000000  00000000  000014f8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000000c6  00000000  00000000  00001894  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000020  00000000  00000000  0000195a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 48 00 	jmp	0x90	; 0x90 <__ctors_end>
   4:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
   8:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
   c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  10:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  14:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  18:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  1c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  20:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  24:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  28:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  2c:	0c 94 93 00 	jmp	0x126	; 0x126 <__vector_11>
  30:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  34:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  38:	0c 94 d7 00 	jmp	0x1ae	; 0x1ae <__vector_14>
  3c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  40:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  44:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  48:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  4c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  50:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  54:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  58:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  5c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  60:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  64:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  68:	09 01       	movw	r0, r18
  6a:	0c 01       	movw	r0, r24
  6c:	0f 01       	movw	r0, r30
  6e:	12 01       	movw	r2, r4
  70:	15 01       	movw	r2, r10
  72:	18 01       	movw	r2, r16
  74:	1b 01       	movw	r2, r22
  76:	1e 01       	movw	r2, r28
  78:	21 01       	movw	r4, r2
  7a:	24 01       	movw	r4, r8
  7c:	3f 01       	movw	r6, r30
  7e:	42 01       	movw	r8, r4
  80:	45 01       	movw	r8, r10
  82:	48 01       	movw	r8, r16
  84:	4b 01       	movw	r8, r22
  86:	4e 01       	movw	r8, r28
  88:	51 01       	movw	r10, r2
  8a:	54 01       	movw	r10, r8
  8c:	57 01       	movw	r10, r14
  8e:	5a 01       	movw	r10, r20

00000090 <__ctors_end>:
  90:	11 24       	eor	r1, r1
  92:	1f be       	out	0x3f, r1	; 63
  94:	cf ef       	ldi	r28, 0xFF	; 255
  96:	d8 e0       	ldi	r29, 0x08	; 8
  98:	de bf       	out	0x3e, r29	; 62
  9a:	cd bf       	out	0x3d, r28	; 61

0000009c <__do_copy_data>:
  9c:	11 e0       	ldi	r17, 0x01	; 1
  9e:	a0 e0       	ldi	r26, 0x00	; 0
  a0:	b1 e0       	ldi	r27, 0x01	; 1
  a2:	ea ee       	ldi	r30, 0xEA	; 234
  a4:	f2 e0       	ldi	r31, 0x02	; 2
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x10>
  a8:	05 90       	lpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a2 30       	cpi	r26, 0x02	; 2
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0xc>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a2 e0       	ldi	r26, 0x02	; 2
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a4 30       	cpi	r26, 0x04	; 4
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	0e 94 67 00 	call	0xce	; 0xce <main>
  c6:	0c 94 73 01 	jmp	0x2e6	; 0x2e6 <_exit>

000000ca <__bad_interrupt>:
  ca:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ce <main>:

volatile uint8_t i=80;
volatile uint8_t segNum=0;
volatile bool segPos=0;
int main(void)
{	DDRB=0b11111111;
  ce:	8f ef       	ldi	r24, 0xFF	; 255
  d0:	84 b9       	out	0x04, r24	; 4
	DDRC|=(0b11111);
  d2:	87 b1       	in	r24, 0x07	; 7
  d4:	8f 61       	ori	r24, 0x1F	; 31
  d6:	87 b9       	out	0x07, r24	; 7
	//PORTC|=(0b11);
	TCCR1B|=(1<<WGM12);//ctc
  d8:	e1 e8       	ldi	r30, 0x81	; 129
  da:	f0 e0       	ldi	r31, 0x00	; 0
  dc:	80 81       	ld	r24, Z
  de:	88 60       	ori	r24, 0x08	; 8
  e0:	80 83       	st	Z, r24
	TCCR1B|=(1<<CS12); //prescaler=256
  e2:	80 81       	ld	r24, Z
  e4:	84 60       	ori	r24, 0x04	; 4
  e6:	80 83       	st	Z, r24
	TCNT1=0;
  e8:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
  ec:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
	OCR1A=31250;
  f0:	82 e1       	ldi	r24, 0x12	; 18
  f2:	9a e7       	ldi	r25, 0x7A	; 122
  f4:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
  f8:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
	TIMSK1|=(1<<OCIE1A);
  fc:	ef e6       	ldi	r30, 0x6F	; 111
  fe:	f0 e0       	ldi	r31, 0x00	; 0
 100:	80 81       	ld	r24, Z
 102:	82 60       	ori	r24, 0x02	; 2
 104:	80 83       	st	Z, r24
	//
	TCCR0A|=(1<<WGM01);
 106:	84 b5       	in	r24, 0x24	; 36
 108:	82 60       	ori	r24, 0x02	; 2
 10a:	84 bd       	out	0x24, r24	; 36
	TCCR0B|=(0b11);//64
 10c:	85 b5       	in	r24, 0x25	; 37
 10e:	83 60       	ori	r24, 0x03	; 3
 110:	85 bd       	out	0x25, r24	; 37
	TCNT0=0;
 112:	16 bc       	out	0x26, r1	; 38
	OCR0A=125;
 114:	8d e7       	ldi	r24, 0x7D	; 125
 116:	87 bd       	out	0x27, r24	; 39
	TIMSK0|=(1<<OCIE0A);
 118:	ee e6       	ldi	r30, 0x6E	; 110
 11a:	f0 e0       	ldi	r31, 0x00	; 0
 11c:	80 81       	ld	r24, Z
 11e:	82 60       	ori	r24, 0x02	; 2
 120:	80 83       	st	Z, r24
	sei();
 122:	78 94       	sei
 124:	ff cf       	rjmp	.-2      	; 0x124 <main+0x56>

00000126 <__vector_11>:
	while (1)
	{
	}
}

ISR(TIMER1_COMPA_vect){
 126:	1f 92       	push	r1
 128:	0f 92       	push	r0
 12a:	0f b6       	in	r0, 0x3f	; 63
 12c:	0f 92       	push	r0
 12e:	11 24       	eor	r1, r1
 130:	8f 93       	push	r24
 132:	9f 93       	push	r25
	TCNT1=0;
 134:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
 138:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
	i++;
 13c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 140:	8f 5f       	subi	r24, 0xFF	; 255
 142:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
	if (i<90)
 146:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 14a:	8a 35       	cpi	r24, 0x5A	; 90
 14c:	58 f4       	brcc	.+22     	; 0x164 <__vector_11+0x3e>
	{segNum=100-i;
 14e:	90 91 00 01 	lds	r25, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 152:	84 e6       	ldi	r24, 0x64	; 100
 154:	89 1b       	sub	r24, r25
 156:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <segNum>
	PORTC=(PORTC&0b00000011)|0b010000;
 15a:	88 b1       	in	r24, 0x08	; 8
 15c:	83 70       	andi	r24, 0x03	; 3
 15e:	80 61       	ori	r24, 0x10	; 16
 160:	88 b9       	out	0x08, r24	; 8
 162:	1e c0       	rjmp	.+60     	; 0x1a0 <__vector_11+0x7a>
	
	}
	else if (i<100)
 164:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 168:	84 36       	cpi	r24, 0x64	; 100
 16a:	58 f4       	brcc	.+22     	; 0x182 <__vector_11+0x5c>
	{segNum=100-i;
 16c:	90 91 00 01 	lds	r25, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 170:	84 e6       	ldi	r24, 0x64	; 100
 172:	89 1b       	sub	r24, r25
 174:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <segNum>
	PORTC=(PORTC&0b00000011)|0b001000;
 178:	88 b1       	in	r24, 0x08	; 8
 17a:	83 70       	andi	r24, 0x03	; 3
 17c:	88 60       	ori	r24, 0x08	; 8
 17e:	88 b9       	out	0x08, r24	; 8
 180:	0f c0       	rjmp	.+30     	; 0x1a0 <__vector_11+0x7a>
	}
	else if (i<199)
 182:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 186:	87 3c       	cpi	r24, 0xC7	; 199
 188:	40 f4       	brcc	.+16     	; 0x19a <__vector_11+0x74>
	{segNum=99;
 18a:	83 e6       	ldi	r24, 0x63	; 99
 18c:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <segNum>
		PORTC=(PORTC&0b00000011)|0b000100;
 190:	88 b1       	in	r24, 0x08	; 8
 192:	83 70       	andi	r24, 0x03	; 3
 194:	84 60       	ori	r24, 0x04	; 4
 196:	88 b9       	out	0x08, r24	; 8
 198:	03 c0       	rjmp	.+6      	; 0x1a0 <__vector_11+0x7a>
	}
	else i=1;
 19a:	81 e0       	ldi	r24, 0x01	; 1
 19c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
	//PORTB=0b111;//7
	//PORTB=0b1111111;//8
	//PORTB=0b1100111;//9
	//PORTB=0b111111;//0
	
}
 1a0:	9f 91       	pop	r25
 1a2:	8f 91       	pop	r24
 1a4:	0f 90       	pop	r0
 1a6:	0f be       	out	0x3f, r0	; 63
 1a8:	0f 90       	pop	r0
 1aa:	1f 90       	pop	r1
 1ac:	18 95       	reti

000001ae <__vector_14>:
ISR(TIMER0_COMPA_vect){
 1ae:	1f 92       	push	r1
 1b0:	0f 92       	push	r0
 1b2:	0f b6       	in	r0, 0x3f	; 63
 1b4:	0f 92       	push	r0
 1b6:	11 24       	eor	r1, r1
 1b8:	8f 93       	push	r24
 1ba:	9f 93       	push	r25
 1bc:	af 93       	push	r26
 1be:	bf 93       	push	r27
 1c0:	ef 93       	push	r30
 1c2:	ff 93       	push	r31
	TCNT0=0;
 1c4:	16 bc       	out	0x26, r1	; 38
	
	if (segPos)
 1c6:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <__data_end>
 1ca:	88 23       	and	r24, r24
 1cc:	09 f4       	brne	.+2      	; 0x1d0 <__vector_14+0x22>
 1ce:	3f c0       	rjmp	.+126    	; 0x24e <__vector_14+0xa0>
	{PORTC=(PORTC&0b11111100)|0b01;
 1d0:	88 b1       	in	r24, 0x08	; 8
 1d2:	8c 7f       	andi	r24, 0xFC	; 252
 1d4:	81 60       	ori	r24, 0x01	; 1
 1d6:	88 b9       	out	0x08, r24	; 8
		switch(segNum%10){
 1d8:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <segNum>
 1dc:	8d ec       	ldi	r24, 0xCD	; 205
 1de:	98 9f       	mul	r25, r24
 1e0:	81 2d       	mov	r24, r1
 1e2:	11 24       	eor	r1, r1
 1e4:	e8 2f       	mov	r30, r24
 1e6:	e6 95       	lsr	r30
 1e8:	e6 95       	lsr	r30
 1ea:	e6 95       	lsr	r30
 1ec:	8e 2f       	mov	r24, r30
 1ee:	88 0f       	add	r24, r24
 1f0:	e8 2f       	mov	r30, r24
 1f2:	ee 0f       	add	r30, r30
 1f4:	ee 0f       	add	r30, r30
 1f6:	8e 0f       	add	r24, r30
 1f8:	e9 2f       	mov	r30, r25
 1fa:	e8 1b       	sub	r30, r24
 1fc:	8e 2f       	mov	r24, r30
 1fe:	90 e0       	ldi	r25, 0x00	; 0
 200:	8a 30       	cpi	r24, 0x0A	; 10
 202:	91 05       	cpc	r25, r1
 204:	08 f0       	brcs	.+2      	; 0x208 <__vector_14+0x5a>
 206:	58 c0       	rjmp	.+176    	; 0x2b8 <__vector_14+0x10a>
 208:	fc 01       	movw	r30, r24
 20a:	ec 5c       	subi	r30, 0xCC	; 204
 20c:	ff 4f       	sbci	r31, 0xFF	; 255
 20e:	0c 94 6d 01 	jmp	0x2da	; 0x2da <__tablejump2__>
			case 0:PORTB=0b111111;break;
 212:	8f e3       	ldi	r24, 0x3F	; 63
 214:	85 b9       	out	0x05, r24	; 5
 216:	50 c0       	rjmp	.+160    	; 0x2b8 <__vector_14+0x10a>
			case 1:PORTB=0b110;break;
 218:	86 e0       	ldi	r24, 0x06	; 6
 21a:	85 b9       	out	0x05, r24	; 5
 21c:	4d c0       	rjmp	.+154    	; 0x2b8 <__vector_14+0x10a>
			case 2:PORTB=0b1011011;break;
 21e:	8b e5       	ldi	r24, 0x5B	; 91
 220:	85 b9       	out	0x05, r24	; 5
 222:	4a c0       	rjmp	.+148    	; 0x2b8 <__vector_14+0x10a>
			case 3:PORTB=0b1001111;break;
 224:	8f e4       	ldi	r24, 0x4F	; 79
 226:	85 b9       	out	0x05, r24	; 5
 228:	47 c0       	rjmp	.+142    	; 0x2b8 <__vector_14+0x10a>
			case 4:PORTB=0b1100110;break;
 22a:	86 e6       	ldi	r24, 0x66	; 102
 22c:	85 b9       	out	0x05, r24	; 5
 22e:	44 c0       	rjmp	.+136    	; 0x2b8 <__vector_14+0x10a>
			case 5:PORTB=0b1101101;break;
 230:	8d e6       	ldi	r24, 0x6D	; 109
 232:	85 b9       	out	0x05, r24	; 5
 234:	41 c0       	rjmp	.+130    	; 0x2b8 <__vector_14+0x10a>
			case 6:PORTB=0b1111101;break;
 236:	8d e7       	ldi	r24, 0x7D	; 125
 238:	85 b9       	out	0x05, r24	; 5
 23a:	3e c0       	rjmp	.+124    	; 0x2b8 <__vector_14+0x10a>
			case 7:PORTB=0b111;break;
 23c:	87 e0       	ldi	r24, 0x07	; 7
 23e:	85 b9       	out	0x05, r24	; 5
 240:	3b c0       	rjmp	.+118    	; 0x2b8 <__vector_14+0x10a>
			case 8:PORTB=0b1111111;break;
 242:	8f e7       	ldi	r24, 0x7F	; 127
 244:	85 b9       	out	0x05, r24	; 5
 246:	38 c0       	rjmp	.+112    	; 0x2b8 <__vector_14+0x10a>
			case 9:PORTB=0b1100111;break;
 248:	87 e6       	ldi	r24, 0x67	; 103
 24a:	85 b9       	out	0x05, r24	; 5
 24c:	35 c0       	rjmp	.+106    	; 0x2b8 <__vector_14+0x10a>
		}
	} 
	else
	{PORTC=(PORTC&0b11111100)|0b10;
 24e:	88 b1       	in	r24, 0x08	; 8
 250:	8c 7f       	andi	r24, 0xFC	; 252
 252:	82 60       	ori	r24, 0x02	; 2
 254:	88 b9       	out	0x08, r24	; 8
		switch(segNum/10){
 256:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <segNum>
 25a:	ed ec       	ldi	r30, 0xCD	; 205
 25c:	8e 9f       	mul	r24, r30
 25e:	81 2d       	mov	r24, r1
 260:	11 24       	eor	r1, r1
 262:	e8 2f       	mov	r30, r24
 264:	e6 95       	lsr	r30
 266:	e6 95       	lsr	r30
 268:	e6 95       	lsr	r30
 26a:	8e 2f       	mov	r24, r30
 26c:	90 e0       	ldi	r25, 0x00	; 0
 26e:	8a 30       	cpi	r24, 0x0A	; 10
 270:	91 05       	cpc	r25, r1
 272:	10 f5       	brcc	.+68     	; 0x2b8 <__vector_14+0x10a>
 274:	fc 01       	movw	r30, r24
 276:	e2 5c       	subi	r30, 0xC2	; 194
 278:	ff 4f       	sbci	r31, 0xFF	; 255
 27a:	0c 94 6d 01 	jmp	0x2da	; 0x2da <__tablejump2__>
			case 0:PORTB=0b111111;break;
 27e:	8f e3       	ldi	r24, 0x3F	; 63
 280:	85 b9       	out	0x05, r24	; 5
 282:	1a c0       	rjmp	.+52     	; 0x2b8 <__vector_14+0x10a>
			case 1:PORTB=0b110;break;
 284:	86 e0       	ldi	r24, 0x06	; 6
 286:	85 b9       	out	0x05, r24	; 5
 288:	17 c0       	rjmp	.+46     	; 0x2b8 <__vector_14+0x10a>
			case 2:PORTB=0b1011011;break;
 28a:	8b e5       	ldi	r24, 0x5B	; 91
 28c:	85 b9       	out	0x05, r24	; 5
 28e:	14 c0       	rjmp	.+40     	; 0x2b8 <__vector_14+0x10a>
			case 3:PORTB=0b1001111;break;
 290:	8f e4       	ldi	r24, 0x4F	; 79
 292:	85 b9       	out	0x05, r24	; 5
 294:	11 c0       	rjmp	.+34     	; 0x2b8 <__vector_14+0x10a>
			case 4:PORTB=0b1100110;break;
 296:	86 e6       	ldi	r24, 0x66	; 102
 298:	85 b9       	out	0x05, r24	; 5
 29a:	0e c0       	rjmp	.+28     	; 0x2b8 <__vector_14+0x10a>
			case 5:PORTB=0b1101101;break;
 29c:	8d e6       	ldi	r24, 0x6D	; 109
 29e:	85 b9       	out	0x05, r24	; 5
 2a0:	0b c0       	rjmp	.+22     	; 0x2b8 <__vector_14+0x10a>
			case 6:PORTB=0b1111101;break;
 2a2:	8d e7       	ldi	r24, 0x7D	; 125
 2a4:	85 b9       	out	0x05, r24	; 5
 2a6:	08 c0       	rjmp	.+16     	; 0x2b8 <__vector_14+0x10a>
			case 7:PORTB=0b111;break;
 2a8:	87 e0       	ldi	r24, 0x07	; 7
 2aa:	85 b9       	out	0x05, r24	; 5
 2ac:	05 c0       	rjmp	.+10     	; 0x2b8 <__vector_14+0x10a>
			case 8:PORTB=0b1111111;break;
 2ae:	8f e7       	ldi	r24, 0x7F	; 127
 2b0:	85 b9       	out	0x05, r24	; 5
 2b2:	02 c0       	rjmp	.+4      	; 0x2b8 <__vector_14+0x10a>
			case 9:PORTB=0b1100111;break;
 2b4:	87 e6       	ldi	r24, 0x67	; 103
 2b6:	85 b9       	out	0x05, r24	; 5
		}
	}
	segPos=!segPos;
 2b8:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <__data_end>
 2bc:	81 e0       	ldi	r24, 0x01	; 1
 2be:	89 27       	eor	r24, r25
 2c0:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__data_end>
}
 2c4:	ff 91       	pop	r31
 2c6:	ef 91       	pop	r30
 2c8:	bf 91       	pop	r27
 2ca:	af 91       	pop	r26
 2cc:	9f 91       	pop	r25
 2ce:	8f 91       	pop	r24
 2d0:	0f 90       	pop	r0
 2d2:	0f be       	out	0x3f, r0	; 63
 2d4:	0f 90       	pop	r0
 2d6:	1f 90       	pop	r1
 2d8:	18 95       	reti

000002da <__tablejump2__>:
 2da:	ee 0f       	add	r30, r30
 2dc:	ff 1f       	adc	r31, r31
 2de:	05 90       	lpm	r0, Z+
 2e0:	f4 91       	lpm	r31, Z
 2e2:	e0 2d       	mov	r30, r0
 2e4:	09 94       	ijmp

000002e6 <_exit>:
 2e6:	f8 94       	cli

000002e8 <__stop_program>:
 2e8:	ff cf       	rjmp	.-2      	; 0x2e8 <__stop_program>
