
kurunagala.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000002fa  00800100  00001206  0000129a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001206  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000d9  008003fa  008003fa  00001594  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001594  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000015f0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000118  00000000  00000000  00001630  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002099  00000000  00000000  00001748  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000966  00000000  00000000  000037e1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000c4b  00000000  00000000  00004147  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001e8  00000000  00000000  00004d94  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000070a  00000000  00000000  00004f7c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000b98  00000000  00000000  00005686  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000f0  00000000  00000000  0000621e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 e6 01 	jmp	0x3cc	; 0x3cc <__vector_11>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 91 00 	jmp	0x122	; 0x122 <__vector_18>
      4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	13 e0       	ldi	r17, 0x03	; 3
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	e6 e0       	ldi	r30, 0x06	; 6
      7c:	f2 e1       	ldi	r31, 0x12	; 18
      7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0
      84:	aa 3f       	cpi	r26, 0xFA	; 250
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
      8a:	24 e0       	ldi	r18, 0x04	; 4
      8c:	aa ef       	ldi	r26, 0xFA	; 250
      8e:	b3 e0       	ldi	r27, 0x03	; 3
      90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
      92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
      94:	a3 3d       	cpi	r26, 0xD3	; 211
      96:	b2 07       	cpc	r27, r18
      98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
      9a:	0e 94 58 02 	call	0x4b0	; 0x4b0 <main>
      9e:	0c 94 01 09 	jmp	0x1202	; 0x1202 <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <_Z10USART_Initj>:
	
	char fString[10];
	dtostrf(number,length,deciP,fString);
	USART_TxString(fString);
	
}
      a6:	9c 01       	movw	r18, r24
      a8:	40 e0       	ldi	r20, 0x00	; 0
      aa:	50 e0       	ldi	r21, 0x00	; 0
      ac:	60 e2       	ldi	r22, 0x20	; 32
      ae:	71 ea       	ldi	r23, 0xA1	; 161
      b0:	87 e0       	ldi	r24, 0x07	; 7
      b2:	90 e0       	ldi	r25, 0x00	; 0
      b4:	0e 94 02 05 	call	0xa04	; 0xa04 <__divmodsi4>
      b8:	21 50       	subi	r18, 0x01	; 1
      ba:	31 09       	sbc	r19, r1
      bc:	30 93 c5 00 	sts	0x00C5, r19	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
      c0:	20 93 c4 00 	sts	0x00C4, r18	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
      c4:	88 e9       	ldi	r24, 0x98	; 152
      c6:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
      ca:	86 e0       	ldi	r24, 0x06	; 6
      cc:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
      d0:	78 94       	sei
      d2:	08 95       	ret

000000d4 <_Z14USART_Transmith>:
      d4:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
      d8:	95 ff       	sbrs	r25, 5
      da:	fc cf       	rjmp	.-8      	; 0xd4 <_Z14USART_Transmith>
      dc:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
      e0:	08 95       	ret

000000e2 <_Z14USART_TxStringPc>:
      e2:	cf 93       	push	r28
      e4:	df 93       	push	r29
      e6:	ec 01       	movw	r28, r24
      e8:	88 81       	ld	r24, Y
      ea:	88 23       	and	r24, r24
      ec:	21 f0       	breq	.+8      	; 0xf6 <_Z14USART_TxStringPc+0x14>
      ee:	21 96       	adiw	r28, 0x01	; 1
      f0:	0e 94 6a 00 	call	0xd4	; 0xd4 <_Z14USART_Transmith>
      f4:	f9 cf       	rjmp	.-14     	; 0xe8 <_Z14USART_TxStringPc+0x6>
      f6:	df 91       	pop	r29
      f8:	cf 91       	pop	r28
      fa:	08 95       	ret

000000fc <_Z16USART_TxStringlnPc>:
      fc:	cf 93       	push	r28
      fe:	df 93       	push	r29
     100:	ec 01       	movw	r28, r24
     102:	88 81       	ld	r24, Y
     104:	88 23       	and	r24, r24
     106:	21 f0       	breq	.+8      	; 0x110 <_Z16USART_TxStringlnPc+0x14>
     108:	21 96       	adiw	r28, 0x01	; 1
     10a:	0e 94 6a 00 	call	0xd4	; 0xd4 <_Z14USART_Transmith>
     10e:	f9 cf       	rjmp	.-14     	; 0x102 <_Z16USART_TxStringlnPc+0x6>
     110:	8d e0       	ldi	r24, 0x0D	; 13
     112:	0e 94 6a 00 	call	0xd4	; 0xd4 <_Z14USART_Transmith>
     116:	8a e0       	ldi	r24, 0x0A	; 10
     118:	0e 94 6a 00 	call	0xd4	; 0xd4 <_Z14USART_Transmith>
     11c:	df 91       	pop	r29
     11e:	cf 91       	pop	r28
     120:	08 95       	ret

00000122 <__vector_18>:


ISR(USART_RX_vect){
     122:	1f 92       	push	r1
     124:	0f 92       	push	r0
     126:	0f b6       	in	r0, 0x3f	; 63
     128:	0f 92       	push	r0
     12a:	11 24       	eor	r1, r1
     12c:	2f 93       	push	r18
     12e:	3f 93       	push	r19
     130:	4f 93       	push	r20
     132:	8f 93       	push	r24
     134:	9f 93       	push	r25
     136:	af 93       	push	r26
     138:	bf 93       	push	r27
     13a:	ef 93       	push	r30
     13c:	ff 93       	push	r31
	//PORTB^=1<<0;
	char rchar=UDR0;
     13e:	40 91 c6 00 	lds	r20, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
	
	uint8_t i=0;
     142:	e0 e0       	ldi	r30, 0x00	; 0
	
	while(rxvalue[i]){
     144:	ae 2f       	mov	r26, r30
     146:	b0 e0       	ldi	r27, 0x00	; 0
     148:	a1 59       	subi	r26, 0x91	; 145
     14a:	bb 4f       	sbci	r27, 0xFB	; 251
     14c:	8c 91       	ld	r24, X
     14e:	88 23       	and	r24, r24
     150:	19 f0       	breq	.+6      	; 0x158 <__vector_18+0x36>
	i++;
     152:	ef 5f       	subi	r30, 0xFF	; 255
	if (i==rxshiftNum)
     154:	e4 36       	cpi	r30, 0x64	; 100
     156:	b1 f7       	brne	.-20     	; 0x144 <__vector_18+0x22>
	{break;
	}
	}
	if (i<rxshiftNum)
     158:	e4 36       	cpi	r30, 0x64	; 100
     15a:	28 f4       	brcc	.+10     	; 0x166 <__vector_18+0x44>
	{rxvalue[i]=rchar;
     15c:	f0 e0       	ldi	r31, 0x00	; 0
     15e:	e1 59       	subi	r30, 0x91	; 145
     160:	fb 4f       	sbci	r31, 0xFB	; 251
     162:	40 83       	st	Z, r20
     164:	11 c0       	rjmp	.+34     	; 0x188 <__vector_18+0x66>
     166:	20 e0       	ldi	r18, 0x00	; 0
	} 
	else
	{
		for(uint8_t i=0;i<rxshiftNum-1;i++){
     168:	23 36       	cpi	r18, 0x63	; 99
     16a:	60 f4       	brcc	.+24     	; 0x184 <__vector_18+0x62>
		rxvalue[i]=rxvalue[i+1];
     16c:	82 2f       	mov	r24, r18
     16e:	90 e0       	ldi	r25, 0x00	; 0
     170:	fc 01       	movw	r30, r24
     172:	e0 59       	subi	r30, 0x90	; 144
     174:	fb 4f       	sbci	r31, 0xFB	; 251
     176:	30 81       	ld	r19, Z
     178:	fc 01       	movw	r30, r24
     17a:	e1 59       	subi	r30, 0x91	; 145
     17c:	fb 4f       	sbci	r31, 0xFB	; 251
     17e:	30 83       	st	Z, r19
	if (i<rxshiftNum)
	{rxvalue[i]=rchar;
	} 
	else
	{
		for(uint8_t i=0;i<rxshiftNum-1;i++){
     180:	2f 5f       	subi	r18, 0xFF	; 255
     182:	f2 cf       	rjmp	.-28     	; 0x168 <__vector_18+0x46>
		rxvalue[i]=rxvalue[i+1];
	}
	rxvalue[rxshiftNum-1]=rchar;
     184:	40 93 d2 04 	sts	0x04D2, r20	; 0x8004d2 <rxvalue+0x63>
		
	}
	
		
}
     188:	ff 91       	pop	r31
     18a:	ef 91       	pop	r30
     18c:	bf 91       	pop	r27
     18e:	af 91       	pop	r26
     190:	9f 91       	pop	r25
     192:	8f 91       	pop	r24
     194:	4f 91       	pop	r20
     196:	3f 91       	pop	r19
     198:	2f 91       	pop	r18
     19a:	0f 90       	pop	r0
     19c:	0f be       	out	0x3f, r0	; 63
     19e:	0f 90       	pop	r0
     1a0:	1f 90       	pop	r1
     1a2:	18 95       	reti

000001a4 <_Z16USART_ReciveWaitPcib>:



bool USART_ReciveWait(char*wait=0,int16_t timeout=0,bool deleteWait=0){
     1a4:	ef 92       	push	r14
     1a6:	ff 92       	push	r15
     1a8:	0f 93       	push	r16
     1aa:	1f 93       	push	r17
     1ac:	cf 93       	push	r28
     1ae:	7c 01       	movw	r14, r24
     1b0:	cb 01       	movw	r24, r22
	bool waitbool=0;
	uint8_t temptimeOut=0;
	timeout=timeout/100;
     1b2:	64 e6       	ldi	r22, 0x64	; 100
     1b4:	70 e0       	ldi	r23, 0x00	; 0
     1b6:	0e 94 ee 04 	call	0x9dc	; 0x9dc <__divmodhi4>
	if (wait!=0)
     1ba:	e1 14       	cp	r14, r1
     1bc:	f1 04       	cpc	r15, r1
     1be:	89 f1       	breq	.+98     	; 0x222 <_Z16USART_ReciveWaitPcib+0x7e>
     1c0:	8b 01       	movw	r16, r22
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     1c2:	2f ef       	ldi	r18, 0xFF	; 255
     1c4:	40 e7       	ldi	r20, 0x70	; 112
     1c6:	82 e0       	ldi	r24, 0x02	; 2
     1c8:	21 50       	subi	r18, 0x01	; 1
     1ca:	40 40       	sbci	r20, 0x00	; 0
     1cc:	80 40       	sbci	r24, 0x00	; 0
     1ce:	e1 f7       	brne	.-8      	; 0x1c8 <_Z16USART_ReciveWaitPcib+0x24>
     1d0:	00 c0       	rjmp	.+0      	; 0x1d2 <_Z16USART_ReciveWaitPcib+0x2e>
     1d2:	00 00       	nop
	{  _delay_ms(100);
		char*tempwait={0};
     1d4:	20 e0       	ldi	r18, 0x00	; 0
     1d6:	30 e0       	ldi	r19, 0x00	; 0



bool USART_ReciveWait(char*wait=0,int16_t timeout=0,bool deleteWait=0){
	bool waitbool=0;
	uint8_t temptimeOut=0;
     1d8:	c0 e0       	ldi	r28, 0x00	; 0
	timeout=timeout/100;
	if (wait!=0)
	{  _delay_ms(100);
		char*tempwait={0};
		while(tempwait==0){
     1da:	23 2b       	or	r18, r19
     1dc:	21 f5       	brne	.+72     	; 0x226 <_Z16USART_ReciveWaitPcib+0x82>
			tempwait =strstr(rxvalue,wait);
     1de:	b7 01       	movw	r22, r14
     1e0:	8f e6       	ldi	r24, 0x6F	; 111
     1e2:	94 e0       	ldi	r25, 0x04	; 4
     1e4:	0e 94 c5 05 	call	0xb8a	; 0xb8a <strstr>
     1e8:	9c 01       	movw	r18, r24
     1ea:	9f ef       	ldi	r25, 0xFF	; 255
     1ec:	40 e7       	ldi	r20, 0x70	; 112
     1ee:	82 e0       	ldi	r24, 0x02	; 2
     1f0:	91 50       	subi	r25, 0x01	; 1
     1f2:	40 40       	sbci	r20, 0x00	; 0
     1f4:	80 40       	sbci	r24, 0x00	; 0
     1f6:	e1 f7       	brne	.-8      	; 0x1f0 <_Z16USART_ReciveWaitPcib+0x4c>
     1f8:	00 c0       	rjmp	.+0      	; 0x1fa <_Z16USART_ReciveWaitPcib+0x56>
     1fa:	00 00       	nop
					
			_delay_ms(100);
			temptimeOut++;
     1fc:	cf 5f       	subi	r28, 0xFF	; 255
			if ((temptimeOut>timeout)&(timeout!=0))
     1fe:	4c 2f       	mov	r20, r28
     200:	50 e0       	ldi	r21, 0x00	; 0
     202:	91 e0       	ldi	r25, 0x01	; 1
     204:	04 17       	cp	r16, r20
     206:	15 07       	cpc	r17, r21
     208:	0c f0       	brlt	.+2      	; 0x20c <_Z16USART_ReciveWaitPcib+0x68>
     20a:	90 e0       	ldi	r25, 0x00	; 0
     20c:	99 23       	and	r25, r25
     20e:	29 f3       	breq	.-54     	; 0x1da <_Z16USART_ReciveWaitPcib+0x36>
     210:	81 e0       	ldi	r24, 0x01	; 1
     212:	01 15       	cp	r16, r1
     214:	11 05       	cpc	r17, r1
     216:	09 f4       	brne	.+2      	; 0x21a <_Z16USART_ReciveWaitPcib+0x76>
     218:	80 e0       	ldi	r24, 0x00	; 0
     21a:	88 23       	and	r24, r24
     21c:	f1 f2       	breq	.-68     	; 0x1da <_Z16USART_ReciveWaitPcib+0x36>
			{waitbool=0;
				return waitbool;
     21e:	80 e0       	ldi	r24, 0x00	; 0
     220:	03 c0       	rjmp	.+6      	; 0x228 <_Z16USART_ReciveWaitPcib+0x84>
}



bool USART_ReciveWait(char*wait=0,int16_t timeout=0,bool deleteWait=0){
	bool waitbool=0;
     222:	80 e0       	ldi	r24, 0x00	; 0
     224:	01 c0       	rjmp	.+2      	; 0x228 <_Z16USART_ReciveWaitPcib+0x84>
				return waitbool;
				
			}
			
		}
		waitbool=1;
     226:	81 e0       	ldi	r24, 0x01	; 1
		
	}
	
	return waitbool;
}
     228:	cf 91       	pop	r28
     22a:	1f 91       	pop	r17
     22c:	0f 91       	pop	r16
     22e:	ff 90       	pop	r15
     230:	ef 90       	pop	r14
     232:	08 95       	ret

00000234 <_Z13USART_ClearRXv>:


void USART_ClearRX(){
	for(uint8_t i=0;i<rxshiftNum;i++){
     234:	80 e0       	ldi	r24, 0x00	; 0
     236:	84 36       	cpi	r24, 0x64	; 100
     238:	38 f4       	brcc	.+14     	; 0x248 <_Z13USART_ClearRXv+0x14>
		rxvalue[i]=NULL;
     23a:	e8 2f       	mov	r30, r24
     23c:	f0 e0       	ldi	r31, 0x00	; 0
     23e:	e1 59       	subi	r30, 0x91	; 145
     240:	fb 4f       	sbci	r31, 0xFB	; 251
     242:	10 82       	st	Z, r1
	return waitbool;
}


void USART_ClearRX(){
	for(uint8_t i=0;i<rxshiftNum;i++){
     244:	8f 5f       	subi	r24, 0xFF	; 255
     246:	f7 cf       	rjmp	.-18     	; 0x236 <_Z13USART_ClearRXv+0x2>
     248:	08 95       	ret

0000024a <_Z16mainFunctionInitv>:
		
    }//while
}

void mainFunctionInit(){
	USART_Init(9600);
     24a:	80 e8       	ldi	r24, 0x80	; 128
     24c:	95 e2       	ldi	r25, 0x25	; 37
     24e:	0e 94 53 00 	call	0xa6	; 0xa6 <_Z10USART_Initj>
	USART_ClearRX();
     252:	0e 94 1a 01 	call	0x234	; 0x234 <_Z13USART_ClearRXv>
	DDRB|=(1<<0);// relay
     256:	84 b1       	in	r24, 0x04	; 4
     258:	81 60       	ori	r24, 0x01	; 1
     25a:	84 b9       	out	0x04, r24	; 4
	DDRD|=(1<<2);// rst
     25c:	8a b1       	in	r24, 0x0a	; 10
     25e:	84 60       	ori	r24, 0x04	; 4
     260:	8a b9       	out	0x0a, r24	; 10
	DDRC|=(1<<1);// led
     262:	87 b1       	in	r24, 0x07	; 7
     264:	82 60       	ori	r24, 0x02	; 2
     266:	87 b9       	out	0x07, r24	; 7
     268:	08 95       	ret

0000026a <_Z8checkGSMv>:
	
}

bool checkGSM(){
     26a:	cf 93       	push	r28
	PORTD&=~(1<<2);
     26c:	8b b1       	in	r24, 0x0b	; 11
     26e:	8b 7f       	andi	r24, 0xFB	; 251
     270:	8b b9       	out	0x0b, r24	; 11
     272:	2f ef       	ldi	r18, 0xFF	; 255
     274:	84 e3       	ldi	r24, 0x34	; 52
     276:	9c e0       	ldi	r25, 0x0C	; 12
     278:	21 50       	subi	r18, 0x01	; 1
     27a:	80 40       	sbci	r24, 0x00	; 0
     27c:	90 40       	sbci	r25, 0x00	; 0
     27e:	e1 f7       	brne	.-8      	; 0x278 <_Z8checkGSMv+0xe>
     280:	00 c0       	rjmp	.+0      	; 0x282 <_Z8checkGSMv+0x18>
     282:	00 00       	nop
	_delay_ms(500);
	PORTD|=(1<<2);
     284:	8b b1       	in	r24, 0x0b	; 11
     286:	84 60       	ori	r24, 0x04	; 4
     288:	8b b9       	out	0x0b, r24	; 11
     28a:	2f ef       	ldi	r18, 0xFF	; 255
     28c:	89 e6       	ldi	r24, 0x69	; 105
     28e:	98 e1       	ldi	r25, 0x18	; 24
     290:	21 50       	subi	r18, 0x01	; 1
     292:	80 40       	sbci	r24, 0x00	; 0
     294:	90 40       	sbci	r25, 0x00	; 0
     296:	e1 f7       	brne	.-8      	; 0x290 <_Z8checkGSMv+0x26>
     298:	00 c0       	rjmp	.+0      	; 0x29a <_Z8checkGSMv+0x30>
     29a:	00 00       	nop
	_delay_ms(1000);
	for(uint8_t i=0;i<20;i++){
     29c:	c0 e0       	ldi	r28, 0x00	; 0
     29e:	c4 31       	cpi	r28, 0x14	; 20
     2a0:	78 f4       	brcc	.+30     	; 0x2c0 <_Z8checkGSMv+0x56>
		USART_TxStringln((char*)"AT");
     2a2:	80 e0       	ldi	r24, 0x00	; 0
     2a4:	91 e0       	ldi	r25, 0x01	; 1
     2a6:	0e 94 7e 00 	call	0xfc	; 0xfc <_Z16USART_TxStringlnPc>
		if (USART_ReciveWait((char*)"OK",1000))
     2aa:	40 e0       	ldi	r20, 0x00	; 0
     2ac:	68 ee       	ldi	r22, 0xE8	; 232
     2ae:	73 e0       	ldi	r23, 0x03	; 3
     2b0:	83 e0       	ldi	r24, 0x03	; 3
     2b2:	91 e0       	ldi	r25, 0x01	; 1
     2b4:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <_Z16USART_ReciveWaitPcib>
     2b8:	88 23       	and	r24, r24
     2ba:	21 f0       	breq	.+8      	; 0x2c4 <_Z8checkGSMv+0x5a>
		{USART_ClearRX();
     2bc:	0e 94 1a 01 	call	0x234	; 0x234 <_Z13USART_ClearRXv>
bool checkGSM(){
	PORTD&=~(1<<2);
	_delay_ms(500);
	PORTD|=(1<<2);
	_delay_ms(1000);
	for(uint8_t i=0;i<20;i++){
     2c0:	c0 e0       	ldi	r28, 0x00	; 0
     2c2:	04 c0       	rjmp	.+8      	; 0x2cc <_Z8checkGSMv+0x62>
		USART_TxStringln((char*)"AT");
		if (USART_ReciveWait((char*)"OK",1000))
		{USART_ClearRX();
			break;
		}
		if (i==19)
     2c4:	c3 31       	cpi	r28, 0x13	; 19
     2c6:	f1 f1       	breq	.+124    	; 0x344 <_Z8checkGSMv+0xda>
bool checkGSM(){
	PORTD&=~(1<<2);
	_delay_ms(500);
	PORTD|=(1<<2);
	_delay_ms(1000);
	for(uint8_t i=0;i<20;i++){
     2c8:	cf 5f       	subi	r28, 0xFF	; 255
     2ca:	e9 cf       	rjmp	.-46     	; 0x29e <_Z8checkGSMv+0x34>
		}
	}
	
	
	
	for(uint8_t i=0;i<20;i++){
     2cc:	c4 31       	cpi	r28, 0x14	; 20
     2ce:	c8 f5       	brcc	.+114    	; 0x342 <_Z8checkGSMv+0xd8>
		USART_TxStringln("AT+CSQ");  //signal strength
     2d0:	86 e0       	ldi	r24, 0x06	; 6
     2d2:	91 e0       	ldi	r25, 0x01	; 1
     2d4:	0e 94 7e 00 	call	0xfc	; 0xfc <_Z16USART_TxStringlnPc>
     2d8:	2f ef       	ldi	r18, 0xFF	; 255
     2da:	84 e3       	ldi	r24, 0x34	; 52
     2dc:	9c e0       	ldi	r25, 0x0C	; 12
     2de:	21 50       	subi	r18, 0x01	; 1
     2e0:	80 40       	sbci	r24, 0x00	; 0
     2e2:	90 40       	sbci	r25, 0x00	; 0
     2e4:	e1 f7       	brne	.-8      	; 0x2de <_Z8checkGSMv+0x74>
     2e6:	00 c0       	rjmp	.+0      	; 0x2e8 <_Z8checkGSMv+0x7e>
     2e8:	00 00       	nop
		_delay_ms(500);
		strncpy(lengthcal,strstr(rxvalue,"CSQ: ")+5,2);
     2ea:	6d e0       	ldi	r22, 0x0D	; 13
     2ec:	71 e0       	ldi	r23, 0x01	; 1
     2ee:	8f e6       	ldi	r24, 0x6F	; 111
     2f0:	94 e0       	ldi	r25, 0x04	; 4
     2f2:	0e 94 c5 05 	call	0xb8a	; 0xb8a <strstr>
     2f6:	bc 01       	movw	r22, r24
     2f8:	6b 5f       	subi	r22, 0xFB	; 251
     2fa:	7f 4f       	sbci	r23, 0xFF	; 255
     2fc:	42 e0       	ldi	r20, 0x02	; 2
     2fe:	50 e0       	ldi	r21, 0x00	; 0
     300:	80 e3       	ldi	r24, 0x30	; 48
     302:	94 e0       	ldi	r25, 0x04	; 4
     304:	0e 94 b6 05 	call	0xb6c	; 0xb6c <strncpy>
		gsm=atoi(lengthcal);
     308:	80 e3       	ldi	r24, 0x30	; 48
     30a:	94 e0       	ldi	r25, 0x04	; 4
     30c:	0e 94 57 05 	call	0xaae	; 0xaae <atoi>
     310:	90 93 2f 04 	sts	0x042F, r25	; 0x80042f <gsm+0x1>
     314:	80 93 2e 04 	sts	0x042E, r24	; 0x80042e <gsm>
		if (gsm>12)
     318:	0d 97       	sbiw	r24, 0x0d	; 13
     31a:	24 f0       	brlt	.+8      	; 0x324 <_Z8checkGSMv+0xba>
		{USART_ClearRX();
     31c:	0e 94 1a 01 	call	0x234	; 0x234 <_Z13USART_ClearRXv>
			return 1;
     320:	81 e0       	ldi	r24, 0x01	; 1
     322:	10 c0       	rjmp	.+32     	; 0x344 <_Z8checkGSMv+0xda>
		}
		else{
			USART_ClearRX();
     324:	0e 94 1a 01 	call	0x234	; 0x234 <_Z13USART_ClearRXv>
     328:	2f ef       	ldi	r18, 0xFF	; 255
     32a:	89 e6       	ldi	r24, 0x69	; 105
     32c:	98 e1       	ldi	r25, 0x18	; 24
     32e:	21 50       	subi	r18, 0x01	; 1
     330:	80 40       	sbci	r24, 0x00	; 0
     332:	90 40       	sbci	r25, 0x00	; 0
     334:	e1 f7       	brne	.-8      	; 0x32e <_Z8checkGSMv+0xc4>
     336:	00 c0       	rjmp	.+0      	; 0x338 <_Z8checkGSMv+0xce>
     338:	00 00       	nop
			_delay_ms(1000);
		}
		USART_ClearRX();
     33a:	0e 94 1a 01 	call	0x234	; 0x234 <_Z13USART_ClearRXv>
		}
	}
	
	
	
	for(uint8_t i=0;i<20;i++){
     33e:	cf 5f       	subi	r28, 0xFF	; 255
     340:	c5 cf       	rjmp	.-118    	; 0x2cc <_Z8checkGSMv+0x62>
			USART_ClearRX();
			_delay_ms(1000);
		}
		USART_ClearRX();
	}
	return 0;
     342:	80 e0       	ldi	r24, 0x00	; 0
}
     344:	cf 91       	pop	r28
     346:	08 95       	ret

00000348 <_Z8setupGSMv>:

void setupGSM(){
	//******SMS Functions
	USART_TxStringln((char*)"AT+CMGF=1");
     348:	83 e1       	ldi	r24, 0x13	; 19
     34a:	91 e0       	ldi	r25, 0x01	; 1
     34c:	0e 94 7e 00 	call	0xfc	; 0xfc <_Z16USART_TxStringlnPc>
	USART_ReciveWait((char*)"OK",1000,1);
     350:	41 e0       	ldi	r20, 0x01	; 1
     352:	68 ee       	ldi	r22, 0xE8	; 232
     354:	73 e0       	ldi	r23, 0x03	; 3
     356:	83 e0       	ldi	r24, 0x03	; 3
     358:	91 e0       	ldi	r25, 0x01	; 1
     35a:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <_Z16USART_ReciveWaitPcib>
     35e:	2f ef       	ldi	r18, 0xFF	; 255
     360:	81 ee       	ldi	r24, 0xE1	; 225
     362:	94 e0       	ldi	r25, 0x04	; 4
     364:	21 50       	subi	r18, 0x01	; 1
     366:	80 40       	sbci	r24, 0x00	; 0
     368:	90 40       	sbci	r25, 0x00	; 0
     36a:	e1 f7       	brne	.-8      	; 0x364 <_Z8setupGSMv+0x1c>
     36c:	00 c0       	rjmp	.+0      	; 0x36e <_Z8setupGSMv+0x26>
     36e:	00 00       	nop
	_delay_ms(200);
	USART_ClearRX();
     370:	0e 94 1a 01 	call	0x234	; 0x234 <_Z13USART_ClearRXv>
	
	USART_TxStringln((char*)"AT+CNMI=1,2,0,0,0");
     374:	8d e1       	ldi	r24, 0x1D	; 29
     376:	91 e0       	ldi	r25, 0x01	; 1
     378:	0e 94 7e 00 	call	0xfc	; 0xfc <_Z16USART_TxStringlnPc>
	USART_ReciveWait((char*)"OK",1000,1);
     37c:	41 e0       	ldi	r20, 0x01	; 1
     37e:	68 ee       	ldi	r22, 0xE8	; 232
     380:	73 e0       	ldi	r23, 0x03	; 3
     382:	83 e0       	ldi	r24, 0x03	; 3
     384:	91 e0       	ldi	r25, 0x01	; 1
     386:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <_Z16USART_ReciveWaitPcib>
     38a:	2f ef       	ldi	r18, 0xFF	; 255
     38c:	81 ee       	ldi	r24, 0xE1	; 225
     38e:	94 e0       	ldi	r25, 0x04	; 4
     390:	21 50       	subi	r18, 0x01	; 1
     392:	80 40       	sbci	r24, 0x00	; 0
     394:	90 40       	sbci	r25, 0x00	; 0
     396:	e1 f7       	brne	.-8      	; 0x390 <_Z8setupGSMv+0x48>
     398:	00 c0       	rjmp	.+0      	; 0x39a <_Z8setupGSMv+0x52>
     39a:	00 00       	nop
	_delay_ms(200);
	OCR1A=3125*5;
     39c:	89 e0       	ldi	r24, 0x09	; 9
     39e:	9d e3       	ldi	r25, 0x3D	; 61
     3a0:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
     3a4:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
     3a8:	08 95       	ret

000003aa <_Z10setupTimerv>:
}

void setupTimer(){
	TCCR1B|=(1<<WGM12)|(1<<CS12);
     3aa:	e1 e8       	ldi	r30, 0x81	; 129
     3ac:	f0 e0       	ldi	r31, 0x00	; 0
     3ae:	80 81       	ld	r24, Z
     3b0:	8c 60       	ori	r24, 0x0C	; 12
     3b2:	80 83       	st	Z, r24
	TIMSK1|=(1<<OCIE1A);
     3b4:	ef e6       	ldi	r30, 0x6F	; 111
     3b6:	f0 e0       	ldi	r31, 0x00	; 0
     3b8:	80 81       	ld	r24, Z
     3ba:	82 60       	ori	r24, 0x02	; 2
     3bc:	80 83       	st	Z, r24
	OCR1A=3125;
     3be:	85 e3       	ldi	r24, 0x35	; 53
     3c0:	9c e0       	ldi	r25, 0x0C	; 12
     3c2:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
     3c6:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
     3ca:	08 95       	ret

000003cc <__vector_11>:
	
}
ISR(TIMER1_COMPA_vect){
     3cc:	1f 92       	push	r1
     3ce:	0f 92       	push	r0
     3d0:	0f b6       	in	r0, 0x3f	; 63
     3d2:	0f 92       	push	r0
     3d4:	11 24       	eor	r1, r1
     3d6:	8f 93       	push	r24
     3d8:	9f 93       	push	r25
	PORTC^=(1<<1);
     3da:	98 b1       	in	r25, 0x08	; 8
     3dc:	82 e0       	ldi	r24, 0x02	; 2
     3de:	89 27       	eor	r24, r25
     3e0:	88 b9       	out	0x08, r24	; 8
}
     3e2:	9f 91       	pop	r25
     3e4:	8f 91       	pop	r24
     3e6:	0f 90       	pop	r0
     3e8:	0f be       	out	0x3f, r0	; 63
     3ea:	0f 90       	pop	r0
     3ec:	1f 90       	pop	r1
     3ee:	18 95       	reti

000003f0 <_Z7sendSMShPc>:
void sendSMS(uint8_t sender,char*msg){
     3f0:	cf 93       	push	r28
     3f2:	df 93       	push	r29
     3f4:	eb 01       	movw	r28, r22
	eeprom_read_block((char*)numbr,(uint8_t*)(sender*10),9);
     3f6:	90 e0       	ldi	r25, 0x00	; 0
     3f8:	bc 01       	movw	r22, r24
     3fa:	66 0f       	add	r22, r22
     3fc:	77 1f       	adc	r23, r23
     3fe:	88 0f       	add	r24, r24
     400:	99 1f       	adc	r25, r25
     402:	88 0f       	add	r24, r24
     404:	99 1f       	adc	r25, r25
     406:	88 0f       	add	r24, r24
     408:	99 1f       	adc	r25, r25
     40a:	68 0f       	add	r22, r24
     40c:	79 1f       	adc	r23, r25
     40e:	49 e0       	ldi	r20, 0x09	; 9
     410:	50 e0       	ldi	r21, 0x00	; 0
     412:	8f e1       	ldi	r24, 0x1F	; 31
     414:	94 e0       	ldi	r25, 0x04	; 4
     416:	0e 94 9a 08 	call	0x1134	; 0x1134 <eeprom_read_block>
	sprintf(lengthcal,"AT+CMGS=\"+94%s\"",numbr);
     41a:	8f e1       	ldi	r24, 0x1F	; 31
     41c:	94 e0       	ldi	r25, 0x04	; 4
     41e:	9f 93       	push	r25
     420:	8f 93       	push	r24
     422:	8f e2       	ldi	r24, 0x2F	; 47
     424:	91 e0       	ldi	r25, 0x01	; 1
     426:	9f 93       	push	r25
     428:	8f 93       	push	r24
     42a:	80 e3       	ldi	r24, 0x30	; 48
     42c:	94 e0       	ldi	r25, 0x04	; 4
     42e:	9f 93       	push	r25
     430:	8f 93       	push	r24
     432:	0e 94 e7 05 	call	0xbce	; 0xbce <sprintf>
	USART_TxStringln(lengthcal);
     436:	80 e3       	ldi	r24, 0x30	; 48
     438:	94 e0       	ldi	r25, 0x04	; 4
     43a:	0e 94 7e 00 	call	0xfc	; 0xfc <_Z16USART_TxStringlnPc>
     43e:	2f ef       	ldi	r18, 0xFF	; 255
     440:	31 ee       	ldi	r19, 0xE1	; 225
     442:	84 e0       	ldi	r24, 0x04	; 4
     444:	21 50       	subi	r18, 0x01	; 1
     446:	30 40       	sbci	r19, 0x00	; 0
     448:	80 40       	sbci	r24, 0x00	; 0
     44a:	e1 f7       	brne	.-8      	; 0x444 <__EEPROM_REGION_LENGTH__+0x44>
     44c:	00 c0       	rjmp	.+0      	; 0x44e <__EEPROM_REGION_LENGTH__+0x4e>
     44e:	00 00       	nop
	_delay_ms(200);
	USART_TxString(msg);
     450:	ce 01       	movw	r24, r28
     452:	0e 94 71 00 	call	0xe2	; 0xe2 <_Z14USART_TxStringPc>
     456:	9f ef       	ldi	r25, 0xFF	; 255
     458:	21 ee       	ldi	r18, 0xE1	; 225
     45a:	34 e0       	ldi	r19, 0x04	; 4
     45c:	91 50       	subi	r25, 0x01	; 1
     45e:	20 40       	sbci	r18, 0x00	; 0
     460:	30 40       	sbci	r19, 0x00	; 0
     462:	e1 f7       	brne	.-8      	; 0x45c <__EEPROM_REGION_LENGTH__+0x5c>
     464:	00 c0       	rjmp	.+0      	; 0x466 <__EEPROM_REGION_LENGTH__+0x66>
     466:	00 00       	nop
	_delay_ms(200);
	USART_Transmit(26);
     468:	8a e1       	ldi	r24, 0x1A	; 26
     46a:	0e 94 6a 00 	call	0xd4	; 0xd4 <_Z14USART_Transmith>
     46e:	8f ef       	ldi	r24, 0xFF	; 255
     470:	91 ee       	ldi	r25, 0xE1	; 225
     472:	24 e0       	ldi	r18, 0x04	; 4
     474:	81 50       	subi	r24, 0x01	; 1
     476:	90 40       	sbci	r25, 0x00	; 0
     478:	20 40       	sbci	r18, 0x00	; 0
     47a:	e1 f7       	brne	.-8      	; 0x474 <__EEPROM_REGION_LENGTH__+0x74>
     47c:	00 c0       	rjmp	.+0      	; 0x47e <__EEPROM_REGION_LENGTH__+0x7e>
     47e:	00 00       	nop
	_delay_ms(200);
	USART_ClearRX();
     480:	0e 94 1a 01 	call	0x234	; 0x234 <_Z13USART_ClearRXv>
     484:	3f ef       	ldi	r19, 0xFF	; 255
     486:	89 e5       	ldi	r24, 0x59	; 89
     488:	92 e6       	ldi	r25, 0x62	; 98
     48a:	22 e0       	ldi	r18, 0x02	; 2
     48c:	31 50       	subi	r19, 0x01	; 1
     48e:	80 40       	sbci	r24, 0x00	; 0
     490:	90 40       	sbci	r25, 0x00	; 0
     492:	20 40       	sbci	r18, 0x00	; 0
     494:	d9 f7       	brne	.-10     	; 0x48c <__EEPROM_REGION_LENGTH__+0x8c>
     496:	00 c0       	rjmp	.+0      	; 0x498 <__EEPROM_REGION_LENGTH__+0x98>
     498:	00 00       	nop
	_delay_ms(30000);
	USART_ClearRX();
     49a:	0e 94 1a 01 	call	0x234	; 0x234 <_Z13USART_ClearRXv>
	
}
     49e:	0f 90       	pop	r0
     4a0:	0f 90       	pop	r0
     4a2:	0f 90       	pop	r0
     4a4:	0f 90       	pop	r0
     4a6:	0f 90       	pop	r0
     4a8:	0f 90       	pop	r0
     4aa:	df 91       	pop	r29
     4ac:	cf 91       	pop	r28
     4ae:	08 95       	ret

000004b0 <main>:
	
int8_t temp=0;
bool lockState=0;

int main(void)
{
     4b0:	cf 93       	push	r28
     4b2:	df 93       	push	r29
     4b4:	cd b7       	in	r28, 0x3d	; 61
     4b6:	de b7       	in	r29, 0x3e	; 62
   setjmp (mainstart);
     4b8:	88 e5       	ldi	r24, 0x58	; 88
     4ba:	94 e0       	ldi	r25, 0x04	; 4
     4bc:	0e 94 75 05 	call	0xaea	; 0xaea <setjmp>
     4c0:	2f ef       	ldi	r18, 0xFF	; 255
     4c2:	84 e3       	ldi	r24, 0x34	; 52
     4c4:	9c e0       	ldi	r25, 0x0C	; 12
     4c6:	21 50       	subi	r18, 0x01	; 1
     4c8:	80 40       	sbci	r24, 0x00	; 0
     4ca:	90 40       	sbci	r25, 0x00	; 0
     4cc:	e1 f7       	brne	.-8      	; 0x4c6 <main+0x16>
     4ce:	00 c0       	rjmp	.+0      	; 0x4d0 <main+0x20>
     4d0:	00 00       	nop
   _delay_ms(500);
   setupTimer();
     4d2:	0e 94 d5 01 	call	0x3aa	; 0x3aa <_Z10setupTimerv>
   sei();
     4d6:	78 94       	sei
   DDRB|=(1<<0);
     4d8:	84 b1       	in	r24, 0x04	; 4
     4da:	81 60       	ori	r24, 0x01	; 1
     4dc:	84 b9       	out	0x04, r24	; 4
   
   //eeprom_write_block((char*)"779394345",(uint8_t*)0,9);
  // eeprom_write_block((char*)"740083133",(uint8_t*)10,9);
   //eeprom_write_block((char*)"740083133",(uint8_t*)20,9);
   
   eeprom_read_block(adminNum,(uint8_t*)0,9);
     4de:	49 e0       	ldi	r20, 0x09	; 9
     4e0:	50 e0       	ldi	r21, 0x00	; 0
     4e2:	60 e0       	ldi	r22, 0x00	; 0
     4e4:	70 e0       	ldi	r23, 0x00	; 0
     4e6:	8d e0       	ldi	r24, 0x0D	; 13
     4e8:	94 e0       	ldi	r25, 0x04	; 4
     4ea:	0e 94 9a 08 	call	0x1134	; 0x1134 <eeprom_read_block>
   eeprom_read_block(costom1,(uint8_t*)10,9);
     4ee:	49 e0       	ldi	r20, 0x09	; 9
     4f0:	50 e0       	ldi	r21, 0x00	; 0
     4f2:	6a e0       	ldi	r22, 0x0A	; 10
     4f4:	70 e0       	ldi	r23, 0x00	; 0
     4f6:	84 e0       	ldi	r24, 0x04	; 4
     4f8:	94 e0       	ldi	r25, 0x04	; 4
     4fa:	0e 94 9a 08 	call	0x1134	; 0x1134 <eeprom_read_block>
   eeprom_read_block(costom2,(uint8_t*)20,9);
     4fe:	49 e0       	ldi	r20, 0x09	; 9
     500:	50 e0       	ldi	r21, 0x00	; 0
     502:	64 e1       	ldi	r22, 0x14	; 20
     504:	70 e0       	ldi	r23, 0x00	; 0
     506:	8b ef       	ldi	r24, 0xFB	; 251
     508:	93 e0       	ldi	r25, 0x03	; 3
     50a:	0e 94 9a 08 	call	0x1134	; 0x1134 <eeprom_read_block>
   if (eeprom_read_byte((uint8_t*)50))
     50e:	82 e3       	ldi	r24, 0x32	; 50
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	0e 94 aa 08 	call	0x1154	; 0x1154 <eeprom_read_byte>
     516:	88 23       	and	r24, r24
     518:	21 f0       	breq	.+8      	; 0x522 <main+0x72>
   { lockState=1;
     51a:	81 e0       	ldi	r24, 0x01	; 1
     51c:	80 93 fa 03 	sts	0x03FA, r24	; 0x8003fa <__data_end>
     520:	02 c0       	rjmp	.+4      	; 0x526 <main+0x76>

   }
   else
   {lockState=0;
     522:	10 92 fa 03 	sts	0x03FA, r1	; 0x8003fa <__data_end>
   }
   
   mainFunctionInit();
     526:	0e 94 25 01 	call	0x24a	; 0x24a <_Z16mainFunctionInitv>
	if (!checkGSM())
     52a:	0e 94 35 01 	call	0x26a	; 0x26a <_Z8checkGSMv>
     52e:	81 11       	cpse	r24, r1
     530:	06 c0       	rjmp	.+12     	; 0x53e <main+0x8e>
	{longjmp(mainstart,1);
     532:	61 e0       	ldi	r22, 0x01	; 1
     534:	70 e0       	ldi	r23, 0x00	; 0
     536:	88 e5       	ldi	r24, 0x58	; 88
     538:	94 e0       	ldi	r25, 0x04	; 4
     53a:	0e 94 95 05 	call	0xb2a	; 0xb2a <longjmp>
	}
	setupGSM();
     53e:	0e 94 a4 01 	call	0x348	; 0x348 <_Z8setupGSMv>
	
	
	USART_ClearRX();
     542:	0e 94 1a 01 	call	0x234	; 0x234 <_Z13USART_ClearRXv>
	OCR1A=3125;
     546:	08 e8       	ldi	r16, 0x88	; 136
     548:	10 e0       	ldi	r17, 0x00	; 0
     54a:	85 e3       	ldi	r24, 0x35	; 53
     54c:	9c e0       	ldi	r25, 0x0C	; 12
     54e:	f8 01       	movw	r30, r16
     550:	91 83       	std	Z+1, r25	; 0x01
     552:	80 83       	st	Z, r24
	sendSMS(0,"The GSM Unit was Powered by Electricity.\n (SMN POWER ELECTRICALS\n077-9394345)");
     554:	6f e3       	ldi	r22, 0x3F	; 63
     556:	71 e0       	ldi	r23, 0x01	; 1
     558:	80 e0       	ldi	r24, 0x00	; 0
     55a:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <_Z7sendSMShPc>
	sendSMS(1,"The GSM Unit was Powered by Electricity.\n (SMN POWER ELECTRICALS\n077-9394345)");
     55e:	6f e3       	ldi	r22, 0x3F	; 63
     560:	71 e0       	ldi	r23, 0x01	; 1
     562:	81 e0       	ldi	r24, 0x01	; 1
     564:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <_Z7sendSMShPc>
	sendSMS(2,"The GSM Unit was Powered by Electricity.\n (SMN POWER ELECTRICALS\n077-9394345)");
     568:	6f e3       	ldi	r22, 0x3F	; 63
     56a:	71 e0       	ldi	r23, 0x01	; 1
     56c:	82 e0       	ldi	r24, 0x02	; 2
     56e:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <_Z7sendSMShPc>
	OCR1A=3125*5;
     572:	89 e0       	ldi	r24, 0x09	; 9
     574:	9d e3       	ldi	r25, 0x3D	; 61
     576:	f8 01       	movw	r30, r16
     578:	91 83       	std	Z+1, r25	; 0x01
     57a:	80 83       	st	Z, r24
	
    while (1) 
    {
		
		if (USART_ReciveWait("+CMT",200))
     57c:	40 e0       	ldi	r20, 0x00	; 0
     57e:	68 ec       	ldi	r22, 0xC8	; 200
     580:	70 e0       	ldi	r23, 0x00	; 0
     582:	8d e8       	ldi	r24, 0x8D	; 141
     584:	91 e0       	ldi	r25, 0x01	; 1
     586:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <_Z16USART_ReciveWaitPcib>
     58a:	88 23       	and	r24, r24
     58c:	b9 f3       	breq	.-18     	; 0x57c <main+0xcc>
     58e:	ff ef       	ldi	r31, 0xFF	; 255
     590:	20 e7       	ldi	r18, 0x70	; 112
     592:	82 e0       	ldi	r24, 0x02	; 2
     594:	f1 50       	subi	r31, 0x01	; 1
     596:	20 40       	sbci	r18, 0x00	; 0
     598:	80 40       	sbci	r24, 0x00	; 0
     59a:	e1 f7       	brne	.-8      	; 0x594 <main+0xe4>
     59c:	00 c0       	rjmp	.+0      	; 0x59e <main+0xee>
     59e:	00 00       	nop
		{	_delay_ms(100);
			
			
			strncpy(filtere,strstr(rxvalue,"+CMT")+10,9);
     5a0:	6d e8       	ldi	r22, 0x8D	; 141
     5a2:	71 e0       	ldi	r23, 0x01	; 1
     5a4:	8f e6       	ldi	r24, 0x6F	; 111
     5a6:	94 e0       	ldi	r25, 0x04	; 4
     5a8:	0e 94 c5 05 	call	0xb8a	; 0xb8a <strstr>
     5ac:	bc 01       	movw	r22, r24
     5ae:	66 5f       	subi	r22, 0xF6	; 246
     5b0:	7f 4f       	sbci	r23, 0xFF	; 255
     5b2:	49 e0       	ldi	r20, 0x09	; 9
     5b4:	50 e0       	ldi	r21, 0x00	; 0
     5b6:	86 e1       	ldi	r24, 0x16	; 22
     5b8:	94 e0       	ldi	r25, 0x04	; 4
     5ba:	0e 94 b6 05 	call	0xb6c	; 0xb6c <strncpy>
			
			uint8_t checkNum=0;
			
			for(uint8_t i=0;i<9;i++){// check admin num
     5be:	80 e0       	ldi	r24, 0x00	; 0
		{	_delay_ms(100);
			
			
			strncpy(filtere,strstr(rxvalue,"+CMT")+10,9);
			
			uint8_t checkNum=0;
     5c0:	90 e0       	ldi	r25, 0x00	; 0
			
			for(uint8_t i=0;i<9;i++){// check admin num
     5c2:	89 30       	cpi	r24, 0x09	; 9
     5c4:	78 f4       	brcc	.+30     	; 0x5e4 <main+0x134>
			if (filtere[i]==adminNum[i])
     5c6:	28 2f       	mov	r18, r24
     5c8:	30 e0       	ldi	r19, 0x00	; 0
     5ca:	f9 01       	movw	r30, r18
     5cc:	ea 5e       	subi	r30, 0xEA	; 234
     5ce:	fb 4f       	sbci	r31, 0xFB	; 251
     5d0:	40 81       	ld	r20, Z
     5d2:	f9 01       	movw	r30, r18
     5d4:	e3 5f       	subi	r30, 0xF3	; 243
     5d6:	fb 4f       	sbci	r31, 0xFB	; 251
     5d8:	20 81       	ld	r18, Z
     5da:	42 13       	cpse	r20, r18
     5dc:	03 c0       	rjmp	.+6      	; 0x5e4 <main+0x134>
			{checkNum++;
     5de:	9f 5f       	subi	r25, 0xFF	; 255
			
			strncpy(filtere,strstr(rxvalue,"+CMT")+10,9);
			
			uint8_t checkNum=0;
			
			for(uint8_t i=0;i<9;i++){// check admin num
     5e0:	8f 5f       	subi	r24, 0xFF	; 255
     5e2:	ef cf       	rjmp	.-34     	; 0x5c2 <main+0x112>
			else
			{break;
			}
			}
			
			if (checkNum>=8)// start admin functions
     5e4:	98 30       	cpi	r25, 0x08	; 8
     5e6:	08 f4       	brcc	.+2      	; 0x5ea <main+0x13a>
     5e8:	12 c1       	rjmp	.+548    	; 0x80e <__DATA_REGION_LENGTH__+0xe>
			{OCR1A=3125;
     5ea:	85 e3       	ldi	r24, 0x35	; 53
     5ec:	9c e0       	ldi	r25, 0x0C	; 12
     5ee:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
     5f2:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
			
			if (USART_ReciveWait("RG",200)){
     5f6:	40 e0       	ldi	r20, 0x00	; 0
     5f8:	68 ec       	ldi	r22, 0xC8	; 200
     5fa:	70 e0       	ldi	r23, 0x00	; 0
     5fc:	82 e9       	ldi	r24, 0x92	; 146
     5fe:	91 e0       	ldi	r25, 0x01	; 1
     600:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <_Z16USART_ReciveWaitPcib>
     604:	88 23       	and	r24, r24
     606:	21 f1       	breq	.+72     	; 0x650 <main+0x1a0>
				strncpy(filtere,strstr(rxvalue,"RG")+4,9);
     608:	62 e9       	ldi	r22, 0x92	; 146
     60a:	71 e0       	ldi	r23, 0x01	; 1
     60c:	8f e6       	ldi	r24, 0x6F	; 111
     60e:	94 e0       	ldi	r25, 0x04	; 4
     610:	0e 94 c5 05 	call	0xb8a	; 0xb8a <strstr>
     614:	bc 01       	movw	r22, r24
     616:	6c 5f       	subi	r22, 0xFC	; 252
     618:	7f 4f       	sbci	r23, 0xFF	; 255
     61a:	49 e0       	ldi	r20, 0x09	; 9
     61c:	50 e0       	ldi	r21, 0x00	; 0
     61e:	86 e1       	ldi	r24, 0x16	; 22
     620:	94 e0       	ldi	r25, 0x04	; 4
     622:	0e 94 b6 05 	call	0xb6c	; 0xb6c <strncpy>
				eeprom_write_block((char*)filtere,(uint8_t*)0,9);
     626:	49 e0       	ldi	r20, 0x09	; 9
     628:	50 e0       	ldi	r21, 0x00	; 0
     62a:	60 e0       	ldi	r22, 0x00	; 0
     62c:	70 e0       	ldi	r23, 0x00	; 0
     62e:	86 e1       	ldi	r24, 0x16	; 22
     630:	94 e0       	ldi	r25, 0x04	; 4
     632:	0e 94 b2 08 	call	0x1164	; 0x1164 <eeprom_write_block>
				sendSMS(0,"Admin Number Changed.");
     636:	65 e9       	ldi	r22, 0x95	; 149
     638:	71 e0       	ldi	r23, 0x01	; 1
     63a:	80 e0       	ldi	r24, 0x00	; 0
     63c:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <_Z7sendSMShPc>
				 eeprom_read_block(adminNum,(uint8_t*)0,9);
     640:	49 e0       	ldi	r20, 0x09	; 9
     642:	50 e0       	ldi	r21, 0x00	; 0
     644:	60 e0       	ldi	r22, 0x00	; 0
     646:	70 e0       	ldi	r23, 0x00	; 0
     648:	8d e0       	ldi	r24, 0x0D	; 13
     64a:	94 e0       	ldi	r25, 0x04	; 4
     64c:	0e 94 9a 08 	call	0x1134	; 0x1134 <eeprom_read_block>
			}
			
			if (USART_ReciveWait("Lock",200)){
     650:	40 e0       	ldi	r20, 0x00	; 0
     652:	68 ec       	ldi	r22, 0xC8	; 200
     654:	70 e0       	ldi	r23, 0x00	; 0
     656:	8b ea       	ldi	r24, 0xAB	; 171
     658:	91 e0       	ldi	r25, 0x01	; 1
     65a:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <_Z16USART_ReciveWaitPcib>
     65e:	88 23       	and	r24, r24
     660:	69 f0       	breq	.+26     	; 0x67c <main+0x1cc>
				
				eeprom_write_byte((uint8_t*)50,1);
     662:	61 e0       	ldi	r22, 0x01	; 1
     664:	82 e3       	ldi	r24, 0x32	; 50
     666:	90 e0       	ldi	r25, 0x00	; 0
     668:	0e 94 bc 08 	call	0x1178	; 0x1178 <eeprom_write_byte>
				sendSMS(0,"The System is Locked by the Admin.");
     66c:	60 eb       	ldi	r22, 0xB0	; 176
     66e:	71 e0       	ldi	r23, 0x01	; 1
     670:	80 e0       	ldi	r24, 0x00	; 0
     672:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <_Z7sendSMShPc>
				//sendSMS(1,"The system is Locked by the admin.");
				//sendSMS(2,"The system is Locked by the admin.");
				lockState=1;
     676:	81 e0       	ldi	r24, 0x01	; 1
     678:	80 93 fa 03 	sts	0x03FA, r24	; 0x8003fa <__data_end>
				
			}
			if (USART_ReciveWait("Active",200)){
     67c:	40 e0       	ldi	r20, 0x00	; 0
     67e:	68 ec       	ldi	r22, 0xC8	; 200
     680:	70 e0       	ldi	r23, 0x00	; 0
     682:	83 ed       	ldi	r24, 0xD3	; 211
     684:	91 e0       	ldi	r25, 0x01	; 1
     686:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <_Z16USART_ReciveWaitPcib>
     68a:	88 23       	and	r24, r24
     68c:	b9 f0       	breq	.+46     	; 0x6bc <main+0x20c>
				eeprom_write_byte((uint8_t*)50,0);
     68e:	60 e0       	ldi	r22, 0x00	; 0
     690:	82 e3       	ldi	r24, 0x32	; 50
     692:	90 e0       	ldi	r25, 0x00	; 0
     694:	0e 94 bc 08 	call	0x1178	; 0x1178 <eeprom_write_byte>
				sendSMS(0,"The System is Unlocked by the Admin.");
     698:	6a ed       	ldi	r22, 0xDA	; 218
     69a:	71 e0       	ldi	r23, 0x01	; 1
     69c:	80 e0       	ldi	r24, 0x00	; 0
     69e:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <_Z7sendSMShPc>
				sendSMS(1,"The System is Unlocked by the Admin.");
     6a2:	6a ed       	ldi	r22, 0xDA	; 218
     6a4:	71 e0       	ldi	r23, 0x01	; 1
     6a6:	81 e0       	ldi	r24, 0x01	; 1
     6a8:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <_Z7sendSMShPc>
				sendSMS(2,"The System is Unlocked by the Admin.");
     6ac:	6a ed       	ldi	r22, 0xDA	; 218
     6ae:	71 e0       	ldi	r23, 0x01	; 1
     6b0:	82 e0       	ldi	r24, 0x02	; 2
     6b2:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <_Z7sendSMShPc>
				lockState=0;
     6b6:	10 92 fa 03 	sts	0x03FA, r1	; 0x8003fa <__data_end>
     6ba:	a3 c0       	rjmp	.+326    	; 0x802 <__DATA_REGION_LENGTH__+0x2>
			}
			
			else if (USART_ReciveWait("SMN1",200)){
     6bc:	40 e0       	ldi	r20, 0x00	; 0
     6be:	68 ec       	ldi	r22, 0xC8	; 200
     6c0:	70 e0       	ldi	r23, 0x00	; 0
     6c2:	8f ef       	ldi	r24, 0xFF	; 255
     6c4:	91 e0       	ldi	r25, 0x01	; 1
     6c6:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <_Z16USART_ReciveWaitPcib>
     6ca:	88 23       	and	r24, r24
     6cc:	51 f1       	breq	.+84     	; 0x722 <main+0x272>
				strncpy(filtere,strstr(rxvalue,"SMN1")+6,9);
     6ce:	6f ef       	ldi	r22, 0xFF	; 255
     6d0:	71 e0       	ldi	r23, 0x01	; 1
     6d2:	8f e6       	ldi	r24, 0x6F	; 111
     6d4:	94 e0       	ldi	r25, 0x04	; 4
     6d6:	0e 94 c5 05 	call	0xb8a	; 0xb8a <strstr>
     6da:	bc 01       	movw	r22, r24
     6dc:	6a 5f       	subi	r22, 0xFA	; 250
     6de:	7f 4f       	sbci	r23, 0xFF	; 255
     6e0:	49 e0       	ldi	r20, 0x09	; 9
     6e2:	50 e0       	ldi	r21, 0x00	; 0
     6e4:	86 e1       	ldi	r24, 0x16	; 22
     6e6:	94 e0       	ldi	r25, 0x04	; 4
     6e8:	0e 94 b6 05 	call	0xb6c	; 0xb6c <strncpy>
				eeprom_write_block((char*)filtere,(uint8_t*)10,9);
     6ec:	49 e0       	ldi	r20, 0x09	; 9
     6ee:	50 e0       	ldi	r21, 0x00	; 0
     6f0:	6a e0       	ldi	r22, 0x0A	; 10
     6f2:	70 e0       	ldi	r23, 0x00	; 0
     6f4:	86 e1       	ldi	r24, 0x16	; 22
     6f6:	94 e0       	ldi	r25, 0x04	; 4
     6f8:	0e 94 b2 08 	call	0x1164	; 0x1164 <eeprom_write_block>
				sendSMS(1,"Your Number is registered as Operator.\n (SMN POWER ELECTRICALS\n077-9394345)");
     6fc:	64 e0       	ldi	r22, 0x04	; 4
     6fe:	72 e0       	ldi	r23, 0x02	; 2
     700:	81 e0       	ldi	r24, 0x01	; 1
     702:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <_Z7sendSMShPc>
				sendSMS(0,"Operator 1 successfully registered.");
     706:	60 e5       	ldi	r22, 0x50	; 80
     708:	72 e0       	ldi	r23, 0x02	; 2
     70a:	80 e0       	ldi	r24, 0x00	; 0
     70c:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <_Z7sendSMShPc>
				 eeprom_read_block(costom1,(uint8_t*)10,9);
     710:	49 e0       	ldi	r20, 0x09	; 9
     712:	50 e0       	ldi	r21, 0x00	; 0
     714:	6a e0       	ldi	r22, 0x0A	; 10
     716:	70 e0       	ldi	r23, 0x00	; 0
     718:	84 e0       	ldi	r24, 0x04	; 4
     71a:	94 e0       	ldi	r25, 0x04	; 4
     71c:	0e 94 9a 08 	call	0x1134	; 0x1134 <eeprom_read_block>
     720:	70 c0       	rjmp	.+224    	; 0x802 <__DATA_REGION_LENGTH__+0x2>
			}
			
			
			
			
			else if (USART_ReciveWait("SMN2",200)){
     722:	40 e0       	ldi	r20, 0x00	; 0
     724:	68 ec       	ldi	r22, 0xC8	; 200
     726:	70 e0       	ldi	r23, 0x00	; 0
     728:	84 e7       	ldi	r24, 0x74	; 116
     72a:	92 e0       	ldi	r25, 0x02	; 2
     72c:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <_Z16USART_ReciveWaitPcib>
     730:	88 23       	and	r24, r24
     732:	51 f1       	breq	.+84     	; 0x788 <main+0x2d8>
				strncpy(filtere,strstr(rxvalue,"SMN2")+6,9);
     734:	64 e7       	ldi	r22, 0x74	; 116
     736:	72 e0       	ldi	r23, 0x02	; 2
     738:	8f e6       	ldi	r24, 0x6F	; 111
     73a:	94 e0       	ldi	r25, 0x04	; 4
     73c:	0e 94 c5 05 	call	0xb8a	; 0xb8a <strstr>
     740:	bc 01       	movw	r22, r24
     742:	6a 5f       	subi	r22, 0xFA	; 250
     744:	7f 4f       	sbci	r23, 0xFF	; 255
     746:	49 e0       	ldi	r20, 0x09	; 9
     748:	50 e0       	ldi	r21, 0x00	; 0
     74a:	86 e1       	ldi	r24, 0x16	; 22
     74c:	94 e0       	ldi	r25, 0x04	; 4
     74e:	0e 94 b6 05 	call	0xb6c	; 0xb6c <strncpy>
				eeprom_write_block((char*)filtere,(uint8_t*)20,9);
     752:	49 e0       	ldi	r20, 0x09	; 9
     754:	50 e0       	ldi	r21, 0x00	; 0
     756:	64 e1       	ldi	r22, 0x14	; 20
     758:	70 e0       	ldi	r23, 0x00	; 0
     75a:	86 e1       	ldi	r24, 0x16	; 22
     75c:	94 e0       	ldi	r25, 0x04	; 4
     75e:	0e 94 b2 08 	call	0x1164	; 0x1164 <eeprom_write_block>
				sendSMS(2,"Your Number is registered as Operator.\n (SMN POWER ELECTRICALS\n077-9394345)");
     762:	64 e0       	ldi	r22, 0x04	; 4
     764:	72 e0       	ldi	r23, 0x02	; 2
     766:	82 e0       	ldi	r24, 0x02	; 2
     768:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <_Z7sendSMShPc>
				sendSMS(0,"Operator 2 successfully registered.");				
     76c:	69 e7       	ldi	r22, 0x79	; 121
     76e:	72 e0       	ldi	r23, 0x02	; 2
     770:	80 e0       	ldi	r24, 0x00	; 0
     772:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <_Z7sendSMShPc>
			 eeprom_read_block(costom2,(uint8_t*)20,9);
     776:	49 e0       	ldi	r20, 0x09	; 9
     778:	50 e0       	ldi	r21, 0x00	; 0
     77a:	64 e1       	ldi	r22, 0x14	; 20
     77c:	70 e0       	ldi	r23, 0x00	; 0
     77e:	8b ef       	ldi	r24, 0xFB	; 251
     780:	93 e0       	ldi	r25, 0x03	; 3
     782:	0e 94 9a 08 	call	0x1134	; 0x1134 <eeprom_read_block>
     786:	3d c0       	rjmp	.+122    	; 0x802 <__DATA_REGION_LENGTH__+0x2>
				
			}
			
			
			
			else if (USART_ReciveWait("ON",200)){
     788:	40 e0       	ldi	r20, 0x00	; 0
     78a:	68 ec       	ldi	r22, 0xC8	; 200
     78c:	70 e0       	ldi	r23, 0x00	; 0
     78e:	8b ea       	ldi	r24, 0xAB	; 171
     790:	92 e0       	ldi	r25, 0x02	; 2
     792:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <_Z16USART_ReciveWaitPcib>
     796:	88 23       	and	r24, r24
     798:	89 f0       	breq	.+34     	; 0x7bc <main+0x30c>
				if (PINB&(1<<0))
     79a:	18 9b       	sbis	0x03, 0	; 3
     79c:	06 c0       	rjmp	.+12     	; 0x7aa <main+0x2fa>
				{	
					sendSMS(0,"Sorry!");
     79e:	6d e9       	ldi	r22, 0x9D	; 157
     7a0:	72 e0       	ldi	r23, 0x02	; 2
     7a2:	80 e0       	ldi	r24, 0x00	; 0
     7a4:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <_Z7sendSMShPc>
     7a8:	2c c0       	rjmp	.+88     	; 0x802 <__DATA_REGION_LENGTH__+0x2>
				} 
				else
				{
				PORTB|=(1<<0);
     7aa:	85 b1       	in	r24, 0x05	; 5
     7ac:	81 60       	ori	r24, 0x01	; 1
     7ae:	85 b9       	out	0x05, r24	; 5
				
				sendSMS(0,"System ON");
     7b0:	64 ea       	ldi	r22, 0xA4	; 164
     7b2:	72 e0       	ldi	r23, 0x02	; 2
     7b4:	80 e0       	ldi	r24, 0x00	; 0
     7b6:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <_Z7sendSMShPc>
     7ba:	23 c0       	rjmp	.+70     	; 0x802 <__DATA_REGION_LENGTH__+0x2>
				}
				
										
			}
			
			else if (USART_ReciveWait("OFF",200)){
     7bc:	40 e0       	ldi	r20, 0x00	; 0
     7be:	68 ec       	ldi	r22, 0xC8	; 200
     7c0:	70 e0       	ldi	r23, 0x00	; 0
     7c2:	83 e4       	ldi	r24, 0x43	; 67
     7c4:	93 e0       	ldi	r25, 0x03	; 3
     7c6:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <_Z16USART_ReciveWaitPcib>
     7ca:	88 23       	and	r24, r24
     7cc:	d1 f0       	breq	.+52     	; 0x802 <__DATA_REGION_LENGTH__+0x2>
				
				if (PINB&(1<<0))
     7ce:	18 9b       	sbis	0x03, 0	; 3
     7d0:	13 c0       	rjmp	.+38     	; 0x7f8 <main+0x348>
				{PORTB&=~(1<<0);
     7d2:	85 b1       	in	r24, 0x05	; 5
     7d4:	8e 7f       	andi	r24, 0xFE	; 254
     7d6:	85 b9       	out	0x05, r24	; 5
					
					sendSMS(0,"System OFF ");
     7d8:	6e ea       	ldi	r22, 0xAE	; 174
     7da:	72 e0       	ldi	r23, 0x02	; 2
     7dc:	80 e0       	ldi	r24, 0x00	; 0
     7de:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <_Z7sendSMShPc>
					sendSMS(1,"The System is Deactivated by the Admin");
     7e2:	6a eb       	ldi	r22, 0xBA	; 186
     7e4:	72 e0       	ldi	r23, 0x02	; 2
     7e6:	81 e0       	ldi	r24, 0x01	; 1
     7e8:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <_Z7sendSMShPc>
					sendSMS(2,"The System is Deactivated by the Admin");
     7ec:	6a eb       	ldi	r22, 0xBA	; 186
     7ee:	72 e0       	ldi	r23, 0x02	; 2
     7f0:	82 e0       	ldi	r24, 0x02	; 2
     7f2:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <_Z7sendSMShPc>
     7f6:	05 c0       	rjmp	.+10     	; 0x802 <__DATA_REGION_LENGTH__+0x2>
					
				}
				else
				{	
					sendSMS(0,"Sorry!");
     7f8:	6d e9       	ldi	r22, 0x9D	; 157
     7fa:	72 e0       	ldi	r23, 0x02	; 2
     7fc:	80 e0       	ldi	r24, 0x00	; 0
     7fe:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <_Z7sendSMShPc>
				
				
										
			}
				
			OCR1A=3125*5;
     802:	89 e0       	ldi	r24, 0x09	; 9
     804:	9d e3       	ldi	r25, 0x3D	; 61
     806:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
     80a:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
		}// end admin functions
			
			
			 checkNum =0;
			for(uint8_t i=0;i<9;i++){// check op1 num
     80e:	80 e0       	ldi	r24, 0x00	; 0
				
			OCR1A=3125*5;
		}// end admin functions
			
			
			 checkNum =0;
     810:	90 e0       	ldi	r25, 0x00	; 0
			for(uint8_t i=0;i<9;i++){// check op1 num
     812:	89 30       	cpi	r24, 0x09	; 9
     814:	78 f4       	brcc	.+30     	; 0x834 <__DATA_REGION_LENGTH__+0x34>
				if (filtere[i]==costom1[i])
     816:	28 2f       	mov	r18, r24
     818:	30 e0       	ldi	r19, 0x00	; 0
     81a:	f9 01       	movw	r30, r18
     81c:	ea 5e       	subi	r30, 0xEA	; 234
     81e:	fb 4f       	sbci	r31, 0xFB	; 251
     820:	40 81       	ld	r20, Z
     822:	f9 01       	movw	r30, r18
     824:	ec 5f       	subi	r30, 0xFC	; 252
     826:	fb 4f       	sbci	r31, 0xFB	; 251
     828:	20 81       	ld	r18, Z
     82a:	42 13       	cpse	r20, r18
     82c:	03 c0       	rjmp	.+6      	; 0x834 <__DATA_REGION_LENGTH__+0x34>
				{checkNum++;
     82e:	9f 5f       	subi	r25, 0xFF	; 255
			OCR1A=3125*5;
		}// end admin functions
			
			
			 checkNum =0;
			for(uint8_t i=0;i<9;i++){// check op1 num
     830:	8f 5f       	subi	r24, 0xFF	; 255
     832:	ef cf       	rjmp	.-34     	; 0x812 <__DATA_REGION_LENGTH__+0x12>
				else
				{break;
				}
			}
			
			if (checkNum>=8){// start oparator 1 functions
     834:	98 30       	cpi	r25, 0x08	; 8
     836:	08 f4       	brcc	.+2      	; 0x83a <__DATA_REGION_LENGTH__+0x3a>
     838:	5d c0       	rjmp	.+186    	; 0x8f4 <__DATA_REGION_LENGTH__+0xf4>
				OCR1A=3125;
     83a:	85 e3       	ldi	r24, 0x35	; 53
     83c:	9c e0       	ldi	r25, 0x0C	; 12
     83e:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
     842:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
				if (lockState)
     846:	80 91 fa 03 	lds	r24, 0x03FA	; 0x8003fa <__data_end>
     84a:	88 23       	and	r24, r24
     84c:	31 f0       	breq	.+12     	; 0x85a <__DATA_REGION_LENGTH__+0x5a>
				{sendSMS(1,"The system is Locked by the Admin.");
     84e:	61 ee       	ldi	r22, 0xE1	; 225
     850:	72 e0       	ldi	r23, 0x02	; 2
     852:	81 e0       	ldi	r24, 0x01	; 1
     854:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <_Z7sendSMShPc>
     858:	47 c0       	rjmp	.+142    	; 0x8e8 <__DATA_REGION_LENGTH__+0xe8>
				} 
				else
				{
					if (USART_ReciveWait("ON",200)){
     85a:	40 e0       	ldi	r20, 0x00	; 0
     85c:	68 ec       	ldi	r22, 0xC8	; 200
     85e:	70 e0       	ldi	r23, 0x00	; 0
     860:	8b ea       	ldi	r24, 0xAB	; 171
     862:	92 e0       	ldi	r25, 0x02	; 2
     864:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <_Z16USART_ReciveWaitPcib>
     868:	88 23       	and	r24, r24
     86a:	d9 f0       	breq	.+54     	; 0x8a2 <__DATA_REGION_LENGTH__+0xa2>
						
						if (PINB&(1<<0)){
     86c:	18 9b       	sbis	0x03, 0	; 3
     86e:	06 c0       	rjmp	.+12     	; 0x87c <__DATA_REGION_LENGTH__+0x7c>
							
							sendSMS(1,"Sorry!");
     870:	6d e9       	ldi	r22, 0x9D	; 157
     872:	72 e0       	ldi	r23, 0x02	; 2
     874:	81 e0       	ldi	r24, 0x01	; 1
     876:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <_Z7sendSMShPc>
     87a:	36 c0       	rjmp	.+108    	; 0x8e8 <__DATA_REGION_LENGTH__+0xe8>
							
						}
						else{
							PORTB|=(1<<0);
     87c:	85 b1       	in	r24, 0x05	; 5
     87e:	81 60       	ori	r24, 0x01	; 1
     880:	85 b9       	out	0x05, r24	; 5
							sendSMS(1,"System On");
     882:	64 e0       	ldi	r22, 0x04	; 4
     884:	73 e0       	ldi	r23, 0x03	; 3
     886:	81 e0       	ldi	r24, 0x01	; 1
     888:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <_Z7sendSMShPc>
							sendSMS(2,"The System is Activated by the First Operator");
     88c:	6e e0       	ldi	r22, 0x0E	; 14
     88e:	73 e0       	ldi	r23, 0x03	; 3
     890:	82 e0       	ldi	r24, 0x02	; 2
     892:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <_Z7sendSMShPc>
							sendSMS(0,"The System is Activated by the First Operator");
     896:	6e e0       	ldi	r22, 0x0E	; 14
     898:	73 e0       	ldi	r23, 0x03	; 3
     89a:	80 e0       	ldi	r24, 0x00	; 0
     89c:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <_Z7sendSMShPc>
     8a0:	23 c0       	rjmp	.+70     	; 0x8e8 <__DATA_REGION_LENGTH__+0xe8>
						
						
						
					}
					
					else if (USART_ReciveWait("OFF",200)){
     8a2:	40 e0       	ldi	r20, 0x00	; 0
     8a4:	68 ec       	ldi	r22, 0xC8	; 200
     8a6:	70 e0       	ldi	r23, 0x00	; 0
     8a8:	83 e4       	ldi	r24, 0x43	; 67
     8aa:	93 e0       	ldi	r25, 0x03	; 3
     8ac:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <_Z16USART_ReciveWaitPcib>
     8b0:	88 23       	and	r24, r24
     8b2:	d1 f0       	breq	.+52     	; 0x8e8 <__DATA_REGION_LENGTH__+0xe8>
						
						if (PINB&(1<<0))
     8b4:	18 9b       	sbis	0x03, 0	; 3
     8b6:	13 c0       	rjmp	.+38     	; 0x8de <__DATA_REGION_LENGTH__+0xde>
						{	PORTB&=~(1<<0);
     8b8:	85 b1       	in	r24, 0x05	; 5
     8ba:	8e 7f       	andi	r24, 0xFE	; 254
     8bc:	85 b9       	out	0x05, r24	; 5
							sendSMS(1,"System OFF");
     8be:	6c e3       	ldi	r22, 0x3C	; 60
     8c0:	73 e0       	ldi	r23, 0x03	; 3
     8c2:	81 e0       	ldi	r24, 0x01	; 1
     8c4:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <_Z7sendSMShPc>
							sendSMS(2,"The System is Deactivated by the First Operator");
     8c8:	67 e4       	ldi	r22, 0x47	; 71
     8ca:	73 e0       	ldi	r23, 0x03	; 3
     8cc:	82 e0       	ldi	r24, 0x02	; 2
     8ce:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <_Z7sendSMShPc>
							sendSMS(0,"The System is Deactivated by the First Operator");
     8d2:	67 e4       	ldi	r22, 0x47	; 71
     8d4:	73 e0       	ldi	r23, 0x03	; 3
     8d6:	80 e0       	ldi	r24, 0x00	; 0
     8d8:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <_Z7sendSMShPc>
     8dc:	05 c0       	rjmp	.+10     	; 0x8e8 <__DATA_REGION_LENGTH__+0xe8>
						}
						else
						{
							sendSMS(1,"Sorry!");
     8de:	6d e9       	ldi	r22, 0x9D	; 157
     8e0:	72 e0       	ldi	r23, 0x02	; 2
     8e2:	81 e0       	ldi	r24, 0x01	; 1
     8e4:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <_Z7sendSMShPc>
					
					
					
				}
				
			OCR1A=3125*8;	
     8e8:	88 ea       	ldi	r24, 0xA8	; 168
     8ea:	91 e6       	ldi	r25, 0x61	; 97
     8ec:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
     8f0:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
			}// end oparator1
			
			
///////////////////////////////////////////////////////////////////////////			
			 checkNum =0;
			 for(uint8_t i=0;i<9;i++){// check op2 num
     8f4:	80 e0       	ldi	r24, 0x00	; 0
			OCR1A=3125*8;	
			}// end oparator1
			
			
///////////////////////////////////////////////////////////////////////////			
			 checkNum =0;
     8f6:	90 e0       	ldi	r25, 0x00	; 0
			 for(uint8_t i=0;i<9;i++){// check op2 num
     8f8:	89 30       	cpi	r24, 0x09	; 9
     8fa:	78 f4       	brcc	.+30     	; 0x91a <__stack+0x1b>
				 if (filtere[i]==costom2[i])
     8fc:	28 2f       	mov	r18, r24
     8fe:	30 e0       	ldi	r19, 0x00	; 0
     900:	f9 01       	movw	r30, r18
     902:	ea 5e       	subi	r30, 0xEA	; 234
     904:	fb 4f       	sbci	r31, 0xFB	; 251
     906:	40 81       	ld	r20, Z
     908:	f9 01       	movw	r30, r18
     90a:	e5 50       	subi	r30, 0x05	; 5
     90c:	fc 4f       	sbci	r31, 0xFC	; 252
     90e:	20 81       	ld	r18, Z
     910:	42 13       	cpse	r20, r18
     912:	03 c0       	rjmp	.+6      	; 0x91a <__stack+0x1b>
				 {checkNum++;
     914:	9f 5f       	subi	r25, 0xFF	; 255
			}// end oparator1
			
			
///////////////////////////////////////////////////////////////////////////			
			 checkNum =0;
			 for(uint8_t i=0;i<9;i++){// check op2 num
     916:	8f 5f       	subi	r24, 0xFF	; 255
     918:	ef cf       	rjmp	.-34     	; 0x8f8 <__DATA_REGION_LENGTH__+0xf8>
				 else
				 {break;
				 }
			 }
			 
			 if (checkNum>=8){// start operator 2 functions
     91a:	98 30       	cpi	r25, 0x08	; 8
     91c:	08 f4       	brcc	.+2      	; 0x920 <__stack+0x21>
     91e:	2e ce       	rjmp	.-932    	; 0x57c <main+0xcc>
			OCR1A=3125;
     920:	85 e3       	ldi	r24, 0x35	; 53
     922:	9c e0       	ldi	r25, 0x0C	; 12
     924:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
     928:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
			
			if (lockState)
     92c:	80 91 fa 03 	lds	r24, 0x03FA	; 0x8003fa <__data_end>
     930:	88 23       	and	r24, r24
     932:	31 f0       	breq	.+12     	; 0x940 <__stack+0x41>
			{sendSMS(2,"The system is Locked by the admin.");
     934:	67 e7       	ldi	r22, 0x77	; 119
     936:	73 e0       	ldi	r23, 0x03	; 3
     938:	82 e0       	ldi	r24, 0x02	; 2
     93a:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <_Z7sendSMShPc>
     93e:	47 c0       	rjmp	.+142    	; 0x9ce <__stack+0xcf>
			} 
			else
			{if (USART_ReciveWait("ON",200)){
     940:	40 e0       	ldi	r20, 0x00	; 0
     942:	68 ec       	ldi	r22, 0xC8	; 200
     944:	70 e0       	ldi	r23, 0x00	; 0
     946:	8b ea       	ldi	r24, 0xAB	; 171
     948:	92 e0       	ldi	r25, 0x02	; 2
     94a:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <_Z16USART_ReciveWaitPcib>
     94e:	88 23       	and	r24, r24
     950:	d9 f0       	breq	.+54     	; 0x988 <__stack+0x89>
				
				if (PINB&(1<<0)){
     952:	18 9b       	sbis	0x03, 0	; 3
     954:	06 c0       	rjmp	.+12     	; 0x962 <__stack+0x63>
					sendSMS(2,"Sorry!");
     956:	6d e9       	ldi	r22, 0x9D	; 157
     958:	72 e0       	ldi	r23, 0x02	; 2
     95a:	82 e0       	ldi	r24, 0x02	; 2
     95c:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <_Z7sendSMShPc>
     960:	36 c0       	rjmp	.+108    	; 0x9ce <__stack+0xcf>
				}
				else{
					PORTB|=(1<<0);
     962:	85 b1       	in	r24, 0x05	; 5
     964:	81 60       	ori	r24, 0x01	; 1
     966:	85 b9       	out	0x05, r24	; 5
					sendSMS(2,"System On");
     968:	64 e0       	ldi	r22, 0x04	; 4
     96a:	73 e0       	ldi	r23, 0x03	; 3
     96c:	82 e0       	ldi	r24, 0x02	; 2
     96e:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <_Z7sendSMShPc>
					sendSMS(1,"The System is Activated by the Second Operator");
     972:	6a e9       	ldi	r22, 0x9A	; 154
     974:	73 e0       	ldi	r23, 0x03	; 3
     976:	81 e0       	ldi	r24, 0x01	; 1
     978:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <_Z7sendSMShPc>
					sendSMS(0,"The System is Activated by the Second Operator");
     97c:	6a e9       	ldi	r22, 0x9A	; 154
     97e:	73 e0       	ldi	r23, 0x03	; 3
     980:	80 e0       	ldi	r24, 0x00	; 0
     982:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <_Z7sendSMShPc>
     986:	23 c0       	rjmp	.+70     	; 0x9ce <__stack+0xcf>
				
				
				
			}
			
			else if (USART_ReciveWait("OFF",200)){
     988:	40 e0       	ldi	r20, 0x00	; 0
     98a:	68 ec       	ldi	r22, 0xC8	; 200
     98c:	70 e0       	ldi	r23, 0x00	; 0
     98e:	83 e4       	ldi	r24, 0x43	; 67
     990:	93 e0       	ldi	r25, 0x03	; 3
     992:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <_Z16USART_ReciveWaitPcib>
     996:	88 23       	and	r24, r24
     998:	d1 f0       	breq	.+52     	; 0x9ce <__stack+0xcf>
				
				if (PINB&(1<<0))
     99a:	18 9b       	sbis	0x03, 0	; 3
     99c:	13 c0       	rjmp	.+38     	; 0x9c4 <__stack+0xc5>
				{
					PORTB&=~(1<<0);
     99e:	85 b1       	in	r24, 0x05	; 5
     9a0:	8e 7f       	andi	r24, 0xFE	; 254
     9a2:	85 b9       	out	0x05, r24	; 5
					
					sendSMS(2,"System OFF");
     9a4:	6c e3       	ldi	r22, 0x3C	; 60
     9a6:	73 e0       	ldi	r23, 0x03	; 3
     9a8:	82 e0       	ldi	r24, 0x02	; 2
     9aa:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <_Z7sendSMShPc>
					sendSMS(1,"The System is Deactivated by the Second Operator");
     9ae:	69 ec       	ldi	r22, 0xC9	; 201
     9b0:	73 e0       	ldi	r23, 0x03	; 3
     9b2:	81 e0       	ldi	r24, 0x01	; 1
     9b4:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <_Z7sendSMShPc>
					sendSMS(0,"The System is Deactivated by the Second Operator");
     9b8:	69 ec       	ldi	r22, 0xC9	; 201
     9ba:	73 e0       	ldi	r23, 0x03	; 3
     9bc:	80 e0       	ldi	r24, 0x00	; 0
     9be:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <_Z7sendSMShPc>
     9c2:	05 c0       	rjmp	.+10     	; 0x9ce <__stack+0xcf>
					
				}
				else
				{
					
					sendSMS(2,"Sorry!");
     9c4:	6d e9       	ldi	r22, 0x9D	; 157
     9c6:	72 e0       	ldi	r23, 0x02	; 2
     9c8:	82 e0       	ldi	r24, 0x02	; 2
     9ca:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <_Z7sendSMShPc>
				
				
				
			}
			
			OCR1A=3125*8;	 
     9ce:	88 ea       	ldi	r24, 0xA8	; 168
     9d0:	91 e6       	ldi	r25, 0x61	; 97
     9d2:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
     9d6:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
     9da:	d0 cd       	rjmp	.-1120   	; 0x57c <main+0xcc>

000009dc <__divmodhi4>:
     9dc:	97 fb       	bst	r25, 7
     9de:	07 2e       	mov	r0, r23
     9e0:	16 f4       	brtc	.+4      	; 0x9e6 <__divmodhi4+0xa>
     9e2:	00 94       	com	r0
     9e4:	07 d0       	rcall	.+14     	; 0x9f4 <__divmodhi4_neg1>
     9e6:	77 fd       	sbrc	r23, 7
     9e8:	09 d0       	rcall	.+18     	; 0x9fc <__divmodhi4_neg2>
     9ea:	0e 94 21 05 	call	0xa42	; 0xa42 <__udivmodhi4>
     9ee:	07 fc       	sbrc	r0, 7
     9f0:	05 d0       	rcall	.+10     	; 0x9fc <__divmodhi4_neg2>
     9f2:	3e f4       	brtc	.+14     	; 0xa02 <__divmodhi4_exit>

000009f4 <__divmodhi4_neg1>:
     9f4:	90 95       	com	r25
     9f6:	81 95       	neg	r24
     9f8:	9f 4f       	sbci	r25, 0xFF	; 255
     9fa:	08 95       	ret

000009fc <__divmodhi4_neg2>:
     9fc:	70 95       	com	r23
     9fe:	61 95       	neg	r22
     a00:	7f 4f       	sbci	r23, 0xFF	; 255

00000a02 <__divmodhi4_exit>:
     a02:	08 95       	ret

00000a04 <__divmodsi4>:
     a04:	05 2e       	mov	r0, r21
     a06:	97 fb       	bst	r25, 7
     a08:	1e f4       	brtc	.+6      	; 0xa10 <__divmodsi4+0xc>
     a0a:	00 94       	com	r0
     a0c:	0e 94 19 05 	call	0xa32	; 0xa32 <__negsi2>
     a10:	57 fd       	sbrc	r21, 7
     a12:	07 d0       	rcall	.+14     	; 0xa22 <__divmodsi4_neg2>
     a14:	0e 94 35 05 	call	0xa6a	; 0xa6a <__udivmodsi4>
     a18:	07 fc       	sbrc	r0, 7
     a1a:	03 d0       	rcall	.+6      	; 0xa22 <__divmodsi4_neg2>
     a1c:	4e f4       	brtc	.+18     	; 0xa30 <__divmodsi4_exit>
     a1e:	0c 94 19 05 	jmp	0xa32	; 0xa32 <__negsi2>

00000a22 <__divmodsi4_neg2>:
     a22:	50 95       	com	r21
     a24:	40 95       	com	r20
     a26:	30 95       	com	r19
     a28:	21 95       	neg	r18
     a2a:	3f 4f       	sbci	r19, 0xFF	; 255
     a2c:	4f 4f       	sbci	r20, 0xFF	; 255
     a2e:	5f 4f       	sbci	r21, 0xFF	; 255

00000a30 <__divmodsi4_exit>:
     a30:	08 95       	ret

00000a32 <__negsi2>:
     a32:	90 95       	com	r25
     a34:	80 95       	com	r24
     a36:	70 95       	com	r23
     a38:	61 95       	neg	r22
     a3a:	7f 4f       	sbci	r23, 0xFF	; 255
     a3c:	8f 4f       	sbci	r24, 0xFF	; 255
     a3e:	9f 4f       	sbci	r25, 0xFF	; 255
     a40:	08 95       	ret

00000a42 <__udivmodhi4>:
     a42:	aa 1b       	sub	r26, r26
     a44:	bb 1b       	sub	r27, r27
     a46:	51 e1       	ldi	r21, 0x11	; 17
     a48:	07 c0       	rjmp	.+14     	; 0xa58 <__udivmodhi4_ep>

00000a4a <__udivmodhi4_loop>:
     a4a:	aa 1f       	adc	r26, r26
     a4c:	bb 1f       	adc	r27, r27
     a4e:	a6 17       	cp	r26, r22
     a50:	b7 07       	cpc	r27, r23
     a52:	10 f0       	brcs	.+4      	; 0xa58 <__udivmodhi4_ep>
     a54:	a6 1b       	sub	r26, r22
     a56:	b7 0b       	sbc	r27, r23

00000a58 <__udivmodhi4_ep>:
     a58:	88 1f       	adc	r24, r24
     a5a:	99 1f       	adc	r25, r25
     a5c:	5a 95       	dec	r21
     a5e:	a9 f7       	brne	.-22     	; 0xa4a <__udivmodhi4_loop>
     a60:	80 95       	com	r24
     a62:	90 95       	com	r25
     a64:	bc 01       	movw	r22, r24
     a66:	cd 01       	movw	r24, r26
     a68:	08 95       	ret

00000a6a <__udivmodsi4>:
     a6a:	a1 e2       	ldi	r26, 0x21	; 33
     a6c:	1a 2e       	mov	r1, r26
     a6e:	aa 1b       	sub	r26, r26
     a70:	bb 1b       	sub	r27, r27
     a72:	fd 01       	movw	r30, r26
     a74:	0d c0       	rjmp	.+26     	; 0xa90 <__udivmodsi4_ep>

00000a76 <__udivmodsi4_loop>:
     a76:	aa 1f       	adc	r26, r26
     a78:	bb 1f       	adc	r27, r27
     a7a:	ee 1f       	adc	r30, r30
     a7c:	ff 1f       	adc	r31, r31
     a7e:	a2 17       	cp	r26, r18
     a80:	b3 07       	cpc	r27, r19
     a82:	e4 07       	cpc	r30, r20
     a84:	f5 07       	cpc	r31, r21
     a86:	20 f0       	brcs	.+8      	; 0xa90 <__udivmodsi4_ep>
     a88:	a2 1b       	sub	r26, r18
     a8a:	b3 0b       	sbc	r27, r19
     a8c:	e4 0b       	sbc	r30, r20
     a8e:	f5 0b       	sbc	r31, r21

00000a90 <__udivmodsi4_ep>:
     a90:	66 1f       	adc	r22, r22
     a92:	77 1f       	adc	r23, r23
     a94:	88 1f       	adc	r24, r24
     a96:	99 1f       	adc	r25, r25
     a98:	1a 94       	dec	r1
     a9a:	69 f7       	brne	.-38     	; 0xa76 <__udivmodsi4_loop>
     a9c:	60 95       	com	r22
     a9e:	70 95       	com	r23
     aa0:	80 95       	com	r24
     aa2:	90 95       	com	r25
     aa4:	9b 01       	movw	r18, r22
     aa6:	ac 01       	movw	r20, r24
     aa8:	bd 01       	movw	r22, r26
     aaa:	cf 01       	movw	r24, r30
     aac:	08 95       	ret

00000aae <atoi>:
     aae:	fc 01       	movw	r30, r24
     ab0:	88 27       	eor	r24, r24
     ab2:	99 27       	eor	r25, r25
     ab4:	e8 94       	clt
     ab6:	21 91       	ld	r18, Z+
     ab8:	20 32       	cpi	r18, 0x20	; 32
     aba:	e9 f3       	breq	.-6      	; 0xab6 <atoi+0x8>
     abc:	29 30       	cpi	r18, 0x09	; 9
     abe:	10 f0       	brcs	.+4      	; 0xac4 <atoi+0x16>
     ac0:	2e 30       	cpi	r18, 0x0E	; 14
     ac2:	c8 f3       	brcs	.-14     	; 0xab6 <atoi+0x8>
     ac4:	2b 32       	cpi	r18, 0x2B	; 43
     ac6:	41 f0       	breq	.+16     	; 0xad8 <atoi+0x2a>
     ac8:	2d 32       	cpi	r18, 0x2D	; 45
     aca:	39 f4       	brne	.+14     	; 0xada <atoi+0x2c>
     acc:	68 94       	set
     ace:	04 c0       	rjmp	.+8      	; 0xad8 <atoi+0x2a>
     ad0:	0e 94 df 05 	call	0xbbe	; 0xbbe <__mulhi_const_10>
     ad4:	82 0f       	add	r24, r18
     ad6:	91 1d       	adc	r25, r1
     ad8:	21 91       	ld	r18, Z+
     ada:	20 53       	subi	r18, 0x30	; 48
     adc:	2a 30       	cpi	r18, 0x0A	; 10
     ade:	c0 f3       	brcs	.-16     	; 0xad0 <atoi+0x22>
     ae0:	1e f4       	brtc	.+6      	; 0xae8 <atoi+0x3a>
     ae2:	90 95       	com	r25
     ae4:	81 95       	neg	r24
     ae6:	9f 4f       	sbci	r25, 0xFF	; 255
     ae8:	08 95       	ret

00000aea <setjmp>:
     aea:	dc 01       	movw	r26, r24
     aec:	2d 92       	st	X+, r2
     aee:	3d 92       	st	X+, r3
     af0:	4d 92       	st	X+, r4
     af2:	5d 92       	st	X+, r5
     af4:	6d 92       	st	X+, r6
     af6:	7d 92       	st	X+, r7
     af8:	8d 92       	st	X+, r8
     afa:	9d 92       	st	X+, r9
     afc:	ad 92       	st	X+, r10
     afe:	bd 92       	st	X+, r11
     b00:	cd 92       	st	X+, r12
     b02:	dd 92       	st	X+, r13
     b04:	ed 92       	st	X+, r14
     b06:	fd 92       	st	X+, r15
     b08:	0d 93       	st	X+, r16
     b0a:	1d 93       	st	X+, r17
     b0c:	cd 93       	st	X+, r28
     b0e:	dd 93       	st	X+, r29
     b10:	ff 91       	pop	r31
     b12:	ef 91       	pop	r30
     b14:	8d b7       	in	r24, 0x3d	; 61
     b16:	8d 93       	st	X+, r24
     b18:	8e b7       	in	r24, 0x3e	; 62
     b1a:	8d 93       	st	X+, r24
     b1c:	8f b7       	in	r24, 0x3f	; 63
     b1e:	8d 93       	st	X+, r24
     b20:	ed 93       	st	X+, r30
     b22:	fd 93       	st	X+, r31
     b24:	88 27       	eor	r24, r24
     b26:	99 27       	eor	r25, r25
     b28:	09 94       	ijmp

00000b2a <longjmp>:
     b2a:	dc 01       	movw	r26, r24
     b2c:	cb 01       	movw	r24, r22
     b2e:	81 30       	cpi	r24, 0x01	; 1
     b30:	91 05       	cpc	r25, r1
     b32:	81 1d       	adc	r24, r1
     b34:	2d 90       	ld	r2, X+
     b36:	3d 90       	ld	r3, X+
     b38:	4d 90       	ld	r4, X+
     b3a:	5d 90       	ld	r5, X+
     b3c:	6d 90       	ld	r6, X+
     b3e:	7d 90       	ld	r7, X+
     b40:	8d 90       	ld	r8, X+
     b42:	9d 90       	ld	r9, X+
     b44:	ad 90       	ld	r10, X+
     b46:	bd 90       	ld	r11, X+
     b48:	cd 90       	ld	r12, X+
     b4a:	dd 90       	ld	r13, X+
     b4c:	ed 90       	ld	r14, X+
     b4e:	fd 90       	ld	r15, X+
     b50:	0d 91       	ld	r16, X+
     b52:	1d 91       	ld	r17, X+
     b54:	cd 91       	ld	r28, X+
     b56:	dd 91       	ld	r29, X+
     b58:	ed 91       	ld	r30, X+
     b5a:	fd 91       	ld	r31, X+
     b5c:	0d 90       	ld	r0, X+
     b5e:	f8 94       	cli
     b60:	fe bf       	out	0x3e, r31	; 62
     b62:	0f be       	out	0x3f, r0	; 63
     b64:	ed bf       	out	0x3d, r30	; 61
     b66:	ed 91       	ld	r30, X+
     b68:	fd 91       	ld	r31, X+
     b6a:	09 94       	ijmp

00000b6c <strncpy>:
     b6c:	fb 01       	movw	r30, r22
     b6e:	dc 01       	movw	r26, r24
     b70:	41 50       	subi	r20, 0x01	; 1
     b72:	50 40       	sbci	r21, 0x00	; 0
     b74:	48 f0       	brcs	.+18     	; 0xb88 <strncpy+0x1c>
     b76:	01 90       	ld	r0, Z+
     b78:	0d 92       	st	X+, r0
     b7a:	00 20       	and	r0, r0
     b7c:	c9 f7       	brne	.-14     	; 0xb70 <strncpy+0x4>
     b7e:	01 c0       	rjmp	.+2      	; 0xb82 <strncpy+0x16>
     b80:	1d 92       	st	X+, r1
     b82:	41 50       	subi	r20, 0x01	; 1
     b84:	50 40       	sbci	r21, 0x00	; 0
     b86:	e0 f7       	brcc	.-8      	; 0xb80 <strncpy+0x14>
     b88:	08 95       	ret

00000b8a <strstr>:
     b8a:	fb 01       	movw	r30, r22
     b8c:	51 91       	ld	r21, Z+
     b8e:	55 23       	and	r21, r21
     b90:	a9 f0       	breq	.+42     	; 0xbbc <strstr+0x32>
     b92:	bf 01       	movw	r22, r30
     b94:	dc 01       	movw	r26, r24
     b96:	4d 91       	ld	r20, X+
     b98:	45 17       	cp	r20, r21
     b9a:	41 11       	cpse	r20, r1
     b9c:	e1 f7       	brne	.-8      	; 0xb96 <strstr+0xc>
     b9e:	59 f4       	brne	.+22     	; 0xbb6 <strstr+0x2c>
     ba0:	cd 01       	movw	r24, r26
     ba2:	01 90       	ld	r0, Z+
     ba4:	00 20       	and	r0, r0
     ba6:	49 f0       	breq	.+18     	; 0xbba <strstr+0x30>
     ba8:	4d 91       	ld	r20, X+
     baa:	40 15       	cp	r20, r0
     bac:	41 11       	cpse	r20, r1
     bae:	c9 f3       	breq	.-14     	; 0xba2 <strstr+0x18>
     bb0:	fb 01       	movw	r30, r22
     bb2:	41 11       	cpse	r20, r1
     bb4:	ef cf       	rjmp	.-34     	; 0xb94 <strstr+0xa>
     bb6:	81 e0       	ldi	r24, 0x01	; 1
     bb8:	90 e0       	ldi	r25, 0x00	; 0
     bba:	01 97       	sbiw	r24, 0x01	; 1
     bbc:	08 95       	ret

00000bbe <__mulhi_const_10>:
     bbe:	7a e0       	ldi	r23, 0x0A	; 10
     bc0:	97 9f       	mul	r25, r23
     bc2:	90 2d       	mov	r25, r0
     bc4:	87 9f       	mul	r24, r23
     bc6:	80 2d       	mov	r24, r0
     bc8:	91 0d       	add	r25, r1
     bca:	11 24       	eor	r1, r1
     bcc:	08 95       	ret

00000bce <sprintf>:
     bce:	ae e0       	ldi	r26, 0x0E	; 14
     bd0:	b0 e0       	ldi	r27, 0x00	; 0
     bd2:	ed ee       	ldi	r30, 0xED	; 237
     bd4:	f5 e0       	ldi	r31, 0x05	; 5
     bd6:	0c 94 d8 08 	jmp	0x11b0	; 0x11b0 <__prologue_saves__+0x1c>
     bda:	0d 89       	ldd	r16, Y+21	; 0x15
     bdc:	1e 89       	ldd	r17, Y+22	; 0x16
     bde:	86 e0       	ldi	r24, 0x06	; 6
     be0:	8c 83       	std	Y+4, r24	; 0x04
     be2:	1a 83       	std	Y+2, r17	; 0x02
     be4:	09 83       	std	Y+1, r16	; 0x01
     be6:	8f ef       	ldi	r24, 0xFF	; 255
     be8:	9f e7       	ldi	r25, 0x7F	; 127
     bea:	9e 83       	std	Y+6, r25	; 0x06
     bec:	8d 83       	std	Y+5, r24	; 0x05
     bee:	ae 01       	movw	r20, r28
     bf0:	47 5e       	subi	r20, 0xE7	; 231
     bf2:	5f 4f       	sbci	r21, 0xFF	; 255
     bf4:	6f 89       	ldd	r22, Y+23	; 0x17
     bf6:	78 8d       	ldd	r23, Y+24	; 0x18
     bf8:	ce 01       	movw	r24, r28
     bfa:	01 96       	adiw	r24, 0x01	; 1
     bfc:	0e 94 09 06 	call	0xc12	; 0xc12 <vfprintf>
     c00:	ef 81       	ldd	r30, Y+7	; 0x07
     c02:	f8 85       	ldd	r31, Y+8	; 0x08
     c04:	e0 0f       	add	r30, r16
     c06:	f1 1f       	adc	r31, r17
     c08:	10 82       	st	Z, r1
     c0a:	2e 96       	adiw	r28, 0x0e	; 14
     c0c:	e4 e0       	ldi	r30, 0x04	; 4
     c0e:	0c 94 f4 08 	jmp	0x11e8	; 0x11e8 <__epilogue_restores__+0x1c>

00000c12 <vfprintf>:
     c12:	ab e0       	ldi	r26, 0x0B	; 11
     c14:	b0 e0       	ldi	r27, 0x00	; 0
     c16:	ef e0       	ldi	r30, 0x0F	; 15
     c18:	f6 e0       	ldi	r31, 0x06	; 6
     c1a:	0c 94 ca 08 	jmp	0x1194	; 0x1194 <__prologue_saves__>
     c1e:	6c 01       	movw	r12, r24
     c20:	7b 01       	movw	r14, r22
     c22:	8a 01       	movw	r16, r20
     c24:	fc 01       	movw	r30, r24
     c26:	17 82       	std	Z+7, r1	; 0x07
     c28:	16 82       	std	Z+6, r1	; 0x06
     c2a:	83 81       	ldd	r24, Z+3	; 0x03
     c2c:	81 ff       	sbrs	r24, 1
     c2e:	cc c1       	rjmp	.+920    	; 0xfc8 <vfprintf+0x3b6>
     c30:	ce 01       	movw	r24, r28
     c32:	01 96       	adiw	r24, 0x01	; 1
     c34:	3c 01       	movw	r6, r24
     c36:	f6 01       	movw	r30, r12
     c38:	93 81       	ldd	r25, Z+3	; 0x03
     c3a:	f7 01       	movw	r30, r14
     c3c:	93 fd       	sbrc	r25, 3
     c3e:	85 91       	lpm	r24, Z+
     c40:	93 ff       	sbrs	r25, 3
     c42:	81 91       	ld	r24, Z+
     c44:	7f 01       	movw	r14, r30
     c46:	88 23       	and	r24, r24
     c48:	09 f4       	brne	.+2      	; 0xc4c <vfprintf+0x3a>
     c4a:	ba c1       	rjmp	.+884    	; 0xfc0 <vfprintf+0x3ae>
     c4c:	85 32       	cpi	r24, 0x25	; 37
     c4e:	39 f4       	brne	.+14     	; 0xc5e <vfprintf+0x4c>
     c50:	93 fd       	sbrc	r25, 3
     c52:	85 91       	lpm	r24, Z+
     c54:	93 ff       	sbrs	r25, 3
     c56:	81 91       	ld	r24, Z+
     c58:	7f 01       	movw	r14, r30
     c5a:	85 32       	cpi	r24, 0x25	; 37
     c5c:	29 f4       	brne	.+10     	; 0xc68 <vfprintf+0x56>
     c5e:	b6 01       	movw	r22, r12
     c60:	90 e0       	ldi	r25, 0x00	; 0
     c62:	0e 94 00 08 	call	0x1000	; 0x1000 <fputc>
     c66:	e7 cf       	rjmp	.-50     	; 0xc36 <vfprintf+0x24>
     c68:	91 2c       	mov	r9, r1
     c6a:	21 2c       	mov	r2, r1
     c6c:	31 2c       	mov	r3, r1
     c6e:	ff e1       	ldi	r31, 0x1F	; 31
     c70:	f3 15       	cp	r31, r3
     c72:	d8 f0       	brcs	.+54     	; 0xcaa <vfprintf+0x98>
     c74:	8b 32       	cpi	r24, 0x2B	; 43
     c76:	79 f0       	breq	.+30     	; 0xc96 <vfprintf+0x84>
     c78:	38 f4       	brcc	.+14     	; 0xc88 <vfprintf+0x76>
     c7a:	80 32       	cpi	r24, 0x20	; 32
     c7c:	79 f0       	breq	.+30     	; 0xc9c <vfprintf+0x8a>
     c7e:	83 32       	cpi	r24, 0x23	; 35
     c80:	a1 f4       	brne	.+40     	; 0xcaa <vfprintf+0x98>
     c82:	23 2d       	mov	r18, r3
     c84:	20 61       	ori	r18, 0x10	; 16
     c86:	1d c0       	rjmp	.+58     	; 0xcc2 <vfprintf+0xb0>
     c88:	8d 32       	cpi	r24, 0x2D	; 45
     c8a:	61 f0       	breq	.+24     	; 0xca4 <vfprintf+0x92>
     c8c:	80 33       	cpi	r24, 0x30	; 48
     c8e:	69 f4       	brne	.+26     	; 0xcaa <vfprintf+0x98>
     c90:	23 2d       	mov	r18, r3
     c92:	21 60       	ori	r18, 0x01	; 1
     c94:	16 c0       	rjmp	.+44     	; 0xcc2 <vfprintf+0xb0>
     c96:	83 2d       	mov	r24, r3
     c98:	82 60       	ori	r24, 0x02	; 2
     c9a:	38 2e       	mov	r3, r24
     c9c:	e3 2d       	mov	r30, r3
     c9e:	e4 60       	ori	r30, 0x04	; 4
     ca0:	3e 2e       	mov	r3, r30
     ca2:	2a c0       	rjmp	.+84     	; 0xcf8 <vfprintf+0xe6>
     ca4:	f3 2d       	mov	r31, r3
     ca6:	f8 60       	ori	r31, 0x08	; 8
     ca8:	1d c0       	rjmp	.+58     	; 0xce4 <vfprintf+0xd2>
     caa:	37 fc       	sbrc	r3, 7
     cac:	2d c0       	rjmp	.+90     	; 0xd08 <vfprintf+0xf6>
     cae:	20 ed       	ldi	r18, 0xD0	; 208
     cb0:	28 0f       	add	r18, r24
     cb2:	2a 30       	cpi	r18, 0x0A	; 10
     cb4:	40 f0       	brcs	.+16     	; 0xcc6 <vfprintf+0xb4>
     cb6:	8e 32       	cpi	r24, 0x2E	; 46
     cb8:	b9 f4       	brne	.+46     	; 0xce8 <vfprintf+0xd6>
     cba:	36 fc       	sbrc	r3, 6
     cbc:	81 c1       	rjmp	.+770    	; 0xfc0 <vfprintf+0x3ae>
     cbe:	23 2d       	mov	r18, r3
     cc0:	20 64       	ori	r18, 0x40	; 64
     cc2:	32 2e       	mov	r3, r18
     cc4:	19 c0       	rjmp	.+50     	; 0xcf8 <vfprintf+0xe6>
     cc6:	36 fe       	sbrs	r3, 6
     cc8:	06 c0       	rjmp	.+12     	; 0xcd6 <vfprintf+0xc4>
     cca:	8a e0       	ldi	r24, 0x0A	; 10
     ccc:	98 9e       	mul	r9, r24
     cce:	20 0d       	add	r18, r0
     cd0:	11 24       	eor	r1, r1
     cd2:	92 2e       	mov	r9, r18
     cd4:	11 c0       	rjmp	.+34     	; 0xcf8 <vfprintf+0xe6>
     cd6:	ea e0       	ldi	r30, 0x0A	; 10
     cd8:	2e 9e       	mul	r2, r30
     cda:	20 0d       	add	r18, r0
     cdc:	11 24       	eor	r1, r1
     cde:	22 2e       	mov	r2, r18
     ce0:	f3 2d       	mov	r31, r3
     ce2:	f0 62       	ori	r31, 0x20	; 32
     ce4:	3f 2e       	mov	r3, r31
     ce6:	08 c0       	rjmp	.+16     	; 0xcf8 <vfprintf+0xe6>
     ce8:	8c 36       	cpi	r24, 0x6C	; 108
     cea:	21 f4       	brne	.+8      	; 0xcf4 <vfprintf+0xe2>
     cec:	83 2d       	mov	r24, r3
     cee:	80 68       	ori	r24, 0x80	; 128
     cf0:	38 2e       	mov	r3, r24
     cf2:	02 c0       	rjmp	.+4      	; 0xcf8 <vfprintf+0xe6>
     cf4:	88 36       	cpi	r24, 0x68	; 104
     cf6:	41 f4       	brne	.+16     	; 0xd08 <vfprintf+0xf6>
     cf8:	f7 01       	movw	r30, r14
     cfa:	93 fd       	sbrc	r25, 3
     cfc:	85 91       	lpm	r24, Z+
     cfe:	93 ff       	sbrs	r25, 3
     d00:	81 91       	ld	r24, Z+
     d02:	7f 01       	movw	r14, r30
     d04:	81 11       	cpse	r24, r1
     d06:	b3 cf       	rjmp	.-154    	; 0xc6e <vfprintf+0x5c>
     d08:	98 2f       	mov	r25, r24
     d0a:	9f 7d       	andi	r25, 0xDF	; 223
     d0c:	95 54       	subi	r25, 0x45	; 69
     d0e:	93 30       	cpi	r25, 0x03	; 3
     d10:	28 f4       	brcc	.+10     	; 0xd1c <vfprintf+0x10a>
     d12:	0c 5f       	subi	r16, 0xFC	; 252
     d14:	1f 4f       	sbci	r17, 0xFF	; 255
     d16:	9f e3       	ldi	r25, 0x3F	; 63
     d18:	99 83       	std	Y+1, r25	; 0x01
     d1a:	0d c0       	rjmp	.+26     	; 0xd36 <vfprintf+0x124>
     d1c:	83 36       	cpi	r24, 0x63	; 99
     d1e:	31 f0       	breq	.+12     	; 0xd2c <vfprintf+0x11a>
     d20:	83 37       	cpi	r24, 0x73	; 115
     d22:	71 f0       	breq	.+28     	; 0xd40 <vfprintf+0x12e>
     d24:	83 35       	cpi	r24, 0x53	; 83
     d26:	09 f0       	breq	.+2      	; 0xd2a <vfprintf+0x118>
     d28:	59 c0       	rjmp	.+178    	; 0xddc <vfprintf+0x1ca>
     d2a:	21 c0       	rjmp	.+66     	; 0xd6e <vfprintf+0x15c>
     d2c:	f8 01       	movw	r30, r16
     d2e:	80 81       	ld	r24, Z
     d30:	89 83       	std	Y+1, r24	; 0x01
     d32:	0e 5f       	subi	r16, 0xFE	; 254
     d34:	1f 4f       	sbci	r17, 0xFF	; 255
     d36:	88 24       	eor	r8, r8
     d38:	83 94       	inc	r8
     d3a:	91 2c       	mov	r9, r1
     d3c:	53 01       	movw	r10, r6
     d3e:	13 c0       	rjmp	.+38     	; 0xd66 <vfprintf+0x154>
     d40:	28 01       	movw	r4, r16
     d42:	f2 e0       	ldi	r31, 0x02	; 2
     d44:	4f 0e       	add	r4, r31
     d46:	51 1c       	adc	r5, r1
     d48:	f8 01       	movw	r30, r16
     d4a:	a0 80       	ld	r10, Z
     d4c:	b1 80       	ldd	r11, Z+1	; 0x01
     d4e:	36 fe       	sbrs	r3, 6
     d50:	03 c0       	rjmp	.+6      	; 0xd58 <vfprintf+0x146>
     d52:	69 2d       	mov	r22, r9
     d54:	70 e0       	ldi	r23, 0x00	; 0
     d56:	02 c0       	rjmp	.+4      	; 0xd5c <vfprintf+0x14a>
     d58:	6f ef       	ldi	r22, 0xFF	; 255
     d5a:	7f ef       	ldi	r23, 0xFF	; 255
     d5c:	c5 01       	movw	r24, r10
     d5e:	0e 94 f5 07 	call	0xfea	; 0xfea <strnlen>
     d62:	4c 01       	movw	r8, r24
     d64:	82 01       	movw	r16, r4
     d66:	f3 2d       	mov	r31, r3
     d68:	ff 77       	andi	r31, 0x7F	; 127
     d6a:	3f 2e       	mov	r3, r31
     d6c:	16 c0       	rjmp	.+44     	; 0xd9a <vfprintf+0x188>
     d6e:	28 01       	movw	r4, r16
     d70:	22 e0       	ldi	r18, 0x02	; 2
     d72:	42 0e       	add	r4, r18
     d74:	51 1c       	adc	r5, r1
     d76:	f8 01       	movw	r30, r16
     d78:	a0 80       	ld	r10, Z
     d7a:	b1 80       	ldd	r11, Z+1	; 0x01
     d7c:	36 fe       	sbrs	r3, 6
     d7e:	03 c0       	rjmp	.+6      	; 0xd86 <vfprintf+0x174>
     d80:	69 2d       	mov	r22, r9
     d82:	70 e0       	ldi	r23, 0x00	; 0
     d84:	02 c0       	rjmp	.+4      	; 0xd8a <vfprintf+0x178>
     d86:	6f ef       	ldi	r22, 0xFF	; 255
     d88:	7f ef       	ldi	r23, 0xFF	; 255
     d8a:	c5 01       	movw	r24, r10
     d8c:	0e 94 ea 07 	call	0xfd4	; 0xfd4 <strnlen_P>
     d90:	4c 01       	movw	r8, r24
     d92:	f3 2d       	mov	r31, r3
     d94:	f0 68       	ori	r31, 0x80	; 128
     d96:	3f 2e       	mov	r3, r31
     d98:	82 01       	movw	r16, r4
     d9a:	33 fc       	sbrc	r3, 3
     d9c:	1b c0       	rjmp	.+54     	; 0xdd4 <vfprintf+0x1c2>
     d9e:	82 2d       	mov	r24, r2
     da0:	90 e0       	ldi	r25, 0x00	; 0
     da2:	88 16       	cp	r8, r24
     da4:	99 06       	cpc	r9, r25
     da6:	b0 f4       	brcc	.+44     	; 0xdd4 <vfprintf+0x1c2>
     da8:	b6 01       	movw	r22, r12
     daa:	80 e2       	ldi	r24, 0x20	; 32
     dac:	90 e0       	ldi	r25, 0x00	; 0
     dae:	0e 94 00 08 	call	0x1000	; 0x1000 <fputc>
     db2:	2a 94       	dec	r2
     db4:	f4 cf       	rjmp	.-24     	; 0xd9e <vfprintf+0x18c>
     db6:	f5 01       	movw	r30, r10
     db8:	37 fc       	sbrc	r3, 7
     dba:	85 91       	lpm	r24, Z+
     dbc:	37 fe       	sbrs	r3, 7
     dbe:	81 91       	ld	r24, Z+
     dc0:	5f 01       	movw	r10, r30
     dc2:	b6 01       	movw	r22, r12
     dc4:	90 e0       	ldi	r25, 0x00	; 0
     dc6:	0e 94 00 08 	call	0x1000	; 0x1000 <fputc>
     dca:	21 10       	cpse	r2, r1
     dcc:	2a 94       	dec	r2
     dce:	21 e0       	ldi	r18, 0x01	; 1
     dd0:	82 1a       	sub	r8, r18
     dd2:	91 08       	sbc	r9, r1
     dd4:	81 14       	cp	r8, r1
     dd6:	91 04       	cpc	r9, r1
     dd8:	71 f7       	brne	.-36     	; 0xdb6 <vfprintf+0x1a4>
     dda:	e8 c0       	rjmp	.+464    	; 0xfac <vfprintf+0x39a>
     ddc:	84 36       	cpi	r24, 0x64	; 100
     dde:	11 f0       	breq	.+4      	; 0xde4 <vfprintf+0x1d2>
     de0:	89 36       	cpi	r24, 0x69	; 105
     de2:	41 f5       	brne	.+80     	; 0xe34 <vfprintf+0x222>
     de4:	f8 01       	movw	r30, r16
     de6:	37 fe       	sbrs	r3, 7
     de8:	07 c0       	rjmp	.+14     	; 0xdf8 <vfprintf+0x1e6>
     dea:	60 81       	ld	r22, Z
     dec:	71 81       	ldd	r23, Z+1	; 0x01
     dee:	82 81       	ldd	r24, Z+2	; 0x02
     df0:	93 81       	ldd	r25, Z+3	; 0x03
     df2:	0c 5f       	subi	r16, 0xFC	; 252
     df4:	1f 4f       	sbci	r17, 0xFF	; 255
     df6:	08 c0       	rjmp	.+16     	; 0xe08 <vfprintf+0x1f6>
     df8:	60 81       	ld	r22, Z
     dfa:	71 81       	ldd	r23, Z+1	; 0x01
     dfc:	07 2e       	mov	r0, r23
     dfe:	00 0c       	add	r0, r0
     e00:	88 0b       	sbc	r24, r24
     e02:	99 0b       	sbc	r25, r25
     e04:	0e 5f       	subi	r16, 0xFE	; 254
     e06:	1f 4f       	sbci	r17, 0xFF	; 255
     e08:	f3 2d       	mov	r31, r3
     e0a:	ff 76       	andi	r31, 0x6F	; 111
     e0c:	3f 2e       	mov	r3, r31
     e0e:	97 ff       	sbrs	r25, 7
     e10:	09 c0       	rjmp	.+18     	; 0xe24 <vfprintf+0x212>
     e12:	90 95       	com	r25
     e14:	80 95       	com	r24
     e16:	70 95       	com	r23
     e18:	61 95       	neg	r22
     e1a:	7f 4f       	sbci	r23, 0xFF	; 255
     e1c:	8f 4f       	sbci	r24, 0xFF	; 255
     e1e:	9f 4f       	sbci	r25, 0xFF	; 255
     e20:	f0 68       	ori	r31, 0x80	; 128
     e22:	3f 2e       	mov	r3, r31
     e24:	2a e0       	ldi	r18, 0x0A	; 10
     e26:	30 e0       	ldi	r19, 0x00	; 0
     e28:	a3 01       	movw	r20, r6
     e2a:	0e 94 3c 08 	call	0x1078	; 0x1078 <__ultoa_invert>
     e2e:	88 2e       	mov	r8, r24
     e30:	86 18       	sub	r8, r6
     e32:	45 c0       	rjmp	.+138    	; 0xebe <vfprintf+0x2ac>
     e34:	85 37       	cpi	r24, 0x75	; 117
     e36:	31 f4       	brne	.+12     	; 0xe44 <vfprintf+0x232>
     e38:	23 2d       	mov	r18, r3
     e3a:	2f 7e       	andi	r18, 0xEF	; 239
     e3c:	b2 2e       	mov	r11, r18
     e3e:	2a e0       	ldi	r18, 0x0A	; 10
     e40:	30 e0       	ldi	r19, 0x00	; 0
     e42:	25 c0       	rjmp	.+74     	; 0xe8e <vfprintf+0x27c>
     e44:	93 2d       	mov	r25, r3
     e46:	99 7f       	andi	r25, 0xF9	; 249
     e48:	b9 2e       	mov	r11, r25
     e4a:	8f 36       	cpi	r24, 0x6F	; 111
     e4c:	c1 f0       	breq	.+48     	; 0xe7e <vfprintf+0x26c>
     e4e:	18 f4       	brcc	.+6      	; 0xe56 <vfprintf+0x244>
     e50:	88 35       	cpi	r24, 0x58	; 88
     e52:	79 f0       	breq	.+30     	; 0xe72 <vfprintf+0x260>
     e54:	b5 c0       	rjmp	.+362    	; 0xfc0 <vfprintf+0x3ae>
     e56:	80 37       	cpi	r24, 0x70	; 112
     e58:	19 f0       	breq	.+6      	; 0xe60 <vfprintf+0x24e>
     e5a:	88 37       	cpi	r24, 0x78	; 120
     e5c:	21 f0       	breq	.+8      	; 0xe66 <vfprintf+0x254>
     e5e:	b0 c0       	rjmp	.+352    	; 0xfc0 <vfprintf+0x3ae>
     e60:	e9 2f       	mov	r30, r25
     e62:	e0 61       	ori	r30, 0x10	; 16
     e64:	be 2e       	mov	r11, r30
     e66:	b4 fe       	sbrs	r11, 4
     e68:	0d c0       	rjmp	.+26     	; 0xe84 <vfprintf+0x272>
     e6a:	fb 2d       	mov	r31, r11
     e6c:	f4 60       	ori	r31, 0x04	; 4
     e6e:	bf 2e       	mov	r11, r31
     e70:	09 c0       	rjmp	.+18     	; 0xe84 <vfprintf+0x272>
     e72:	34 fe       	sbrs	r3, 4
     e74:	0a c0       	rjmp	.+20     	; 0xe8a <vfprintf+0x278>
     e76:	29 2f       	mov	r18, r25
     e78:	26 60       	ori	r18, 0x06	; 6
     e7a:	b2 2e       	mov	r11, r18
     e7c:	06 c0       	rjmp	.+12     	; 0xe8a <vfprintf+0x278>
     e7e:	28 e0       	ldi	r18, 0x08	; 8
     e80:	30 e0       	ldi	r19, 0x00	; 0
     e82:	05 c0       	rjmp	.+10     	; 0xe8e <vfprintf+0x27c>
     e84:	20 e1       	ldi	r18, 0x10	; 16
     e86:	30 e0       	ldi	r19, 0x00	; 0
     e88:	02 c0       	rjmp	.+4      	; 0xe8e <vfprintf+0x27c>
     e8a:	20 e1       	ldi	r18, 0x10	; 16
     e8c:	32 e0       	ldi	r19, 0x02	; 2
     e8e:	f8 01       	movw	r30, r16
     e90:	b7 fe       	sbrs	r11, 7
     e92:	07 c0       	rjmp	.+14     	; 0xea2 <vfprintf+0x290>
     e94:	60 81       	ld	r22, Z
     e96:	71 81       	ldd	r23, Z+1	; 0x01
     e98:	82 81       	ldd	r24, Z+2	; 0x02
     e9a:	93 81       	ldd	r25, Z+3	; 0x03
     e9c:	0c 5f       	subi	r16, 0xFC	; 252
     e9e:	1f 4f       	sbci	r17, 0xFF	; 255
     ea0:	06 c0       	rjmp	.+12     	; 0xeae <vfprintf+0x29c>
     ea2:	60 81       	ld	r22, Z
     ea4:	71 81       	ldd	r23, Z+1	; 0x01
     ea6:	80 e0       	ldi	r24, 0x00	; 0
     ea8:	90 e0       	ldi	r25, 0x00	; 0
     eaa:	0e 5f       	subi	r16, 0xFE	; 254
     eac:	1f 4f       	sbci	r17, 0xFF	; 255
     eae:	a3 01       	movw	r20, r6
     eb0:	0e 94 3c 08 	call	0x1078	; 0x1078 <__ultoa_invert>
     eb4:	88 2e       	mov	r8, r24
     eb6:	86 18       	sub	r8, r6
     eb8:	fb 2d       	mov	r31, r11
     eba:	ff 77       	andi	r31, 0x7F	; 127
     ebc:	3f 2e       	mov	r3, r31
     ebe:	36 fe       	sbrs	r3, 6
     ec0:	0d c0       	rjmp	.+26     	; 0xedc <vfprintf+0x2ca>
     ec2:	23 2d       	mov	r18, r3
     ec4:	2e 7f       	andi	r18, 0xFE	; 254
     ec6:	a2 2e       	mov	r10, r18
     ec8:	89 14       	cp	r8, r9
     eca:	58 f4       	brcc	.+22     	; 0xee2 <vfprintf+0x2d0>
     ecc:	34 fe       	sbrs	r3, 4
     ece:	0b c0       	rjmp	.+22     	; 0xee6 <vfprintf+0x2d4>
     ed0:	32 fc       	sbrc	r3, 2
     ed2:	09 c0       	rjmp	.+18     	; 0xee6 <vfprintf+0x2d4>
     ed4:	83 2d       	mov	r24, r3
     ed6:	8e 7e       	andi	r24, 0xEE	; 238
     ed8:	a8 2e       	mov	r10, r24
     eda:	05 c0       	rjmp	.+10     	; 0xee6 <vfprintf+0x2d4>
     edc:	b8 2c       	mov	r11, r8
     ede:	a3 2c       	mov	r10, r3
     ee0:	03 c0       	rjmp	.+6      	; 0xee8 <vfprintf+0x2d6>
     ee2:	b8 2c       	mov	r11, r8
     ee4:	01 c0       	rjmp	.+2      	; 0xee8 <vfprintf+0x2d6>
     ee6:	b9 2c       	mov	r11, r9
     ee8:	a4 fe       	sbrs	r10, 4
     eea:	0f c0       	rjmp	.+30     	; 0xf0a <vfprintf+0x2f8>
     eec:	fe 01       	movw	r30, r28
     eee:	e8 0d       	add	r30, r8
     ef0:	f1 1d       	adc	r31, r1
     ef2:	80 81       	ld	r24, Z
     ef4:	80 33       	cpi	r24, 0x30	; 48
     ef6:	21 f4       	brne	.+8      	; 0xf00 <vfprintf+0x2ee>
     ef8:	9a 2d       	mov	r25, r10
     efa:	99 7e       	andi	r25, 0xE9	; 233
     efc:	a9 2e       	mov	r10, r25
     efe:	09 c0       	rjmp	.+18     	; 0xf12 <vfprintf+0x300>
     f00:	a2 fe       	sbrs	r10, 2
     f02:	06 c0       	rjmp	.+12     	; 0xf10 <vfprintf+0x2fe>
     f04:	b3 94       	inc	r11
     f06:	b3 94       	inc	r11
     f08:	04 c0       	rjmp	.+8      	; 0xf12 <vfprintf+0x300>
     f0a:	8a 2d       	mov	r24, r10
     f0c:	86 78       	andi	r24, 0x86	; 134
     f0e:	09 f0       	breq	.+2      	; 0xf12 <vfprintf+0x300>
     f10:	b3 94       	inc	r11
     f12:	a3 fc       	sbrc	r10, 3
     f14:	11 c0       	rjmp	.+34     	; 0xf38 <vfprintf+0x326>
     f16:	a0 fe       	sbrs	r10, 0
     f18:	06 c0       	rjmp	.+12     	; 0xf26 <vfprintf+0x314>
     f1a:	b2 14       	cp	r11, r2
     f1c:	88 f4       	brcc	.+34     	; 0xf40 <vfprintf+0x32e>
     f1e:	28 0c       	add	r2, r8
     f20:	92 2c       	mov	r9, r2
     f22:	9b 18       	sub	r9, r11
     f24:	0e c0       	rjmp	.+28     	; 0xf42 <vfprintf+0x330>
     f26:	b2 14       	cp	r11, r2
     f28:	60 f4       	brcc	.+24     	; 0xf42 <vfprintf+0x330>
     f2a:	b6 01       	movw	r22, r12
     f2c:	80 e2       	ldi	r24, 0x20	; 32
     f2e:	90 e0       	ldi	r25, 0x00	; 0
     f30:	0e 94 00 08 	call	0x1000	; 0x1000 <fputc>
     f34:	b3 94       	inc	r11
     f36:	f7 cf       	rjmp	.-18     	; 0xf26 <vfprintf+0x314>
     f38:	b2 14       	cp	r11, r2
     f3a:	18 f4       	brcc	.+6      	; 0xf42 <vfprintf+0x330>
     f3c:	2b 18       	sub	r2, r11
     f3e:	02 c0       	rjmp	.+4      	; 0xf44 <vfprintf+0x332>
     f40:	98 2c       	mov	r9, r8
     f42:	21 2c       	mov	r2, r1
     f44:	a4 fe       	sbrs	r10, 4
     f46:	10 c0       	rjmp	.+32     	; 0xf68 <vfprintf+0x356>
     f48:	b6 01       	movw	r22, r12
     f4a:	80 e3       	ldi	r24, 0x30	; 48
     f4c:	90 e0       	ldi	r25, 0x00	; 0
     f4e:	0e 94 00 08 	call	0x1000	; 0x1000 <fputc>
     f52:	a2 fe       	sbrs	r10, 2
     f54:	17 c0       	rjmp	.+46     	; 0xf84 <vfprintf+0x372>
     f56:	a1 fc       	sbrc	r10, 1
     f58:	03 c0       	rjmp	.+6      	; 0xf60 <vfprintf+0x34e>
     f5a:	88 e7       	ldi	r24, 0x78	; 120
     f5c:	90 e0       	ldi	r25, 0x00	; 0
     f5e:	02 c0       	rjmp	.+4      	; 0xf64 <vfprintf+0x352>
     f60:	88 e5       	ldi	r24, 0x58	; 88
     f62:	90 e0       	ldi	r25, 0x00	; 0
     f64:	b6 01       	movw	r22, r12
     f66:	0c c0       	rjmp	.+24     	; 0xf80 <vfprintf+0x36e>
     f68:	8a 2d       	mov	r24, r10
     f6a:	86 78       	andi	r24, 0x86	; 134
     f6c:	59 f0       	breq	.+22     	; 0xf84 <vfprintf+0x372>
     f6e:	a1 fe       	sbrs	r10, 1
     f70:	02 c0       	rjmp	.+4      	; 0xf76 <vfprintf+0x364>
     f72:	8b e2       	ldi	r24, 0x2B	; 43
     f74:	01 c0       	rjmp	.+2      	; 0xf78 <vfprintf+0x366>
     f76:	80 e2       	ldi	r24, 0x20	; 32
     f78:	a7 fc       	sbrc	r10, 7
     f7a:	8d e2       	ldi	r24, 0x2D	; 45
     f7c:	b6 01       	movw	r22, r12
     f7e:	90 e0       	ldi	r25, 0x00	; 0
     f80:	0e 94 00 08 	call	0x1000	; 0x1000 <fputc>
     f84:	89 14       	cp	r8, r9
     f86:	38 f4       	brcc	.+14     	; 0xf96 <vfprintf+0x384>
     f88:	b6 01       	movw	r22, r12
     f8a:	80 e3       	ldi	r24, 0x30	; 48
     f8c:	90 e0       	ldi	r25, 0x00	; 0
     f8e:	0e 94 00 08 	call	0x1000	; 0x1000 <fputc>
     f92:	9a 94       	dec	r9
     f94:	f7 cf       	rjmp	.-18     	; 0xf84 <vfprintf+0x372>
     f96:	8a 94       	dec	r8
     f98:	f3 01       	movw	r30, r6
     f9a:	e8 0d       	add	r30, r8
     f9c:	f1 1d       	adc	r31, r1
     f9e:	80 81       	ld	r24, Z
     fa0:	b6 01       	movw	r22, r12
     fa2:	90 e0       	ldi	r25, 0x00	; 0
     fa4:	0e 94 00 08 	call	0x1000	; 0x1000 <fputc>
     fa8:	81 10       	cpse	r8, r1
     faa:	f5 cf       	rjmp	.-22     	; 0xf96 <vfprintf+0x384>
     fac:	22 20       	and	r2, r2
     fae:	09 f4       	brne	.+2      	; 0xfb2 <vfprintf+0x3a0>
     fb0:	42 ce       	rjmp	.-892    	; 0xc36 <vfprintf+0x24>
     fb2:	b6 01       	movw	r22, r12
     fb4:	80 e2       	ldi	r24, 0x20	; 32
     fb6:	90 e0       	ldi	r25, 0x00	; 0
     fb8:	0e 94 00 08 	call	0x1000	; 0x1000 <fputc>
     fbc:	2a 94       	dec	r2
     fbe:	f6 cf       	rjmp	.-20     	; 0xfac <vfprintf+0x39a>
     fc0:	f6 01       	movw	r30, r12
     fc2:	86 81       	ldd	r24, Z+6	; 0x06
     fc4:	97 81       	ldd	r25, Z+7	; 0x07
     fc6:	02 c0       	rjmp	.+4      	; 0xfcc <vfprintf+0x3ba>
     fc8:	8f ef       	ldi	r24, 0xFF	; 255
     fca:	9f ef       	ldi	r25, 0xFF	; 255
     fcc:	2b 96       	adiw	r28, 0x0b	; 11
     fce:	e2 e1       	ldi	r30, 0x12	; 18
     fd0:	0c 94 e6 08 	jmp	0x11cc	; 0x11cc <__epilogue_restores__>

00000fd4 <strnlen_P>:
     fd4:	fc 01       	movw	r30, r24
     fd6:	05 90       	lpm	r0, Z+
     fd8:	61 50       	subi	r22, 0x01	; 1
     fda:	70 40       	sbci	r23, 0x00	; 0
     fdc:	01 10       	cpse	r0, r1
     fde:	d8 f7       	brcc	.-10     	; 0xfd6 <strnlen_P+0x2>
     fe0:	80 95       	com	r24
     fe2:	90 95       	com	r25
     fe4:	8e 0f       	add	r24, r30
     fe6:	9f 1f       	adc	r25, r31
     fe8:	08 95       	ret

00000fea <strnlen>:
     fea:	fc 01       	movw	r30, r24
     fec:	61 50       	subi	r22, 0x01	; 1
     fee:	70 40       	sbci	r23, 0x00	; 0
     ff0:	01 90       	ld	r0, Z+
     ff2:	01 10       	cpse	r0, r1
     ff4:	d8 f7       	brcc	.-10     	; 0xfec <strnlen+0x2>
     ff6:	80 95       	com	r24
     ff8:	90 95       	com	r25
     ffa:	8e 0f       	add	r24, r30
     ffc:	9f 1f       	adc	r25, r31
     ffe:	08 95       	ret

00001000 <fputc>:
    1000:	0f 93       	push	r16
    1002:	1f 93       	push	r17
    1004:	cf 93       	push	r28
    1006:	df 93       	push	r29
    1008:	fb 01       	movw	r30, r22
    100a:	23 81       	ldd	r18, Z+3	; 0x03
    100c:	21 fd       	sbrc	r18, 1
    100e:	03 c0       	rjmp	.+6      	; 0x1016 <fputc+0x16>
    1010:	8f ef       	ldi	r24, 0xFF	; 255
    1012:	9f ef       	ldi	r25, 0xFF	; 255
    1014:	2c c0       	rjmp	.+88     	; 0x106e <fputc+0x6e>
    1016:	22 ff       	sbrs	r18, 2
    1018:	16 c0       	rjmp	.+44     	; 0x1046 <fputc+0x46>
    101a:	46 81       	ldd	r20, Z+6	; 0x06
    101c:	57 81       	ldd	r21, Z+7	; 0x07
    101e:	24 81       	ldd	r18, Z+4	; 0x04
    1020:	35 81       	ldd	r19, Z+5	; 0x05
    1022:	42 17       	cp	r20, r18
    1024:	53 07       	cpc	r21, r19
    1026:	44 f4       	brge	.+16     	; 0x1038 <fputc+0x38>
    1028:	a0 81       	ld	r26, Z
    102a:	b1 81       	ldd	r27, Z+1	; 0x01
    102c:	9d 01       	movw	r18, r26
    102e:	2f 5f       	subi	r18, 0xFF	; 255
    1030:	3f 4f       	sbci	r19, 0xFF	; 255
    1032:	31 83       	std	Z+1, r19	; 0x01
    1034:	20 83       	st	Z, r18
    1036:	8c 93       	st	X, r24
    1038:	26 81       	ldd	r18, Z+6	; 0x06
    103a:	37 81       	ldd	r19, Z+7	; 0x07
    103c:	2f 5f       	subi	r18, 0xFF	; 255
    103e:	3f 4f       	sbci	r19, 0xFF	; 255
    1040:	37 83       	std	Z+7, r19	; 0x07
    1042:	26 83       	std	Z+6, r18	; 0x06
    1044:	14 c0       	rjmp	.+40     	; 0x106e <fputc+0x6e>
    1046:	8b 01       	movw	r16, r22
    1048:	ec 01       	movw	r28, r24
    104a:	fb 01       	movw	r30, r22
    104c:	00 84       	ldd	r0, Z+8	; 0x08
    104e:	f1 85       	ldd	r31, Z+9	; 0x09
    1050:	e0 2d       	mov	r30, r0
    1052:	09 95       	icall
    1054:	89 2b       	or	r24, r25
    1056:	e1 f6       	brne	.-72     	; 0x1010 <fputc+0x10>
    1058:	d8 01       	movw	r26, r16
    105a:	16 96       	adiw	r26, 0x06	; 6
    105c:	8d 91       	ld	r24, X+
    105e:	9c 91       	ld	r25, X
    1060:	17 97       	sbiw	r26, 0x07	; 7
    1062:	01 96       	adiw	r24, 0x01	; 1
    1064:	17 96       	adiw	r26, 0x07	; 7
    1066:	9c 93       	st	X, r25
    1068:	8e 93       	st	-X, r24
    106a:	16 97       	sbiw	r26, 0x06	; 6
    106c:	ce 01       	movw	r24, r28
    106e:	df 91       	pop	r29
    1070:	cf 91       	pop	r28
    1072:	1f 91       	pop	r17
    1074:	0f 91       	pop	r16
    1076:	08 95       	ret

00001078 <__ultoa_invert>:
    1078:	fa 01       	movw	r30, r20
    107a:	aa 27       	eor	r26, r26
    107c:	28 30       	cpi	r18, 0x08	; 8
    107e:	51 f1       	breq	.+84     	; 0x10d4 <__ultoa_invert+0x5c>
    1080:	20 31       	cpi	r18, 0x10	; 16
    1082:	81 f1       	breq	.+96     	; 0x10e4 <__ultoa_invert+0x6c>
    1084:	e8 94       	clt
    1086:	6f 93       	push	r22
    1088:	6e 7f       	andi	r22, 0xFE	; 254
    108a:	6e 5f       	subi	r22, 0xFE	; 254
    108c:	7f 4f       	sbci	r23, 0xFF	; 255
    108e:	8f 4f       	sbci	r24, 0xFF	; 255
    1090:	9f 4f       	sbci	r25, 0xFF	; 255
    1092:	af 4f       	sbci	r26, 0xFF	; 255
    1094:	b1 e0       	ldi	r27, 0x01	; 1
    1096:	3e d0       	rcall	.+124    	; 0x1114 <__ultoa_invert+0x9c>
    1098:	b4 e0       	ldi	r27, 0x04	; 4
    109a:	3c d0       	rcall	.+120    	; 0x1114 <__ultoa_invert+0x9c>
    109c:	67 0f       	add	r22, r23
    109e:	78 1f       	adc	r23, r24
    10a0:	89 1f       	adc	r24, r25
    10a2:	9a 1f       	adc	r25, r26
    10a4:	a1 1d       	adc	r26, r1
    10a6:	68 0f       	add	r22, r24
    10a8:	79 1f       	adc	r23, r25
    10aa:	8a 1f       	adc	r24, r26
    10ac:	91 1d       	adc	r25, r1
    10ae:	a1 1d       	adc	r26, r1
    10b0:	6a 0f       	add	r22, r26
    10b2:	71 1d       	adc	r23, r1
    10b4:	81 1d       	adc	r24, r1
    10b6:	91 1d       	adc	r25, r1
    10b8:	a1 1d       	adc	r26, r1
    10ba:	20 d0       	rcall	.+64     	; 0x10fc <__ultoa_invert+0x84>
    10bc:	09 f4       	brne	.+2      	; 0x10c0 <__ultoa_invert+0x48>
    10be:	68 94       	set
    10c0:	3f 91       	pop	r19
    10c2:	2a e0       	ldi	r18, 0x0A	; 10
    10c4:	26 9f       	mul	r18, r22
    10c6:	11 24       	eor	r1, r1
    10c8:	30 19       	sub	r19, r0
    10ca:	30 5d       	subi	r19, 0xD0	; 208
    10cc:	31 93       	st	Z+, r19
    10ce:	de f6       	brtc	.-74     	; 0x1086 <__ultoa_invert+0xe>
    10d0:	cf 01       	movw	r24, r30
    10d2:	08 95       	ret
    10d4:	46 2f       	mov	r20, r22
    10d6:	47 70       	andi	r20, 0x07	; 7
    10d8:	40 5d       	subi	r20, 0xD0	; 208
    10da:	41 93       	st	Z+, r20
    10dc:	b3 e0       	ldi	r27, 0x03	; 3
    10de:	0f d0       	rcall	.+30     	; 0x10fe <__ultoa_invert+0x86>
    10e0:	c9 f7       	brne	.-14     	; 0x10d4 <__ultoa_invert+0x5c>
    10e2:	f6 cf       	rjmp	.-20     	; 0x10d0 <__ultoa_invert+0x58>
    10e4:	46 2f       	mov	r20, r22
    10e6:	4f 70       	andi	r20, 0x0F	; 15
    10e8:	40 5d       	subi	r20, 0xD0	; 208
    10ea:	4a 33       	cpi	r20, 0x3A	; 58
    10ec:	18 f0       	brcs	.+6      	; 0x10f4 <__ultoa_invert+0x7c>
    10ee:	49 5d       	subi	r20, 0xD9	; 217
    10f0:	31 fd       	sbrc	r19, 1
    10f2:	40 52       	subi	r20, 0x20	; 32
    10f4:	41 93       	st	Z+, r20
    10f6:	02 d0       	rcall	.+4      	; 0x10fc <__ultoa_invert+0x84>
    10f8:	a9 f7       	brne	.-22     	; 0x10e4 <__ultoa_invert+0x6c>
    10fa:	ea cf       	rjmp	.-44     	; 0x10d0 <__ultoa_invert+0x58>
    10fc:	b4 e0       	ldi	r27, 0x04	; 4
    10fe:	a6 95       	lsr	r26
    1100:	97 95       	ror	r25
    1102:	87 95       	ror	r24
    1104:	77 95       	ror	r23
    1106:	67 95       	ror	r22
    1108:	ba 95       	dec	r27
    110a:	c9 f7       	brne	.-14     	; 0x10fe <__ultoa_invert+0x86>
    110c:	00 97       	sbiw	r24, 0x00	; 0
    110e:	61 05       	cpc	r22, r1
    1110:	71 05       	cpc	r23, r1
    1112:	08 95       	ret
    1114:	9b 01       	movw	r18, r22
    1116:	ac 01       	movw	r20, r24
    1118:	0a 2e       	mov	r0, r26
    111a:	06 94       	lsr	r0
    111c:	57 95       	ror	r21
    111e:	47 95       	ror	r20
    1120:	37 95       	ror	r19
    1122:	27 95       	ror	r18
    1124:	ba 95       	dec	r27
    1126:	c9 f7       	brne	.-14     	; 0x111a <__ultoa_invert+0xa2>
    1128:	62 0f       	add	r22, r18
    112a:	73 1f       	adc	r23, r19
    112c:	84 1f       	adc	r24, r20
    112e:	95 1f       	adc	r25, r21
    1130:	a0 1d       	adc	r26, r0
    1132:	08 95       	ret

00001134 <eeprom_read_block>:
    1134:	dc 01       	movw	r26, r24
    1136:	cb 01       	movw	r24, r22

00001138 <eeprom_read_blraw>:
    1138:	fc 01       	movw	r30, r24
    113a:	f9 99       	sbic	0x1f, 1	; 31
    113c:	fe cf       	rjmp	.-4      	; 0x113a <eeprom_read_blraw+0x2>
    113e:	06 c0       	rjmp	.+12     	; 0x114c <eeprom_read_blraw+0x14>
    1140:	f2 bd       	out	0x22, r31	; 34
    1142:	e1 bd       	out	0x21, r30	; 33
    1144:	f8 9a       	sbi	0x1f, 0	; 31
    1146:	31 96       	adiw	r30, 0x01	; 1
    1148:	00 b4       	in	r0, 0x20	; 32
    114a:	0d 92       	st	X+, r0
    114c:	41 50       	subi	r20, 0x01	; 1
    114e:	50 40       	sbci	r21, 0x00	; 0
    1150:	b8 f7       	brcc	.-18     	; 0x1140 <eeprom_read_blraw+0x8>
    1152:	08 95       	ret

00001154 <eeprom_read_byte>:
    1154:	f9 99       	sbic	0x1f, 1	; 31
    1156:	fe cf       	rjmp	.-4      	; 0x1154 <eeprom_read_byte>
    1158:	92 bd       	out	0x22, r25	; 34
    115a:	81 bd       	out	0x21, r24	; 33
    115c:	f8 9a       	sbi	0x1f, 0	; 31
    115e:	99 27       	eor	r25, r25
    1160:	80 b5       	in	r24, 0x20	; 32
    1162:	08 95       	ret

00001164 <eeprom_write_block>:
    1164:	dc 01       	movw	r26, r24
    1166:	cb 01       	movw	r24, r22
    1168:	03 c0       	rjmp	.+6      	; 0x1170 <eeprom_write_block+0xc>
    116a:	2d 91       	ld	r18, X+
    116c:	0e 94 bd 08 	call	0x117a	; 0x117a <eeprom_write_r18>
    1170:	41 50       	subi	r20, 0x01	; 1
    1172:	50 40       	sbci	r21, 0x00	; 0
    1174:	d0 f7       	brcc	.-12     	; 0x116a <eeprom_write_block+0x6>
    1176:	08 95       	ret

00001178 <eeprom_write_byte>:
    1178:	26 2f       	mov	r18, r22

0000117a <eeprom_write_r18>:
    117a:	f9 99       	sbic	0x1f, 1	; 31
    117c:	fe cf       	rjmp	.-4      	; 0x117a <eeprom_write_r18>
    117e:	1f ba       	out	0x1f, r1	; 31
    1180:	92 bd       	out	0x22, r25	; 34
    1182:	81 bd       	out	0x21, r24	; 33
    1184:	20 bd       	out	0x20, r18	; 32
    1186:	0f b6       	in	r0, 0x3f	; 63
    1188:	f8 94       	cli
    118a:	fa 9a       	sbi	0x1f, 2	; 31
    118c:	f9 9a       	sbi	0x1f, 1	; 31
    118e:	0f be       	out	0x3f, r0	; 63
    1190:	01 96       	adiw	r24, 0x01	; 1
    1192:	08 95       	ret

00001194 <__prologue_saves__>:
    1194:	2f 92       	push	r2
    1196:	3f 92       	push	r3
    1198:	4f 92       	push	r4
    119a:	5f 92       	push	r5
    119c:	6f 92       	push	r6
    119e:	7f 92       	push	r7
    11a0:	8f 92       	push	r8
    11a2:	9f 92       	push	r9
    11a4:	af 92       	push	r10
    11a6:	bf 92       	push	r11
    11a8:	cf 92       	push	r12
    11aa:	df 92       	push	r13
    11ac:	ef 92       	push	r14
    11ae:	ff 92       	push	r15
    11b0:	0f 93       	push	r16
    11b2:	1f 93       	push	r17
    11b4:	cf 93       	push	r28
    11b6:	df 93       	push	r29
    11b8:	cd b7       	in	r28, 0x3d	; 61
    11ba:	de b7       	in	r29, 0x3e	; 62
    11bc:	ca 1b       	sub	r28, r26
    11be:	db 0b       	sbc	r29, r27
    11c0:	0f b6       	in	r0, 0x3f	; 63
    11c2:	f8 94       	cli
    11c4:	de bf       	out	0x3e, r29	; 62
    11c6:	0f be       	out	0x3f, r0	; 63
    11c8:	cd bf       	out	0x3d, r28	; 61
    11ca:	09 94       	ijmp

000011cc <__epilogue_restores__>:
    11cc:	2a 88       	ldd	r2, Y+18	; 0x12
    11ce:	39 88       	ldd	r3, Y+17	; 0x11
    11d0:	48 88       	ldd	r4, Y+16	; 0x10
    11d2:	5f 84       	ldd	r5, Y+15	; 0x0f
    11d4:	6e 84       	ldd	r6, Y+14	; 0x0e
    11d6:	7d 84       	ldd	r7, Y+13	; 0x0d
    11d8:	8c 84       	ldd	r8, Y+12	; 0x0c
    11da:	9b 84       	ldd	r9, Y+11	; 0x0b
    11dc:	aa 84       	ldd	r10, Y+10	; 0x0a
    11de:	b9 84       	ldd	r11, Y+9	; 0x09
    11e0:	c8 84       	ldd	r12, Y+8	; 0x08
    11e2:	df 80       	ldd	r13, Y+7	; 0x07
    11e4:	ee 80       	ldd	r14, Y+6	; 0x06
    11e6:	fd 80       	ldd	r15, Y+5	; 0x05
    11e8:	0c 81       	ldd	r16, Y+4	; 0x04
    11ea:	1b 81       	ldd	r17, Y+3	; 0x03
    11ec:	aa 81       	ldd	r26, Y+2	; 0x02
    11ee:	b9 81       	ldd	r27, Y+1	; 0x01
    11f0:	ce 0f       	add	r28, r30
    11f2:	d1 1d       	adc	r29, r1
    11f4:	0f b6       	in	r0, 0x3f	; 63
    11f6:	f8 94       	cli
    11f8:	de bf       	out	0x3e, r29	; 62
    11fa:	0f be       	out	0x3f, r0	; 63
    11fc:	cd bf       	out	0x3d, r28	; 61
    11fe:	ed 01       	movw	r28, r26
    1200:	08 95       	ret

00001202 <_exit>:
    1202:	f8 94       	cli

00001204 <__stop_program>:
    1204:	ff cf       	rjmp	.-2      	; 0x1204 <__stop_program>
