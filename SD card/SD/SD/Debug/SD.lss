
SD.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000009c4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000970  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000009c4  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000009f4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000118  00000000  00000000  00000a34  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001fa6  00000000  00000000  00000b4c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000873  00000000  00000000  00002af2  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000d55  00000000  00000000  00003365  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000003d8  00000000  00000000  000040bc  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000007fc  00000000  00000000  00004494  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000127f  00000000  00000000  00004c90  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000150  00000000  00000000  00005f0f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 09 01 	jmp	0x212	; 0x212 <__ctors_end>
   4:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
   8:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
   c:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
  10:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
  14:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
  18:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
  1c:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
  20:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
  24:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
  28:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
  2c:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
  30:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
  34:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
  38:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
  3c:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
  40:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
  44:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
  48:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
  4c:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
  50:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
  54:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
  58:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
  5c:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
  60:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
  64:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>

00000068 <__trampolines_end>:
  68:	57 72       	andi	r21, 0x27	; 39
  6a:	69 74       	andi	r22, 0x49	; 73
  6c:	65 20       	and	r6, r5
  6e:	73 75       	andi	r23, 0x53	; 83
  70:	63 63       	ori	r22, 0x33	; 51
  72:	65 73       	andi	r22, 0x35	; 53
  74:	73 66       	ori	r23, 0x63	; 99
  76:	75 6c       	ori	r23, 0xC5	; 197
  78:	0d 0a       	sbc	r0, r29
	...

0000007b <_ZZ4mainE3__c_5>:
  7b:	0d 0a 52 65 73 70 6f 6e 73 65 3a 0d 0a 00           ..Response:...

00000089 <_ZZ4mainE3__c_4>:
  89:	57 72 69 74 69 6e 67 20 30 78 35 35 20 74 6f 20     Writing 0x55 to 
  99:	73 65 63 74 6f 72 3a 20 30 78 00                    sector: 0x.

000000a4 <_ZZ4mainE3__c_3>:
  a4:	45 72 72 6f 72 20 74 6f 6b 65 6e 3a 0d 0a 00        Error token:...

000000b3 <_ZZ4mainE3__c_2>:
  b3:	0d 0a 52 65 73 70 6f 6e 73 65 3a 0d 0a 00           ..Response:...

000000c1 <_ZZ4mainE3__c_1>:
  c1:	0d 0a 52 65 61 64 69 6e 67 20 73 65 63 74 6f 72     ..Reading sector
  d1:	3a 20 30 78 00                                      : 0x.

000000d6 <_ZZ4mainE3__c_0>:
  d6:	53 44 20 43 61 72 64 20 69 6e 69 74 69 61 6c 69     SD Card initiali
  e6:	7a 65 64 0d 0a 00                                   zed...

000000ec <_ZZ4mainE3__c>:
  ec:	45 72 72 6f 72 20 69 6e 69 74 69 61 6c 69 7a 61     Error initializa
  fc:	69 6e 67 20 53 44 20 43 41 52 44 0d 0a 00           ing SD CARD...

0000010a <_ZZ20SD_printDataErrTokenhE3__c_3>:
 10a:	09 45 72 72 6f 72 0d 0a 00                          .Error...

00000113 <_ZZ20SD_printDataErrTokenhE3__c_2>:
 113:	09 43 43 20 45 72 72 6f 72 0d 0a 00                 .CC Error...

0000011f <_ZZ20SD_printDataErrTokenhE3__c_1>:
 11f:	09 43 61 72 64 20 45 43 43 20 66 61 69 6c 65 64     .Card ECC failed
 12f:	0d 0a 00                                            ...

00000132 <_ZZ20SD_printDataErrTokenhE3__c_0>:
 132:	09 44 61 74 61 20 6f 75 74 20 6f 66 20 72 61 6e     .Data out of ran
 142:	67 65 0d 0a 00                                      ge...

00000147 <_ZZ20SD_printDataErrTokenhE3__c>:
 147:	09 4e 6f 74 20 45 72 72 6f 72 20 74 6f 6b 65 6e     .Not Error token
 157:	0d 0a 00                                            ...

0000015a <_ZZ11SD_printBufPhE3__c_0>:
 15a:	0d 0a 00                                            ...

0000015d <_ZZ11SD_printBufPhE3__c>:
 15d:	0d 0a 00                                            ...

00000160 <_ZZ10SD_printR1hE3__c_8>:
 160:	09 49 6e 20 49 64 6c 65 20 53 74 61 74 65 0d 0a     .In Idle State..
	...

00000171 <_ZZ10SD_printR1hE3__c_7>:
 171:	09 45 72 61 73 65 20 52 65 73 65 74 20 45 72 72     .Erase Reset Err
 181:	6f 72 0d 0a 00                                      or...

00000186 <_ZZ10SD_printR1hE3__c_6>:
 186:	09 49 6c 6c 65 67 61 6c 20 43 6f 6d 6d 61 6e 64     .Illegal Command
 196:	0d 0a 00                                            ...

00000199 <_ZZ10SD_printR1hE3__c_5>:
 199:	09 43 52 43 20 45 72 72 6f 72 0d 0a 00              .CRC Error...

000001a6 <_ZZ10SD_printR1hE3__c_4>:
 1a6:	09 45 72 61 73 65 20 53 65 71 75 65 6e 63 65 20     .Erase Sequence 
 1b6:	45 72 72 6f 72 0d 0a 00                             Error...

000001be <_ZZ10SD_printR1hE3__c_3>:
 1be:	09 41 64 64 72 65 73 73 20 45 72 72 6f 72 0d 0a     .Address Error..
	...

000001cf <_ZZ10SD_printR1hE3__c_2>:
 1cf:	09 50 61 72 61 6d 65 74 65 72 20 45 72 72 6f 72     .Parameter Error
 1df:	0d 0a 00                                            ...

000001e2 <_ZZ10SD_printR1hE3__c_1>:
 1e2:	09 43 61 72 64 20 52 65 61 64 79 0d 0a 00           .Card Ready...

000001f0 <_ZZ10SD_printR1hE3__c_0>:
 1f0:	09 45 72 72 6f 72 3a 20 4d 53 42 20 3d 20 31 0d     .Error: MSB = 1.
 200:	0a 00                                               ..

00000202 <_ZZ10SD_printR1hE3__c>:
 202:	09 4e 6f 20 72 65 73 70 6f 6e 73 65 0d 0a 00 00     .No response....

00000212 <__ctors_end>:
 212:	11 24       	eor	r1, r1
 214:	1f be       	out	0x3f, r1	; 63
 216:	cf ef       	ldi	r28, 0xFF	; 255
 218:	d8 e0       	ldi	r29, 0x08	; 8
 21a:	de bf       	out	0x3e, r29	; 62
 21c:	cd bf       	out	0x3d, r28	; 61
 21e:	0e 94 16 04 	call	0x82c	; 0x82c <main>
 222:	0c 94 b6 04 	jmp	0x96c	; 0x96c <_exit>

00000226 <__bad_interrupt>:
 226:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000022a <_Z9UART_initv>:
    UART_pputs("\tDevice Size: ");
    UART_puthex8(buf[7] & 0b00111111);
    UART_puthex8(buf[8]);
    UART_puthex8(buf[9]);
    UART_pputs("\r\n");
}
 22a:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
 22e:	80 e1       	ldi	r24, 0x10	; 16
 230:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
 234:	e1 ec       	ldi	r30, 0xC1	; 193
 236:	f0 e0       	ldi	r31, 0x00	; 0
 238:	80 81       	ld	r24, Z
 23a:	88 61       	ori	r24, 0x18	; 24
 23c:	80 83       	st	Z, r24
 23e:	08 95       	ret

00000240 <_Z9UART_putch>:
 240:	e0 ec       	ldi	r30, 0xC0	; 192
 242:	f0 e0       	ldi	r31, 0x00	; 0
 244:	90 81       	ld	r25, Z
 246:	95 ff       	sbrs	r25, 5
 248:	fd cf       	rjmp	.-6      	; 0x244 <_Z9UART_putch+0x4>
 24a:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
 24e:	08 95       	ret

00000250 <_Z12UART_puthex8h>:
 250:	cf 93       	push	r28
 252:	28 2f       	mov	r18, r24
 254:	22 95       	swap	r18
 256:	2f 70       	andi	r18, 0x0F	; 15
 258:	98 2f       	mov	r25, r24
 25a:	9f 70       	andi	r25, 0x0F	; 15
 25c:	2a 30       	cpi	r18, 0x0A	; 10
 25e:	10 f4       	brcc	.+4      	; 0x264 <_Z12UART_puthex8h+0x14>
 260:	80 e3       	ldi	r24, 0x30	; 48
 262:	01 c0       	rjmp	.+2      	; 0x266 <_Z12UART_puthex8h+0x16>
 264:	87 e3       	ldi	r24, 0x37	; 55
 266:	82 0f       	add	r24, r18
 268:	9a 30       	cpi	r25, 0x0A	; 10
 26a:	10 f4       	brcc	.+4      	; 0x270 <_Z12UART_puthex8h+0x20>
 26c:	c0 e3       	ldi	r28, 0x30	; 48
 26e:	01 c0       	rjmp	.+2      	; 0x272 <_Z12UART_puthex8h+0x22>
 270:	c7 e3       	ldi	r28, 0x37	; 55
 272:	c9 0f       	add	r28, r25
 274:	0e 94 20 01 	call	0x240	; 0x240 <_Z9UART_putch>
 278:	8c 2f       	mov	r24, r28
 27a:	0e 94 20 01 	call	0x240	; 0x240 <_Z9UART_putch>
 27e:	cf 91       	pop	r28
 280:	08 95       	ret

00000282 <_Z11UART_puts_pPKc>:
 282:	cf 93       	push	r28
 284:	df 93       	push	r29
 286:	ec 01       	movw	r28, r24
 288:	21 96       	adiw	r28, 0x01	; 1
 28a:	fc 01       	movw	r30, r24
 28c:	84 91       	lpm	r24, Z
 28e:	88 23       	and	r24, r24
 290:	39 f0       	breq	.+14     	; 0x2a0 <_Z11UART_puts_pPKc+0x1e>
 292:	0e 94 20 01 	call	0x240	; 0x240 <_Z9UART_putch>
 296:	fe 01       	movw	r30, r28
 298:	84 91       	lpm	r24, Z
 29a:	21 96       	adiw	r28, 0x01	; 1
 29c:	81 11       	cpse	r24, r1
 29e:	f9 cf       	rjmp	.-14     	; 0x292 <_Z11UART_puts_pPKc+0x10>
 2a0:	df 91       	pop	r29
 2a2:	cf 91       	pop	r28
 2a4:	08 95       	ret

000002a6 <_Z8SPI_initj>:
 2a6:	24 b1       	in	r18, 0x04	; 4
 2a8:	2c 62       	ori	r18, 0x2C	; 44
 2aa:	24 b9       	out	0x04, r18	; 4
 2ac:	24 9a       	sbi	0x04, 4	; 4
 2ae:	2c b5       	in	r18, 0x2c	; 44
 2b0:	20 64       	ori	r18, 0x40	; 64
 2b2:	92 2b       	or	r25, r18
 2b4:	9c bd       	out	0x2c, r25	; 44
 2b6:	9d b5       	in	r25, 0x2d	; 45
 2b8:	89 2b       	or	r24, r25
 2ba:	8d bd       	out	0x2d, r24	; 45
 2bc:	08 95       	ret

000002be <_Z12SPI_transferh>:
 2be:	8e bd       	out	0x2e, r24	; 46
 2c0:	0d b4       	in	r0, 0x2d	; 45
 2c2:	07 fe       	sbrs	r0, 7
 2c4:	fd cf       	rjmp	.-6      	; 0x2c0 <_Z12SPI_transferh+0x2>
 2c6:	8e b5       	in	r24, 0x2e	; 46
 2c8:	08 95       	ret

000002ca <_Z13SD_powerUpSeqv>:
 2ca:	cf 93       	push	r28
 2cc:	2a 9a       	sbi	0x05, 2	; 5
 2ce:	8f e3       	ldi	r24, 0x3F	; 63
 2d0:	9c e9       	ldi	r25, 0x9C	; 156
 2d2:	01 97       	sbiw	r24, 0x01	; 1
 2d4:	f1 f7       	brne	.-4      	; 0x2d2 <_Z13SD_powerUpSeqv+0x8>
 2d6:	00 c0       	rjmp	.+0      	; 0x2d8 <_Z13SD_powerUpSeqv+0xe>
 2d8:	00 00       	nop
 2da:	8f ef       	ldi	r24, 0xFF	; 255
 2dc:	0e 94 5f 01 	call	0x2be	; 0x2be <_Z12SPI_transferh>
 2e0:	2a 9a       	sbi	0x05, 2	; 5
 2e2:	c0 e5       	ldi	r28, 0x50	; 80
 2e4:	8f ef       	ldi	r24, 0xFF	; 255
 2e6:	0e 94 5f 01 	call	0x2be	; 0x2be <_Z12SPI_transferh>
 2ea:	c1 50       	subi	r28, 0x01	; 1
 2ec:	d9 f7       	brne	.-10     	; 0x2e4 <_Z13SD_powerUpSeqv+0x1a>
 2ee:	cf 91       	pop	r28
 2f0:	08 95       	ret

000002f2 <_Z10SD_commandhmh>:
 2f2:	ff 92       	push	r15
 2f4:	0f 93       	push	r16
 2f6:	1f 93       	push	r17
 2f8:	cf 93       	push	r28
 2fa:	df 93       	push	r29
 2fc:	d4 2f       	mov	r29, r20
 2fe:	15 2f       	mov	r17, r21
 300:	06 2f       	mov	r16, r22
 302:	f7 2e       	mov	r15, r23
 304:	c2 2f       	mov	r28, r18
 306:	80 64       	ori	r24, 0x40	; 64
 308:	0e 94 5f 01 	call	0x2be	; 0x2be <_Z12SPI_transferh>
 30c:	8f 2d       	mov	r24, r15
 30e:	0e 94 5f 01 	call	0x2be	; 0x2be <_Z12SPI_transferh>
 312:	80 2f       	mov	r24, r16
 314:	0e 94 5f 01 	call	0x2be	; 0x2be <_Z12SPI_transferh>
 318:	81 2f       	mov	r24, r17
 31a:	0e 94 5f 01 	call	0x2be	; 0x2be <_Z12SPI_transferh>
 31e:	8d 2f       	mov	r24, r29
 320:	0e 94 5f 01 	call	0x2be	; 0x2be <_Z12SPI_transferh>
 324:	8c 2f       	mov	r24, r28
 326:	81 60       	ori	r24, 0x01	; 1
 328:	0e 94 5f 01 	call	0x2be	; 0x2be <_Z12SPI_transferh>
 32c:	df 91       	pop	r29
 32e:	cf 91       	pop	r28
 330:	1f 91       	pop	r17
 332:	0f 91       	pop	r16
 334:	ff 90       	pop	r15
 336:	08 95       	ret

00000338 <_Z11SD_readRes1v>:
 338:	cf 93       	push	r28
 33a:	c9 e0       	ldi	r28, 0x09	; 9
 33c:	8f ef       	ldi	r24, 0xFF	; 255
 33e:	0e 94 5f 01 	call	0x2be	; 0x2be <_Z12SPI_transferh>
 342:	8f 3f       	cpi	r24, 0xFF	; 255
 344:	11 f4       	brne	.+4      	; 0x34a <_Z11SD_readRes1v+0x12>
 346:	c1 50       	subi	r28, 0x01	; 1
 348:	c9 f7       	brne	.-14     	; 0x33c <_Z11SD_readRes1v+0x4>
 34a:	cf 91       	pop	r28
 34c:	08 95       	ret

0000034e <_Z12SD_readBytesPhh>:
 34e:	0f 93       	push	r16
 350:	1f 93       	push	r17
 352:	cf 93       	push	r28
 354:	df 93       	push	r29
 356:	4f ef       	ldi	r20, 0xFF	; 255
 358:	46 0f       	add	r20, r22
 35a:	66 23       	and	r22, r22
 35c:	71 f0       	breq	.+28     	; 0x37a <_Z12SD_readBytesPhh+0x2c>
 35e:	ec 01       	movw	r28, r24
 360:	04 2f       	mov	r16, r20
 362:	10 e0       	ldi	r17, 0x00	; 0
 364:	0f 5f       	subi	r16, 0xFF	; 255
 366:	1f 4f       	sbci	r17, 0xFF	; 255
 368:	08 0f       	add	r16, r24
 36a:	19 1f       	adc	r17, r25
 36c:	8f ef       	ldi	r24, 0xFF	; 255
 36e:	0e 94 5f 01 	call	0x2be	; 0x2be <_Z12SPI_transferh>
 372:	89 93       	st	Y+, r24
 374:	c0 17       	cp	r28, r16
 376:	d1 07       	cpc	r29, r17
 378:	c9 f7       	brne	.-14     	; 0x36c <_Z12SD_readBytesPhh+0x1e>
 37a:	df 91       	pop	r29
 37c:	cf 91       	pop	r28
 37e:	1f 91       	pop	r17
 380:	0f 91       	pop	r16
 382:	08 95       	ret

00000384 <_Z11SD_readRes3Ph>:
 384:	cf 93       	push	r28
 386:	df 93       	push	r29
 388:	ec 01       	movw	r28, r24
 38a:	0e 94 9c 01 	call	0x338	; 0x338 <_Z11SD_readRes1v>
 38e:	88 83       	st	Y, r24
 390:	82 30       	cpi	r24, 0x02	; 2
 392:	28 f4       	brcc	.+10     	; 0x39e <_Z11SD_readRes3Ph+0x1a>
 394:	64 e0       	ldi	r22, 0x04	; 4
 396:	ce 01       	movw	r24, r28
 398:	01 96       	adiw	r24, 0x01	; 1
 39a:	0e 94 a7 01 	call	0x34e	; 0x34e <_Z12SD_readBytesPhh>
 39e:	df 91       	pop	r29
 3a0:	cf 91       	pop	r28
 3a2:	08 95       	ret

000003a4 <_Z11SD_readRes7Ph>:
 3a4:	cf 93       	push	r28
 3a6:	df 93       	push	r29
 3a8:	ec 01       	movw	r28, r24
 3aa:	0e 94 9c 01 	call	0x338	; 0x338 <_Z11SD_readRes1v>
 3ae:	88 83       	st	Y, r24
 3b0:	82 30       	cpi	r24, 0x02	; 2
 3b2:	28 f4       	brcc	.+10     	; 0x3be <_Z11SD_readRes7Ph+0x1a>
 3b4:	64 e0       	ldi	r22, 0x04	; 4
 3b6:	ce 01       	movw	r24, r28
 3b8:	01 96       	adiw	r24, 0x01	; 1
 3ba:	0e 94 a7 01 	call	0x34e	; 0x34e <_Z12SD_readBytesPhh>
 3be:	df 91       	pop	r29
 3c0:	cf 91       	pop	r28
 3c2:	08 95       	ret

000003c4 <_Z14SD_goIdleStatev>:
 3c4:	cf 93       	push	r28
 3c6:	8f ef       	ldi	r24, 0xFF	; 255
 3c8:	0e 94 5f 01 	call	0x2be	; 0x2be <_Z12SPI_transferh>
 3cc:	2a 98       	cbi	0x05, 2	; 5
 3ce:	8f ef       	ldi	r24, 0xFF	; 255
 3d0:	0e 94 5f 01 	call	0x2be	; 0x2be <_Z12SPI_transferh>
 3d4:	24 e9       	ldi	r18, 0x94	; 148
 3d6:	40 e0       	ldi	r20, 0x00	; 0
 3d8:	50 e0       	ldi	r21, 0x00	; 0
 3da:	ba 01       	movw	r22, r20
 3dc:	80 e0       	ldi	r24, 0x00	; 0
 3de:	0e 94 79 01 	call	0x2f2	; 0x2f2 <_Z10SD_commandhmh>
 3e2:	0e 94 9c 01 	call	0x338	; 0x338 <_Z11SD_readRes1v>
 3e6:	c8 2f       	mov	r28, r24
 3e8:	8f ef       	ldi	r24, 0xFF	; 255
 3ea:	0e 94 5f 01 	call	0x2be	; 0x2be <_Z12SPI_transferh>
 3ee:	2a 9a       	sbi	0x05, 2	; 5
 3f0:	8f ef       	ldi	r24, 0xFF	; 255
 3f2:	0e 94 5f 01 	call	0x2be	; 0x2be <_Z12SPI_transferh>
 3f6:	8c 2f       	mov	r24, r28
 3f8:	cf 91       	pop	r28
 3fa:	08 95       	ret

000003fc <_Z13SD_sendIfCondPh>:
 3fc:	cf 93       	push	r28
 3fe:	df 93       	push	r29
 400:	ec 01       	movw	r28, r24
 402:	8f ef       	ldi	r24, 0xFF	; 255
 404:	0e 94 5f 01 	call	0x2be	; 0x2be <_Z12SPI_transferh>
 408:	2a 98       	cbi	0x05, 2	; 5
 40a:	8f ef       	ldi	r24, 0xFF	; 255
 40c:	0e 94 5f 01 	call	0x2be	; 0x2be <_Z12SPI_transferh>
 410:	26 e8       	ldi	r18, 0x86	; 134
 412:	4a ea       	ldi	r20, 0xAA	; 170
 414:	51 e0       	ldi	r21, 0x01	; 1
 416:	60 e0       	ldi	r22, 0x00	; 0
 418:	70 e0       	ldi	r23, 0x00	; 0
 41a:	88 e0       	ldi	r24, 0x08	; 8
 41c:	0e 94 79 01 	call	0x2f2	; 0x2f2 <_Z10SD_commandhmh>
 420:	ce 01       	movw	r24, r28
 422:	0e 94 d2 01 	call	0x3a4	; 0x3a4 <_Z11SD_readRes7Ph>
 426:	8f ef       	ldi	r24, 0xFF	; 255
 428:	0e 94 5f 01 	call	0x2be	; 0x2be <_Z12SPI_transferh>
 42c:	2a 9a       	sbi	0x05, 2	; 5
 42e:	8f ef       	ldi	r24, 0xFF	; 255
 430:	0e 94 5f 01 	call	0x2be	; 0x2be <_Z12SPI_transferh>
 434:	df 91       	pop	r29
 436:	cf 91       	pop	r28
 438:	08 95       	ret

0000043a <_Z18SD_readSingleBlockmPhS_>:
 43a:	8f 92       	push	r8
 43c:	9f 92       	push	r9
 43e:	af 92       	push	r10
 440:	bf 92       	push	r11
 442:	cf 92       	push	r12
 444:	df 92       	push	r13
 446:	ef 92       	push	r14
 448:	ff 92       	push	r15
 44a:	0f 93       	push	r16
 44c:	1f 93       	push	r17
 44e:	cf 93       	push	r28
 450:	df 93       	push	r29
 452:	4b 01       	movw	r8, r22
 454:	5c 01       	movw	r10, r24
 456:	7a 01       	movw	r14, r20
 458:	69 01       	movw	r12, r18
 45a:	8f ef       	ldi	r24, 0xFF	; 255
 45c:	f9 01       	movw	r30, r18
 45e:	80 83       	st	Z, r24
 460:	0e 94 5f 01 	call	0x2be	; 0x2be <_Z12SPI_transferh>
 464:	2a 98       	cbi	0x05, 2	; 5
 466:	8f ef       	ldi	r24, 0xFF	; 255
 468:	0e 94 5f 01 	call	0x2be	; 0x2be <_Z12SPI_transferh>
 46c:	20 e0       	ldi	r18, 0x00	; 0
 46e:	b5 01       	movw	r22, r10
 470:	a4 01       	movw	r20, r8
 472:	81 e1       	ldi	r24, 0x11	; 17
 474:	0e 94 79 01 	call	0x2f2	; 0x2f2 <_Z10SD_commandhmh>
 478:	0e 94 9c 01 	call	0x338	; 0x338 <_Z11SD_readRes1v>
 47c:	08 2f       	mov	r16, r24
 47e:	8f 3f       	cpi	r24, 0xFF	; 255
 480:	21 f4       	brne	.+8      	; 0x48a <_Z18SD_readSingleBlockmPhS_+0x50>
 482:	1f c0       	rjmp	.+62     	; 0x4c2 <_Z18SD_readSingleBlockmPhS_+0x88>
 484:	21 97       	sbiw	r28, 0x01	; 1
 486:	19 f4       	brne	.+6      	; 0x48e <_Z18SD_readSingleBlockmPhS_+0x54>
 488:	1a c0       	rjmp	.+52     	; 0x4be <_Z18SD_readSingleBlockmPhS_+0x84>
 48a:	ca e1       	ldi	r28, 0x1A	; 26
 48c:	d6 e0       	ldi	r29, 0x06	; 6
 48e:	8f ef       	ldi	r24, 0xFF	; 255
 490:	0e 94 5f 01 	call	0x2be	; 0x2be <_Z12SPI_transferh>
 494:	18 2f       	mov	r17, r24
 496:	8f 3f       	cpi	r24, 0xFF	; 255
 498:	a9 f3       	breq	.-22     	; 0x484 <_Z18SD_readSingleBlockmPhS_+0x4a>
 49a:	8e 3f       	cpi	r24, 0xFE	; 254
 49c:	81 f4       	brne	.+32     	; 0x4be <_Z18SD_readSingleBlockmPhS_+0x84>
 49e:	e7 01       	movw	r28, r14
 4a0:	fe ef       	ldi	r31, 0xFE	; 254
 4a2:	ff 1a       	sub	r15, r31
 4a4:	8f ef       	ldi	r24, 0xFF	; 255
 4a6:	0e 94 5f 01 	call	0x2be	; 0x2be <_Z12SPI_transferh>
 4aa:	89 93       	st	Y+, r24
 4ac:	ec 16       	cp	r14, r28
 4ae:	fd 06       	cpc	r15, r29
 4b0:	c9 f7       	brne	.-14     	; 0x4a4 <_Z18SD_readSingleBlockmPhS_+0x6a>
 4b2:	8f ef       	ldi	r24, 0xFF	; 255
 4b4:	0e 94 5f 01 	call	0x2be	; 0x2be <_Z12SPI_transferh>
 4b8:	8f ef       	ldi	r24, 0xFF	; 255
 4ba:	0e 94 5f 01 	call	0x2be	; 0x2be <_Z12SPI_transferh>
 4be:	f6 01       	movw	r30, r12
 4c0:	10 83       	st	Z, r17
 4c2:	8f ef       	ldi	r24, 0xFF	; 255
 4c4:	0e 94 5f 01 	call	0x2be	; 0x2be <_Z12SPI_transferh>
 4c8:	2a 9a       	sbi	0x05, 2	; 5
 4ca:	8f ef       	ldi	r24, 0xFF	; 255
 4cc:	0e 94 5f 01 	call	0x2be	; 0x2be <_Z12SPI_transferh>
 4d0:	80 2f       	mov	r24, r16
 4d2:	df 91       	pop	r29
 4d4:	cf 91       	pop	r28
 4d6:	1f 91       	pop	r17
 4d8:	0f 91       	pop	r16
 4da:	ff 90       	pop	r15
 4dc:	ef 90       	pop	r14
 4de:	df 90       	pop	r13
 4e0:	cf 90       	pop	r12
 4e2:	bf 90       	pop	r11
 4e4:	af 90       	pop	r10
 4e6:	9f 90       	pop	r9
 4e8:	8f 90       	pop	r8
 4ea:	08 95       	ret

000004ec <_Z19SD_writeSingleBlockmPhS_>:
 4ec:	8f 92       	push	r8
 4ee:	9f 92       	push	r9
 4f0:	af 92       	push	r10
 4f2:	bf 92       	push	r11
 4f4:	df 92       	push	r13
 4f6:	ef 92       	push	r14
 4f8:	ff 92       	push	r15
 4fa:	0f 93       	push	r16
 4fc:	1f 93       	push	r17
 4fe:	cf 93       	push	r28
 500:	df 93       	push	r29
 502:	4b 01       	movw	r8, r22
 504:	5c 01       	movw	r10, r24
 506:	8a 01       	movw	r16, r20
 508:	79 01       	movw	r14, r18
 50a:	8f ef       	ldi	r24, 0xFF	; 255
 50c:	f9 01       	movw	r30, r18
 50e:	80 83       	st	Z, r24
 510:	0e 94 5f 01 	call	0x2be	; 0x2be <_Z12SPI_transferh>
 514:	2a 98       	cbi	0x05, 2	; 5
 516:	8f ef       	ldi	r24, 0xFF	; 255
 518:	0e 94 5f 01 	call	0x2be	; 0x2be <_Z12SPI_transferh>
 51c:	20 e0       	ldi	r18, 0x00	; 0
 51e:	b5 01       	movw	r22, r10
 520:	a4 01       	movw	r20, r8
 522:	88 e1       	ldi	r24, 0x18	; 24
 524:	0e 94 79 01 	call	0x2f2	; 0x2f2 <_Z10SD_commandhmh>
 528:	0e 94 9c 01 	call	0x338	; 0x338 <_Z11SD_readRes1v>
 52c:	d8 2e       	mov	r13, r24
 52e:	81 11       	cpse	r24, r1
 530:	28 c0       	rjmp	.+80     	; 0x582 <_Z19SD_writeSingleBlockmPhS_+0x96>
 532:	8e ef       	ldi	r24, 0xFE	; 254
 534:	0e 94 5f 01 	call	0x2be	; 0x2be <_Z12SPI_transferh>
 538:	e8 01       	movw	r28, r16
 53a:	1e 5f       	subi	r17, 0xFE	; 254
 53c:	89 91       	ld	r24, Y+
 53e:	0e 94 5f 01 	call	0x2be	; 0x2be <_Z12SPI_transferh>
 542:	c0 17       	cp	r28, r16
 544:	d1 07       	cpc	r29, r17
 546:	d1 f7       	brne	.-12     	; 0x53c <_Z19SD_writeSingleBlockmPhS_+0x50>
 548:	03 c0       	rjmp	.+6      	; 0x550 <_Z19SD_writeSingleBlockmPhS_+0x64>
 54a:	21 97       	sbiw	r28, 0x01	; 1
 54c:	19 f4       	brne	.+6      	; 0x554 <_Z19SD_writeSingleBlockmPhS_+0x68>
 54e:	19 c0       	rjmp	.+50     	; 0x582 <_Z19SD_writeSingleBlockmPhS_+0x96>
 550:	c2 e4       	ldi	r28, 0x42	; 66
 552:	df e0       	ldi	r29, 0x0F	; 15
 554:	8f ef       	ldi	r24, 0xFF	; 255
 556:	0e 94 5f 01 	call	0x2be	; 0x2be <_Z12SPI_transferh>
 55a:	8f 3f       	cpi	r24, 0xFF	; 255
 55c:	b1 f3       	breq	.-20     	; 0x54a <_Z19SD_writeSingleBlockmPhS_+0x5e>
 55e:	9f ef       	ldi	r25, 0xFF	; 255
 560:	f7 01       	movw	r30, r14
 562:	90 83       	st	Z, r25
 564:	8f 71       	andi	r24, 0x1F	; 31
 566:	85 30       	cpi	r24, 0x05	; 5
 568:	61 f4       	brne	.+24     	; 0x582 <_Z19SD_writeSingleBlockmPhS_+0x96>
 56a:	80 83       	st	Z, r24
 56c:	c3 e4       	ldi	r28, 0x43	; 67
 56e:	df e0       	ldi	r29, 0x0F	; 15
 570:	8f ef       	ldi	r24, 0xFF	; 255
 572:	0e 94 5f 01 	call	0x2be	; 0x2be <_Z12SPI_transferh>
 576:	81 11       	cpse	r24, r1
 578:	04 c0       	rjmp	.+8      	; 0x582 <_Z19SD_writeSingleBlockmPhS_+0x96>
 57a:	21 97       	sbiw	r28, 0x01	; 1
 57c:	c9 f7       	brne	.-14     	; 0x570 <_Z19SD_writeSingleBlockmPhS_+0x84>
 57e:	f7 01       	movw	r30, r14
 580:	10 82       	st	Z, r1
 582:	8f ef       	ldi	r24, 0xFF	; 255
 584:	0e 94 5f 01 	call	0x2be	; 0x2be <_Z12SPI_transferh>
 588:	2a 9a       	sbi	0x05, 2	; 5
 58a:	8f ef       	ldi	r24, 0xFF	; 255
 58c:	0e 94 5f 01 	call	0x2be	; 0x2be <_Z12SPI_transferh>
 590:	8d 2d       	mov	r24, r13
 592:	df 91       	pop	r29
 594:	cf 91       	pop	r28
 596:	1f 91       	pop	r17
 598:	0f 91       	pop	r16
 59a:	ff 90       	pop	r15
 59c:	ef 90       	pop	r14
 59e:	df 90       	pop	r13
 5a0:	bf 90       	pop	r11
 5a2:	af 90       	pop	r10
 5a4:	9f 90       	pop	r9
 5a6:	8f 90       	pop	r8
 5a8:	08 95       	ret

000005aa <_Z10SD_readOCRPh>:
 5aa:	cf 93       	push	r28
 5ac:	df 93       	push	r29
 5ae:	ec 01       	movw	r28, r24
 5b0:	8f ef       	ldi	r24, 0xFF	; 255
 5b2:	0e 94 5f 01 	call	0x2be	; 0x2be <_Z12SPI_transferh>
 5b6:	2a 98       	cbi	0x05, 2	; 5
 5b8:	8f ef       	ldi	r24, 0xFF	; 255
 5ba:	0e 94 5f 01 	call	0x2be	; 0x2be <_Z12SPI_transferh>
 5be:	8f 3f       	cpi	r24, 0xFF	; 255
 5c0:	29 f0       	breq	.+10     	; 0x5cc <_Z10SD_readOCRPh+0x22>
 5c2:	8f ef       	ldi	r24, 0xFF	; 255
 5c4:	0e 94 5f 01 	call	0x2be	; 0x2be <_Z12SPI_transferh>
 5c8:	8f 3f       	cpi	r24, 0xFF	; 255
 5ca:	d9 f7       	brne	.-10     	; 0x5c2 <_Z10SD_readOCRPh+0x18>
 5cc:	20 e0       	ldi	r18, 0x00	; 0
 5ce:	40 e0       	ldi	r20, 0x00	; 0
 5d0:	50 e0       	ldi	r21, 0x00	; 0
 5d2:	ba 01       	movw	r22, r20
 5d4:	8a e3       	ldi	r24, 0x3A	; 58
 5d6:	0e 94 79 01 	call	0x2f2	; 0x2f2 <_Z10SD_commandhmh>
 5da:	ce 01       	movw	r24, r28
 5dc:	0e 94 c2 01 	call	0x384	; 0x384 <_Z11SD_readRes3Ph>
 5e0:	8f ef       	ldi	r24, 0xFF	; 255
 5e2:	0e 94 5f 01 	call	0x2be	; 0x2be <_Z12SPI_transferh>
 5e6:	2a 9a       	sbi	0x05, 2	; 5
 5e8:	8f ef       	ldi	r24, 0xFF	; 255
 5ea:	0e 94 5f 01 	call	0x2be	; 0x2be <_Z12SPI_transferh>
 5ee:	df 91       	pop	r29
 5f0:	cf 91       	pop	r28
 5f2:	08 95       	ret

000005f4 <_Z10SD_sendAppv>:
 5f4:	cf 93       	push	r28
 5f6:	8f ef       	ldi	r24, 0xFF	; 255
 5f8:	0e 94 5f 01 	call	0x2be	; 0x2be <_Z12SPI_transferh>
 5fc:	2a 98       	cbi	0x05, 2	; 5
 5fe:	8f ef       	ldi	r24, 0xFF	; 255
 600:	0e 94 5f 01 	call	0x2be	; 0x2be <_Z12SPI_transferh>
 604:	20 e0       	ldi	r18, 0x00	; 0
 606:	40 e0       	ldi	r20, 0x00	; 0
 608:	50 e0       	ldi	r21, 0x00	; 0
 60a:	ba 01       	movw	r22, r20
 60c:	87 e3       	ldi	r24, 0x37	; 55
 60e:	0e 94 79 01 	call	0x2f2	; 0x2f2 <_Z10SD_commandhmh>
 612:	0e 94 9c 01 	call	0x338	; 0x338 <_Z11SD_readRes1v>
 616:	c8 2f       	mov	r28, r24
 618:	8f ef       	ldi	r24, 0xFF	; 255
 61a:	0e 94 5f 01 	call	0x2be	; 0x2be <_Z12SPI_transferh>
 61e:	2a 9a       	sbi	0x05, 2	; 5
 620:	8f ef       	ldi	r24, 0xFF	; 255
 622:	0e 94 5f 01 	call	0x2be	; 0x2be <_Z12SPI_transferh>
 626:	8c 2f       	mov	r24, r28
 628:	cf 91       	pop	r28
 62a:	08 95       	ret

0000062c <_Z13SD_sendOpCondv>:
 62c:	cf 93       	push	r28
 62e:	8f ef       	ldi	r24, 0xFF	; 255
 630:	0e 94 5f 01 	call	0x2be	; 0x2be <_Z12SPI_transferh>
 634:	2a 98       	cbi	0x05, 2	; 5
 636:	8f ef       	ldi	r24, 0xFF	; 255
 638:	0e 94 5f 01 	call	0x2be	; 0x2be <_Z12SPI_transferh>
 63c:	20 e0       	ldi	r18, 0x00	; 0
 63e:	40 e0       	ldi	r20, 0x00	; 0
 640:	50 e0       	ldi	r21, 0x00	; 0
 642:	60 e0       	ldi	r22, 0x00	; 0
 644:	70 e4       	ldi	r23, 0x40	; 64
 646:	89 e2       	ldi	r24, 0x29	; 41
 648:	0e 94 79 01 	call	0x2f2	; 0x2f2 <_Z10SD_commandhmh>
 64c:	0e 94 9c 01 	call	0x338	; 0x338 <_Z11SD_readRes1v>
 650:	c8 2f       	mov	r28, r24
 652:	8f ef       	ldi	r24, 0xFF	; 255
 654:	0e 94 5f 01 	call	0x2be	; 0x2be <_Z12SPI_transferh>
 658:	2a 9a       	sbi	0x05, 2	; 5
 65a:	8f ef       	ldi	r24, 0xFF	; 255
 65c:	0e 94 5f 01 	call	0x2be	; 0x2be <_Z12SPI_transferh>
 660:	8c 2f       	mov	r24, r28
 662:	cf 91       	pop	r28
 664:	08 95       	ret

00000666 <_Z7SD_initv>:
 666:	ff 92       	push	r15
 668:	0f 93       	push	r16
 66a:	1f 93       	push	r17
 66c:	cf 93       	push	r28
 66e:	df 93       	push	r29
 670:	00 d0       	rcall	.+0      	; 0x672 <_Z7SD_initv+0xc>
 672:	00 d0       	rcall	.+0      	; 0x674 <_Z7SD_initv+0xe>
 674:	1f 92       	push	r1
 676:	cd b7       	in	r28, 0x3d	; 61
 678:	de b7       	in	r29, 0x3e	; 62
 67a:	0e 94 65 01 	call	0x2ca	; 0x2ca <_Z13SD_powerUpSeqv>
 67e:	0f ef       	ldi	r16, 0xFF	; 255
 680:	0e 94 e2 01 	call	0x3c4	; 0x3c4 <_Z14SD_goIdleStatev>
 684:	18 2f       	mov	r17, r24
 686:	89 83       	std	Y+1, r24	; 0x01
 688:	81 30       	cpi	r24, 0x01	; 1
 68a:	19 f0       	breq	.+6      	; 0x692 <_Z7SD_initv+0x2c>
 68c:	01 50       	subi	r16, 0x01	; 1
 68e:	c1 f7       	brne	.-16     	; 0x680 <_Z7SD_initv+0x1a>
 690:	31 c0       	rjmp	.+98     	; 0x6f4 <_Z7SD_initv+0x8e>
 692:	8f e9       	ldi	r24, 0x9F	; 159
 694:	9f e0       	ldi	r25, 0x0F	; 15
 696:	01 97       	sbiw	r24, 0x01	; 1
 698:	f1 f7       	brne	.-4      	; 0x696 <_Z7SD_initv+0x30>
 69a:	00 c0       	rjmp	.+0      	; 0x69c <_Z7SD_initv+0x36>
 69c:	00 00       	nop
 69e:	ce 01       	movw	r24, r28
 6a0:	01 96       	adiw	r24, 0x01	; 1
 6a2:	0e 94 fe 01 	call	0x3fc	; 0x3fc <_Z13SD_sendIfCondPh>
 6a6:	f9 80       	ldd	r15, Y+1	; 0x01
 6a8:	91 e0       	ldi	r25, 0x01	; 1
 6aa:	f9 12       	cpse	r15, r25
 6ac:	28 c0       	rjmp	.+80     	; 0x6fe <_Z7SD_initv+0x98>
 6ae:	8d 81       	ldd	r24, Y+5	; 0x05
 6b0:	8a 3a       	cpi	r24, 0xAA	; 170
 6b2:	11 f5       	brne	.+68     	; 0x6f8 <_Z7SD_initv+0x92>
 6b4:	0f ef       	ldi	r16, 0xFF	; 255
 6b6:	02 c0       	rjmp	.+4      	; 0x6bc <_Z7SD_initv+0x56>
 6b8:	01 50       	subi	r16, 0x01	; 1
 6ba:	01 f1       	breq	.+64     	; 0x6fc <_Z7SD_initv+0x96>
 6bc:	0e 94 fa 02 	call	0x5f4	; 0x5f4 <_Z10SD_sendAppv>
 6c0:	89 83       	std	Y+1, r24	; 0x01
 6c2:	82 30       	cpi	r24, 0x02	; 2
 6c4:	18 f4       	brcc	.+6      	; 0x6cc <_Z7SD_initv+0x66>
 6c6:	0e 94 16 03 	call	0x62c	; 0x62c <_Z13SD_sendOpCondv>
 6ca:	89 83       	std	Y+1, r24	; 0x01
 6cc:	8f e9       	ldi	r24, 0x9F	; 159
 6ce:	9f e0       	ldi	r25, 0x0F	; 15
 6d0:	01 97       	sbiw	r24, 0x01	; 1
 6d2:	f1 f7       	brne	.-4      	; 0x6d0 <_Z7SD_initv+0x6a>
 6d4:	00 c0       	rjmp	.+0      	; 0x6d6 <_Z7SD_initv+0x70>
 6d6:	00 00       	nop
 6d8:	19 81       	ldd	r17, Y+1	; 0x01
 6da:	11 11       	cpse	r17, r1
 6dc:	ed cf       	rjmp	.-38     	; 0x6b8 <_Z7SD_initv+0x52>
 6de:	8f e9       	ldi	r24, 0x9F	; 159
 6e0:	9f e0       	ldi	r25, 0x0F	; 15
 6e2:	01 97       	sbiw	r24, 0x01	; 1
 6e4:	f1 f7       	brne	.-4      	; 0x6e2 <_Z7SD_initv+0x7c>
 6e6:	00 c0       	rjmp	.+0      	; 0x6e8 <_Z7SD_initv+0x82>
 6e8:	00 00       	nop
 6ea:	ce 01       	movw	r24, r28
 6ec:	01 96       	adiw	r24, 0x01	; 1
 6ee:	0e 94 d5 02 	call	0x5aa	; 0x5aa <_Z10SD_readOCRPh>
 6f2:	05 c0       	rjmp	.+10     	; 0x6fe <_Z7SD_initv+0x98>
 6f4:	11 e0       	ldi	r17, 0x01	; 1
 6f6:	03 c0       	rjmp	.+6      	; 0x6fe <_Z7SD_initv+0x98>
 6f8:	1f 2d       	mov	r17, r15
 6fa:	01 c0       	rjmp	.+2      	; 0x6fe <_Z7SD_initv+0x98>
 6fc:	1f 2d       	mov	r17, r15
 6fe:	81 2f       	mov	r24, r17
 700:	0f 90       	pop	r0
 702:	0f 90       	pop	r0
 704:	0f 90       	pop	r0
 706:	0f 90       	pop	r0
 708:	0f 90       	pop	r0
 70a:	df 91       	pop	r29
 70c:	cf 91       	pop	r28
 70e:	1f 91       	pop	r17
 710:	0f 91       	pop	r16
 712:	ff 90       	pop	r15
 714:	08 95       	ret

00000716 <_Z10SD_printR1h>:
 716:	cf 93       	push	r28
 718:	c8 2f       	mov	r28, r24
 71a:	8f 3f       	cpi	r24, 0xFF	; 255
 71c:	29 f4       	brne	.+10     	; 0x728 <_Z10SD_printR1h+0x12>
 71e:	82 e0       	ldi	r24, 0x02	; 2
 720:	92 e0       	ldi	r25, 0x02	; 2
 722:	0e 94 41 01 	call	0x282	; 0x282 <_Z11UART_puts_pPKc>
 726:	38 c0       	rjmp	.+112    	; 0x798 <_Z10SD_printR1h+0x82>
 728:	88 23       	and	r24, r24
 72a:	2c f4       	brge	.+10     	; 0x736 <_Z10SD_printR1h+0x20>
 72c:	80 ef       	ldi	r24, 0xF0	; 240
 72e:	91 e0       	ldi	r25, 0x01	; 1
 730:	0e 94 41 01 	call	0x282	; 0x282 <_Z11UART_puts_pPKc>
 734:	31 c0       	rjmp	.+98     	; 0x798 <_Z10SD_printR1h+0x82>
 736:	81 11       	cpse	r24, r1
 738:	05 c0       	rjmp	.+10     	; 0x744 <_Z10SD_printR1h+0x2e>
 73a:	82 ee       	ldi	r24, 0xE2	; 226
 73c:	91 e0       	ldi	r25, 0x01	; 1
 73e:	0e 94 41 01 	call	0x282	; 0x282 <_Z11UART_puts_pPKc>
 742:	2a c0       	rjmp	.+84     	; 0x798 <_Z10SD_printR1h+0x82>
 744:	86 ff       	sbrs	r24, 6
 746:	04 c0       	rjmp	.+8      	; 0x750 <_Z10SD_printR1h+0x3a>
 748:	8f ec       	ldi	r24, 0xCF	; 207
 74a:	91 e0       	ldi	r25, 0x01	; 1
 74c:	0e 94 41 01 	call	0x282	; 0x282 <_Z11UART_puts_pPKc>
 750:	c5 ff       	sbrs	r28, 5
 752:	04 c0       	rjmp	.+8      	; 0x75c <_Z10SD_printR1h+0x46>
 754:	8e eb       	ldi	r24, 0xBE	; 190
 756:	91 e0       	ldi	r25, 0x01	; 1
 758:	0e 94 41 01 	call	0x282	; 0x282 <_Z11UART_puts_pPKc>
 75c:	c4 ff       	sbrs	r28, 4
 75e:	04 c0       	rjmp	.+8      	; 0x768 <_Z10SD_printR1h+0x52>
 760:	86 ea       	ldi	r24, 0xA6	; 166
 762:	91 e0       	ldi	r25, 0x01	; 1
 764:	0e 94 41 01 	call	0x282	; 0x282 <_Z11UART_puts_pPKc>
 768:	c3 ff       	sbrs	r28, 3
 76a:	04 c0       	rjmp	.+8      	; 0x774 <_Z10SD_printR1h+0x5e>
 76c:	89 e9       	ldi	r24, 0x99	; 153
 76e:	91 e0       	ldi	r25, 0x01	; 1
 770:	0e 94 41 01 	call	0x282	; 0x282 <_Z11UART_puts_pPKc>
 774:	c2 ff       	sbrs	r28, 2
 776:	04 c0       	rjmp	.+8      	; 0x780 <_Z10SD_printR1h+0x6a>
 778:	86 e8       	ldi	r24, 0x86	; 134
 77a:	91 e0       	ldi	r25, 0x01	; 1
 77c:	0e 94 41 01 	call	0x282	; 0x282 <_Z11UART_puts_pPKc>
 780:	c1 ff       	sbrs	r28, 1
 782:	04 c0       	rjmp	.+8      	; 0x78c <_Z10SD_printR1h+0x76>
 784:	81 e7       	ldi	r24, 0x71	; 113
 786:	91 e0       	ldi	r25, 0x01	; 1
 788:	0e 94 41 01 	call	0x282	; 0x282 <_Z11UART_puts_pPKc>
 78c:	c0 ff       	sbrs	r28, 0
 78e:	04 c0       	rjmp	.+8      	; 0x798 <_Z10SD_printR1h+0x82>
 790:	80 e6       	ldi	r24, 0x60	; 96
 792:	91 e0       	ldi	r25, 0x01	; 1
 794:	0e 94 41 01 	call	0x282	; 0x282 <_Z11UART_puts_pPKc>
 798:	cf 91       	pop	r28
 79a:	08 95       	ret

0000079c <_Z11SD_printBufPh>:

void SD_printBuf(uint8_t *buf)
{
 79c:	ef 92       	push	r14
 79e:	ff 92       	push	r15
 7a0:	1f 93       	push	r17
 7a2:	cf 93       	push	r28
 7a4:	df 93       	push	r29
 7a6:	ec 01       	movw	r28, r24
 7a8:	7c 01       	movw	r14, r24
 7aa:	8e ef       	ldi	r24, 0xFE	; 254
 7ac:	f8 1a       	sub	r15, r24
    uint8_t colCount = 0;
 7ae:	10 e0       	ldi	r17, 0x00	; 0
    for(uint16_t i = 0; i < SD_BLOCK_LEN; i++)
    {
        UART_puthex8(*buf++);
 7b0:	89 91       	ld	r24, Y+
 7b2:	0e 94 28 01 	call	0x250	; 0x250 <_Z12UART_puthex8h>
        if(colCount == 19)
 7b6:	13 31       	cpi	r17, 0x13	; 19
 7b8:	31 f4       	brne	.+12     	; 0x7c6 <_Z11SD_printBufPh+0x2a>
        {
            UART_pputs("\r\n");
 7ba:	8d e5       	ldi	r24, 0x5D	; 93
 7bc:	91 e0       	ldi	r25, 0x01	; 1
 7be:	0e 94 41 01 	call	0x282	; 0x282 <_Z11UART_puts_pPKc>
            colCount = 0;
 7c2:	10 e0       	ldi	r17, 0x00	; 0
 7c4:	04 c0       	rjmp	.+8      	; 0x7ce <_Z11SD_printBufPh+0x32>
        }
        else
        {
            UART_putc(' ');
 7c6:	80 e2       	ldi	r24, 0x20	; 32
 7c8:	0e 94 20 01 	call	0x240	; 0x240 <_Z9UART_putch>
            colCount++;
 7cc:	1f 5f       	subi	r17, 0xFF	; 255
}

void SD_printBuf(uint8_t *buf)
{
    uint8_t colCount = 0;
    for(uint16_t i = 0; i < SD_BLOCK_LEN; i++)
 7ce:	ce 15       	cp	r28, r14
 7d0:	df 05       	cpc	r29, r15
 7d2:	71 f7       	brne	.-36     	; 0x7b0 <_Z11SD_printBufPh+0x14>
        {
            UART_putc(' ');
            colCount++;
        }
    }
    UART_pputs("\r\n");
 7d4:	8a e5       	ldi	r24, 0x5A	; 90
 7d6:	91 e0       	ldi	r25, 0x01	; 1
 7d8:	0e 94 41 01 	call	0x282	; 0x282 <_Z11UART_puts_pPKc>
}
 7dc:	df 91       	pop	r29
 7de:	cf 91       	pop	r28
 7e0:	1f 91       	pop	r17
 7e2:	ff 90       	pop	r15
 7e4:	ef 90       	pop	r14
 7e6:	08 95       	ret

000007e8 <_Z20SD_printDataErrTokenh>:

void SD_printDataErrToken(uint8_t token)
{
 7e8:	cf 93       	push	r28
 7ea:	c8 2f       	mov	r28, r24
    if(token & 0xF0)
 7ec:	80 7f       	andi	r24, 0xF0	; 240
 7ee:	21 f0       	breq	.+8      	; 0x7f8 <_Z20SD_printDataErrTokenh+0x10>
        UART_pputs("\tNot Error token\r\n");
 7f0:	87 e4       	ldi	r24, 0x47	; 71
 7f2:	91 e0       	ldi	r25, 0x01	; 1
 7f4:	0e 94 41 01 	call	0x282	; 0x282 <_Z11UART_puts_pPKc>
    if(SD_TOKEN_OOR(token))
 7f8:	c3 ff       	sbrs	r28, 3
 7fa:	04 c0       	rjmp	.+8      	; 0x804 <_Z20SD_printDataErrTokenh+0x1c>
        UART_pputs("\tData out of range\r\n");
 7fc:	82 e3       	ldi	r24, 0x32	; 50
 7fe:	91 e0       	ldi	r25, 0x01	; 1
 800:	0e 94 41 01 	call	0x282	; 0x282 <_Z11UART_puts_pPKc>
    if(SD_TOKEN_CECC(token))
 804:	c2 ff       	sbrs	r28, 2
 806:	04 c0       	rjmp	.+8      	; 0x810 <_Z20SD_printDataErrTokenh+0x28>
        UART_pputs("\tCard ECC failed\r\n");
 808:	8f e1       	ldi	r24, 0x1F	; 31
 80a:	91 e0       	ldi	r25, 0x01	; 1
 80c:	0e 94 41 01 	call	0x282	; 0x282 <_Z11UART_puts_pPKc>
    if(SD_TOKEN_CC(token))
 810:	c1 ff       	sbrs	r28, 1
 812:	04 c0       	rjmp	.+8      	; 0x81c <_Z20SD_printDataErrTokenh+0x34>
        UART_pputs("\tCC Error\r\n");
 814:	83 e1       	ldi	r24, 0x13	; 19
 816:	91 e0       	ldi	r25, 0x01	; 1
 818:	0e 94 41 01 	call	0x282	; 0x282 <_Z11UART_puts_pPKc>
    if(SD_TOKEN_ERROR(token))
 81c:	c0 ff       	sbrs	r28, 0
 81e:	04 c0       	rjmp	.+8      	; 0x828 <_Z20SD_printDataErrTokenh+0x40>
        UART_pputs("\tError\r\n");
 820:	8a e0       	ldi	r24, 0x0A	; 10
 822:	91 e0       	ldi	r25, 0x01	; 1
 824:	0e 94 41 01 	call	0x282	; 0x282 <_Z11UART_puts_pPKc>
}
 828:	cf 91       	pop	r28
 82a:	08 95       	ret

0000082c <main>:
#include "sdprint.c"

#define BAUD_RATE 9600

int main(void)
{
 82c:	cf 93       	push	r28
 82e:	df 93       	push	r29
 830:	cd b7       	in	r28, 0x3d	; 61
 832:	de b7       	in	r29, 0x3e	; 62
 834:	c1 50       	subi	r28, 0x01	; 1
 836:	d2 40       	sbci	r29, 0x02	; 2
 838:	0f b6       	in	r0, 0x3f	; 63
 83a:	f8 94       	cli
 83c:	de bf       	out	0x3e, r29	; 62
 83e:	0f be       	out	0x3f, r0	; 63
 840:	cd bf       	out	0x3d, r28	; 61
	// array to hold responses
	uint8_t res[5], buf[512], token;
	uint32_t addr = 0x00000000;

	// initialize UART
	UART_init();
 842:	0e 94 15 01 	call	0x22a	; 0x22a <_Z9UART_initv>

	// initialize SPI
	SPI_init(SPI_MASTER | SPI_FOSC_128 | SPI_MODE_0);
 846:	80 e0       	ldi	r24, 0x00	; 0
 848:	93 e1       	ldi	r25, 0x13	; 19
 84a:	0e 94 53 01 	call	0x2a6	; 0x2a6 <_Z8SPI_initj>

	// initialize sd card
	if(SD_init() != SD_SUCCESS)
 84e:	0e 94 33 03 	call	0x666	; 0x666 <_Z7SD_initv>
 852:	88 23       	and	r24, r24
 854:	29 f0       	breq	.+10     	; 0x860 <main+0x34>
	{
		UART_pputs("Error initializaing SD CARD\r\n");
 856:	8c ee       	ldi	r24, 0xEC	; 236
 858:	90 e0       	ldi	r25, 0x00	; 0
 85a:	0e 94 41 01 	call	0x282	; 0x282 <_Z11UART_puts_pPKc>
 85e:	7e c0       	rjmp	.+252    	; 0x95c <__stack+0x5d>
	}
	else
	{
		UART_pputs("SD Card initialized\r\n");
 860:	86 ed       	ldi	r24, 0xD6	; 214
 862:	90 e0       	ldi	r25, 0x00	; 0
 864:	0e 94 41 01 	call	0x282	; 0x282 <_Z11UART_puts_pPKc>

		// read sector 0
		UART_pputs("\r\nReading sector: 0x");
 868:	81 ec       	ldi	r24, 0xC1	; 193
 86a:	90 e0       	ldi	r25, 0x00	; 0
 86c:	0e 94 41 01 	call	0x282	; 0x282 <_Z11UART_puts_pPKc>
		UART_puthex8((uint8_t)(addr >> 24));
 870:	80 e0       	ldi	r24, 0x00	; 0
 872:	0e 94 28 01 	call	0x250	; 0x250 <_Z12UART_puthex8h>
		UART_puthex8((uint8_t)(addr >> 16));
 876:	80 e0       	ldi	r24, 0x00	; 0
 878:	0e 94 28 01 	call	0x250	; 0x250 <_Z12UART_puthex8h>
		UART_puthex8((uint8_t)(addr >> 8));
 87c:	80 e0       	ldi	r24, 0x00	; 0
 87e:	0e 94 28 01 	call	0x250	; 0x250 <_Z12UART_puthex8h>
		UART_puthex8((uint8_t)addr);
 882:	80 e0       	ldi	r24, 0x00	; 0
 884:	0e 94 28 01 	call	0x250	; 0x250 <_Z12UART_puthex8h>
		res[0] = SD_readSingleBlock(addr, buf, &token);
 888:	9e 01       	movw	r18, r28
 88a:	2f 5f       	subi	r18, 0xFF	; 255
 88c:	3d 4f       	sbci	r19, 0xFD	; 253
 88e:	ae 01       	movw	r20, r28
 890:	4f 5f       	subi	r20, 0xFF	; 255
 892:	5f 4f       	sbci	r21, 0xFF	; 255
 894:	60 e0       	ldi	r22, 0x00	; 0
 896:	70 e0       	ldi	r23, 0x00	; 0
 898:	cb 01       	movw	r24, r22
 89a:	0e 94 1d 02 	call	0x43a	; 0x43a <_Z18SD_readSingleBlockmPhS_>
 89e:	18 2f       	mov	r17, r24
		UART_pputs("\r\nResponse:\r\n");
 8a0:	83 eb       	ldi	r24, 0xB3	; 179
 8a2:	90 e0       	ldi	r25, 0x00	; 0
 8a4:	0e 94 41 01 	call	0x282	; 0x282 <_Z11UART_puts_pPKc>
		SD_printR1(res[0]);
 8a8:	81 2f       	mov	r24, r17
 8aa:	0e 94 8b 03 	call	0x716	; 0x716 <_Z10SD_printR1h>

		// if no error, print buffer
		if((res[0] == 0x00) && (token == SD_START_TOKEN))
 8ae:	11 11       	cpse	r17, r1
 8b0:	0c c0       	rjmp	.+24     	; 0x8ca <main+0x9e>
 8b2:	cf 5f       	subi	r28, 0xFF	; 255
 8b4:	dd 4f       	sbci	r29, 0xFD	; 253
 8b6:	88 81       	ld	r24, Y
 8b8:	c1 50       	subi	r28, 0x01	; 1
 8ba:	d2 40       	sbci	r29, 0x02	; 2
 8bc:	8e 3f       	cpi	r24, 0xFE	; 254
 8be:	29 f4       	brne	.+10     	; 0x8ca <main+0x9e>
		SD_printBuf(buf);
 8c0:	ce 01       	movw	r24, r28
 8c2:	01 96       	adiw	r24, 0x01	; 1
 8c4:	0e 94 ce 03 	call	0x79c	; 0x79c <_Z11SD_printBufPh>
 8c8:	4a c0       	rjmp	.+148    	; 0x95e <__stack+0x5f>
		// else if error token received, print
		else if(!(token & 0xF0))
 8ca:	cf 5f       	subi	r28, 0xFF	; 255
 8cc:	dd 4f       	sbci	r29, 0xFD	; 253
 8ce:	88 81       	ld	r24, Y
 8d0:	c1 50       	subi	r28, 0x01	; 1
 8d2:	d2 40       	sbci	r29, 0x02	; 2
 8d4:	80 7f       	andi	r24, 0xF0	; 240
 8d6:	09 f0       	breq	.+2      	; 0x8da <main+0xae>
 8d8:	42 c0       	rjmp	.+132    	; 0x95e <__stack+0x5f>
		{
			UART_pputs("Error token:\r\n");
 8da:	84 ea       	ldi	r24, 0xA4	; 164
 8dc:	90 e0       	ldi	r25, 0x00	; 0
 8de:	0e 94 41 01 	call	0x282	; 0x282 <_Z11UART_puts_pPKc>
			SD_printDataErrToken(token);
 8e2:	cf 5f       	subi	r28, 0xFF	; 255
 8e4:	dd 4f       	sbci	r29, 0xFD	; 253
 8e6:	88 81       	ld	r24, Y
 8e8:	c1 50       	subi	r28, 0x01	; 1
 8ea:	d2 40       	sbci	r29, 0x02	; 2
 8ec:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <_Z20SD_printDataErrTokenh>
 8f0:	36 c0       	rjmp	.+108    	; 0x95e <__stack+0x5f>

		// update address to 0x00000100
		addr = 0x00000100;

		// fill buffer with 0x55
		for(uint16_t i = 0; i < 512; i++) buf[i] = 0x55;
 8f2:	81 93       	st	Z+, r24
 8f4:	e2 17       	cp	r30, r18
 8f6:	f3 07       	cpc	r31, r19
 8f8:	e1 f7       	brne	.-8      	; 0x8f2 <main+0xc6>

		UART_pputs("Writing 0x55 to sector: 0x");
 8fa:	89 e8       	ldi	r24, 0x89	; 137
 8fc:	90 e0       	ldi	r25, 0x00	; 0
 8fe:	0e 94 41 01 	call	0x282	; 0x282 <_Z11UART_puts_pPKc>
		UART_puthex8((uint8_t)(addr >> 24));
 902:	80 e0       	ldi	r24, 0x00	; 0
 904:	0e 94 28 01 	call	0x250	; 0x250 <_Z12UART_puthex8h>
		UART_puthex8((uint8_t)(addr >> 16));
 908:	80 e0       	ldi	r24, 0x00	; 0
 90a:	0e 94 28 01 	call	0x250	; 0x250 <_Z12UART_puthex8h>
		UART_puthex8((uint8_t)(addr >> 8));
 90e:	81 e0       	ldi	r24, 0x01	; 1
 910:	0e 94 28 01 	call	0x250	; 0x250 <_Z12UART_puthex8h>
		UART_puthex8((uint8_t)addr);
 914:	80 e0       	ldi	r24, 0x00	; 0
 916:	0e 94 28 01 	call	0x250	; 0x250 <_Z12UART_puthex8h>

		// write data to sector
		res[0] = SD_writeSingleBlock(addr, buf, &token);
 91a:	9e 01       	movw	r18, r28
 91c:	2f 5f       	subi	r18, 0xFF	; 255
 91e:	3d 4f       	sbci	r19, 0xFD	; 253
 920:	ae 01       	movw	r20, r28
 922:	4f 5f       	subi	r20, 0xFF	; 255
 924:	5f 4f       	sbci	r21, 0xFF	; 255
 926:	60 e0       	ldi	r22, 0x00	; 0
 928:	71 e0       	ldi	r23, 0x01	; 1
 92a:	80 e0       	ldi	r24, 0x00	; 0
 92c:	90 e0       	ldi	r25, 0x00	; 0
 92e:	0e 94 76 02 	call	0x4ec	; 0x4ec <_Z19SD_writeSingleBlockmPhS_>
 932:	18 2f       	mov	r17, r24

		UART_pputs("\r\nResponse:\r\n");
 934:	8b e7       	ldi	r24, 0x7B	; 123
 936:	90 e0       	ldi	r25, 0x00	; 0
 938:	0e 94 41 01 	call	0x282	; 0x282 <_Z11UART_puts_pPKc>
		SD_printR1(res[0]);
 93c:	81 2f       	mov	r24, r17
 93e:	0e 94 8b 03 	call	0x716	; 0x716 <_Z10SD_printR1h>

		// if no errors writing
		if(res[0] == 0x00)
 942:	11 11       	cpse	r17, r1
 944:	0b c0       	rjmp	.+22     	; 0x95c <__stack+0x5d>
		{
			if(token == SD_DATA_ACCEPTED)
 946:	cf 5f       	subi	r28, 0xFF	; 255
 948:	dd 4f       	sbci	r29, 0xFD	; 253
 94a:	88 81       	ld	r24, Y
 94c:	c1 50       	subi	r28, 0x01	; 1
 94e:	d2 40       	sbci	r29, 0x02	; 2
 950:	85 30       	cpi	r24, 0x05	; 5
 952:	21 f4       	brne	.+8      	; 0x95c <__stack+0x5d>
			UART_pputs("Write successful\r\n");
 954:	88 e6       	ldi	r24, 0x68	; 104
 956:	90 e0       	ldi	r25, 0x00	; 0
 958:	0e 94 41 01 	call	0x282	; 0x282 <_Z11UART_puts_pPKc>
 95c:	ff cf       	rjmp	.-2      	; 0x95c <__stack+0x5d>
 95e:	fe 01       	movw	r30, r28
 960:	31 96       	adiw	r30, 0x01	; 1
 962:	9e 01       	movw	r18, r28
 964:	2f 5f       	subi	r18, 0xFF	; 255
 966:	3d 4f       	sbci	r19, 0xFD	; 253

		// update address to 0x00000100
		addr = 0x00000100;

		// fill buffer with 0x55
		for(uint16_t i = 0; i < 512; i++) buf[i] = 0x55;
 968:	85 e5       	ldi	r24, 0x55	; 85
 96a:	c3 cf       	rjmp	.-122    	; 0x8f2 <main+0xc6>

0000096c <_exit>:
 96c:	f8 94       	cli

0000096e <__stop_program>:
 96e:	ff cf       	rjmp	.-2      	; 0x96e <__stop_program>
