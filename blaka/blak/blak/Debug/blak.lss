
blak.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000ce  00800100  00000efc  00000f90  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000efc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000e6  008001ce  008001ce  0000105e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000105e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000010bc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000e8  00000000  00000000  00001100  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001a30  00000000  00000000  000011e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008cf  00000000  00000000  00002c18  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000009f2  00000000  00000000  000034e7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001b8  00000000  00000000  00003edc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000684  00000000  00000000  00004094  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000d54  00000000  00000000  00004718  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000098  00000000  00000000  0000546c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 3c 01 	jmp	0x278	; 0x278 <__vector_11>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 96 00 	jmp	0x12c	; 0x12c <__vector_18>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ec ef       	ldi	r30, 0xFC	; 252
  7c:	fe e0       	ldi	r31, 0x0E	; 14
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	ae 3c       	cpi	r26, 0xCE	; 206
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	22 e0       	ldi	r18, 0x02	; 2
  8c:	ae ec       	ldi	r26, 0xCE	; 206
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a4 3b       	cpi	r26, 0xB4	; 180
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 2c 02 	call	0x458	; 0x458 <main>
  9e:	0c 94 7c 07 	jmp	0xef8	; 0xef8 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <_Z10USART_Initj>:
	
	char fString[10];
	dtostrf(number,length,deciP,fString);
	USART_TxString(fString);
	
}
  a6:	9c 01       	movw	r18, r24
  a8:	40 e0       	ldi	r20, 0x00	; 0
  aa:	50 e0       	ldi	r21, 0x00	; 0
  ac:	60 e2       	ldi	r22, 0x20	; 32
  ae:	71 ea       	ldi	r23, 0xA1	; 161
  b0:	87 e0       	ldi	r24, 0x07	; 7
  b2:	90 e0       	ldi	r25, 0x00	; 0
  b4:	0e 94 a4 03 	call	0x748	; 0x748 <__udivmodsi4>
  b8:	21 50       	subi	r18, 0x01	; 1
  ba:	31 09       	sbc	r19, r1
  bc:	30 93 c5 00 	sts	0x00C5, r19	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
  c0:	20 93 c4 00 	sts	0x00C4, r18	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
  c4:	88 e9       	ldi	r24, 0x98	; 152
  c6:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
  ca:	86 e0       	ldi	r24, 0x06	; 6
  cc:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__DATA_REGION_ORIGIN__+0x62>
  d0:	78 94       	sei
  d2:	08 95       	ret

000000d4 <_Z14USART_Transmith>:
  d4:	e0 ec       	ldi	r30, 0xC0	; 192
  d6:	f0 e0       	ldi	r31, 0x00	; 0
  d8:	90 81       	ld	r25, Z
  da:	95 ff       	sbrs	r25, 5
  dc:	fd cf       	rjmp	.-6      	; 0xd8 <_Z14USART_Transmith+0x4>
  de:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
  e2:	08 95       	ret

000000e4 <_Z14USART_TxStringPc>:
  e4:	cf 93       	push	r28
  e6:	df 93       	push	r29
  e8:	ec 01       	movw	r28, r24
  ea:	88 81       	ld	r24, Y
  ec:	88 23       	and	r24, r24
  ee:	31 f0       	breq	.+12     	; 0xfc <_Z14USART_TxStringPc+0x18>
  f0:	21 96       	adiw	r28, 0x01	; 1
  f2:	0e 94 6a 00 	call	0xd4	; 0xd4 <_Z14USART_Transmith>
  f6:	89 91       	ld	r24, Y+
  f8:	81 11       	cpse	r24, r1
  fa:	fb cf       	rjmp	.-10     	; 0xf2 <_Z14USART_TxStringPc+0xe>
  fc:	df 91       	pop	r29
  fe:	cf 91       	pop	r28
 100:	08 95       	ret

00000102 <_Z16USART_TxStringlnPc>:
 102:	cf 93       	push	r28
 104:	df 93       	push	r29
 106:	ec 01       	movw	r28, r24
 108:	88 81       	ld	r24, Y
 10a:	88 23       	and	r24, r24
 10c:	31 f0       	breq	.+12     	; 0x11a <_Z16USART_TxStringlnPc+0x18>
 10e:	21 96       	adiw	r28, 0x01	; 1
 110:	0e 94 6a 00 	call	0xd4	; 0xd4 <_Z14USART_Transmith>
 114:	89 91       	ld	r24, Y+
 116:	81 11       	cpse	r24, r1
 118:	fb cf       	rjmp	.-10     	; 0x110 <_Z16USART_TxStringlnPc+0xe>
 11a:	8d e0       	ldi	r24, 0x0D	; 13
 11c:	0e 94 6a 00 	call	0xd4	; 0xd4 <_Z14USART_Transmith>
 120:	8a e0       	ldi	r24, 0x0A	; 10
 122:	0e 94 6a 00 	call	0xd4	; 0xd4 <_Z14USART_Transmith>
 126:	df 91       	pop	r29
 128:	cf 91       	pop	r28
 12a:	08 95       	ret

0000012c <__vector_18>:


ISR(USART_RX_vect){
 12c:	1f 92       	push	r1
 12e:	0f 92       	push	r0
 130:	0f b6       	in	r0, 0x3f	; 63
 132:	0f 92       	push	r0
 134:	11 24       	eor	r1, r1
 136:	2f 93       	push	r18
 138:	3f 93       	push	r19
 13a:	4f 93       	push	r20
 13c:	8f 93       	push	r24
 13e:	9f 93       	push	r25
 140:	af 93       	push	r26
 142:	bf 93       	push	r27
 144:	ef 93       	push	r30
 146:	ff 93       	push	r31
	//PORTB^=1<<0;
	char rchar=UDR0;
 148:	40 91 c6 00 	lds	r20, 0x00C6	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
 14c:	e0 e5       	ldi	r30, 0x50	; 80
 14e:	f2 e0       	ldi	r31, 0x02	; 2
 150:	df 01       	movw	r26, r30
	
	uint8_t i=0;
 152:	80 e0       	ldi	r24, 0x00	; 0
	
	while(rxvalue[i]){
 154:	9d 91       	ld	r25, X+
 156:	99 23       	and	r25, r25
 158:	a1 f0       	breq	.+40     	; 0x182 <__vector_18+0x56>
	i++;
 15a:	8f 5f       	subi	r24, 0xFF	; 255
	if (i==rxshiftNum)
 15c:	84 36       	cpi	r24, 0x64	; 100
 15e:	d1 f7       	brne	.-12     	; 0x154 <__vector_18+0x28>
 160:	06 c0       	rjmp	.+12     	; 0x16e <__vector_18+0x42>
	{break;
	}
	}
	if (i<rxshiftNum)
	{rxvalue[i]=rchar;
 162:	e8 2f       	mov	r30, r24
 164:	f0 e0       	ldi	r31, 0x00	; 0
 166:	e0 5b       	subi	r30, 0xB0	; 176
 168:	fd 4f       	sbci	r31, 0xFD	; 253
 16a:	40 83       	st	Z, r20
 16c:	0d c0       	rjmp	.+26     	; 0x188 <__vector_18+0x5c>
 16e:	23 eb       	ldi	r18, 0xB3	; 179
 170:	32 e0       	ldi	r19, 0x02	; 2
	} 
	else
	{
		for(uint8_t i=0;i<rxshiftNum-1;i++){
		rxvalue[i]=rxvalue[i+1];
 172:	81 81       	ldd	r24, Z+1	; 0x01
 174:	81 93       	st	Z+, r24
	if (i<rxshiftNum)
	{rxvalue[i]=rchar;
	} 
	else
	{
		for(uint8_t i=0;i<rxshiftNum-1;i++){
 176:	e2 17       	cp	r30, r18
 178:	f3 07       	cpc	r31, r19
 17a:	d9 f7       	brne	.-10     	; 0x172 <__vector_18+0x46>
		rxvalue[i]=rxvalue[i+1];
	}
	rxvalue[rxshiftNum-1]=rchar;
 17c:	40 93 b3 02 	sts	0x02B3, r20	; 0x8002b3 <rxvalue+0x63>
		
	}
	
		
}
 180:	03 c0       	rjmp	.+6      	; 0x188 <__vector_18+0x5c>
	i++;
	if (i==rxshiftNum)
	{break;
	}
	}
	if (i<rxshiftNum)
 182:	84 36       	cpi	r24, 0x64	; 100
 184:	a0 f7       	brcc	.-24     	; 0x16e <__vector_18+0x42>
 186:	ed cf       	rjmp	.-38     	; 0x162 <__vector_18+0x36>
	rxvalue[rxshiftNum-1]=rchar;
		
	}
	
		
}
 188:	ff 91       	pop	r31
 18a:	ef 91       	pop	r30
 18c:	bf 91       	pop	r27
 18e:	af 91       	pop	r26
 190:	9f 91       	pop	r25
 192:	8f 91       	pop	r24
 194:	4f 91       	pop	r20
 196:	3f 91       	pop	r19
 198:	2f 91       	pop	r18
 19a:	0f 90       	pop	r0
 19c:	0f be       	out	0x3f, r0	; 63
 19e:	0f 90       	pop	r0
 1a0:	1f 90       	pop	r1
 1a2:	18 95       	reti

000001a4 <_Z16USART_ReciveWaitPcib>:



bool USART_ReciveWait(char*wait=0,int16_t timeout=0,bool deleteWait=0){
 1a4:	df 92       	push	r13
 1a6:	ef 92       	push	r14
 1a8:	ff 92       	push	r15
 1aa:	0f 93       	push	r16
 1ac:	1f 93       	push	r17
 1ae:	cf 93       	push	r28
 1b0:	df 93       	push	r29
	bool waitbool=0;
	uint8_t temptimeOut=0;
	timeout=timeout/100;
	if (wait!=0)
 1b2:	00 97       	sbiw	r24, 0x00	; 0
 1b4:	c1 f1       	breq	.+112    	; 0x226 <_Z16USART_ReciveWaitPcib+0x82>
 1b6:	7c 01       	movw	r14, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1b8:	2f ef       	ldi	r18, 0xFF	; 255
 1ba:	80 e7       	ldi	r24, 0x70	; 112
 1bc:	92 e0       	ldi	r25, 0x02	; 2
 1be:	21 50       	subi	r18, 0x01	; 1
 1c0:	80 40       	sbci	r24, 0x00	; 0
 1c2:	90 40       	sbci	r25, 0x00	; 0
 1c4:	e1 f7       	brne	.-8      	; 0x1be <_Z16USART_ReciveWaitPcib+0x1a>
 1c6:	00 c0       	rjmp	.+0      	; 0x1c8 <_Z16USART_ReciveWaitPcib+0x24>
 1c8:	00 00       	nop


bool USART_ReciveWait(char*wait=0,int16_t timeout=0,bool deleteWait=0){
	bool waitbool=0;
	uint8_t temptimeOut=0;
	timeout=timeout/100;
 1ca:	cb 01       	movw	r24, r22
 1cc:	64 e6       	ldi	r22, 0x64	; 100
 1ce:	70 e0       	ldi	r23, 0x00	; 0
 1d0:	0e 94 90 03 	call	0x720	; 0x720 <__divmodhi4>
 1d4:	8b 01       	movw	r16, r22
 1d6:	c0 e0       	ldi	r28, 0x00	; 0
			//SoftUSART_tx_strln(".");
			//SoftUSART_tx_strln(rxvalue);
			
			_delay_ms(100);
			temptimeOut++;
			if ((temptimeOut>timeout)&(timeout!=0))
 1d8:	d1 e0       	ldi	r29, 0x01	; 1
 1da:	d1 2c       	mov	r13, r1
 1dc:	02 c0       	rjmp	.+4      	; 0x1e2 <_Z16USART_ReciveWaitPcib+0x3e>
	uint8_t temptimeOut=0;
	timeout=timeout/100;
	if (wait!=0)
	{  _delay_ms(100);
		char*tempwait;
		while(tempwait==0){
 1de:	45 2b       	or	r20, r21
 1e0:	21 f5       	brne	.+72     	; 0x22a <_Z16USART_ReciveWaitPcib+0x86>
			tempwait =strstr(rxvalue,wait);
 1e2:	b7 01       	movw	r22, r14
 1e4:	80 e5       	ldi	r24, 0x50	; 80
 1e6:	92 e0       	ldi	r25, 0x02	; 2
 1e8:	0e 94 48 04 	call	0x890	; 0x890 <strstr>
 1ec:	ac 01       	movw	r20, r24
 1ee:	2f ef       	ldi	r18, 0xFF	; 255
 1f0:	80 e7       	ldi	r24, 0x70	; 112
 1f2:	92 e0       	ldi	r25, 0x02	; 2
 1f4:	21 50       	subi	r18, 0x01	; 1
 1f6:	80 40       	sbci	r24, 0x00	; 0
 1f8:	90 40       	sbci	r25, 0x00	; 0
 1fa:	e1 f7       	brne	.-8      	; 0x1f4 <_Z16USART_ReciveWaitPcib+0x50>
 1fc:	00 c0       	rjmp	.+0      	; 0x1fe <_Z16USART_ReciveWaitPcib+0x5a>
 1fe:	00 00       	nop
			//SoftUSART_tx_strln(".");
			//SoftUSART_tx_strln(rxvalue);
			
			_delay_ms(100);
			temptimeOut++;
 200:	cf 5f       	subi	r28, 0xFF	; 255
			if ((temptimeOut>timeout)&(timeout!=0))
 202:	2c 2f       	mov	r18, r28
 204:	30 e0       	ldi	r19, 0x00	; 0
 206:	9d 2f       	mov	r25, r29
 208:	02 17       	cp	r16, r18
 20a:	13 07       	cpc	r17, r19
 20c:	0c f0       	brlt	.+2      	; 0x210 <_Z16USART_ReciveWaitPcib+0x6c>
 20e:	9d 2d       	mov	r25, r13
 210:	99 23       	and	r25, r25
 212:	29 f3       	breq	.-54     	; 0x1de <_Z16USART_ReciveWaitPcib+0x3a>
 214:	8d 2f       	mov	r24, r29
 216:	01 15       	cp	r16, r1
 218:	11 05       	cpc	r17, r1
 21a:	09 f4       	brne	.+2      	; 0x21e <_Z16USART_ReciveWaitPcib+0x7a>
 21c:	8d 2d       	mov	r24, r13
 21e:	88 23       	and	r24, r24
 220:	f1 f2       	breq	.-68     	; 0x1de <_Z16USART_ReciveWaitPcib+0x3a>
			{waitbool=0;
				return waitbool;
 222:	80 e0       	ldi	r24, 0x00	; 0
 224:	03 c0       	rjmp	.+6      	; 0x22c <_Z16USART_ReciveWaitPcib+0x88>
}



bool USART_ReciveWait(char*wait=0,int16_t timeout=0,bool deleteWait=0){
	bool waitbool=0;
 226:	80 e0       	ldi	r24, 0x00	; 0
 228:	01 c0       	rjmp	.+2      	; 0x22c <_Z16USART_ReciveWaitPcib+0x88>
				return waitbool;
				
			}
			
		}
		waitbool=1;
 22a:	81 e0       	ldi	r24, 0x01	; 1
		
	}
	
	return waitbool;
}
 22c:	df 91       	pop	r29
 22e:	cf 91       	pop	r28
 230:	1f 91       	pop	r17
 232:	0f 91       	pop	r16
 234:	ff 90       	pop	r15
 236:	ef 90       	pop	r14
 238:	df 90       	pop	r13
 23a:	08 95       	ret

0000023c <_Z13USART_ClearRXv>:


void USART_ClearRX(){
 23c:	e0 e5       	ldi	r30, 0x50	; 80
 23e:	f2 e0       	ldi	r31, 0x02	; 2
 240:	84 eb       	ldi	r24, 0xB4	; 180
 242:	92 e0       	ldi	r25, 0x02	; 2
	for(uint8_t i=0;i<rxshiftNum;i++){
		rxvalue[i]=NULL;
 244:	11 92       	st	Z+, r1
	return waitbool;
}


void USART_ClearRX(){
	for(uint8_t i=0;i<rxshiftNum;i++){
 246:	e8 17       	cp	r30, r24
 248:	f9 07       	cpc	r31, r25
 24a:	e1 f7       	brne	.-8      	; 0x244 <_Z13USART_ClearRXv+0x8>
		rxvalue[i]=NULL;
	}
	
 24c:	08 95       	ret

0000024e <_Z10init_timerv>:
jmp_buf mainstart;
jmp_buf gsmstart;


void init_timer(){
	TCCR1B|=(1<<WGM12);
 24e:	e1 e8       	ldi	r30, 0x81	; 129
 250:	f0 e0       	ldi	r31, 0x00	; 0
 252:	80 81       	ld	r24, Z
 254:	88 60       	ori	r24, 0x08	; 8
 256:	80 83       	st	Z, r24
	TCCR1B|=(1<<CS12)|(1<<CS10); 
 258:	80 81       	ld	r24, Z
 25a:	85 60       	ori	r24, 0x05	; 5
 25c:	80 83       	st	Z, r24
	//prescaler is 1024, so (1/8000000)/*1024=0.128*1000
	OCR1A=100/0.128;
 25e:	8d e0       	ldi	r24, 0x0D	; 13
 260:	93 e0       	ldi	r25, 0x03	; 3
 262:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
 266:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__DATA_REGION_ORIGIN__+0x28>
	TIMSK1|=(1<<OCIE1A);
 26a:	ef e6       	ldi	r30, 0x6F	; 111
 26c:	f0 e0       	ldi	r31, 0x00	; 0
 26e:	80 81       	ld	r24, Z
 270:	82 60       	ori	r24, 0x02	; 2
 272:	80 83       	st	Z, r24
	DDRC|=(1<<0);
 274:	38 9a       	sbi	0x07, 0	; 7
 276:	08 95       	ret

00000278 <__vector_11>:
}

ISR(TIMER1_COMPA_vect){
 278:	1f 92       	push	r1
 27a:	0f 92       	push	r0
 27c:	0f b6       	in	r0, 0x3f	; 63
 27e:	0f 92       	push	r0
 280:	11 24       	eor	r1, r1
 282:	8f 93       	push	r24
 284:	9f 93       	push	r25
PORTC&=~(1<<0);
 286:	40 98       	cbi	0x08, 0	; 8
tempblink++;
 288:	80 91 fc 01 	lds	r24, 0x01FC	; 0x8001fc <tempblink>
 28c:	8f 5f       	subi	r24, 0xFF	; 255
 28e:	80 93 fc 01 	sts	0x01FC, r24	; 0x8001fc <tempblink>
if (tempblink>blink)
 292:	90 91 fd 01 	lds	r25, 0x01FD	; 0x8001fd <blink>
 296:	98 17       	cp	r25, r24
 298:	18 f4       	brcc	.+6      	; 0x2a0 <__vector_11+0x28>
{tempblink=0;
 29a:	10 92 fc 01 	sts	0x01FC, r1	; 0x8001fc <tempblink>
	PORTC|=(1<<0);
 29e:	40 9a       	sbi	0x08, 0	; 8
}


}
 2a0:	9f 91       	pop	r25
 2a2:	8f 91       	pop	r24
 2a4:	0f 90       	pop	r0
 2a6:	0f be       	out	0x3f, r0	; 63
 2a8:	0f 90       	pop	r0
 2aa:	1f 90       	pop	r1
 2ac:	18 95       	reti

000002ae <_Z8GSM_initv>:

void GSM_init(){
 2ae:	cf 93       	push	r28
 2b0:	df 93       	push	r29
 2b2:	cd b7       	in	r28, 0x3d	; 61
 2b4:	de b7       	in	r29, 0x3e	; 62
	USART_TxStringln("AT");
 2b6:	81 e0       	ldi	r24, 0x01	; 1
 2b8:	91 e0       	ldi	r25, 0x01	; 1
 2ba:	0e 94 81 00 	call	0x102	; 0x102 <_Z16USART_TxStringlnPc>
 2be:	2f ef       	ldi	r18, 0xFF	; 255
 2c0:	81 ee       	ldi	r24, 0xE1	; 225
 2c2:	94 e0       	ldi	r25, 0x04	; 4
 2c4:	21 50       	subi	r18, 0x01	; 1
 2c6:	80 40       	sbci	r24, 0x00	; 0
 2c8:	90 40       	sbci	r25, 0x00	; 0
 2ca:	e1 f7       	brne	.-8      	; 0x2c4 <_Z8GSM_initv+0x16>
 2cc:	00 c0       	rjmp	.+0      	; 0x2ce <_Z8GSM_initv+0x20>
 2ce:	00 00       	nop
	_delay_ms(200);
	setjmp (gsmstart);
 2d0:	8e ec       	ldi	r24, 0xCE	; 206
 2d2:	91 e0       	ldi	r25, 0x01	; 1
 2d4:	0e 94 f8 03 	call	0x7f0	; 0x7f0 <setjmp>
	uint8_t gsmstate=0;
	USART_ClearRX();
 2d8:	0e 94 1e 01 	call	0x23c	; 0x23c <_Z13USART_ClearRXv>
	USART_TxStringln("AT+CREG?");
 2dc:	84 e0       	ldi	r24, 0x04	; 4
 2de:	91 e0       	ldi	r25, 0x01	; 1
 2e0:	0e 94 81 00 	call	0x102	; 0x102 <_Z16USART_TxStringlnPc>
	USART_ReciveWait("+CREG:",2000);
 2e4:	40 e0       	ldi	r20, 0x00	; 0
 2e6:	60 ed       	ldi	r22, 0xD0	; 208
 2e8:	77 e0       	ldi	r23, 0x07	; 7
 2ea:	8d e0       	ldi	r24, 0x0D	; 13
 2ec:	91 e0       	ldi	r25, 0x01	; 1
 2ee:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <_Z16USART_ReciveWaitPcib>
 2f2:	2f ef       	ldi	r18, 0xFF	; 255
 2f4:	80 e7       	ldi	r24, 0x70	; 112
 2f6:	92 e0       	ldi	r25, 0x02	; 2
 2f8:	21 50       	subi	r18, 0x01	; 1
 2fa:	80 40       	sbci	r24, 0x00	; 0
 2fc:	90 40       	sbci	r25, 0x00	; 0
 2fe:	e1 f7       	brne	.-8      	; 0x2f8 <_Z8GSM_initv+0x4a>
 300:	00 c0       	rjmp	.+0      	; 0x302 <_Z8GSM_initv+0x54>
 302:	00 00       	nop
	_delay_ms(100);
	strncpy(temptext,strstr(rxvalue,"+CREG:")+9,1);
 304:	6d e0       	ldi	r22, 0x0D	; 13
 306:	71 e0       	ldi	r23, 0x01	; 1
 308:	80 e5       	ldi	r24, 0x50	; 80
 30a:	92 e0       	ldi	r25, 0x02	; 2
 30c:	0e 94 48 04 	call	0x890	; 0x890 <strstr>
 310:	bc 01       	movw	r22, r24
 312:	67 5f       	subi	r22, 0xF7	; 247
 314:	7f 4f       	sbci	r23, 0xFF	; 255
 316:	41 e0       	ldi	r20, 0x01	; 1
 318:	50 e0       	ldi	r21, 0x00	; 0
 31a:	8e e1       	ldi	r24, 0x1E	; 30
 31c:	92 e0       	ldi	r25, 0x02	; 2
 31e:	0e 94 39 04 	call	0x872	; 0x872 <strncpy>
	gsmstate=atoi(temptext);
 322:	8e e1       	ldi	r24, 0x1E	; 30
 324:	92 e0       	ldi	r25, 0x02	; 2
 326:	0e 94 da 03 	call	0x7b4	; 0x7b4 <atoi>
 32a:	28 2f       	mov	r18, r24
	tempnum=gsmstate;
 32c:	99 27       	eor	r25, r25
 32e:	90 93 1d 02 	sts	0x021D, r25	; 0x80021d <tempnum+0x1>
 332:	80 93 1c 02 	sts	0x021C, r24	; 0x80021c <tempnum>
	
	
	if (gsmstate==5)
 336:	25 30       	cpi	r18, 0x05	; 5
 338:	99 f1       	breq	.+102    	; 0x3a0 <_Z8GSM_initv+0xf2>
	{blink=30;
	} 
	else if(gsmstate==2)
 33a:	22 30       	cpi	r18, 0x02	; 2
 33c:	91 f4       	brne	.+36     	; 0x362 <_Z8GSM_initv+0xb4>
	{blink=5;
 33e:	85 e0       	ldi	r24, 0x05	; 5
 340:	80 93 fd 01 	sts	0x01FD, r24	; 0x8001fd <blink>
 344:	2f ef       	ldi	r18, 0xFF	; 255
 346:	89 e6       	ldi	r24, 0x69	; 105
 348:	98 e1       	ldi	r25, 0x18	; 24
 34a:	21 50       	subi	r18, 0x01	; 1
 34c:	80 40       	sbci	r24, 0x00	; 0
 34e:	90 40       	sbci	r25, 0x00	; 0
 350:	e1 f7       	brne	.-8      	; 0x34a <_Z8GSM_initv+0x9c>
 352:	00 c0       	rjmp	.+0      	; 0x354 <_Z8GSM_initv+0xa6>
 354:	00 00       	nop
		_delay_ms(1000);
		longjmp(gsmstart,1);
 356:	61 e0       	ldi	r22, 0x01	; 1
 358:	70 e0       	ldi	r23, 0x00	; 0
 35a:	8e ec       	ldi	r24, 0xCE	; 206
 35c:	91 e0       	ldi	r25, 0x01	; 1
 35e:	0e 94 18 04 	call	0x830	; 0x830 <longjmp>
		
	}
	else{
		blink=1;
 362:	81 e0       	ldi	r24, 0x01	; 1
 364:	80 93 fd 01 	sts	0x01FD, r24	; 0x8001fd <blink>
 368:	2f ef       	ldi	r18, 0xFF	; 255
 36a:	83 ed       	ldi	r24, 0xD3	; 211
 36c:	90 e3       	ldi	r25, 0x30	; 48
 36e:	21 50       	subi	r18, 0x01	; 1
 370:	80 40       	sbci	r24, 0x00	; 0
 372:	90 40       	sbci	r25, 0x00	; 0
 374:	e1 f7       	brne	.-8      	; 0x36e <_Z8GSM_initv+0xc0>
 376:	00 c0       	rjmp	.+0      	; 0x378 <_Z8GSM_initv+0xca>
 378:	00 00       	nop
		_delay_ms(2000);
		USART_TxStringln("AT");
 37a:	81 e0       	ldi	r24, 0x01	; 1
 37c:	91 e0       	ldi	r25, 0x01	; 1
 37e:	0e 94 81 00 	call	0x102	; 0x102 <_Z16USART_TxStringlnPc>
 382:	2f ef       	ldi	r18, 0xFF	; 255
 384:	81 ee       	ldi	r24, 0xE1	; 225
 386:	94 e0       	ldi	r25, 0x04	; 4
 388:	21 50       	subi	r18, 0x01	; 1
 38a:	80 40       	sbci	r24, 0x00	; 0
 38c:	90 40       	sbci	r25, 0x00	; 0
 38e:	e1 f7       	brne	.-8      	; 0x388 <_Z8GSM_initv+0xda>
 390:	00 c0       	rjmp	.+0      	; 0x392 <_Z8GSM_initv+0xe4>
 392:	00 00       	nop
		_delay_ms(200);
		longjmp(mainstart,1);
 394:	61 e0       	ldi	r22, 0x01	; 1
 396:	70 e0       	ldi	r23, 0x00	; 0
 398:	85 ee       	ldi	r24, 0xE5	; 229
 39a:	91 e0       	ldi	r25, 0x01	; 1
 39c:	0e 94 18 04 	call	0x830	; 0x830 <longjmp>
	gsmstate=atoi(temptext);
	tempnum=gsmstate;
	
	
	if (gsmstate==5)
	{blink=30;
 3a0:	8e e1       	ldi	r24, 0x1E	; 30
 3a2:	80 93 fd 01 	sts	0x01FD, r24	; 0x8001fd <blink>
 3a6:	2f ef       	ldi	r18, 0xFF	; 255
 3a8:	84 e3       	ldi	r24, 0x34	; 52
 3aa:	9c e0       	ldi	r25, 0x0C	; 12
 3ac:	21 50       	subi	r18, 0x01	; 1
 3ae:	80 40       	sbci	r24, 0x00	; 0
 3b0:	90 40       	sbci	r25, 0x00	; 0
 3b2:	e1 f7       	brne	.-8      	; 0x3ac <_Z8GSM_initv+0xfe>
 3b4:	00 c0       	rjmp	.+0      	; 0x3b6 <_Z8GSM_initv+0x108>
 3b6:	00 00       	nop
		longjmp(mainstart,1);
		
	}
	
	_delay_ms(500);
	init_timer();
 3b8:	0e 94 27 01 	call	0x24e	; 0x24e <_Z10init_timerv>
}
 3bc:	df 91       	pop	r29
 3be:	cf 91       	pop	r28
 3c0:	08 95       	ret

000003c2 <_Z7smsInitv>:
 3c2:	2f ef       	ldi	r18, 0xFF	; 255
 3c4:	81 ee       	ldi	r24, 0xE1	; 225
 3c6:	94 e0       	ldi	r25, 0x04	; 4
 3c8:	21 50       	subi	r18, 0x01	; 1
 3ca:	80 40       	sbci	r24, 0x00	; 0
 3cc:	90 40       	sbci	r25, 0x00	; 0
 3ce:	e1 f7       	brne	.-8      	; 0x3c8 <_Z7smsInitv+0x6>
 3d0:	00 c0       	rjmp	.+0      	; 0x3d2 <_Z7smsInitv+0x10>
 3d2:	00 00       	nop

void smsInit (){
_delay_ms(200);
USART_TxStringln("AT+CMGF=1");
 3d4:	84 e1       	ldi	r24, 0x14	; 20
 3d6:	91 e0       	ldi	r25, 0x01	; 1
 3d8:	0e 94 81 00 	call	0x102	; 0x102 <_Z16USART_TxStringlnPc>
if (USART_ReciveWait("OK",1000))
 3dc:	40 e0       	ldi	r20, 0x00	; 0
 3de:	68 ee       	ldi	r22, 0xE8	; 232
 3e0:	73 e0       	ldi	r23, 0x03	; 3
 3e2:	8e e1       	ldi	r24, 0x1E	; 30
 3e4:	91 e0       	ldi	r25, 0x01	; 1
 3e6:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <_Z16USART_ReciveWaitPcib>
 3ea:	88 23       	and	r24, r24
 3ec:	c9 f0       	breq	.+50     	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
{USART_ClearRX();
 3ee:	0e 94 1e 01 	call	0x23c	; 0x23c <_Z13USART_ClearRXv>
 3f2:	2f ef       	ldi	r18, 0xFF	; 255
 3f4:	81 ee       	ldi	r24, 0xE1	; 225
 3f6:	94 e0       	ldi	r25, 0x04	; 4
 3f8:	21 50       	subi	r18, 0x01	; 1
 3fa:	80 40       	sbci	r24, 0x00	; 0
 3fc:	90 40       	sbci	r25, 0x00	; 0
 3fe:	e1 f7       	brne	.-8      	; 0x3f8 <_Z7smsInitv+0x36>
 400:	00 c0       	rjmp	.+0      	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 402:	00 00       	nop
{longjmp(gsmstart,1);
}


_delay_ms(200);
USART_TxStringln("AT+CNMI=1,2,0,0,0");
 404:	81 e2       	ldi	r24, 0x21	; 33
 406:	91 e0       	ldi	r25, 0x01	; 1
 408:	0e 94 81 00 	call	0x102	; 0x102 <_Z16USART_TxStringlnPc>
if (USART_ReciveWait("OK",1000))
 40c:	40 e0       	ldi	r20, 0x00	; 0
 40e:	68 ee       	ldi	r22, 0xE8	; 232
 410:	73 e0       	ldi	r23, 0x03	; 3
 412:	8e e1       	ldi	r24, 0x1E	; 30
 414:	91 e0       	ldi	r25, 0x01	; 1
 416:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <_Z16USART_ReciveWaitPcib>
 41a:	81 11       	cpse	r24, r1
 41c:	07 c0       	rjmp	.+14     	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 41e:	16 c0       	rjmp	.+44     	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
USART_TxStringln("AT+CMGF=1");
if (USART_ReciveWait("OK",1000))
{USART_ClearRX();
} 
else
{longjmp(gsmstart,1);
 420:	61 e0       	ldi	r22, 0x01	; 1
 422:	70 e0       	ldi	r23, 0x00	; 0
 424:	8e ec       	ldi	r24, 0xCE	; 206
 426:	91 e0       	ldi	r25, 0x01	; 1
 428:	0e 94 18 04 	call	0x830	; 0x830 <longjmp>


_delay_ms(200);
USART_TxStringln("AT+CNMI=1,2,0,0,0");
if (USART_ReciveWait("OK",1000))
{USART_ClearRX();
 42c:	0e 94 1e 01 	call	0x23c	; 0x23c <_Z13USART_ClearRXv>
 430:	2f ef       	ldi	r18, 0xFF	; 255
 432:	81 ee       	ldi	r24, 0xE1	; 225
 434:	94 e0       	ldi	r25, 0x04	; 4
 436:	21 50       	subi	r18, 0x01	; 1
 438:	80 40       	sbci	r24, 0x00	; 0
 43a:	90 40       	sbci	r25, 0x00	; 0
 43c:	e1 f7       	brne	.-8      	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 43e:	00 c0       	rjmp	.+0      	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
 440:	00 00       	nop
}

_delay_ms(200);


USART_ClearRX();
 442:	0e 94 1e 01 	call	0x23c	; 0x23c <_Z13USART_ClearRXv>
	init_timer();
 446:	0e 94 27 01 	call	0x24e	; 0x24e <_Z10init_timerv>
}
 44a:	08 95       	ret
USART_TxStringln("AT+CNMI=1,2,0,0,0");
if (USART_ReciveWait("OK",1000))
{USART_ClearRX();
}
else
{longjmp(gsmstart,1);
 44c:	61 e0       	ldi	r22, 0x01	; 1
 44e:	70 e0       	ldi	r23, 0x00	; 0
 450:	8e ec       	ldi	r24, 0xCE	; 206
 452:	91 e0       	ldi	r25, 0x01	; 1
 454:	0e 94 18 04 	call	0x830	; 0x830 <longjmp>

00000458 <main>:
USART_ClearRX();
	init_timer();
}

int main(void)
{	init_timer();
 458:	cf 93       	push	r28
 45a:	df 93       	push	r29
 45c:	cd b7       	in	r28, 0x3d	; 61
 45e:	de b7       	in	r29, 0x3e	; 62
 460:	0e 94 27 01 	call	0x24e	; 0x24e <_Z10init_timerv>
	sei();
 464:	78 94       	sei
 466:	2f ef       	ldi	r18, 0xFF	; 255
 468:	8d e3       	ldi	r24, 0x3D	; 61
 46a:	99 e4       	ldi	r25, 0x49	; 73
 46c:	21 50       	subi	r18, 0x01	; 1
 46e:	80 40       	sbci	r24, 0x00	; 0
 470:	90 40       	sbci	r25, 0x00	; 0
 472:	e1 f7       	brne	.-8      	; 0x46c <main+0x14>
 474:	00 c0       	rjmp	.+0      	; 0x476 <main+0x1e>
 476:	00 00       	nop
	_delay_ms(3000);
	setjmp (mainstart);
 478:	85 ee       	ldi	r24, 0xE5	; 229
 47a:	91 e0       	ldi	r25, 0x01	; 1
 47c:	0e 94 f8 03 	call	0x7f0	; 0x7f0 <setjmp>
 480:	2f ef       	ldi	r18, 0xFF	; 255
 482:	89 e6       	ldi	r24, 0x69	; 105
 484:	98 e1       	ldi	r25, 0x18	; 24
 486:	21 50       	subi	r18, 0x01	; 1
 488:	80 40       	sbci	r24, 0x00	; 0
 48a:	90 40       	sbci	r25, 0x00	; 0
 48c:	e1 f7       	brne	.-8      	; 0x486 <main+0x2e>
 48e:	00 c0       	rjmp	.+0      	; 0x490 <main+0x38>
 490:	00 00       	nop
	_delay_ms(1000);
	USART_Init(9600);
 492:	80 e8       	ldi	r24, 0x80	; 128
 494:	95 e2       	ldi	r25, 0x25	; 37
 496:	0e 94 53 00 	call	0xa6	; 0xa6 <_Z10USART_Initj>
	USART_ClearRX();
 49a:	0e 94 1e 01 	call	0x23c	; 0x23c <_Z13USART_ClearRXv>
	USART_TxStringln("AT");
 49e:	81 e0       	ldi	r24, 0x01	; 1
 4a0:	91 e0       	ldi	r25, 0x01	; 1
 4a2:	0e 94 81 00 	call	0x102	; 0x102 <_Z16USART_TxStringlnPc>
 4a6:	2f ef       	ldi	r18, 0xFF	; 255
 4a8:	81 ee       	ldi	r24, 0xE1	; 225
 4aa:	94 e0       	ldi	r25, 0x04	; 4
 4ac:	21 50       	subi	r18, 0x01	; 1
 4ae:	80 40       	sbci	r24, 0x00	; 0
 4b0:	90 40       	sbci	r25, 0x00	; 0
 4b2:	e1 f7       	brne	.-8      	; 0x4ac <main+0x54>
 4b4:	00 c0       	rjmp	.+0      	; 0x4b6 <main+0x5e>
 4b6:	00 00       	nop
	_delay_ms(200);
	USART_ClearRX();
 4b8:	0e 94 1e 01 	call	0x23c	; 0x23c <_Z13USART_ClearRXv>
	GSM_init();
 4bc:	0e 94 57 01 	call	0x2ae	; 0x2ae <_Z8GSM_initv>
	smsInit();
 4c0:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <_Z7smsInitv>
	DDRB&=~(1<<0);
 4c4:	20 98       	cbi	0x04, 0	; 4
			eeprom_write_block((char*)temptext,(uint8_t*)0,10);
			USART_ClearRX();
			
			
			eeprom_read_block((char*)numbr,(uint8_t*)0,10);
			sprintf(temptext,"AT+CMGS=\"%s\"",numbr);
 4c6:	06 e3       	ldi	r16, 0x36	; 54
 4c8:	11 e0       	ldi	r17, 0x01	; 1
	DDRB&=~(1<<0);
	
    while (1) 
    {	
		if (USART_ReciveWait("TA",500))
		{	blink=1;
 4ca:	ff 24       	eor	r15, r15
 4cc:	f3 94       	inc	r15
			_delay_ms(200);
			USART_Transmit(26);
			_delay_ms(5000);
			USART_ClearRX();
			init_timer();
			blink=30;
 4ce:	0f 2e       	mov	r0, r31
 4d0:	fe e1       	ldi	r31, 0x1E	; 30
 4d2:	ef 2e       	mov	r14, r31
 4d4:	f0 2d       	mov	r31, r0
	smsInit();
	DDRB&=~(1<<0);
	
    while (1) 
    {	
		if (USART_ReciveWait("TA",500))
 4d6:	40 e0       	ldi	r20, 0x00	; 0
 4d8:	64 ef       	ldi	r22, 0xF4	; 244
 4da:	71 e0       	ldi	r23, 0x01	; 1
 4dc:	83 e3       	ldi	r24, 0x33	; 51
 4de:	91 e0       	ldi	r25, 0x01	; 1
 4e0:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <_Z16USART_ReciveWaitPcib>
 4e4:	88 23       	and	r24, r24
 4e6:	09 f4       	brne	.+2      	; 0x4ea <main+0x92>
 4e8:	6a c0       	rjmp	.+212    	; 0x5be <main+0x166>
		{	blink=1;
 4ea:	f0 92 fd 01 	sts	0x01FD, r15	; 0x8001fd <blink>
 4ee:	2f ef       	ldi	r18, 0xFF	; 255
 4f0:	84 e3       	ldi	r24, 0x34	; 52
 4f2:	9c e0       	ldi	r25, 0x0C	; 12
 4f4:	21 50       	subi	r18, 0x01	; 1
 4f6:	80 40       	sbci	r24, 0x00	; 0
 4f8:	90 40       	sbci	r25, 0x00	; 0
 4fa:	e1 f7       	brne	.-8      	; 0x4f4 <main+0x9c>
 4fc:	00 c0       	rjmp	.+0      	; 0x4fe <main+0xa6>
 4fe:	00 00       	nop
			_delay_ms(500);
			strncpy(temptext,strstr(rxvalue,"TA")+3,10);
 500:	63 e3       	ldi	r22, 0x33	; 51
 502:	71 e0       	ldi	r23, 0x01	; 1
 504:	80 e5       	ldi	r24, 0x50	; 80
 506:	92 e0       	ldi	r25, 0x02	; 2
 508:	0e 94 48 04 	call	0x890	; 0x890 <strstr>
 50c:	bc 01       	movw	r22, r24
 50e:	6d 5f       	subi	r22, 0xFD	; 253
 510:	7f 4f       	sbci	r23, 0xFF	; 255
 512:	4a e0       	ldi	r20, 0x0A	; 10
 514:	50 e0       	ldi	r21, 0x00	; 0
 516:	8e e1       	ldi	r24, 0x1E	; 30
 518:	92 e0       	ldi	r25, 0x02	; 2
 51a:	0e 94 39 04 	call	0x872	; 0x872 <strncpy>
			eeprom_write_block((char*)temptext,(uint8_t*)0,10);
 51e:	4a e0       	ldi	r20, 0x0A	; 10
 520:	50 e0       	ldi	r21, 0x00	; 0
 522:	60 e0       	ldi	r22, 0x00	; 0
 524:	70 e0       	ldi	r23, 0x00	; 0
 526:	8e e1       	ldi	r24, 0x1E	; 30
 528:	92 e0       	ldi	r25, 0x02	; 2
 52a:	0e 94 2d 07 	call	0xe5a	; 0xe5a <eeprom_write_block>
			USART_ClearRX();
 52e:	0e 94 1e 01 	call	0x23c	; 0x23c <_Z13USART_ClearRXv>
			
			
			eeprom_read_block((char*)numbr,(uint8_t*)0,10);
 532:	4a e0       	ldi	r20, 0x0A	; 10
 534:	50 e0       	ldi	r21, 0x00	; 0
 536:	60 e0       	ldi	r22, 0x00	; 0
 538:	70 e0       	ldi	r23, 0x00	; 0
 53a:	8e ef       	ldi	r24, 0xFE	; 254
 53c:	91 e0       	ldi	r25, 0x01	; 1
 53e:	0e 94 1d 07 	call	0xe3a	; 0xe3a <eeprom_read_block>
			sprintf(temptext,"AT+CMGS=\"%s\"",numbr);
 542:	8e ef       	ldi	r24, 0xFE	; 254
 544:	91 e0       	ldi	r25, 0x01	; 1
 546:	9f 93       	push	r25
 548:	8f 93       	push	r24
 54a:	1f 93       	push	r17
 54c:	0f 93       	push	r16
 54e:	8e e1       	ldi	r24, 0x1E	; 30
 550:	92 e0       	ldi	r25, 0x02	; 2
 552:	9f 93       	push	r25
 554:	8f 93       	push	r24
 556:	0e 94 6a 04 	call	0x8d4	; 0x8d4 <sprintf>
 55a:	0f 90       	pop	r0
 55c:	0f 90       	pop	r0
 55e:	0f 90       	pop	r0
 560:	0f 90       	pop	r0
 562:	0f 90       	pop	r0
 564:	0f 90       	pop	r0
			USART_TxStringln(temptext);
 566:	8e e1       	ldi	r24, 0x1E	; 30
 568:	92 e0       	ldi	r25, 0x02	; 2
 56a:	0e 94 81 00 	call	0x102	; 0x102 <_Z16USART_TxStringlnPc>
 56e:	2f ef       	ldi	r18, 0xFF	; 255
 570:	81 ee       	ldi	r24, 0xE1	; 225
 572:	94 e0       	ldi	r25, 0x04	; 4
 574:	21 50       	subi	r18, 0x01	; 1
 576:	80 40       	sbci	r24, 0x00	; 0
 578:	90 40       	sbci	r25, 0x00	; 0
 57a:	e1 f7       	brne	.-8      	; 0x574 <main+0x11c>
 57c:	00 c0       	rjmp	.+0      	; 0x57e <main+0x126>
 57e:	00 00       	nop
			_delay_ms(200);
			USART_TxString("Your Number is registered");
 580:	83 e4       	ldi	r24, 0x43	; 67
 582:	91 e0       	ldi	r25, 0x01	; 1
 584:	0e 94 72 00 	call	0xe4	; 0xe4 <_Z14USART_TxStringPc>
 588:	2f ef       	ldi	r18, 0xFF	; 255
 58a:	81 ee       	ldi	r24, 0xE1	; 225
 58c:	94 e0       	ldi	r25, 0x04	; 4
 58e:	21 50       	subi	r18, 0x01	; 1
 590:	80 40       	sbci	r24, 0x00	; 0
 592:	90 40       	sbci	r25, 0x00	; 0
 594:	e1 f7       	brne	.-8      	; 0x58e <main+0x136>
 596:	00 c0       	rjmp	.+0      	; 0x598 <main+0x140>
 598:	00 00       	nop
			_delay_ms(200);
			USART_Transmit(26);
 59a:	8a e1       	ldi	r24, 0x1A	; 26
 59c:	0e 94 6a 00 	call	0xd4	; 0xd4 <_Z14USART_Transmith>
 5a0:	2f ef       	ldi	r18, 0xFF	; 255
 5a2:	81 e1       	ldi	r24, 0x11	; 17
 5a4:	9a e7       	ldi	r25, 0x7A	; 122
 5a6:	21 50       	subi	r18, 0x01	; 1
 5a8:	80 40       	sbci	r24, 0x00	; 0
 5aa:	90 40       	sbci	r25, 0x00	; 0
 5ac:	e1 f7       	brne	.-8      	; 0x5a6 <main+0x14e>
 5ae:	00 c0       	rjmp	.+0      	; 0x5b0 <main+0x158>
 5b0:	00 00       	nop
			_delay_ms(5000);
			USART_ClearRX();
 5b2:	0e 94 1e 01 	call	0x23c	; 0x23c <_Z13USART_ClearRXv>
			init_timer();
 5b6:	0e 94 27 01 	call	0x24e	; 0x24e <_Z10init_timerv>
			blink=30;
 5ba:	e0 92 fd 01 	sts	0x01FD, r14	; 0x8001fd <blink>
		}
		
		if (USART_ReciveWait("EN",500))
 5be:	40 e0       	ldi	r20, 0x00	; 0
 5c0:	64 ef       	ldi	r22, 0xF4	; 244
 5c2:	71 e0       	ldi	r23, 0x01	; 1
 5c4:	8d e5       	ldi	r24, 0x5D	; 93
 5c6:	91 e0       	ldi	r25, 0x01	; 1
 5c8:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <_Z16USART_ReciveWaitPcib>
 5cc:	88 23       	and	r24, r24
 5ce:	09 f4       	brne	.+2      	; 0x5d2 <main+0x17a>
 5d0:	4a c0       	rjmp	.+148    	; 0x666 <main+0x20e>
		{
			blink=1;	
 5d2:	f0 92 fd 01 	sts	0x01FD, r15	; 0x8001fd <blink>
			
			eeprom_read_block((char*)numbr,(uint8_t*)0,10);
 5d6:	4a e0       	ldi	r20, 0x0A	; 10
 5d8:	50 e0       	ldi	r21, 0x00	; 0
 5da:	60 e0       	ldi	r22, 0x00	; 0
 5dc:	70 e0       	ldi	r23, 0x00	; 0
 5de:	8e ef       	ldi	r24, 0xFE	; 254
 5e0:	91 e0       	ldi	r25, 0x01	; 1
 5e2:	0e 94 1d 07 	call	0xe3a	; 0xe3a <eeprom_read_block>
			sprintf(temptext,"AT+CMGS=\"%s\"",numbr);
 5e6:	8e ef       	ldi	r24, 0xFE	; 254
 5e8:	91 e0       	ldi	r25, 0x01	; 1
 5ea:	9f 93       	push	r25
 5ec:	8f 93       	push	r24
 5ee:	1f 93       	push	r17
 5f0:	0f 93       	push	r16
 5f2:	8e e1       	ldi	r24, 0x1E	; 30
 5f4:	92 e0       	ldi	r25, 0x02	; 2
 5f6:	9f 93       	push	r25
 5f8:	8f 93       	push	r24
 5fa:	0e 94 6a 04 	call	0x8d4	; 0x8d4 <sprintf>
 5fe:	0f 90       	pop	r0
 600:	0f 90       	pop	r0
 602:	0f 90       	pop	r0
 604:	0f 90       	pop	r0
 606:	0f 90       	pop	r0
 608:	0f 90       	pop	r0
			USART_TxStringln(temptext);
 60a:	8e e1       	ldi	r24, 0x1E	; 30
 60c:	92 e0       	ldi	r25, 0x02	; 2
 60e:	0e 94 81 00 	call	0x102	; 0x102 <_Z16USART_TxStringlnPc>
 612:	2f ef       	ldi	r18, 0xFF	; 255
 614:	81 ee       	ldi	r24, 0xE1	; 225
 616:	94 e0       	ldi	r25, 0x04	; 4
 618:	21 50       	subi	r18, 0x01	; 1
 61a:	80 40       	sbci	r24, 0x00	; 0
 61c:	90 40       	sbci	r25, 0x00	; 0
 61e:	e1 f7       	brne	.-8      	; 0x618 <main+0x1c0>
 620:	00 c0       	rjmp	.+0      	; 0x622 <main+0x1ca>
 622:	00 00       	nop
			_delay_ms(200);
			USART_TxString("Device activated! \r\n  Thank you!");
 624:	80 e6       	ldi	r24, 0x60	; 96
 626:	91 e0       	ldi	r25, 0x01	; 1
 628:	0e 94 72 00 	call	0xe4	; 0xe4 <_Z14USART_TxStringPc>
 62c:	2f ef       	ldi	r18, 0xFF	; 255
 62e:	81 ee       	ldi	r24, 0xE1	; 225
 630:	94 e0       	ldi	r25, 0x04	; 4
 632:	21 50       	subi	r18, 0x01	; 1
 634:	80 40       	sbci	r24, 0x00	; 0
 636:	90 40       	sbci	r25, 0x00	; 0
 638:	e1 f7       	brne	.-8      	; 0x632 <main+0x1da>
 63a:	00 c0       	rjmp	.+0      	; 0x63c <main+0x1e4>
 63c:	00 00       	nop
			_delay_ms(200);
			USART_Transmit(26);
 63e:	8a e1       	ldi	r24, 0x1A	; 26
 640:	0e 94 6a 00 	call	0xd4	; 0xd4 <_Z14USART_Transmith>
 644:	2f ef       	ldi	r18, 0xFF	; 255
 646:	81 e1       	ldi	r24, 0x11	; 17
 648:	9a e7       	ldi	r25, 0x7A	; 122
 64a:	21 50       	subi	r18, 0x01	; 1
 64c:	80 40       	sbci	r24, 0x00	; 0
 64e:	90 40       	sbci	r25, 0x00	; 0
 650:	e1 f7       	brne	.-8      	; 0x64a <main+0x1f2>
 652:	00 c0       	rjmp	.+0      	; 0x654 <main+0x1fc>
 654:	00 00       	nop
			_delay_ms(5000);
			sent=1;
 656:	f0 92 00 01 	sts	0x0100, r15	; 0x800100 <__data_start>
			USART_ClearRX();
 65a:	0e 94 1e 01 	call	0x23c	; 0x23c <_Z13USART_ClearRXv>
			init_timer();
 65e:	0e 94 27 01 	call	0x24e	; 0x24e <_Z10init_timerv>
			blink=30;
 662:	e0 92 fd 01 	sts	0x01FD, r14	; 0x8001fd <blink>
		}
		
		
		if ((sent==1)&&((PINB&(1<<0))==0))
 666:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 66a:	88 23       	and	r24, r24
 66c:	09 f4       	brne	.+2      	; 0x670 <main+0x218>
 66e:	33 cf       	rjmp	.-410    	; 0x4d6 <main+0x7e>
 670:	18 99       	sbic	0x03, 0	; 3
 672:	31 cf       	rjmp	.-414    	; 0x4d6 <main+0x7e>
		{	
			
			
			blink=1;_delay_ms(2000);USART_ClearRX();
 674:	f0 92 fd 01 	sts	0x01FD, r15	; 0x8001fd <blink>
 678:	2f ef       	ldi	r18, 0xFF	; 255
 67a:	83 ed       	ldi	r24, 0xD3	; 211
 67c:	90 e3       	ldi	r25, 0x30	; 48
 67e:	21 50       	subi	r18, 0x01	; 1
 680:	80 40       	sbci	r24, 0x00	; 0
 682:	90 40       	sbci	r25, 0x00	; 0
 684:	e1 f7       	brne	.-8      	; 0x67e <main+0x226>
 686:	00 c0       	rjmp	.+0      	; 0x688 <main+0x230>
 688:	00 00       	nop
 68a:	0e 94 1e 01 	call	0x23c	; 0x23c <_Z13USART_ClearRXv>
			
			eeprom_read_block((char*)numbr,(uint8_t*)0,10);
 68e:	4a e0       	ldi	r20, 0x0A	; 10
 690:	50 e0       	ldi	r21, 0x00	; 0
 692:	60 e0       	ldi	r22, 0x00	; 0
 694:	70 e0       	ldi	r23, 0x00	; 0
 696:	8e ef       	ldi	r24, 0xFE	; 254
 698:	91 e0       	ldi	r25, 0x01	; 1
 69a:	0e 94 1d 07 	call	0xe3a	; 0xe3a <eeprom_read_block>
			sprintf(temptext,"AT+CMGS=\"%s\"",numbr);
 69e:	8e ef       	ldi	r24, 0xFE	; 254
 6a0:	91 e0       	ldi	r25, 0x01	; 1
 6a2:	9f 93       	push	r25
 6a4:	8f 93       	push	r24
 6a6:	1f 93       	push	r17
 6a8:	0f 93       	push	r16
 6aa:	8e e1       	ldi	r24, 0x1E	; 30
 6ac:	92 e0       	ldi	r25, 0x02	; 2
 6ae:	9f 93       	push	r25
 6b0:	8f 93       	push	r24
 6b2:	0e 94 6a 04 	call	0x8d4	; 0x8d4 <sprintf>
 6b6:	0f 90       	pop	r0
 6b8:	0f 90       	pop	r0
 6ba:	0f 90       	pop	r0
 6bc:	0f 90       	pop	r0
 6be:	0f 90       	pop	r0
 6c0:	0f 90       	pop	r0
			USART_TxStringln(temptext);
 6c2:	8e e1       	ldi	r24, 0x1E	; 30
 6c4:	92 e0       	ldi	r25, 0x02	; 2
 6c6:	0e 94 81 00 	call	0x102	; 0x102 <_Z16USART_TxStringlnPc>
 6ca:	2f ef       	ldi	r18, 0xFF	; 255
 6cc:	81 ee       	ldi	r24, 0xE1	; 225
 6ce:	94 e0       	ldi	r25, 0x04	; 4
 6d0:	21 50       	subi	r18, 0x01	; 1
 6d2:	80 40       	sbci	r24, 0x00	; 0
 6d4:	90 40       	sbci	r25, 0x00	; 0
 6d6:	e1 f7       	brne	.-8      	; 0x6d0 <main+0x278>
 6d8:	00 c0       	rjmp	.+0      	; 0x6da <main+0x282>
 6da:	00 00       	nop
			_delay_ms(200);
			USART_TxString("Fault Detected \r\n Substaion 0001 \r\n Phase 1 \r\n Reply \"EN\" to Enable device.");
 6dc:	81 e8       	ldi	r24, 0x81	; 129
 6de:	91 e0       	ldi	r25, 0x01	; 1
 6e0:	0e 94 72 00 	call	0xe4	; 0xe4 <_Z14USART_TxStringPc>
 6e4:	2f ef       	ldi	r18, 0xFF	; 255
 6e6:	81 ee       	ldi	r24, 0xE1	; 225
 6e8:	94 e0       	ldi	r25, 0x04	; 4
 6ea:	21 50       	subi	r18, 0x01	; 1
 6ec:	80 40       	sbci	r24, 0x00	; 0
 6ee:	90 40       	sbci	r25, 0x00	; 0
 6f0:	e1 f7       	brne	.-8      	; 0x6ea <main+0x292>
 6f2:	00 c0       	rjmp	.+0      	; 0x6f4 <main+0x29c>
 6f4:	00 00       	nop
			_delay_ms(200);
			USART_Transmit(26);
 6f6:	8a e1       	ldi	r24, 0x1A	; 26
 6f8:	0e 94 6a 00 	call	0xd4	; 0xd4 <_Z14USART_Transmith>
 6fc:	2f ef       	ldi	r18, 0xFF	; 255
 6fe:	81 e1       	ldi	r24, 0x11	; 17
 700:	9a e7       	ldi	r25, 0x7A	; 122
 702:	21 50       	subi	r18, 0x01	; 1
 704:	80 40       	sbci	r24, 0x00	; 0
 706:	90 40       	sbci	r25, 0x00	; 0
 708:	e1 f7       	brne	.-8      	; 0x702 <main+0x2aa>
 70a:	00 c0       	rjmp	.+0      	; 0x70c <main+0x2b4>
 70c:	00 00       	nop
			_delay_ms(5000);
			USART_ClearRX();
 70e:	0e 94 1e 01 	call	0x23c	; 0x23c <_Z13USART_ClearRXv>
			init_timer();
 712:	0e 94 27 01 	call	0x24e	; 0x24e <_Z10init_timerv>
			sent =0;
 716:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__data_start>
			blink=30;
 71a:	e0 92 fd 01 	sts	0x01FD, r14	; 0x8001fd <blink>
 71e:	db ce       	rjmp	.-586    	; 0x4d6 <main+0x7e>

00000720 <__divmodhi4>:
 720:	97 fb       	bst	r25, 7
 722:	07 2e       	mov	r0, r23
 724:	16 f4       	brtc	.+4      	; 0x72a <__divmodhi4+0xa>
 726:	00 94       	com	r0
 728:	07 d0       	rcall	.+14     	; 0x738 <__divmodhi4_neg1>
 72a:	77 fd       	sbrc	r23, 7
 72c:	09 d0       	rcall	.+18     	; 0x740 <__divmodhi4_neg2>
 72e:	0e 94 c6 03 	call	0x78c	; 0x78c <__udivmodhi4>
 732:	07 fc       	sbrc	r0, 7
 734:	05 d0       	rcall	.+10     	; 0x740 <__divmodhi4_neg2>
 736:	3e f4       	brtc	.+14     	; 0x746 <__divmodhi4_exit>

00000738 <__divmodhi4_neg1>:
 738:	90 95       	com	r25
 73a:	81 95       	neg	r24
 73c:	9f 4f       	sbci	r25, 0xFF	; 255
 73e:	08 95       	ret

00000740 <__divmodhi4_neg2>:
 740:	70 95       	com	r23
 742:	61 95       	neg	r22
 744:	7f 4f       	sbci	r23, 0xFF	; 255

00000746 <__divmodhi4_exit>:
 746:	08 95       	ret

00000748 <__udivmodsi4>:
 748:	a1 e2       	ldi	r26, 0x21	; 33
 74a:	1a 2e       	mov	r1, r26
 74c:	aa 1b       	sub	r26, r26
 74e:	bb 1b       	sub	r27, r27
 750:	fd 01       	movw	r30, r26
 752:	0d c0       	rjmp	.+26     	; 0x76e <__udivmodsi4_ep>

00000754 <__udivmodsi4_loop>:
 754:	aa 1f       	adc	r26, r26
 756:	bb 1f       	adc	r27, r27
 758:	ee 1f       	adc	r30, r30
 75a:	ff 1f       	adc	r31, r31
 75c:	a2 17       	cp	r26, r18
 75e:	b3 07       	cpc	r27, r19
 760:	e4 07       	cpc	r30, r20
 762:	f5 07       	cpc	r31, r21
 764:	20 f0       	brcs	.+8      	; 0x76e <__udivmodsi4_ep>
 766:	a2 1b       	sub	r26, r18
 768:	b3 0b       	sbc	r27, r19
 76a:	e4 0b       	sbc	r30, r20
 76c:	f5 0b       	sbc	r31, r21

0000076e <__udivmodsi4_ep>:
 76e:	66 1f       	adc	r22, r22
 770:	77 1f       	adc	r23, r23
 772:	88 1f       	adc	r24, r24
 774:	99 1f       	adc	r25, r25
 776:	1a 94       	dec	r1
 778:	69 f7       	brne	.-38     	; 0x754 <__udivmodsi4_loop>
 77a:	60 95       	com	r22
 77c:	70 95       	com	r23
 77e:	80 95       	com	r24
 780:	90 95       	com	r25
 782:	9b 01       	movw	r18, r22
 784:	ac 01       	movw	r20, r24
 786:	bd 01       	movw	r22, r26
 788:	cf 01       	movw	r24, r30
 78a:	08 95       	ret

0000078c <__udivmodhi4>:
 78c:	aa 1b       	sub	r26, r26
 78e:	bb 1b       	sub	r27, r27
 790:	51 e1       	ldi	r21, 0x11	; 17
 792:	07 c0       	rjmp	.+14     	; 0x7a2 <__udivmodhi4_ep>

00000794 <__udivmodhi4_loop>:
 794:	aa 1f       	adc	r26, r26
 796:	bb 1f       	adc	r27, r27
 798:	a6 17       	cp	r26, r22
 79a:	b7 07       	cpc	r27, r23
 79c:	10 f0       	brcs	.+4      	; 0x7a2 <__udivmodhi4_ep>
 79e:	a6 1b       	sub	r26, r22
 7a0:	b7 0b       	sbc	r27, r23

000007a2 <__udivmodhi4_ep>:
 7a2:	88 1f       	adc	r24, r24
 7a4:	99 1f       	adc	r25, r25
 7a6:	5a 95       	dec	r21
 7a8:	a9 f7       	brne	.-22     	; 0x794 <__udivmodhi4_loop>
 7aa:	80 95       	com	r24
 7ac:	90 95       	com	r25
 7ae:	bc 01       	movw	r22, r24
 7b0:	cd 01       	movw	r24, r26
 7b2:	08 95       	ret

000007b4 <atoi>:
 7b4:	fc 01       	movw	r30, r24
 7b6:	88 27       	eor	r24, r24
 7b8:	99 27       	eor	r25, r25
 7ba:	e8 94       	clt
 7bc:	21 91       	ld	r18, Z+
 7be:	20 32       	cpi	r18, 0x20	; 32
 7c0:	e9 f3       	breq	.-6      	; 0x7bc <atoi+0x8>
 7c2:	29 30       	cpi	r18, 0x09	; 9
 7c4:	10 f0       	brcs	.+4      	; 0x7ca <atoi+0x16>
 7c6:	2e 30       	cpi	r18, 0x0E	; 14
 7c8:	c8 f3       	brcs	.-14     	; 0x7bc <atoi+0x8>
 7ca:	2b 32       	cpi	r18, 0x2B	; 43
 7cc:	41 f0       	breq	.+16     	; 0x7de <atoi+0x2a>
 7ce:	2d 32       	cpi	r18, 0x2D	; 45
 7d0:	39 f4       	brne	.+14     	; 0x7e0 <atoi+0x2c>
 7d2:	68 94       	set
 7d4:	04 c0       	rjmp	.+8      	; 0x7de <atoi+0x2a>
 7d6:	0e 94 62 04 	call	0x8c4	; 0x8c4 <__mulhi_const_10>
 7da:	82 0f       	add	r24, r18
 7dc:	91 1d       	adc	r25, r1
 7de:	21 91       	ld	r18, Z+
 7e0:	20 53       	subi	r18, 0x30	; 48
 7e2:	2a 30       	cpi	r18, 0x0A	; 10
 7e4:	c0 f3       	brcs	.-16     	; 0x7d6 <atoi+0x22>
 7e6:	1e f4       	brtc	.+6      	; 0x7ee <atoi+0x3a>
 7e8:	90 95       	com	r25
 7ea:	81 95       	neg	r24
 7ec:	9f 4f       	sbci	r25, 0xFF	; 255
 7ee:	08 95       	ret

000007f0 <setjmp>:
 7f0:	dc 01       	movw	r26, r24
 7f2:	2d 92       	st	X+, r2
 7f4:	3d 92       	st	X+, r3
 7f6:	4d 92       	st	X+, r4
 7f8:	5d 92       	st	X+, r5
 7fa:	6d 92       	st	X+, r6
 7fc:	7d 92       	st	X+, r7
 7fe:	8d 92       	st	X+, r8
 800:	9d 92       	st	X+, r9
 802:	ad 92       	st	X+, r10
 804:	bd 92       	st	X+, r11
 806:	cd 92       	st	X+, r12
 808:	dd 92       	st	X+, r13
 80a:	ed 92       	st	X+, r14
 80c:	fd 92       	st	X+, r15
 80e:	0d 93       	st	X+, r16
 810:	1d 93       	st	X+, r17
 812:	cd 93       	st	X+, r28
 814:	dd 93       	st	X+, r29
 816:	ff 91       	pop	r31
 818:	ef 91       	pop	r30
 81a:	8d b7       	in	r24, 0x3d	; 61
 81c:	8d 93       	st	X+, r24
 81e:	8e b7       	in	r24, 0x3e	; 62
 820:	8d 93       	st	X+, r24
 822:	8f b7       	in	r24, 0x3f	; 63
 824:	8d 93       	st	X+, r24
 826:	ed 93       	st	X+, r30
 828:	fd 93       	st	X+, r31
 82a:	88 27       	eor	r24, r24
 82c:	99 27       	eor	r25, r25
 82e:	09 94       	ijmp

00000830 <longjmp>:
 830:	dc 01       	movw	r26, r24
 832:	cb 01       	movw	r24, r22
 834:	81 30       	cpi	r24, 0x01	; 1
 836:	91 05       	cpc	r25, r1
 838:	81 1d       	adc	r24, r1
 83a:	2d 90       	ld	r2, X+
 83c:	3d 90       	ld	r3, X+
 83e:	4d 90       	ld	r4, X+
 840:	5d 90       	ld	r5, X+
 842:	6d 90       	ld	r6, X+
 844:	7d 90       	ld	r7, X+
 846:	8d 90       	ld	r8, X+
 848:	9d 90       	ld	r9, X+
 84a:	ad 90       	ld	r10, X+
 84c:	bd 90       	ld	r11, X+
 84e:	cd 90       	ld	r12, X+
 850:	dd 90       	ld	r13, X+
 852:	ed 90       	ld	r14, X+
 854:	fd 90       	ld	r15, X+
 856:	0d 91       	ld	r16, X+
 858:	1d 91       	ld	r17, X+
 85a:	cd 91       	ld	r28, X+
 85c:	dd 91       	ld	r29, X+
 85e:	ed 91       	ld	r30, X+
 860:	fd 91       	ld	r31, X+
 862:	0d 90       	ld	r0, X+
 864:	f8 94       	cli
 866:	fe bf       	out	0x3e, r31	; 62
 868:	0f be       	out	0x3f, r0	; 63
 86a:	ed bf       	out	0x3d, r30	; 61
 86c:	ed 91       	ld	r30, X+
 86e:	fd 91       	ld	r31, X+
 870:	09 94       	ijmp

00000872 <strncpy>:
 872:	fb 01       	movw	r30, r22
 874:	dc 01       	movw	r26, r24
 876:	41 50       	subi	r20, 0x01	; 1
 878:	50 40       	sbci	r21, 0x00	; 0
 87a:	48 f0       	brcs	.+18     	; 0x88e <strncpy+0x1c>
 87c:	01 90       	ld	r0, Z+
 87e:	0d 92       	st	X+, r0
 880:	00 20       	and	r0, r0
 882:	c9 f7       	brne	.-14     	; 0x876 <strncpy+0x4>
 884:	01 c0       	rjmp	.+2      	; 0x888 <strncpy+0x16>
 886:	1d 92       	st	X+, r1
 888:	41 50       	subi	r20, 0x01	; 1
 88a:	50 40       	sbci	r21, 0x00	; 0
 88c:	e0 f7       	brcc	.-8      	; 0x886 <strncpy+0x14>
 88e:	08 95       	ret

00000890 <strstr>:
 890:	fb 01       	movw	r30, r22
 892:	51 91       	ld	r21, Z+
 894:	55 23       	and	r21, r21
 896:	a9 f0       	breq	.+42     	; 0x8c2 <strstr+0x32>
 898:	bf 01       	movw	r22, r30
 89a:	dc 01       	movw	r26, r24
 89c:	4d 91       	ld	r20, X+
 89e:	45 17       	cp	r20, r21
 8a0:	41 11       	cpse	r20, r1
 8a2:	e1 f7       	brne	.-8      	; 0x89c <strstr+0xc>
 8a4:	59 f4       	brne	.+22     	; 0x8bc <strstr+0x2c>
 8a6:	cd 01       	movw	r24, r26
 8a8:	01 90       	ld	r0, Z+
 8aa:	00 20       	and	r0, r0
 8ac:	49 f0       	breq	.+18     	; 0x8c0 <strstr+0x30>
 8ae:	4d 91       	ld	r20, X+
 8b0:	40 15       	cp	r20, r0
 8b2:	41 11       	cpse	r20, r1
 8b4:	c9 f3       	breq	.-14     	; 0x8a8 <strstr+0x18>
 8b6:	fb 01       	movw	r30, r22
 8b8:	41 11       	cpse	r20, r1
 8ba:	ef cf       	rjmp	.-34     	; 0x89a <strstr+0xa>
 8bc:	81 e0       	ldi	r24, 0x01	; 1
 8be:	90 e0       	ldi	r25, 0x00	; 0
 8c0:	01 97       	sbiw	r24, 0x01	; 1
 8c2:	08 95       	ret

000008c4 <__mulhi_const_10>:
 8c4:	7a e0       	ldi	r23, 0x0A	; 10
 8c6:	97 9f       	mul	r25, r23
 8c8:	90 2d       	mov	r25, r0
 8ca:	87 9f       	mul	r24, r23
 8cc:	80 2d       	mov	r24, r0
 8ce:	91 0d       	add	r25, r1
 8d0:	11 24       	eor	r1, r1
 8d2:	08 95       	ret

000008d4 <sprintf>:
 8d4:	ae e0       	ldi	r26, 0x0E	; 14
 8d6:	b0 e0       	ldi	r27, 0x00	; 0
 8d8:	e0 e7       	ldi	r30, 0x70	; 112
 8da:	f4 e0       	ldi	r31, 0x04	; 4
 8dc:	0c 94 53 07 	jmp	0xea6	; 0xea6 <__prologue_saves__+0x1c>
 8e0:	0d 89       	ldd	r16, Y+21	; 0x15
 8e2:	1e 89       	ldd	r17, Y+22	; 0x16
 8e4:	86 e0       	ldi	r24, 0x06	; 6
 8e6:	8c 83       	std	Y+4, r24	; 0x04
 8e8:	1a 83       	std	Y+2, r17	; 0x02
 8ea:	09 83       	std	Y+1, r16	; 0x01
 8ec:	8f ef       	ldi	r24, 0xFF	; 255
 8ee:	9f e7       	ldi	r25, 0x7F	; 127
 8f0:	9e 83       	std	Y+6, r25	; 0x06
 8f2:	8d 83       	std	Y+5, r24	; 0x05
 8f4:	ae 01       	movw	r20, r28
 8f6:	47 5e       	subi	r20, 0xE7	; 231
 8f8:	5f 4f       	sbci	r21, 0xFF	; 255
 8fa:	6f 89       	ldd	r22, Y+23	; 0x17
 8fc:	78 8d       	ldd	r23, Y+24	; 0x18
 8fe:	ce 01       	movw	r24, r28
 900:	01 96       	adiw	r24, 0x01	; 1
 902:	0e 94 8c 04 	call	0x918	; 0x918 <vfprintf>
 906:	ef 81       	ldd	r30, Y+7	; 0x07
 908:	f8 85       	ldd	r31, Y+8	; 0x08
 90a:	e0 0f       	add	r30, r16
 90c:	f1 1f       	adc	r31, r17
 90e:	10 82       	st	Z, r1
 910:	2e 96       	adiw	r28, 0x0e	; 14
 912:	e4 e0       	ldi	r30, 0x04	; 4
 914:	0c 94 6f 07 	jmp	0xede	; 0xede <__epilogue_restores__+0x1c>

00000918 <vfprintf>:
 918:	ab e0       	ldi	r26, 0x0B	; 11
 91a:	b0 e0       	ldi	r27, 0x00	; 0
 91c:	e2 e9       	ldi	r30, 0x92	; 146
 91e:	f4 e0       	ldi	r31, 0x04	; 4
 920:	0c 94 45 07 	jmp	0xe8a	; 0xe8a <__prologue_saves__>
 924:	6c 01       	movw	r12, r24
 926:	7b 01       	movw	r14, r22
 928:	8a 01       	movw	r16, r20
 92a:	fc 01       	movw	r30, r24
 92c:	17 82       	std	Z+7, r1	; 0x07
 92e:	16 82       	std	Z+6, r1	; 0x06
 930:	83 81       	ldd	r24, Z+3	; 0x03
 932:	81 ff       	sbrs	r24, 1
 934:	cc c1       	rjmp	.+920    	; 0xcce <vfprintf+0x3b6>
 936:	ce 01       	movw	r24, r28
 938:	01 96       	adiw	r24, 0x01	; 1
 93a:	3c 01       	movw	r6, r24
 93c:	f6 01       	movw	r30, r12
 93e:	93 81       	ldd	r25, Z+3	; 0x03
 940:	f7 01       	movw	r30, r14
 942:	93 fd       	sbrc	r25, 3
 944:	85 91       	lpm	r24, Z+
 946:	93 ff       	sbrs	r25, 3
 948:	81 91       	ld	r24, Z+
 94a:	7f 01       	movw	r14, r30
 94c:	88 23       	and	r24, r24
 94e:	09 f4       	brne	.+2      	; 0x952 <vfprintf+0x3a>
 950:	ba c1       	rjmp	.+884    	; 0xcc6 <vfprintf+0x3ae>
 952:	85 32       	cpi	r24, 0x25	; 37
 954:	39 f4       	brne	.+14     	; 0x964 <vfprintf+0x4c>
 956:	93 fd       	sbrc	r25, 3
 958:	85 91       	lpm	r24, Z+
 95a:	93 ff       	sbrs	r25, 3
 95c:	81 91       	ld	r24, Z+
 95e:	7f 01       	movw	r14, r30
 960:	85 32       	cpi	r24, 0x25	; 37
 962:	29 f4       	brne	.+10     	; 0x96e <vfprintf+0x56>
 964:	b6 01       	movw	r22, r12
 966:	90 e0       	ldi	r25, 0x00	; 0
 968:	0e 94 83 06 	call	0xd06	; 0xd06 <fputc>
 96c:	e7 cf       	rjmp	.-50     	; 0x93c <vfprintf+0x24>
 96e:	91 2c       	mov	r9, r1
 970:	21 2c       	mov	r2, r1
 972:	31 2c       	mov	r3, r1
 974:	ff e1       	ldi	r31, 0x1F	; 31
 976:	f3 15       	cp	r31, r3
 978:	d8 f0       	brcs	.+54     	; 0x9b0 <vfprintf+0x98>
 97a:	8b 32       	cpi	r24, 0x2B	; 43
 97c:	79 f0       	breq	.+30     	; 0x99c <vfprintf+0x84>
 97e:	38 f4       	brcc	.+14     	; 0x98e <vfprintf+0x76>
 980:	80 32       	cpi	r24, 0x20	; 32
 982:	79 f0       	breq	.+30     	; 0x9a2 <vfprintf+0x8a>
 984:	83 32       	cpi	r24, 0x23	; 35
 986:	a1 f4       	brne	.+40     	; 0x9b0 <vfprintf+0x98>
 988:	23 2d       	mov	r18, r3
 98a:	20 61       	ori	r18, 0x10	; 16
 98c:	1d c0       	rjmp	.+58     	; 0x9c8 <vfprintf+0xb0>
 98e:	8d 32       	cpi	r24, 0x2D	; 45
 990:	61 f0       	breq	.+24     	; 0x9aa <vfprintf+0x92>
 992:	80 33       	cpi	r24, 0x30	; 48
 994:	69 f4       	brne	.+26     	; 0x9b0 <vfprintf+0x98>
 996:	23 2d       	mov	r18, r3
 998:	21 60       	ori	r18, 0x01	; 1
 99a:	16 c0       	rjmp	.+44     	; 0x9c8 <vfprintf+0xb0>
 99c:	83 2d       	mov	r24, r3
 99e:	82 60       	ori	r24, 0x02	; 2
 9a0:	38 2e       	mov	r3, r24
 9a2:	e3 2d       	mov	r30, r3
 9a4:	e4 60       	ori	r30, 0x04	; 4
 9a6:	3e 2e       	mov	r3, r30
 9a8:	2a c0       	rjmp	.+84     	; 0x9fe <vfprintf+0xe6>
 9aa:	f3 2d       	mov	r31, r3
 9ac:	f8 60       	ori	r31, 0x08	; 8
 9ae:	1d c0       	rjmp	.+58     	; 0x9ea <vfprintf+0xd2>
 9b0:	37 fc       	sbrc	r3, 7
 9b2:	2d c0       	rjmp	.+90     	; 0xa0e <vfprintf+0xf6>
 9b4:	20 ed       	ldi	r18, 0xD0	; 208
 9b6:	28 0f       	add	r18, r24
 9b8:	2a 30       	cpi	r18, 0x0A	; 10
 9ba:	40 f0       	brcs	.+16     	; 0x9cc <vfprintf+0xb4>
 9bc:	8e 32       	cpi	r24, 0x2E	; 46
 9be:	b9 f4       	brne	.+46     	; 0x9ee <vfprintf+0xd6>
 9c0:	36 fc       	sbrc	r3, 6
 9c2:	81 c1       	rjmp	.+770    	; 0xcc6 <vfprintf+0x3ae>
 9c4:	23 2d       	mov	r18, r3
 9c6:	20 64       	ori	r18, 0x40	; 64
 9c8:	32 2e       	mov	r3, r18
 9ca:	19 c0       	rjmp	.+50     	; 0x9fe <vfprintf+0xe6>
 9cc:	36 fe       	sbrs	r3, 6
 9ce:	06 c0       	rjmp	.+12     	; 0x9dc <vfprintf+0xc4>
 9d0:	8a e0       	ldi	r24, 0x0A	; 10
 9d2:	98 9e       	mul	r9, r24
 9d4:	20 0d       	add	r18, r0
 9d6:	11 24       	eor	r1, r1
 9d8:	92 2e       	mov	r9, r18
 9da:	11 c0       	rjmp	.+34     	; 0x9fe <vfprintf+0xe6>
 9dc:	ea e0       	ldi	r30, 0x0A	; 10
 9de:	2e 9e       	mul	r2, r30
 9e0:	20 0d       	add	r18, r0
 9e2:	11 24       	eor	r1, r1
 9e4:	22 2e       	mov	r2, r18
 9e6:	f3 2d       	mov	r31, r3
 9e8:	f0 62       	ori	r31, 0x20	; 32
 9ea:	3f 2e       	mov	r3, r31
 9ec:	08 c0       	rjmp	.+16     	; 0x9fe <vfprintf+0xe6>
 9ee:	8c 36       	cpi	r24, 0x6C	; 108
 9f0:	21 f4       	brne	.+8      	; 0x9fa <vfprintf+0xe2>
 9f2:	83 2d       	mov	r24, r3
 9f4:	80 68       	ori	r24, 0x80	; 128
 9f6:	38 2e       	mov	r3, r24
 9f8:	02 c0       	rjmp	.+4      	; 0x9fe <vfprintf+0xe6>
 9fa:	88 36       	cpi	r24, 0x68	; 104
 9fc:	41 f4       	brne	.+16     	; 0xa0e <vfprintf+0xf6>
 9fe:	f7 01       	movw	r30, r14
 a00:	93 fd       	sbrc	r25, 3
 a02:	85 91       	lpm	r24, Z+
 a04:	93 ff       	sbrs	r25, 3
 a06:	81 91       	ld	r24, Z+
 a08:	7f 01       	movw	r14, r30
 a0a:	81 11       	cpse	r24, r1
 a0c:	b3 cf       	rjmp	.-154    	; 0x974 <vfprintf+0x5c>
 a0e:	98 2f       	mov	r25, r24
 a10:	9f 7d       	andi	r25, 0xDF	; 223
 a12:	95 54       	subi	r25, 0x45	; 69
 a14:	93 30       	cpi	r25, 0x03	; 3
 a16:	28 f4       	brcc	.+10     	; 0xa22 <vfprintf+0x10a>
 a18:	0c 5f       	subi	r16, 0xFC	; 252
 a1a:	1f 4f       	sbci	r17, 0xFF	; 255
 a1c:	9f e3       	ldi	r25, 0x3F	; 63
 a1e:	99 83       	std	Y+1, r25	; 0x01
 a20:	0d c0       	rjmp	.+26     	; 0xa3c <vfprintf+0x124>
 a22:	83 36       	cpi	r24, 0x63	; 99
 a24:	31 f0       	breq	.+12     	; 0xa32 <vfprintf+0x11a>
 a26:	83 37       	cpi	r24, 0x73	; 115
 a28:	71 f0       	breq	.+28     	; 0xa46 <vfprintf+0x12e>
 a2a:	83 35       	cpi	r24, 0x53	; 83
 a2c:	09 f0       	breq	.+2      	; 0xa30 <vfprintf+0x118>
 a2e:	59 c0       	rjmp	.+178    	; 0xae2 <vfprintf+0x1ca>
 a30:	21 c0       	rjmp	.+66     	; 0xa74 <vfprintf+0x15c>
 a32:	f8 01       	movw	r30, r16
 a34:	80 81       	ld	r24, Z
 a36:	89 83       	std	Y+1, r24	; 0x01
 a38:	0e 5f       	subi	r16, 0xFE	; 254
 a3a:	1f 4f       	sbci	r17, 0xFF	; 255
 a3c:	88 24       	eor	r8, r8
 a3e:	83 94       	inc	r8
 a40:	91 2c       	mov	r9, r1
 a42:	53 01       	movw	r10, r6
 a44:	13 c0       	rjmp	.+38     	; 0xa6c <vfprintf+0x154>
 a46:	28 01       	movw	r4, r16
 a48:	f2 e0       	ldi	r31, 0x02	; 2
 a4a:	4f 0e       	add	r4, r31
 a4c:	51 1c       	adc	r5, r1
 a4e:	f8 01       	movw	r30, r16
 a50:	a0 80       	ld	r10, Z
 a52:	b1 80       	ldd	r11, Z+1	; 0x01
 a54:	36 fe       	sbrs	r3, 6
 a56:	03 c0       	rjmp	.+6      	; 0xa5e <vfprintf+0x146>
 a58:	69 2d       	mov	r22, r9
 a5a:	70 e0       	ldi	r23, 0x00	; 0
 a5c:	02 c0       	rjmp	.+4      	; 0xa62 <vfprintf+0x14a>
 a5e:	6f ef       	ldi	r22, 0xFF	; 255
 a60:	7f ef       	ldi	r23, 0xFF	; 255
 a62:	c5 01       	movw	r24, r10
 a64:	0e 94 78 06 	call	0xcf0	; 0xcf0 <strnlen>
 a68:	4c 01       	movw	r8, r24
 a6a:	82 01       	movw	r16, r4
 a6c:	f3 2d       	mov	r31, r3
 a6e:	ff 77       	andi	r31, 0x7F	; 127
 a70:	3f 2e       	mov	r3, r31
 a72:	16 c0       	rjmp	.+44     	; 0xaa0 <vfprintf+0x188>
 a74:	28 01       	movw	r4, r16
 a76:	22 e0       	ldi	r18, 0x02	; 2
 a78:	42 0e       	add	r4, r18
 a7a:	51 1c       	adc	r5, r1
 a7c:	f8 01       	movw	r30, r16
 a7e:	a0 80       	ld	r10, Z
 a80:	b1 80       	ldd	r11, Z+1	; 0x01
 a82:	36 fe       	sbrs	r3, 6
 a84:	03 c0       	rjmp	.+6      	; 0xa8c <vfprintf+0x174>
 a86:	69 2d       	mov	r22, r9
 a88:	70 e0       	ldi	r23, 0x00	; 0
 a8a:	02 c0       	rjmp	.+4      	; 0xa90 <vfprintf+0x178>
 a8c:	6f ef       	ldi	r22, 0xFF	; 255
 a8e:	7f ef       	ldi	r23, 0xFF	; 255
 a90:	c5 01       	movw	r24, r10
 a92:	0e 94 6d 06 	call	0xcda	; 0xcda <strnlen_P>
 a96:	4c 01       	movw	r8, r24
 a98:	f3 2d       	mov	r31, r3
 a9a:	f0 68       	ori	r31, 0x80	; 128
 a9c:	3f 2e       	mov	r3, r31
 a9e:	82 01       	movw	r16, r4
 aa0:	33 fc       	sbrc	r3, 3
 aa2:	1b c0       	rjmp	.+54     	; 0xada <vfprintf+0x1c2>
 aa4:	82 2d       	mov	r24, r2
 aa6:	90 e0       	ldi	r25, 0x00	; 0
 aa8:	88 16       	cp	r8, r24
 aaa:	99 06       	cpc	r9, r25
 aac:	b0 f4       	brcc	.+44     	; 0xada <vfprintf+0x1c2>
 aae:	b6 01       	movw	r22, r12
 ab0:	80 e2       	ldi	r24, 0x20	; 32
 ab2:	90 e0       	ldi	r25, 0x00	; 0
 ab4:	0e 94 83 06 	call	0xd06	; 0xd06 <fputc>
 ab8:	2a 94       	dec	r2
 aba:	f4 cf       	rjmp	.-24     	; 0xaa4 <vfprintf+0x18c>
 abc:	f5 01       	movw	r30, r10
 abe:	37 fc       	sbrc	r3, 7
 ac0:	85 91       	lpm	r24, Z+
 ac2:	37 fe       	sbrs	r3, 7
 ac4:	81 91       	ld	r24, Z+
 ac6:	5f 01       	movw	r10, r30
 ac8:	b6 01       	movw	r22, r12
 aca:	90 e0       	ldi	r25, 0x00	; 0
 acc:	0e 94 83 06 	call	0xd06	; 0xd06 <fputc>
 ad0:	21 10       	cpse	r2, r1
 ad2:	2a 94       	dec	r2
 ad4:	21 e0       	ldi	r18, 0x01	; 1
 ad6:	82 1a       	sub	r8, r18
 ad8:	91 08       	sbc	r9, r1
 ada:	81 14       	cp	r8, r1
 adc:	91 04       	cpc	r9, r1
 ade:	71 f7       	brne	.-36     	; 0xabc <vfprintf+0x1a4>
 ae0:	e8 c0       	rjmp	.+464    	; 0xcb2 <vfprintf+0x39a>
 ae2:	84 36       	cpi	r24, 0x64	; 100
 ae4:	11 f0       	breq	.+4      	; 0xaea <vfprintf+0x1d2>
 ae6:	89 36       	cpi	r24, 0x69	; 105
 ae8:	41 f5       	brne	.+80     	; 0xb3a <vfprintf+0x222>
 aea:	f8 01       	movw	r30, r16
 aec:	37 fe       	sbrs	r3, 7
 aee:	07 c0       	rjmp	.+14     	; 0xafe <vfprintf+0x1e6>
 af0:	60 81       	ld	r22, Z
 af2:	71 81       	ldd	r23, Z+1	; 0x01
 af4:	82 81       	ldd	r24, Z+2	; 0x02
 af6:	93 81       	ldd	r25, Z+3	; 0x03
 af8:	0c 5f       	subi	r16, 0xFC	; 252
 afa:	1f 4f       	sbci	r17, 0xFF	; 255
 afc:	08 c0       	rjmp	.+16     	; 0xb0e <vfprintf+0x1f6>
 afe:	60 81       	ld	r22, Z
 b00:	71 81       	ldd	r23, Z+1	; 0x01
 b02:	07 2e       	mov	r0, r23
 b04:	00 0c       	add	r0, r0
 b06:	88 0b       	sbc	r24, r24
 b08:	99 0b       	sbc	r25, r25
 b0a:	0e 5f       	subi	r16, 0xFE	; 254
 b0c:	1f 4f       	sbci	r17, 0xFF	; 255
 b0e:	f3 2d       	mov	r31, r3
 b10:	ff 76       	andi	r31, 0x6F	; 111
 b12:	3f 2e       	mov	r3, r31
 b14:	97 ff       	sbrs	r25, 7
 b16:	09 c0       	rjmp	.+18     	; 0xb2a <vfprintf+0x212>
 b18:	90 95       	com	r25
 b1a:	80 95       	com	r24
 b1c:	70 95       	com	r23
 b1e:	61 95       	neg	r22
 b20:	7f 4f       	sbci	r23, 0xFF	; 255
 b22:	8f 4f       	sbci	r24, 0xFF	; 255
 b24:	9f 4f       	sbci	r25, 0xFF	; 255
 b26:	f0 68       	ori	r31, 0x80	; 128
 b28:	3f 2e       	mov	r3, r31
 b2a:	2a e0       	ldi	r18, 0x0A	; 10
 b2c:	30 e0       	ldi	r19, 0x00	; 0
 b2e:	a3 01       	movw	r20, r6
 b30:	0e 94 bf 06 	call	0xd7e	; 0xd7e <__ultoa_invert>
 b34:	88 2e       	mov	r8, r24
 b36:	86 18       	sub	r8, r6
 b38:	45 c0       	rjmp	.+138    	; 0xbc4 <vfprintf+0x2ac>
 b3a:	85 37       	cpi	r24, 0x75	; 117
 b3c:	31 f4       	brne	.+12     	; 0xb4a <vfprintf+0x232>
 b3e:	23 2d       	mov	r18, r3
 b40:	2f 7e       	andi	r18, 0xEF	; 239
 b42:	b2 2e       	mov	r11, r18
 b44:	2a e0       	ldi	r18, 0x0A	; 10
 b46:	30 e0       	ldi	r19, 0x00	; 0
 b48:	25 c0       	rjmp	.+74     	; 0xb94 <vfprintf+0x27c>
 b4a:	93 2d       	mov	r25, r3
 b4c:	99 7f       	andi	r25, 0xF9	; 249
 b4e:	b9 2e       	mov	r11, r25
 b50:	8f 36       	cpi	r24, 0x6F	; 111
 b52:	c1 f0       	breq	.+48     	; 0xb84 <vfprintf+0x26c>
 b54:	18 f4       	brcc	.+6      	; 0xb5c <vfprintf+0x244>
 b56:	88 35       	cpi	r24, 0x58	; 88
 b58:	79 f0       	breq	.+30     	; 0xb78 <vfprintf+0x260>
 b5a:	b5 c0       	rjmp	.+362    	; 0xcc6 <vfprintf+0x3ae>
 b5c:	80 37       	cpi	r24, 0x70	; 112
 b5e:	19 f0       	breq	.+6      	; 0xb66 <vfprintf+0x24e>
 b60:	88 37       	cpi	r24, 0x78	; 120
 b62:	21 f0       	breq	.+8      	; 0xb6c <vfprintf+0x254>
 b64:	b0 c0       	rjmp	.+352    	; 0xcc6 <vfprintf+0x3ae>
 b66:	e9 2f       	mov	r30, r25
 b68:	e0 61       	ori	r30, 0x10	; 16
 b6a:	be 2e       	mov	r11, r30
 b6c:	b4 fe       	sbrs	r11, 4
 b6e:	0d c0       	rjmp	.+26     	; 0xb8a <vfprintf+0x272>
 b70:	fb 2d       	mov	r31, r11
 b72:	f4 60       	ori	r31, 0x04	; 4
 b74:	bf 2e       	mov	r11, r31
 b76:	09 c0       	rjmp	.+18     	; 0xb8a <vfprintf+0x272>
 b78:	34 fe       	sbrs	r3, 4
 b7a:	0a c0       	rjmp	.+20     	; 0xb90 <vfprintf+0x278>
 b7c:	29 2f       	mov	r18, r25
 b7e:	26 60       	ori	r18, 0x06	; 6
 b80:	b2 2e       	mov	r11, r18
 b82:	06 c0       	rjmp	.+12     	; 0xb90 <vfprintf+0x278>
 b84:	28 e0       	ldi	r18, 0x08	; 8
 b86:	30 e0       	ldi	r19, 0x00	; 0
 b88:	05 c0       	rjmp	.+10     	; 0xb94 <vfprintf+0x27c>
 b8a:	20 e1       	ldi	r18, 0x10	; 16
 b8c:	30 e0       	ldi	r19, 0x00	; 0
 b8e:	02 c0       	rjmp	.+4      	; 0xb94 <vfprintf+0x27c>
 b90:	20 e1       	ldi	r18, 0x10	; 16
 b92:	32 e0       	ldi	r19, 0x02	; 2
 b94:	f8 01       	movw	r30, r16
 b96:	b7 fe       	sbrs	r11, 7
 b98:	07 c0       	rjmp	.+14     	; 0xba8 <vfprintf+0x290>
 b9a:	60 81       	ld	r22, Z
 b9c:	71 81       	ldd	r23, Z+1	; 0x01
 b9e:	82 81       	ldd	r24, Z+2	; 0x02
 ba0:	93 81       	ldd	r25, Z+3	; 0x03
 ba2:	0c 5f       	subi	r16, 0xFC	; 252
 ba4:	1f 4f       	sbci	r17, 0xFF	; 255
 ba6:	06 c0       	rjmp	.+12     	; 0xbb4 <vfprintf+0x29c>
 ba8:	60 81       	ld	r22, Z
 baa:	71 81       	ldd	r23, Z+1	; 0x01
 bac:	80 e0       	ldi	r24, 0x00	; 0
 bae:	90 e0       	ldi	r25, 0x00	; 0
 bb0:	0e 5f       	subi	r16, 0xFE	; 254
 bb2:	1f 4f       	sbci	r17, 0xFF	; 255
 bb4:	a3 01       	movw	r20, r6
 bb6:	0e 94 bf 06 	call	0xd7e	; 0xd7e <__ultoa_invert>
 bba:	88 2e       	mov	r8, r24
 bbc:	86 18       	sub	r8, r6
 bbe:	fb 2d       	mov	r31, r11
 bc0:	ff 77       	andi	r31, 0x7F	; 127
 bc2:	3f 2e       	mov	r3, r31
 bc4:	36 fe       	sbrs	r3, 6
 bc6:	0d c0       	rjmp	.+26     	; 0xbe2 <vfprintf+0x2ca>
 bc8:	23 2d       	mov	r18, r3
 bca:	2e 7f       	andi	r18, 0xFE	; 254
 bcc:	a2 2e       	mov	r10, r18
 bce:	89 14       	cp	r8, r9
 bd0:	58 f4       	brcc	.+22     	; 0xbe8 <vfprintf+0x2d0>
 bd2:	34 fe       	sbrs	r3, 4
 bd4:	0b c0       	rjmp	.+22     	; 0xbec <vfprintf+0x2d4>
 bd6:	32 fc       	sbrc	r3, 2
 bd8:	09 c0       	rjmp	.+18     	; 0xbec <vfprintf+0x2d4>
 bda:	83 2d       	mov	r24, r3
 bdc:	8e 7e       	andi	r24, 0xEE	; 238
 bde:	a8 2e       	mov	r10, r24
 be0:	05 c0       	rjmp	.+10     	; 0xbec <vfprintf+0x2d4>
 be2:	b8 2c       	mov	r11, r8
 be4:	a3 2c       	mov	r10, r3
 be6:	03 c0       	rjmp	.+6      	; 0xbee <vfprintf+0x2d6>
 be8:	b8 2c       	mov	r11, r8
 bea:	01 c0       	rjmp	.+2      	; 0xbee <vfprintf+0x2d6>
 bec:	b9 2c       	mov	r11, r9
 bee:	a4 fe       	sbrs	r10, 4
 bf0:	0f c0       	rjmp	.+30     	; 0xc10 <vfprintf+0x2f8>
 bf2:	fe 01       	movw	r30, r28
 bf4:	e8 0d       	add	r30, r8
 bf6:	f1 1d       	adc	r31, r1
 bf8:	80 81       	ld	r24, Z
 bfa:	80 33       	cpi	r24, 0x30	; 48
 bfc:	21 f4       	brne	.+8      	; 0xc06 <vfprintf+0x2ee>
 bfe:	9a 2d       	mov	r25, r10
 c00:	99 7e       	andi	r25, 0xE9	; 233
 c02:	a9 2e       	mov	r10, r25
 c04:	09 c0       	rjmp	.+18     	; 0xc18 <vfprintf+0x300>
 c06:	a2 fe       	sbrs	r10, 2
 c08:	06 c0       	rjmp	.+12     	; 0xc16 <vfprintf+0x2fe>
 c0a:	b3 94       	inc	r11
 c0c:	b3 94       	inc	r11
 c0e:	04 c0       	rjmp	.+8      	; 0xc18 <vfprintf+0x300>
 c10:	8a 2d       	mov	r24, r10
 c12:	86 78       	andi	r24, 0x86	; 134
 c14:	09 f0       	breq	.+2      	; 0xc18 <vfprintf+0x300>
 c16:	b3 94       	inc	r11
 c18:	a3 fc       	sbrc	r10, 3
 c1a:	11 c0       	rjmp	.+34     	; 0xc3e <vfprintf+0x326>
 c1c:	a0 fe       	sbrs	r10, 0
 c1e:	06 c0       	rjmp	.+12     	; 0xc2c <vfprintf+0x314>
 c20:	b2 14       	cp	r11, r2
 c22:	88 f4       	brcc	.+34     	; 0xc46 <vfprintf+0x32e>
 c24:	28 0c       	add	r2, r8
 c26:	92 2c       	mov	r9, r2
 c28:	9b 18       	sub	r9, r11
 c2a:	0e c0       	rjmp	.+28     	; 0xc48 <vfprintf+0x330>
 c2c:	b2 14       	cp	r11, r2
 c2e:	60 f4       	brcc	.+24     	; 0xc48 <vfprintf+0x330>
 c30:	b6 01       	movw	r22, r12
 c32:	80 e2       	ldi	r24, 0x20	; 32
 c34:	90 e0       	ldi	r25, 0x00	; 0
 c36:	0e 94 83 06 	call	0xd06	; 0xd06 <fputc>
 c3a:	b3 94       	inc	r11
 c3c:	f7 cf       	rjmp	.-18     	; 0xc2c <vfprintf+0x314>
 c3e:	b2 14       	cp	r11, r2
 c40:	18 f4       	brcc	.+6      	; 0xc48 <vfprintf+0x330>
 c42:	2b 18       	sub	r2, r11
 c44:	02 c0       	rjmp	.+4      	; 0xc4a <vfprintf+0x332>
 c46:	98 2c       	mov	r9, r8
 c48:	21 2c       	mov	r2, r1
 c4a:	a4 fe       	sbrs	r10, 4
 c4c:	10 c0       	rjmp	.+32     	; 0xc6e <vfprintf+0x356>
 c4e:	b6 01       	movw	r22, r12
 c50:	80 e3       	ldi	r24, 0x30	; 48
 c52:	90 e0       	ldi	r25, 0x00	; 0
 c54:	0e 94 83 06 	call	0xd06	; 0xd06 <fputc>
 c58:	a2 fe       	sbrs	r10, 2
 c5a:	17 c0       	rjmp	.+46     	; 0xc8a <vfprintf+0x372>
 c5c:	a1 fc       	sbrc	r10, 1
 c5e:	03 c0       	rjmp	.+6      	; 0xc66 <vfprintf+0x34e>
 c60:	88 e7       	ldi	r24, 0x78	; 120
 c62:	90 e0       	ldi	r25, 0x00	; 0
 c64:	02 c0       	rjmp	.+4      	; 0xc6a <vfprintf+0x352>
 c66:	88 e5       	ldi	r24, 0x58	; 88
 c68:	90 e0       	ldi	r25, 0x00	; 0
 c6a:	b6 01       	movw	r22, r12
 c6c:	0c c0       	rjmp	.+24     	; 0xc86 <vfprintf+0x36e>
 c6e:	8a 2d       	mov	r24, r10
 c70:	86 78       	andi	r24, 0x86	; 134
 c72:	59 f0       	breq	.+22     	; 0xc8a <vfprintf+0x372>
 c74:	a1 fe       	sbrs	r10, 1
 c76:	02 c0       	rjmp	.+4      	; 0xc7c <vfprintf+0x364>
 c78:	8b e2       	ldi	r24, 0x2B	; 43
 c7a:	01 c0       	rjmp	.+2      	; 0xc7e <vfprintf+0x366>
 c7c:	80 e2       	ldi	r24, 0x20	; 32
 c7e:	a7 fc       	sbrc	r10, 7
 c80:	8d e2       	ldi	r24, 0x2D	; 45
 c82:	b6 01       	movw	r22, r12
 c84:	90 e0       	ldi	r25, 0x00	; 0
 c86:	0e 94 83 06 	call	0xd06	; 0xd06 <fputc>
 c8a:	89 14       	cp	r8, r9
 c8c:	38 f4       	brcc	.+14     	; 0xc9c <vfprintf+0x384>
 c8e:	b6 01       	movw	r22, r12
 c90:	80 e3       	ldi	r24, 0x30	; 48
 c92:	90 e0       	ldi	r25, 0x00	; 0
 c94:	0e 94 83 06 	call	0xd06	; 0xd06 <fputc>
 c98:	9a 94       	dec	r9
 c9a:	f7 cf       	rjmp	.-18     	; 0xc8a <vfprintf+0x372>
 c9c:	8a 94       	dec	r8
 c9e:	f3 01       	movw	r30, r6
 ca0:	e8 0d       	add	r30, r8
 ca2:	f1 1d       	adc	r31, r1
 ca4:	80 81       	ld	r24, Z
 ca6:	b6 01       	movw	r22, r12
 ca8:	90 e0       	ldi	r25, 0x00	; 0
 caa:	0e 94 83 06 	call	0xd06	; 0xd06 <fputc>
 cae:	81 10       	cpse	r8, r1
 cb0:	f5 cf       	rjmp	.-22     	; 0xc9c <vfprintf+0x384>
 cb2:	22 20       	and	r2, r2
 cb4:	09 f4       	brne	.+2      	; 0xcb8 <vfprintf+0x3a0>
 cb6:	42 ce       	rjmp	.-892    	; 0x93c <vfprintf+0x24>
 cb8:	b6 01       	movw	r22, r12
 cba:	80 e2       	ldi	r24, 0x20	; 32
 cbc:	90 e0       	ldi	r25, 0x00	; 0
 cbe:	0e 94 83 06 	call	0xd06	; 0xd06 <fputc>
 cc2:	2a 94       	dec	r2
 cc4:	f6 cf       	rjmp	.-20     	; 0xcb2 <vfprintf+0x39a>
 cc6:	f6 01       	movw	r30, r12
 cc8:	86 81       	ldd	r24, Z+6	; 0x06
 cca:	97 81       	ldd	r25, Z+7	; 0x07
 ccc:	02 c0       	rjmp	.+4      	; 0xcd2 <vfprintf+0x3ba>
 cce:	8f ef       	ldi	r24, 0xFF	; 255
 cd0:	9f ef       	ldi	r25, 0xFF	; 255
 cd2:	2b 96       	adiw	r28, 0x0b	; 11
 cd4:	e2 e1       	ldi	r30, 0x12	; 18
 cd6:	0c 94 61 07 	jmp	0xec2	; 0xec2 <__epilogue_restores__>

00000cda <strnlen_P>:
 cda:	fc 01       	movw	r30, r24
 cdc:	05 90       	lpm	r0, Z+
 cde:	61 50       	subi	r22, 0x01	; 1
 ce0:	70 40       	sbci	r23, 0x00	; 0
 ce2:	01 10       	cpse	r0, r1
 ce4:	d8 f7       	brcc	.-10     	; 0xcdc <strnlen_P+0x2>
 ce6:	80 95       	com	r24
 ce8:	90 95       	com	r25
 cea:	8e 0f       	add	r24, r30
 cec:	9f 1f       	adc	r25, r31
 cee:	08 95       	ret

00000cf0 <strnlen>:
 cf0:	fc 01       	movw	r30, r24
 cf2:	61 50       	subi	r22, 0x01	; 1
 cf4:	70 40       	sbci	r23, 0x00	; 0
 cf6:	01 90       	ld	r0, Z+
 cf8:	01 10       	cpse	r0, r1
 cfa:	d8 f7       	brcc	.-10     	; 0xcf2 <strnlen+0x2>
 cfc:	80 95       	com	r24
 cfe:	90 95       	com	r25
 d00:	8e 0f       	add	r24, r30
 d02:	9f 1f       	adc	r25, r31
 d04:	08 95       	ret

00000d06 <fputc>:
 d06:	0f 93       	push	r16
 d08:	1f 93       	push	r17
 d0a:	cf 93       	push	r28
 d0c:	df 93       	push	r29
 d0e:	fb 01       	movw	r30, r22
 d10:	23 81       	ldd	r18, Z+3	; 0x03
 d12:	21 fd       	sbrc	r18, 1
 d14:	03 c0       	rjmp	.+6      	; 0xd1c <fputc+0x16>
 d16:	8f ef       	ldi	r24, 0xFF	; 255
 d18:	9f ef       	ldi	r25, 0xFF	; 255
 d1a:	2c c0       	rjmp	.+88     	; 0xd74 <fputc+0x6e>
 d1c:	22 ff       	sbrs	r18, 2
 d1e:	16 c0       	rjmp	.+44     	; 0xd4c <fputc+0x46>
 d20:	46 81       	ldd	r20, Z+6	; 0x06
 d22:	57 81       	ldd	r21, Z+7	; 0x07
 d24:	24 81       	ldd	r18, Z+4	; 0x04
 d26:	35 81       	ldd	r19, Z+5	; 0x05
 d28:	42 17       	cp	r20, r18
 d2a:	53 07       	cpc	r21, r19
 d2c:	44 f4       	brge	.+16     	; 0xd3e <fputc+0x38>
 d2e:	a0 81       	ld	r26, Z
 d30:	b1 81       	ldd	r27, Z+1	; 0x01
 d32:	9d 01       	movw	r18, r26
 d34:	2f 5f       	subi	r18, 0xFF	; 255
 d36:	3f 4f       	sbci	r19, 0xFF	; 255
 d38:	31 83       	std	Z+1, r19	; 0x01
 d3a:	20 83       	st	Z, r18
 d3c:	8c 93       	st	X, r24
 d3e:	26 81       	ldd	r18, Z+6	; 0x06
 d40:	37 81       	ldd	r19, Z+7	; 0x07
 d42:	2f 5f       	subi	r18, 0xFF	; 255
 d44:	3f 4f       	sbci	r19, 0xFF	; 255
 d46:	37 83       	std	Z+7, r19	; 0x07
 d48:	26 83       	std	Z+6, r18	; 0x06
 d4a:	14 c0       	rjmp	.+40     	; 0xd74 <fputc+0x6e>
 d4c:	8b 01       	movw	r16, r22
 d4e:	ec 01       	movw	r28, r24
 d50:	fb 01       	movw	r30, r22
 d52:	00 84       	ldd	r0, Z+8	; 0x08
 d54:	f1 85       	ldd	r31, Z+9	; 0x09
 d56:	e0 2d       	mov	r30, r0
 d58:	09 95       	icall
 d5a:	89 2b       	or	r24, r25
 d5c:	e1 f6       	brne	.-72     	; 0xd16 <fputc+0x10>
 d5e:	d8 01       	movw	r26, r16
 d60:	16 96       	adiw	r26, 0x06	; 6
 d62:	8d 91       	ld	r24, X+
 d64:	9c 91       	ld	r25, X
 d66:	17 97       	sbiw	r26, 0x07	; 7
 d68:	01 96       	adiw	r24, 0x01	; 1
 d6a:	17 96       	adiw	r26, 0x07	; 7
 d6c:	9c 93       	st	X, r25
 d6e:	8e 93       	st	-X, r24
 d70:	16 97       	sbiw	r26, 0x06	; 6
 d72:	ce 01       	movw	r24, r28
 d74:	df 91       	pop	r29
 d76:	cf 91       	pop	r28
 d78:	1f 91       	pop	r17
 d7a:	0f 91       	pop	r16
 d7c:	08 95       	ret

00000d7e <__ultoa_invert>:
 d7e:	fa 01       	movw	r30, r20
 d80:	aa 27       	eor	r26, r26
 d82:	28 30       	cpi	r18, 0x08	; 8
 d84:	51 f1       	breq	.+84     	; 0xdda <__ultoa_invert+0x5c>
 d86:	20 31       	cpi	r18, 0x10	; 16
 d88:	81 f1       	breq	.+96     	; 0xdea <__ultoa_invert+0x6c>
 d8a:	e8 94       	clt
 d8c:	6f 93       	push	r22
 d8e:	6e 7f       	andi	r22, 0xFE	; 254
 d90:	6e 5f       	subi	r22, 0xFE	; 254
 d92:	7f 4f       	sbci	r23, 0xFF	; 255
 d94:	8f 4f       	sbci	r24, 0xFF	; 255
 d96:	9f 4f       	sbci	r25, 0xFF	; 255
 d98:	af 4f       	sbci	r26, 0xFF	; 255
 d9a:	b1 e0       	ldi	r27, 0x01	; 1
 d9c:	3e d0       	rcall	.+124    	; 0xe1a <__ultoa_invert+0x9c>
 d9e:	b4 e0       	ldi	r27, 0x04	; 4
 da0:	3c d0       	rcall	.+120    	; 0xe1a <__ultoa_invert+0x9c>
 da2:	67 0f       	add	r22, r23
 da4:	78 1f       	adc	r23, r24
 da6:	89 1f       	adc	r24, r25
 da8:	9a 1f       	adc	r25, r26
 daa:	a1 1d       	adc	r26, r1
 dac:	68 0f       	add	r22, r24
 dae:	79 1f       	adc	r23, r25
 db0:	8a 1f       	adc	r24, r26
 db2:	91 1d       	adc	r25, r1
 db4:	a1 1d       	adc	r26, r1
 db6:	6a 0f       	add	r22, r26
 db8:	71 1d       	adc	r23, r1
 dba:	81 1d       	adc	r24, r1
 dbc:	91 1d       	adc	r25, r1
 dbe:	a1 1d       	adc	r26, r1
 dc0:	20 d0       	rcall	.+64     	; 0xe02 <__ultoa_invert+0x84>
 dc2:	09 f4       	brne	.+2      	; 0xdc6 <__ultoa_invert+0x48>
 dc4:	68 94       	set
 dc6:	3f 91       	pop	r19
 dc8:	2a e0       	ldi	r18, 0x0A	; 10
 dca:	26 9f       	mul	r18, r22
 dcc:	11 24       	eor	r1, r1
 dce:	30 19       	sub	r19, r0
 dd0:	30 5d       	subi	r19, 0xD0	; 208
 dd2:	31 93       	st	Z+, r19
 dd4:	de f6       	brtc	.-74     	; 0xd8c <__ultoa_invert+0xe>
 dd6:	cf 01       	movw	r24, r30
 dd8:	08 95       	ret
 dda:	46 2f       	mov	r20, r22
 ddc:	47 70       	andi	r20, 0x07	; 7
 dde:	40 5d       	subi	r20, 0xD0	; 208
 de0:	41 93       	st	Z+, r20
 de2:	b3 e0       	ldi	r27, 0x03	; 3
 de4:	0f d0       	rcall	.+30     	; 0xe04 <__ultoa_invert+0x86>
 de6:	c9 f7       	brne	.-14     	; 0xdda <__ultoa_invert+0x5c>
 de8:	f6 cf       	rjmp	.-20     	; 0xdd6 <__ultoa_invert+0x58>
 dea:	46 2f       	mov	r20, r22
 dec:	4f 70       	andi	r20, 0x0F	; 15
 dee:	40 5d       	subi	r20, 0xD0	; 208
 df0:	4a 33       	cpi	r20, 0x3A	; 58
 df2:	18 f0       	brcs	.+6      	; 0xdfa <__ultoa_invert+0x7c>
 df4:	49 5d       	subi	r20, 0xD9	; 217
 df6:	31 fd       	sbrc	r19, 1
 df8:	40 52       	subi	r20, 0x20	; 32
 dfa:	41 93       	st	Z+, r20
 dfc:	02 d0       	rcall	.+4      	; 0xe02 <__ultoa_invert+0x84>
 dfe:	a9 f7       	brne	.-22     	; 0xdea <__ultoa_invert+0x6c>
 e00:	ea cf       	rjmp	.-44     	; 0xdd6 <__ultoa_invert+0x58>
 e02:	b4 e0       	ldi	r27, 0x04	; 4
 e04:	a6 95       	lsr	r26
 e06:	97 95       	ror	r25
 e08:	87 95       	ror	r24
 e0a:	77 95       	ror	r23
 e0c:	67 95       	ror	r22
 e0e:	ba 95       	dec	r27
 e10:	c9 f7       	brne	.-14     	; 0xe04 <__ultoa_invert+0x86>
 e12:	00 97       	sbiw	r24, 0x00	; 0
 e14:	61 05       	cpc	r22, r1
 e16:	71 05       	cpc	r23, r1
 e18:	08 95       	ret
 e1a:	9b 01       	movw	r18, r22
 e1c:	ac 01       	movw	r20, r24
 e1e:	0a 2e       	mov	r0, r26
 e20:	06 94       	lsr	r0
 e22:	57 95       	ror	r21
 e24:	47 95       	ror	r20
 e26:	37 95       	ror	r19
 e28:	27 95       	ror	r18
 e2a:	ba 95       	dec	r27
 e2c:	c9 f7       	brne	.-14     	; 0xe20 <__ultoa_invert+0xa2>
 e2e:	62 0f       	add	r22, r18
 e30:	73 1f       	adc	r23, r19
 e32:	84 1f       	adc	r24, r20
 e34:	95 1f       	adc	r25, r21
 e36:	a0 1d       	adc	r26, r0
 e38:	08 95       	ret

00000e3a <eeprom_read_block>:
 e3a:	dc 01       	movw	r26, r24
 e3c:	cb 01       	movw	r24, r22

00000e3e <eeprom_read_blraw>:
 e3e:	fc 01       	movw	r30, r24
 e40:	f9 99       	sbic	0x1f, 1	; 31
 e42:	fe cf       	rjmp	.-4      	; 0xe40 <eeprom_read_blraw+0x2>
 e44:	06 c0       	rjmp	.+12     	; 0xe52 <eeprom_read_blraw+0x14>
 e46:	f2 bd       	out	0x22, r31	; 34
 e48:	e1 bd       	out	0x21, r30	; 33
 e4a:	f8 9a       	sbi	0x1f, 0	; 31
 e4c:	31 96       	adiw	r30, 0x01	; 1
 e4e:	00 b4       	in	r0, 0x20	; 32
 e50:	0d 92       	st	X+, r0
 e52:	41 50       	subi	r20, 0x01	; 1
 e54:	50 40       	sbci	r21, 0x00	; 0
 e56:	b8 f7       	brcc	.-18     	; 0xe46 <eeprom_read_blraw+0x8>
 e58:	08 95       	ret

00000e5a <eeprom_write_block>:
 e5a:	dc 01       	movw	r26, r24
 e5c:	cb 01       	movw	r24, r22
 e5e:	03 c0       	rjmp	.+6      	; 0xe66 <eeprom_write_block+0xc>
 e60:	2d 91       	ld	r18, X+
 e62:	0e 94 38 07 	call	0xe70	; 0xe70 <eeprom_write_r18>
 e66:	41 50       	subi	r20, 0x01	; 1
 e68:	50 40       	sbci	r21, 0x00	; 0
 e6a:	d0 f7       	brcc	.-12     	; 0xe60 <eeprom_write_block+0x6>
 e6c:	08 95       	ret

00000e6e <eeprom_write_byte>:
 e6e:	26 2f       	mov	r18, r22

00000e70 <eeprom_write_r18>:
 e70:	f9 99       	sbic	0x1f, 1	; 31
 e72:	fe cf       	rjmp	.-4      	; 0xe70 <eeprom_write_r18>
 e74:	1f ba       	out	0x1f, r1	; 31
 e76:	92 bd       	out	0x22, r25	; 34
 e78:	81 bd       	out	0x21, r24	; 33
 e7a:	20 bd       	out	0x20, r18	; 32
 e7c:	0f b6       	in	r0, 0x3f	; 63
 e7e:	f8 94       	cli
 e80:	fa 9a       	sbi	0x1f, 2	; 31
 e82:	f9 9a       	sbi	0x1f, 1	; 31
 e84:	0f be       	out	0x3f, r0	; 63
 e86:	01 96       	adiw	r24, 0x01	; 1
 e88:	08 95       	ret

00000e8a <__prologue_saves__>:
 e8a:	2f 92       	push	r2
 e8c:	3f 92       	push	r3
 e8e:	4f 92       	push	r4
 e90:	5f 92       	push	r5
 e92:	6f 92       	push	r6
 e94:	7f 92       	push	r7
 e96:	8f 92       	push	r8
 e98:	9f 92       	push	r9
 e9a:	af 92       	push	r10
 e9c:	bf 92       	push	r11
 e9e:	cf 92       	push	r12
 ea0:	df 92       	push	r13
 ea2:	ef 92       	push	r14
 ea4:	ff 92       	push	r15
 ea6:	0f 93       	push	r16
 ea8:	1f 93       	push	r17
 eaa:	cf 93       	push	r28
 eac:	df 93       	push	r29
 eae:	cd b7       	in	r28, 0x3d	; 61
 eb0:	de b7       	in	r29, 0x3e	; 62
 eb2:	ca 1b       	sub	r28, r26
 eb4:	db 0b       	sbc	r29, r27
 eb6:	0f b6       	in	r0, 0x3f	; 63
 eb8:	f8 94       	cli
 eba:	de bf       	out	0x3e, r29	; 62
 ebc:	0f be       	out	0x3f, r0	; 63
 ebe:	cd bf       	out	0x3d, r28	; 61
 ec0:	09 94       	ijmp

00000ec2 <__epilogue_restores__>:
 ec2:	2a 88       	ldd	r2, Y+18	; 0x12
 ec4:	39 88       	ldd	r3, Y+17	; 0x11
 ec6:	48 88       	ldd	r4, Y+16	; 0x10
 ec8:	5f 84       	ldd	r5, Y+15	; 0x0f
 eca:	6e 84       	ldd	r6, Y+14	; 0x0e
 ecc:	7d 84       	ldd	r7, Y+13	; 0x0d
 ece:	8c 84       	ldd	r8, Y+12	; 0x0c
 ed0:	9b 84       	ldd	r9, Y+11	; 0x0b
 ed2:	aa 84       	ldd	r10, Y+10	; 0x0a
 ed4:	b9 84       	ldd	r11, Y+9	; 0x09
 ed6:	c8 84       	ldd	r12, Y+8	; 0x08
 ed8:	df 80       	ldd	r13, Y+7	; 0x07
 eda:	ee 80       	ldd	r14, Y+6	; 0x06
 edc:	fd 80       	ldd	r15, Y+5	; 0x05
 ede:	0c 81       	ldd	r16, Y+4	; 0x04
 ee0:	1b 81       	ldd	r17, Y+3	; 0x03
 ee2:	aa 81       	ldd	r26, Y+2	; 0x02
 ee4:	b9 81       	ldd	r27, Y+1	; 0x01
 ee6:	ce 0f       	add	r28, r30
 ee8:	d1 1d       	adc	r29, r1
 eea:	0f b6       	in	r0, 0x3f	; 63
 eec:	f8 94       	cli
 eee:	de bf       	out	0x3e, r29	; 62
 ef0:	0f be       	out	0x3f, r0	; 63
 ef2:	cd bf       	out	0x3d, r28	; 61
 ef4:	ed 01       	movw	r28, r26
 ef6:	08 95       	ret

00000ef8 <_exit>:
 ef8:	f8 94       	cli

00000efa <__stop_program>:
 efa:	ff cf       	rjmp	.-2      	; 0xefa <__stop_program>
