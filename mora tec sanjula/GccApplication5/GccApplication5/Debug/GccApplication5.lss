
GccApplication5.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000c9c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000010  00800060  00000c9c  00000d30  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000001a  00800070  00800070  00000d40  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000d40  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000d9c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a0  00000000  00000000  00000dd8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000fba  00000000  00000000  00000e78  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000701  00000000  00000000  00001e32  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000764  00000000  00000000  00002533  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000198  00000000  00000000  00002c98  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005a9  00000000  00000000  00002e30  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000949  00000000  00000000  000033d9  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000090  00000000  00000000  00003d22  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 1b 02 	jmp	0x436	; 0x436 <__vector_10>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ec e9       	ldi	r30, 0x9C	; 156
  68:	fc e0       	ldi	r31, 0x0C	; 12
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 37       	cpi	r26, 0x70	; 112
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a0 e7       	ldi	r26, 0x70	; 112
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	aa 38       	cpi	r26, 0x8A	; 138
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 2c 01 	call	0x258	; 0x258 <main>
  8a:	0c 94 4c 06 	jmp	0xc98	; 0xc98 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <_Z7TWIInitv>:
		LcdChar(str[i]);
	}
}
void LcdCursor(bool Cursor=0){
	if (Cursor==0)
	{LcdCommand(0xC);
  92:	11 b8       	out	0x01, r1	; 1
  94:	88 e4       	ldi	r24, 0x48	; 72
  96:	80 b9       	out	0x00, r24	; 0
  98:	84 e0       	ldi	r24, 0x04	; 4
  9a:	86 bf       	out	0x36, r24	; 54
  9c:	08 95       	ret

0000009e <_Z8TWIStartv>:
  9e:	84 ea       	ldi	r24, 0xA4	; 164
  a0:	86 bf       	out	0x36, r24	; 54
  a2:	06 b6       	in	r0, 0x36	; 54
  a4:	07 fe       	sbrs	r0, 7
  a6:	fd cf       	rjmp	.-6      	; 0xa2 <_Z8TWIStartv+0x4>
  a8:	08 95       	ret

000000aa <_Z7TWIStopv>:
  aa:	84 e9       	ldi	r24, 0x94	; 148
  ac:	86 bf       	out	0x36, r24	; 54
  ae:	06 b6       	in	r0, 0x36	; 54
  b0:	04 fc       	sbrc	r0, 4
  b2:	fd cf       	rjmp	.-6      	; 0xae <_Z7TWIStopv+0x4>
  b4:	08 95       	ret

000000b6 <_Z13TWIWriteAddrshh>:
  b6:	90 e0       	ldi	r25, 0x00	; 0
  b8:	88 0f       	add	r24, r24
  ba:	99 1f       	adc	r25, r25
  bc:	86 2b       	or	r24, r22
  be:	83 b9       	out	0x03, r24	; 3
  c0:	84 e8       	ldi	r24, 0x84	; 132
  c2:	86 bf       	out	0x36, r24	; 54
  c4:	06 b6       	in	r0, 0x36	; 54
  c6:	07 fe       	sbrs	r0, 7
  c8:	fd cf       	rjmp	.-6      	; 0xc4 <_Z13TWIWriteAddrshh+0xe>
  ca:	81 b1       	in	r24, 0x01	; 1
  cc:	88 7f       	andi	r24, 0xF8	; 248
  ce:	08 95       	ret

000000d0 <_Z12TWIWriteDatah>:
  d0:	83 b9       	out	0x03, r24	; 3
  d2:	84 e8       	ldi	r24, 0x84	; 132
  d4:	86 bf       	out	0x36, r24	; 54
  d6:	06 b6       	in	r0, 0x36	; 54
  d8:	07 fe       	sbrs	r0, 7
  da:	fd cf       	rjmp	.-6      	; 0xd6 <_Z12TWIWriteDatah+0x6>
  dc:	81 b1       	in	r24, 0x01	; 1
  de:	88 7f       	andi	r24, 0xF8	; 248
  e0:	08 95       	ret

000000e2 <_Z12LcdBacklightb>:
  e2:	88 23       	and	r24, r24
  e4:	21 f0       	breq	.+8      	; 0xee <_Z12LcdBacklightb+0xc>
  e6:	88 e0       	ldi	r24, 0x08	; 8
  e8:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <Backlight>
  ec:	08 95       	ret
  ee:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <Backlight>
  f2:	08 95       	ret

000000f4 <_Z11Lcd4bitdatahb>:
  f4:	1f 93       	push	r17
  f6:	cf 93       	push	r28
  f8:	df 93       	push	r29
  fa:	d8 2f       	mov	r29, r24
  fc:	c6 2f       	mov	r28, r22
  fe:	0e 94 4f 00 	call	0x9e	; 0x9e <_Z8TWIStartv>
 102:	60 e0       	ldi	r22, 0x00	; 0
 104:	80 91 89 00 	lds	r24, 0x0089	; 0x800089 <deviceAdress>
 108:	0e 94 5b 00 	call	0xb6	; 0xb6 <_Z13TWIWriteAddrshh>
 10c:	1c 2f       	mov	r17, r28
 10e:	1d 2b       	or	r17, r29
 110:	80 91 88 00 	lds	r24, 0x0088	; 0x800088 <Backlight>
 114:	81 2b       	or	r24, r17
 116:	0e 94 68 00 	call	0xd0	; 0xd0 <_Z12TWIWriteDatah>
 11a:	0e 94 55 00 	call	0xaa	; 0xaa <_Z7TWIStopv>
 11e:	0e 94 4f 00 	call	0x9e	; 0x9e <_Z8TWIStartv>
 122:	60 e0       	ldi	r22, 0x00	; 0
 124:	80 91 89 00 	lds	r24, 0x0089	; 0x800089 <deviceAdress>
 128:	0e 94 5b 00 	call	0xb6	; 0xb6 <_Z13TWIWriteAddrshh>
 12c:	80 91 88 00 	lds	r24, 0x0088	; 0x800088 <Backlight>
 130:	81 2b       	or	r24, r17
 132:	84 60       	ori	r24, 0x04	; 4
 134:	0e 94 68 00 	call	0xd0	; 0xd0 <_Z12TWIWriteDatah>
 138:	0e 94 55 00 	call	0xaa	; 0xaa <_Z7TWIStopv>
 13c:	8f e8       	ldi	r24, 0x8F	; 143
 13e:	91 e0       	ldi	r25, 0x01	; 1
 140:	01 97       	sbiw	r24, 0x01	; 1
 142:	f1 f7       	brne	.-4      	; 0x140 <_Z11Lcd4bitdatahb+0x4c>
 144:	00 c0       	rjmp	.+0      	; 0x146 <_Z11Lcd4bitdatahb+0x52>
 146:	00 00       	nop
 148:	0e 94 4f 00 	call	0x9e	; 0x9e <_Z8TWIStartv>
 14c:	60 e0       	ldi	r22, 0x00	; 0
 14e:	80 91 89 00 	lds	r24, 0x0089	; 0x800089 <deviceAdress>
 152:	0e 94 5b 00 	call	0xb6	; 0xb6 <_Z13TWIWriteAddrshh>
 156:	db 7f       	andi	r29, 0xFB	; 251
 158:	cd 2b       	or	r28, r29
 15a:	80 91 88 00 	lds	r24, 0x0088	; 0x800088 <Backlight>
 15e:	8c 2b       	or	r24, r28
 160:	0e 94 68 00 	call	0xd0	; 0xd0 <_Z12TWIWriteDatah>
 164:	0e 94 55 00 	call	0xaa	; 0xaa <_Z7TWIStopv>
 168:	8f e9       	ldi	r24, 0x9F	; 159
 16a:	9f e0       	ldi	r25, 0x0F	; 15
 16c:	01 97       	sbiw	r24, 0x01	; 1
 16e:	f1 f7       	brne	.-4      	; 0x16c <_Z11Lcd4bitdatahb+0x78>
 170:	00 c0       	rjmp	.+0      	; 0x172 <_Z11Lcd4bitdatahb+0x7e>
 172:	00 00       	nop
 174:	df 91       	pop	r29
 176:	cf 91       	pop	r28
 178:	1f 91       	pop	r17
 17a:	08 95       	ret

0000017c <_Z10LcdCommandh>:
 17c:	cf 93       	push	r28
 17e:	c8 2f       	mov	r28, r24
 180:	60 e0       	ldi	r22, 0x00	; 0
 182:	80 7f       	andi	r24, 0xF0	; 240
 184:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z11Lcd4bitdatahb>
 188:	60 e0       	ldi	r22, 0x00	; 0
 18a:	8c 2f       	mov	r24, r28
 18c:	82 95       	swap	r24
 18e:	80 7f       	andi	r24, 0xF0	; 240
 190:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z11Lcd4bitdatahb>
 194:	cf 91       	pop	r28
 196:	08 95       	ret

00000198 <_Z7LcdInith>:
 198:	cf 93       	push	r28
 19a:	c8 2f       	mov	r28, r24
 19c:	0e 94 49 00 	call	0x92	; 0x92 <_Z7TWIInitv>
 1a0:	81 e0       	ldi	r24, 0x01	; 1
 1a2:	0e 94 71 00 	call	0xe2	; 0xe2 <_Z12LcdBacklightb>
 1a6:	8f e3       	ldi	r24, 0x3F	; 63
 1a8:	9c e9       	ldi	r25, 0x9C	; 156
 1aa:	01 97       	sbiw	r24, 0x01	; 1
 1ac:	f1 f7       	brne	.-4      	; 0x1aa <_Z7LcdInith+0x12>
 1ae:	00 c0       	rjmp	.+0      	; 0x1b0 <_Z7LcdInith+0x18>
 1b0:	00 00       	nop
 1b2:	c0 93 89 00 	sts	0x0089, r28	; 0x800089 <deviceAdress>
 1b6:	82 e0       	ldi	r24, 0x02	; 2
 1b8:	0e 94 be 00 	call	0x17c	; 0x17c <_Z10LcdCommandh>
 1bc:	88 e2       	ldi	r24, 0x28	; 40
 1be:	0e 94 be 00 	call	0x17c	; 0x17c <_Z10LcdCommandh>
 1c2:	8c e0       	ldi	r24, 0x0C	; 12
 1c4:	0e 94 be 00 	call	0x17c	; 0x17c <_Z10LcdCommandh>
 1c8:	86 e0       	ldi	r24, 0x06	; 6
 1ca:	0e 94 be 00 	call	0x17c	; 0x17c <_Z10LcdCommandh>
 1ce:	81 e0       	ldi	r24, 0x01	; 1
 1d0:	0e 94 be 00 	call	0x17c	; 0x17c <_Z10LcdCommandh>
 1d4:	cf 91       	pop	r28
 1d6:	08 95       	ret

000001d8 <_Z7LcdCharh>:
	Lcd4bitdata(command&0xF0,0);
	Lcd4bitdata((command<<4)&0xF0,0);
	
}

void LcdChar(uint8_t Lcdcharval){
 1d8:	cf 93       	push	r28
 1da:	c8 2f       	mov	r28, r24
	Lcd4bitdata(Lcdcharval&0xF0,1);
 1dc:	61 e0       	ldi	r22, 0x01	; 1
 1de:	80 7f       	andi	r24, 0xF0	; 240
 1e0:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z11Lcd4bitdatahb>
	Lcd4bitdata((Lcdcharval<<4)&0xF0,1);
 1e4:	61 e0       	ldi	r22, 0x01	; 1
 1e6:	8c 2f       	mov	r24, r28
 1e8:	82 95       	swap	r24
 1ea:	80 7f       	andi	r24, 0xF0	; 240
 1ec:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z11Lcd4bitdatahb>
	
}
 1f0:	cf 91       	pop	r28
 1f2:	08 95       	ret

000001f4 <_Z9LcdStringPc>:
	LcdString(str);
	
}

void LcdString (char *str)		/* Send string to LCD function */
{
 1f4:	0f 93       	push	r16
 1f6:	1f 93       	push	r17
 1f8:	cf 93       	push	r28
 1fa:	df 93       	push	r29
 1fc:	8c 01       	movw	r16, r24
	int i;
	for(i=0;str[i]!=0;i++)		/* Send each char of string till the NULL */
 1fe:	c0 e0       	ldi	r28, 0x00	; 0
 200:	d0 e0       	ldi	r29, 0x00	; 0
 202:	f8 01       	movw	r30, r16
 204:	ec 0f       	add	r30, r28
 206:	fd 1f       	adc	r31, r29
 208:	80 81       	ld	r24, Z
 20a:	88 23       	and	r24, r24
 20c:	21 f0       	breq	.+8      	; 0x216 <_Z9LcdStringPc+0x22>
	{
		LcdChar(str[i]);
 20e:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <_Z7LcdCharh>
}

void LcdString (char *str)		/* Send string to LCD function */
{
	int i;
	for(i=0;str[i]!=0;i++)		/* Send each char of string till the NULL */
 212:	21 96       	adiw	r28, 0x01	; 1
 214:	f6 cf       	rjmp	.-20     	; 0x202 <_Z9LcdStringPc+0xe>
	{
		LcdChar(str[i]);
	}
}
 216:	df 91       	pop	r29
 218:	cf 91       	pop	r28
 21a:	1f 91       	pop	r17
 21c:	0f 91       	pop	r16
 21e:	08 95       	ret

00000220 <_Z12LcdSetCursorhhPc>:
	Lcd4bitdata(Lcdcharval&0xF0,1);
	Lcd4bitdata((Lcdcharval<<4)&0xF0,1);
	
}

void LcdSetCursor(uint8_t xaxis, uint8_t yaxis,char*str){
 220:	cf 93       	push	r28
 222:	df 93       	push	r29
 224:	ea 01       	movw	r28, r20
	uint8_t tempcommand;
	switch(yaxis){
 226:	61 30       	cpi	r22, 0x01	; 1
 228:	31 f0       	breq	.+12     	; 0x236 <_Z12LcdSetCursorhhPc+0x16>
 22a:	58 f0       	brcs	.+22     	; 0x242 <_Z12LcdSetCursorhhPc+0x22>
 22c:	62 30       	cpi	r22, 0x02	; 2
 22e:	29 f0       	breq	.+10     	; 0x23a <_Z12LcdSetCursorhhPc+0x1a>
 230:	63 30       	cpi	r22, 0x03	; 3
 232:	29 f0       	breq	.+10     	; 0x23e <_Z12LcdSetCursorhhPc+0x1e>
 234:	07 c0       	rjmp	.+14     	; 0x244 <_Z12LcdSetCursorhhPc+0x24>
		case 0:tempcommand=0x80;break;  //yaxis =0
		case 1:tempcommand=0xC0;break;
 236:	90 ec       	ldi	r25, 0xC0	; 192
 238:	05 c0       	rjmp	.+10     	; 0x244 <_Z12LcdSetCursorhhPc+0x24>
		case 2:tempcommand=0x94;break;
 23a:	94 e9       	ldi	r25, 0x94	; 148
 23c:	03 c0       	rjmp	.+6      	; 0x244 <_Z12LcdSetCursorhhPc+0x24>
		case 3:tempcommand=0xd4;break;		
 23e:	94 ed       	ldi	r25, 0xD4	; 212
 240:	01 c0       	rjmp	.+2      	; 0x244 <_Z12LcdSetCursorhhPc+0x24>
}

void LcdSetCursor(uint8_t xaxis, uint8_t yaxis,char*str){
	uint8_t tempcommand;
	switch(yaxis){
		case 0:tempcommand=0x80;break;  //yaxis =0
 242:	90 e8       	ldi	r25, 0x80	; 128
		case 1:tempcommand=0xC0;break;
		case 2:tempcommand=0x94;break;
		case 3:tempcommand=0xd4;break;		
	}
	LcdCommand(tempcommand|(0x0F&xaxis));
 244:	8f 70       	andi	r24, 0x0F	; 15
 246:	89 2b       	or	r24, r25
 248:	0e 94 be 00 	call	0x17c	; 0x17c <_Z10LcdCommandh>
	LcdString(str);
 24c:	ce 01       	movw	r24, r28
 24e:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <_Z9LcdStringPc>
	
}
 252:	df 91       	pop	r29
 254:	cf 91       	pop	r28
 256:	08 95       	ret

00000258 <main>:
uint16_t ultraINT0=0;

char lcddata[20];
int main(void)
{
	LcdInit();
 258:	87 e2       	ldi	r24, 0x27	; 39
 25a:	0e 94 cc 00 	call	0x198	; 0x198 <_Z7LcdInith>
	/*Ultrasonic Timer Part*/
	DDRD|=(1<<3); //D3 as output
 25e:	81 b3       	in	r24, 0x11	; 17
 260:	88 60       	ori	r24, 0x08	; 8
 262:	81 bb       	out	0x11, r24	; 17
	TCCR0|=(1<<WGM01);//Enable Compare match mode
 264:	83 b7       	in	r24, 0x33	; 51
 266:	88 60       	ori	r24, 0x08	; 8
 268:	83 bf       	out	0x33, r24	; 51
	TCCR0|=(1<<CS11);//Start timer  prescaler =8
 26a:	83 b7       	in	r24, 0x33	; 51
 26c:	82 60       	ori	r24, 0x02	; 2
 26e:	83 bf       	out	0x33, r24	; 51
	TCNT0=0;
 270:	12 be       	out	0x32, r1	; 50
	OCR0=10;
 272:	8a e0       	ldi	r24, 0x0A	; 10
 274:	8c bf       	out	0x3c, r24	; 60
	/*register value= time*(clock speed/prescale)
	register value=0.000001*(8000000/1)
	register value=10*/
	TIMSK|=(1<<OCIE0);//enable timer Compare inturrept
 276:	89 b7       	in	r24, 0x39	; 57
 278:	82 60       	ori	r24, 0x02	; 2
 27a:	89 bf       	out	0x39, r24	; 57
	sei();	
 27c:	78 94       	sei
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 27e:	2f ef       	ldi	r18, 0xFF	; 255
 280:	84 e3       	ldi	r24, 0x34	; 52
 282:	9c e0       	ldi	r25, 0x0C	; 12
 284:	21 50       	subi	r18, 0x01	; 1
 286:	80 40       	sbci	r24, 0x00	; 0
 288:	90 40       	sbci	r25, 0x00	; 0
 28a:	e1 f7       	brne	.-8      	; 0x284 <main+0x2c>
 28c:	00 c0       	rjmp	.+0      	; 0x28e <main+0x36>
 28e:	00 00       	nop
	
	
	_delay_ms(500);
	PORTD&=~(1<<3);//TRIG pin low
 290:	82 b3       	in	r24, 0x12	; 18
 292:	87 7f       	andi	r24, 0xF7	; 247
 294:	82 bb       	out	0x12, r24	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 296:	e5 e8       	ldi	r30, 0x85	; 133
 298:	ea 95       	dec	r30
 29a:	f1 f7       	brne	.-4      	; 0x298 <main+0x40>
 29c:	00 00       	nop
	_delay_us(50);//wait 50 micro sec
	PORTD|=(1<<3);//TRIG pin high
 29e:	82 b3       	in	r24, 0x12	; 18
 2a0:	88 60       	ori	r24, 0x08	; 8
 2a2:	82 bb       	out	0x12, r24	; 18
 2a4:	f5 e8       	ldi	r31, 0x85	; 133
 2a6:	fa 95       	dec	r31
 2a8:	f1 f7       	brne	.-4      	; 0x2a6 <main+0x4e>
 2aa:	00 00       	nop
	_delay_us(50);//wait 50 micro sec
	PORTD&=~(1<<3);////TRIG pin low
 2ac:	82 b3       	in	r24, 0x12	; 18
 2ae:	87 7f       	andi	r24, 0xF7	; 247
 2b0:	82 bb       	out	0x12, r24	; 18
	while(!(PIND&(1<<2)))//wait for pulse
 2b2:	82 99       	sbic	0x10, 2	; 16
 2b4:	05 c0       	rjmp	.+10     	; 0x2c0 <main+0x68>
	TimerCal=0;//rest timer
 2b6:	10 92 87 00 	sts	0x0087, r1	; 0x800087 <TimerCal+0x1>
 2ba:	10 92 86 00 	sts	0x0086, r1	; 0x800086 <TimerCal>
	PORTD&=~(1<<3);//TRIG pin low
	_delay_us(50);//wait 50 micro sec
	PORTD|=(1<<3);//TRIG pin high
	_delay_us(50);//wait 50 micro sec
	PORTD&=~(1<<3);////TRIG pin low
	while(!(PIND&(1<<2)))//wait for pulse
 2be:	f9 cf       	rjmp	.-14     	; 0x2b2 <main+0x5a>
	TimerCal=0;//rest timer
	while((PIND&(1<<2)))////wait for pulse down
 2c0:	82 9b       	sbis	0x10, 2	; 16
 2c2:	15 c0       	rjmp	.+42     	; 0x2ee <main+0x96>
	ultraINT0=TimerCal/4.125;//copy timer value
 2c4:	60 91 86 00 	lds	r22, 0x0086	; 0x800086 <TimerCal>
 2c8:	70 91 87 00 	lds	r23, 0x0087	; 0x800087 <TimerCal+0x1>
 2cc:	80 e0       	ldi	r24, 0x00	; 0
 2ce:	90 e0       	ldi	r25, 0x00	; 0
 2d0:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <__floatunsisf>
 2d4:	20 e0       	ldi	r18, 0x00	; 0
 2d6:	30 e0       	ldi	r19, 0x00	; 0
 2d8:	44 e8       	ldi	r20, 0x84	; 132
 2da:	50 e4       	ldi	r21, 0x40	; 64
 2dc:	0e 94 33 02 	call	0x466	; 0x466 <__divsf3>
 2e0:	0e 94 a5 02 	call	0x54a	; 0x54a <__fixunssfsi>
 2e4:	70 93 85 00 	sts	0x0085, r23	; 0x800085 <ultraINT0+0x1>
 2e8:	60 93 84 00 	sts	0x0084, r22	; 0x800084 <ultraINT0>
	PORTD|=(1<<3);//TRIG pin high
	_delay_us(50);//wait 50 micro sec
	PORTD&=~(1<<3);////TRIG pin low
	while(!(PIND&(1<<2)))//wait for pulse
	TimerCal=0;//rest timer
	while((PIND&(1<<2)))////wait for pulse down
 2ec:	e9 cf       	rjmp	.-46     	; 0x2c0 <main+0x68>
	ultraINT0=TimerCal/4.125;//copy timer value
	
	sprintf(lcddata,"%02u",ultraINT0);
 2ee:	80 91 85 00 	lds	r24, 0x0085	; 0x800085 <ultraINT0+0x1>
 2f2:	8f 93       	push	r24
 2f4:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <ultraINT0>
 2f8:	8f 93       	push	r24
 2fa:	80 e6       	ldi	r24, 0x60	; 96
 2fc:	90 e0       	ldi	r25, 0x00	; 0
 2fe:	9f 93       	push	r25
 300:	8f 93       	push	r24
 302:	80 e7       	ldi	r24, 0x70	; 112
 304:	90 e0       	ldi	r25, 0x00	; 0
 306:	9f 93       	push	r25
 308:	8f 93       	push	r24
 30a:	0e 94 62 03 	call	0x6c4	; 0x6c4 <sprintf>
	LcdSetCursor(0,0,lcddata);
 30e:	40 e7       	ldi	r20, 0x70	; 112
 310:	50 e0       	ldi	r21, 0x00	; 0
 312:	60 e0       	ldi	r22, 0x00	; 0
 314:	80 e0       	ldi	r24, 0x00	; 0
 316:	0e 94 10 01 	call	0x220	; 0x220 <_Z12LcdSetCursorhhPc>
	DDRD|=(1<<4);
 31a:	81 b3       	in	r24, 0x11	; 17
 31c:	80 61       	ori	r24, 0x10	; 16
 31e:	81 bb       	out	0x11, r24	; 17
 320:	0f 90       	pop	r0
 322:	0f 90       	pop	r0
 324:	0f 90       	pop	r0
 326:	0f 90       	pop	r0
 328:	0f 90       	pop	r0
 32a:	0f 90       	pop	r0
	
	for(uint8_t j=0;j<100;j++){
 32c:	90 e0       	ldi	r25, 0x00	; 0
 32e:	94 36       	cpi	r25, 0x64	; 100
 330:	f0 f4       	brcc	.+60     	; 0x36e <main+0x116>
		PORTD|=(1<<4);
 332:	82 b3       	in	r24, 0x12	; 18
 334:	80 61       	ori	r24, 0x10	; 16
 336:	82 bb       	out	0x12, r24	; 18
		for(uint8_t i=0;i<9;i++){
 338:	80 e0       	ldi	r24, 0x00	; 0
 33a:	89 30       	cpi	r24, 0x09	; 9
 33c:	40 f4       	brcc	.+16     	; 0x34e <main+0xf6>
 33e:	e7 ec       	ldi	r30, 0xC7	; 199
 340:	f0 e0       	ldi	r31, 0x00	; 0
 342:	31 97       	sbiw	r30, 0x01	; 1
 344:	f1 f7       	brne	.-4      	; 0x342 <main+0xea>
 346:	00 c0       	rjmp	.+0      	; 0x348 <main+0xf0>
 348:	00 00       	nop
 34a:	8f 5f       	subi	r24, 0xFF	; 255
 34c:	f6 cf       	rjmp	.-20     	; 0x33a <main+0xe2>
			_delay_us(100);
		}
		PORTD&=~(1<<4);
 34e:	82 b3       	in	r24, 0x12	; 18
 350:	8f 7e       	andi	r24, 0xEF	; 239
 352:	82 bb       	out	0x12, r24	; 18
		
		
		for(uint8_t i=0;i<9;i++){
 354:	80 e0       	ldi	r24, 0x00	; 0
 356:	89 30       	cpi	r24, 0x09	; 9
 358:	40 f4       	brcc	.+16     	; 0x36a <main+0x112>
 35a:	e7 ec       	ldi	r30, 0xC7	; 199
 35c:	f0 e0       	ldi	r31, 0x00	; 0
 35e:	31 97       	sbiw	r30, 0x01	; 1
 360:	f1 f7       	brne	.-4      	; 0x35e <main+0x106>
 362:	00 c0       	rjmp	.+0      	; 0x364 <main+0x10c>
 364:	00 00       	nop
 366:	8f 5f       	subi	r24, 0xFF	; 255
 368:	f6 cf       	rjmp	.-20     	; 0x356 <main+0xfe>
	
	sprintf(lcddata,"%02u",ultraINT0);
	LcdSetCursor(0,0,lcddata);
	DDRD|=(1<<4);
	
	for(uint8_t j=0;j<100;j++){
 36a:	9f 5f       	subi	r25, 0xFF	; 255
 36c:	e0 cf       	rjmp	.-64     	; 0x32e <main+0xd6>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 36e:	ff ef       	ldi	r31, 0xFF	; 255
 370:	24 e3       	ldi	r18, 0x34	; 52
 372:	8c e0       	ldi	r24, 0x0C	; 12
 374:	f1 50       	subi	r31, 0x01	; 1
 376:	20 40       	sbci	r18, 0x00	; 0
 378:	80 40       	sbci	r24, 0x00	; 0
 37a:	e1 f7       	brne	.-8      	; 0x374 <main+0x11c>
 37c:	00 c0       	rjmp	.+0      	; 0x37e <main+0x126>
 37e:	00 00       	nop
		}
	}
	
	_delay_ms(500);
	
	for(uint8_t j=0;j<100;j++){
 380:	90 e0       	ldi	r25, 0x00	; 0
 382:	94 36       	cpi	r25, 0x64	; 100
 384:	f0 f4       	brcc	.+60     	; 0x3c2 <main+0x16a>
		PORTD|=(1<<4);
 386:	82 b3       	in	r24, 0x12	; 18
 388:	80 61       	ori	r24, 0x10	; 16
 38a:	82 bb       	out	0x12, r24	; 18
		for(uint8_t i=0;i<20;i++){
 38c:	80 e0       	ldi	r24, 0x00	; 0
 38e:	84 31       	cpi	r24, 0x14	; 20
 390:	40 f4       	brcc	.+16     	; 0x3a2 <main+0x14a>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 392:	e7 ec       	ldi	r30, 0xC7	; 199
 394:	f0 e0       	ldi	r31, 0x00	; 0
 396:	31 97       	sbiw	r30, 0x01	; 1
 398:	f1 f7       	brne	.-4      	; 0x396 <main+0x13e>
 39a:	00 c0       	rjmp	.+0      	; 0x39c <main+0x144>
 39c:	00 00       	nop
 39e:	8f 5f       	subi	r24, 0xFF	; 255
 3a0:	f6 cf       	rjmp	.-20     	; 0x38e <main+0x136>
			_delay_us(100);
		}
		PORTD&=~(1<<4);
 3a2:	82 b3       	in	r24, 0x12	; 18
 3a4:	8f 7e       	andi	r24, 0xEF	; 239
 3a6:	82 bb       	out	0x12, r24	; 18
		
		
		for(uint8_t i=0;i<20;i++){
 3a8:	80 e0       	ldi	r24, 0x00	; 0
 3aa:	84 31       	cpi	r24, 0x14	; 20
 3ac:	40 f4       	brcc	.+16     	; 0x3be <main+0x166>
 3ae:	e7 ec       	ldi	r30, 0xC7	; 199
 3b0:	f0 e0       	ldi	r31, 0x00	; 0
 3b2:	31 97       	sbiw	r30, 0x01	; 1
 3b4:	f1 f7       	brne	.-4      	; 0x3b2 <main+0x15a>
 3b6:	00 c0       	rjmp	.+0      	; 0x3b8 <main+0x160>
 3b8:	00 00       	nop
 3ba:	8f 5f       	subi	r24, 0xFF	; 255
 3bc:	f6 cf       	rjmp	.-20     	; 0x3aa <main+0x152>
		}
	}
	
	_delay_ms(500);
	
	for(uint8_t j=0;j<100;j++){
 3be:	9f 5f       	subi	r25, 0xFF	; 255
 3c0:	e0 cf       	rjmp	.-64     	; 0x382 <main+0x12a>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 3c2:	ff ef       	ldi	r31, 0xFF	; 255
 3c4:	29 e6       	ldi	r18, 0x69	; 105
 3c6:	88 e1       	ldi	r24, 0x18	; 24
 3c8:	f1 50       	subi	r31, 0x01	; 1
 3ca:	20 40       	sbci	r18, 0x00	; 0
 3cc:	80 40       	sbci	r24, 0x00	; 0
 3ce:	e1 f7       	brne	.-8      	; 0x3c8 <main+0x170>
 3d0:	00 c0       	rjmp	.+0      	; 0x3d2 <main+0x17a>
 3d2:	00 00       	nop
			_delay_us(100);
		}
	}
	
	_delay_ms(1000);
	for(uint8_t j=0;j<100;j++){
 3d4:	90 e0       	ldi	r25, 0x00	; 0
 3d6:	94 36       	cpi	r25, 0x64	; 100
 3d8:	f0 f4       	brcc	.+60     	; 0x416 <__EEPROM_REGION_LENGTH__+0x16>
		PORTD|=(1<<4);
 3da:	82 b3       	in	r24, 0x12	; 18
 3dc:	80 61       	ori	r24, 0x10	; 16
 3de:	82 bb       	out	0x12, r24	; 18
		for(uint8_t i=0;i<9;i++){
 3e0:	80 e0       	ldi	r24, 0x00	; 0
 3e2:	89 30       	cpi	r24, 0x09	; 9
 3e4:	40 f4       	brcc	.+16     	; 0x3f6 <main+0x19e>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 3e6:	e7 ec       	ldi	r30, 0xC7	; 199
 3e8:	f0 e0       	ldi	r31, 0x00	; 0
 3ea:	31 97       	sbiw	r30, 0x01	; 1
 3ec:	f1 f7       	brne	.-4      	; 0x3ea <main+0x192>
 3ee:	00 c0       	rjmp	.+0      	; 0x3f0 <main+0x198>
 3f0:	00 00       	nop
 3f2:	8f 5f       	subi	r24, 0xFF	; 255
 3f4:	f6 cf       	rjmp	.-20     	; 0x3e2 <main+0x18a>
			_delay_us(100);
		}
		PORTD&=~(1<<4);
 3f6:	82 b3       	in	r24, 0x12	; 18
 3f8:	8f 7e       	andi	r24, 0xEF	; 239
 3fa:	82 bb       	out	0x12, r24	; 18
		
		
		for(uint8_t i=0;i<9;i++){
 3fc:	80 e0       	ldi	r24, 0x00	; 0
 3fe:	89 30       	cpi	r24, 0x09	; 9
 400:	40 f4       	brcc	.+16     	; 0x412 <__EEPROM_REGION_LENGTH__+0x12>
 402:	e7 ec       	ldi	r30, 0xC7	; 199
 404:	f0 e0       	ldi	r31, 0x00	; 0
 406:	31 97       	sbiw	r30, 0x01	; 1
 408:	f1 f7       	brne	.-4      	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
 40a:	00 c0       	rjmp	.+0      	; 0x40c <__EEPROM_REGION_LENGTH__+0xc>
 40c:	00 00       	nop
 40e:	8f 5f       	subi	r24, 0xFF	; 255
 410:	f6 cf       	rjmp	.-20     	; 0x3fe <main+0x1a6>
			_delay_us(100);
		}
	}
	
	_delay_ms(1000);
	for(uint8_t j=0;j<100;j++){
 412:	9f 5f       	subi	r25, 0xFF	; 255
 414:	e0 cf       	rjmp	.-64     	; 0x3d6 <main+0x17e>
		}
	}
	
	while (1)
	{	
		if (PINA&(1<<0))
 416:	c8 9b       	sbis	0x19, 0	; 25
 418:	07 c0       	rjmp	.+14     	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
		{
			LcdSetCursor(0,1,"HIGH");
 41a:	45 e6       	ldi	r20, 0x65	; 101
 41c:	50 e0       	ldi	r21, 0x00	; 0
 41e:	61 e0       	ldi	r22, 0x01	; 1
 420:	80 e0       	ldi	r24, 0x00	; 0
 422:	0e 94 10 01 	call	0x220	; 0x220 <_Z12LcdSetCursorhhPc>
 426:	f7 cf       	rjmp	.-18     	; 0x416 <__EEPROM_REGION_LENGTH__+0x16>
		} 
		else
		{	LcdSetCursor(0,1,"LOW ");
 428:	4a e6       	ldi	r20, 0x6A	; 106
 42a:	50 e0       	ldi	r21, 0x00	; 0
 42c:	61 e0       	ldi	r22, 0x01	; 1
 42e:	80 e0       	ldi	r24, 0x00	; 0
 430:	0e 94 10 01 	call	0x220	; 0x220 <_Z12LcdSetCursorhhPc>
 434:	f0 cf       	rjmp	.-32     	; 0x416 <__EEPROM_REGION_LENGTH__+0x16>

00000436 <__vector_10>:
	}
}



ISR(TIMER0_COMP_vect){//ultrasonic
 436:	1f 92       	push	r1
 438:	0f 92       	push	r0
 43a:	0f b6       	in	r0, 0x3f	; 63
 43c:	0f 92       	push	r0
 43e:	11 24       	eor	r1, r1
 440:	8f 93       	push	r24
 442:	9f 93       	push	r25
	TimerCal++;
 444:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <TimerCal>
 448:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <TimerCal+0x1>
 44c:	01 96       	adiw	r24, 0x01	; 1
 44e:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <TimerCal+0x1>
 452:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <TimerCal>
	TCNT0=0;
 456:	12 be       	out	0x32, r1	; 50
	
 458:	9f 91       	pop	r25
 45a:	8f 91       	pop	r24
 45c:	0f 90       	pop	r0
 45e:	0f be       	out	0x3f, r0	; 63
 460:	0f 90       	pop	r0
 462:	1f 90       	pop	r1
 464:	18 95       	reti

00000466 <__divsf3>:
 466:	0e 94 47 02 	call	0x48e	; 0x48e <__divsf3x>
 46a:	0c 94 28 03 	jmp	0x650	; 0x650 <__fp_round>
 46e:	0e 94 21 03 	call	0x642	; 0x642 <__fp_pscB>
 472:	58 f0       	brcs	.+22     	; 0x48a <__divsf3+0x24>
 474:	0e 94 1a 03 	call	0x634	; 0x634 <__fp_pscA>
 478:	40 f0       	brcs	.+16     	; 0x48a <__divsf3+0x24>
 47a:	29 f4       	brne	.+10     	; 0x486 <__divsf3+0x20>
 47c:	5f 3f       	cpi	r21, 0xFF	; 255
 47e:	29 f0       	breq	.+10     	; 0x48a <__divsf3+0x24>
 480:	0c 94 11 03 	jmp	0x622	; 0x622 <__fp_inf>
 484:	51 11       	cpse	r21, r1
 486:	0c 94 5c 03 	jmp	0x6b8	; 0x6b8 <__fp_szero>
 48a:	0c 94 17 03 	jmp	0x62e	; 0x62e <__fp_nan>

0000048e <__divsf3x>:
 48e:	0e 94 39 03 	call	0x672	; 0x672 <__fp_split3>
 492:	68 f3       	brcs	.-38     	; 0x46e <__divsf3+0x8>

00000494 <__divsf3_pse>:
 494:	99 23       	and	r25, r25
 496:	b1 f3       	breq	.-20     	; 0x484 <__divsf3+0x1e>
 498:	55 23       	and	r21, r21
 49a:	91 f3       	breq	.-28     	; 0x480 <__divsf3+0x1a>
 49c:	95 1b       	sub	r25, r21
 49e:	55 0b       	sbc	r21, r21
 4a0:	bb 27       	eor	r27, r27
 4a2:	aa 27       	eor	r26, r26
 4a4:	62 17       	cp	r22, r18
 4a6:	73 07       	cpc	r23, r19
 4a8:	84 07       	cpc	r24, r20
 4aa:	38 f0       	brcs	.+14     	; 0x4ba <__divsf3_pse+0x26>
 4ac:	9f 5f       	subi	r25, 0xFF	; 255
 4ae:	5f 4f       	sbci	r21, 0xFF	; 255
 4b0:	22 0f       	add	r18, r18
 4b2:	33 1f       	adc	r19, r19
 4b4:	44 1f       	adc	r20, r20
 4b6:	aa 1f       	adc	r26, r26
 4b8:	a9 f3       	breq	.-22     	; 0x4a4 <__divsf3_pse+0x10>
 4ba:	35 d0       	rcall	.+106    	; 0x526 <__divsf3_pse+0x92>
 4bc:	0e 2e       	mov	r0, r30
 4be:	3a f0       	brmi	.+14     	; 0x4ce <__divsf3_pse+0x3a>
 4c0:	e0 e8       	ldi	r30, 0x80	; 128
 4c2:	32 d0       	rcall	.+100    	; 0x528 <__divsf3_pse+0x94>
 4c4:	91 50       	subi	r25, 0x01	; 1
 4c6:	50 40       	sbci	r21, 0x00	; 0
 4c8:	e6 95       	lsr	r30
 4ca:	00 1c       	adc	r0, r0
 4cc:	ca f7       	brpl	.-14     	; 0x4c0 <__divsf3_pse+0x2c>
 4ce:	2b d0       	rcall	.+86     	; 0x526 <__divsf3_pse+0x92>
 4d0:	fe 2f       	mov	r31, r30
 4d2:	29 d0       	rcall	.+82     	; 0x526 <__divsf3_pse+0x92>
 4d4:	66 0f       	add	r22, r22
 4d6:	77 1f       	adc	r23, r23
 4d8:	88 1f       	adc	r24, r24
 4da:	bb 1f       	adc	r27, r27
 4dc:	26 17       	cp	r18, r22
 4de:	37 07       	cpc	r19, r23
 4e0:	48 07       	cpc	r20, r24
 4e2:	ab 07       	cpc	r26, r27
 4e4:	b0 e8       	ldi	r27, 0x80	; 128
 4e6:	09 f0       	breq	.+2      	; 0x4ea <__divsf3_pse+0x56>
 4e8:	bb 0b       	sbc	r27, r27
 4ea:	80 2d       	mov	r24, r0
 4ec:	bf 01       	movw	r22, r30
 4ee:	ff 27       	eor	r31, r31
 4f0:	93 58       	subi	r25, 0x83	; 131
 4f2:	5f 4f       	sbci	r21, 0xFF	; 255
 4f4:	3a f0       	brmi	.+14     	; 0x504 <__divsf3_pse+0x70>
 4f6:	9e 3f       	cpi	r25, 0xFE	; 254
 4f8:	51 05       	cpc	r21, r1
 4fa:	78 f0       	brcs	.+30     	; 0x51a <__divsf3_pse+0x86>
 4fc:	0c 94 11 03 	jmp	0x622	; 0x622 <__fp_inf>
 500:	0c 94 5c 03 	jmp	0x6b8	; 0x6b8 <__fp_szero>
 504:	5f 3f       	cpi	r21, 0xFF	; 255
 506:	e4 f3       	brlt	.-8      	; 0x500 <__divsf3_pse+0x6c>
 508:	98 3e       	cpi	r25, 0xE8	; 232
 50a:	d4 f3       	brlt	.-12     	; 0x500 <__divsf3_pse+0x6c>
 50c:	86 95       	lsr	r24
 50e:	77 95       	ror	r23
 510:	67 95       	ror	r22
 512:	b7 95       	ror	r27
 514:	f7 95       	ror	r31
 516:	9f 5f       	subi	r25, 0xFF	; 255
 518:	c9 f7       	brne	.-14     	; 0x50c <__divsf3_pse+0x78>
 51a:	88 0f       	add	r24, r24
 51c:	91 1d       	adc	r25, r1
 51e:	96 95       	lsr	r25
 520:	87 95       	ror	r24
 522:	97 f9       	bld	r25, 7
 524:	08 95       	ret
 526:	e1 e0       	ldi	r30, 0x01	; 1
 528:	66 0f       	add	r22, r22
 52a:	77 1f       	adc	r23, r23
 52c:	88 1f       	adc	r24, r24
 52e:	bb 1f       	adc	r27, r27
 530:	62 17       	cp	r22, r18
 532:	73 07       	cpc	r23, r19
 534:	84 07       	cpc	r24, r20
 536:	ba 07       	cpc	r27, r26
 538:	20 f0       	brcs	.+8      	; 0x542 <__divsf3_pse+0xae>
 53a:	62 1b       	sub	r22, r18
 53c:	73 0b       	sbc	r23, r19
 53e:	84 0b       	sbc	r24, r20
 540:	ba 0b       	sbc	r27, r26
 542:	ee 1f       	adc	r30, r30
 544:	88 f7       	brcc	.-30     	; 0x528 <__divsf3_pse+0x94>
 546:	e0 95       	com	r30
 548:	08 95       	ret

0000054a <__fixunssfsi>:
 54a:	0e 94 41 03 	call	0x682	; 0x682 <__fp_splitA>
 54e:	88 f0       	brcs	.+34     	; 0x572 <__fixunssfsi+0x28>
 550:	9f 57       	subi	r25, 0x7F	; 127
 552:	98 f0       	brcs	.+38     	; 0x57a <__fixunssfsi+0x30>
 554:	b9 2f       	mov	r27, r25
 556:	99 27       	eor	r25, r25
 558:	b7 51       	subi	r27, 0x17	; 23
 55a:	b0 f0       	brcs	.+44     	; 0x588 <__fixunssfsi+0x3e>
 55c:	e1 f0       	breq	.+56     	; 0x596 <__fixunssfsi+0x4c>
 55e:	66 0f       	add	r22, r22
 560:	77 1f       	adc	r23, r23
 562:	88 1f       	adc	r24, r24
 564:	99 1f       	adc	r25, r25
 566:	1a f0       	brmi	.+6      	; 0x56e <__fixunssfsi+0x24>
 568:	ba 95       	dec	r27
 56a:	c9 f7       	brne	.-14     	; 0x55e <__fixunssfsi+0x14>
 56c:	14 c0       	rjmp	.+40     	; 0x596 <__fixunssfsi+0x4c>
 56e:	b1 30       	cpi	r27, 0x01	; 1
 570:	91 f0       	breq	.+36     	; 0x596 <__fixunssfsi+0x4c>
 572:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <__fp_zero>
 576:	b1 e0       	ldi	r27, 0x01	; 1
 578:	08 95       	ret
 57a:	0c 94 5b 03 	jmp	0x6b6	; 0x6b6 <__fp_zero>
 57e:	67 2f       	mov	r22, r23
 580:	78 2f       	mov	r23, r24
 582:	88 27       	eor	r24, r24
 584:	b8 5f       	subi	r27, 0xF8	; 248
 586:	39 f0       	breq	.+14     	; 0x596 <__fixunssfsi+0x4c>
 588:	b9 3f       	cpi	r27, 0xF9	; 249
 58a:	cc f3       	brlt	.-14     	; 0x57e <__fixunssfsi+0x34>
 58c:	86 95       	lsr	r24
 58e:	77 95       	ror	r23
 590:	67 95       	ror	r22
 592:	b3 95       	inc	r27
 594:	d9 f7       	brne	.-10     	; 0x58c <__fixunssfsi+0x42>
 596:	3e f4       	brtc	.+14     	; 0x5a6 <__fixunssfsi+0x5c>
 598:	90 95       	com	r25
 59a:	80 95       	com	r24
 59c:	70 95       	com	r23
 59e:	61 95       	neg	r22
 5a0:	7f 4f       	sbci	r23, 0xFF	; 255
 5a2:	8f 4f       	sbci	r24, 0xFF	; 255
 5a4:	9f 4f       	sbci	r25, 0xFF	; 255
 5a6:	08 95       	ret

000005a8 <__floatunsisf>:
 5a8:	e8 94       	clt
 5aa:	09 c0       	rjmp	.+18     	; 0x5be <__floatsisf+0x12>

000005ac <__floatsisf>:
 5ac:	97 fb       	bst	r25, 7
 5ae:	3e f4       	brtc	.+14     	; 0x5be <__floatsisf+0x12>
 5b0:	90 95       	com	r25
 5b2:	80 95       	com	r24
 5b4:	70 95       	com	r23
 5b6:	61 95       	neg	r22
 5b8:	7f 4f       	sbci	r23, 0xFF	; 255
 5ba:	8f 4f       	sbci	r24, 0xFF	; 255
 5bc:	9f 4f       	sbci	r25, 0xFF	; 255
 5be:	99 23       	and	r25, r25
 5c0:	a9 f0       	breq	.+42     	; 0x5ec <__floatsisf+0x40>
 5c2:	f9 2f       	mov	r31, r25
 5c4:	96 e9       	ldi	r25, 0x96	; 150
 5c6:	bb 27       	eor	r27, r27
 5c8:	93 95       	inc	r25
 5ca:	f6 95       	lsr	r31
 5cc:	87 95       	ror	r24
 5ce:	77 95       	ror	r23
 5d0:	67 95       	ror	r22
 5d2:	b7 95       	ror	r27
 5d4:	f1 11       	cpse	r31, r1
 5d6:	f8 cf       	rjmp	.-16     	; 0x5c8 <__floatsisf+0x1c>
 5d8:	fa f4       	brpl	.+62     	; 0x618 <__floatsisf+0x6c>
 5da:	bb 0f       	add	r27, r27
 5dc:	11 f4       	brne	.+4      	; 0x5e2 <__floatsisf+0x36>
 5de:	60 ff       	sbrs	r22, 0
 5e0:	1b c0       	rjmp	.+54     	; 0x618 <__floatsisf+0x6c>
 5e2:	6f 5f       	subi	r22, 0xFF	; 255
 5e4:	7f 4f       	sbci	r23, 0xFF	; 255
 5e6:	8f 4f       	sbci	r24, 0xFF	; 255
 5e8:	9f 4f       	sbci	r25, 0xFF	; 255
 5ea:	16 c0       	rjmp	.+44     	; 0x618 <__floatsisf+0x6c>
 5ec:	88 23       	and	r24, r24
 5ee:	11 f0       	breq	.+4      	; 0x5f4 <__floatsisf+0x48>
 5f0:	96 e9       	ldi	r25, 0x96	; 150
 5f2:	11 c0       	rjmp	.+34     	; 0x616 <__floatsisf+0x6a>
 5f4:	77 23       	and	r23, r23
 5f6:	21 f0       	breq	.+8      	; 0x600 <__floatsisf+0x54>
 5f8:	9e e8       	ldi	r25, 0x8E	; 142
 5fa:	87 2f       	mov	r24, r23
 5fc:	76 2f       	mov	r23, r22
 5fe:	05 c0       	rjmp	.+10     	; 0x60a <__floatsisf+0x5e>
 600:	66 23       	and	r22, r22
 602:	71 f0       	breq	.+28     	; 0x620 <__floatsisf+0x74>
 604:	96 e8       	ldi	r25, 0x86	; 134
 606:	86 2f       	mov	r24, r22
 608:	70 e0       	ldi	r23, 0x00	; 0
 60a:	60 e0       	ldi	r22, 0x00	; 0
 60c:	2a f0       	brmi	.+10     	; 0x618 <__floatsisf+0x6c>
 60e:	9a 95       	dec	r25
 610:	66 0f       	add	r22, r22
 612:	77 1f       	adc	r23, r23
 614:	88 1f       	adc	r24, r24
 616:	da f7       	brpl	.-10     	; 0x60e <__floatsisf+0x62>
 618:	88 0f       	add	r24, r24
 61a:	96 95       	lsr	r25
 61c:	87 95       	ror	r24
 61e:	97 f9       	bld	r25, 7
 620:	08 95       	ret

00000622 <__fp_inf>:
 622:	97 f9       	bld	r25, 7
 624:	9f 67       	ori	r25, 0x7F	; 127
 626:	80 e8       	ldi	r24, 0x80	; 128
 628:	70 e0       	ldi	r23, 0x00	; 0
 62a:	60 e0       	ldi	r22, 0x00	; 0
 62c:	08 95       	ret

0000062e <__fp_nan>:
 62e:	9f ef       	ldi	r25, 0xFF	; 255
 630:	80 ec       	ldi	r24, 0xC0	; 192
 632:	08 95       	ret

00000634 <__fp_pscA>:
 634:	00 24       	eor	r0, r0
 636:	0a 94       	dec	r0
 638:	16 16       	cp	r1, r22
 63a:	17 06       	cpc	r1, r23
 63c:	18 06       	cpc	r1, r24
 63e:	09 06       	cpc	r0, r25
 640:	08 95       	ret

00000642 <__fp_pscB>:
 642:	00 24       	eor	r0, r0
 644:	0a 94       	dec	r0
 646:	12 16       	cp	r1, r18
 648:	13 06       	cpc	r1, r19
 64a:	14 06       	cpc	r1, r20
 64c:	05 06       	cpc	r0, r21
 64e:	08 95       	ret

00000650 <__fp_round>:
 650:	09 2e       	mov	r0, r25
 652:	03 94       	inc	r0
 654:	00 0c       	add	r0, r0
 656:	11 f4       	brne	.+4      	; 0x65c <__fp_round+0xc>
 658:	88 23       	and	r24, r24
 65a:	52 f0       	brmi	.+20     	; 0x670 <__fp_round+0x20>
 65c:	bb 0f       	add	r27, r27
 65e:	40 f4       	brcc	.+16     	; 0x670 <__fp_round+0x20>
 660:	bf 2b       	or	r27, r31
 662:	11 f4       	brne	.+4      	; 0x668 <__fp_round+0x18>
 664:	60 ff       	sbrs	r22, 0
 666:	04 c0       	rjmp	.+8      	; 0x670 <__fp_round+0x20>
 668:	6f 5f       	subi	r22, 0xFF	; 255
 66a:	7f 4f       	sbci	r23, 0xFF	; 255
 66c:	8f 4f       	sbci	r24, 0xFF	; 255
 66e:	9f 4f       	sbci	r25, 0xFF	; 255
 670:	08 95       	ret

00000672 <__fp_split3>:
 672:	57 fd       	sbrc	r21, 7
 674:	90 58       	subi	r25, 0x80	; 128
 676:	44 0f       	add	r20, r20
 678:	55 1f       	adc	r21, r21
 67a:	59 f0       	breq	.+22     	; 0x692 <__fp_splitA+0x10>
 67c:	5f 3f       	cpi	r21, 0xFF	; 255
 67e:	71 f0       	breq	.+28     	; 0x69c <__fp_splitA+0x1a>
 680:	47 95       	ror	r20

00000682 <__fp_splitA>:
 682:	88 0f       	add	r24, r24
 684:	97 fb       	bst	r25, 7
 686:	99 1f       	adc	r25, r25
 688:	61 f0       	breq	.+24     	; 0x6a2 <__fp_splitA+0x20>
 68a:	9f 3f       	cpi	r25, 0xFF	; 255
 68c:	79 f0       	breq	.+30     	; 0x6ac <__fp_splitA+0x2a>
 68e:	87 95       	ror	r24
 690:	08 95       	ret
 692:	12 16       	cp	r1, r18
 694:	13 06       	cpc	r1, r19
 696:	14 06       	cpc	r1, r20
 698:	55 1f       	adc	r21, r21
 69a:	f2 cf       	rjmp	.-28     	; 0x680 <__fp_split3+0xe>
 69c:	46 95       	lsr	r20
 69e:	f1 df       	rcall	.-30     	; 0x682 <__fp_splitA>
 6a0:	08 c0       	rjmp	.+16     	; 0x6b2 <__fp_splitA+0x30>
 6a2:	16 16       	cp	r1, r22
 6a4:	17 06       	cpc	r1, r23
 6a6:	18 06       	cpc	r1, r24
 6a8:	99 1f       	adc	r25, r25
 6aa:	f1 cf       	rjmp	.-30     	; 0x68e <__fp_splitA+0xc>
 6ac:	86 95       	lsr	r24
 6ae:	71 05       	cpc	r23, r1
 6b0:	61 05       	cpc	r22, r1
 6b2:	08 94       	sec
 6b4:	08 95       	ret

000006b6 <__fp_zero>:
 6b6:	e8 94       	clt

000006b8 <__fp_szero>:
 6b8:	bb 27       	eor	r27, r27
 6ba:	66 27       	eor	r22, r22
 6bc:	77 27       	eor	r23, r23
 6be:	cb 01       	movw	r24, r22
 6c0:	97 f9       	bld	r25, 7
 6c2:	08 95       	ret

000006c4 <sprintf>:
 6c4:	ae e0       	ldi	r26, 0x0E	; 14
 6c6:	b0 e0       	ldi	r27, 0x00	; 0
 6c8:	e8 e6       	ldi	r30, 0x68	; 104
 6ca:	f3 e0       	ldi	r31, 0x03	; 3
 6cc:	0c 94 23 06 	jmp	0xc46	; 0xc46 <__prologue_saves__+0x1c>
 6d0:	0d 89       	ldd	r16, Y+21	; 0x15
 6d2:	1e 89       	ldd	r17, Y+22	; 0x16
 6d4:	86 e0       	ldi	r24, 0x06	; 6
 6d6:	8c 83       	std	Y+4, r24	; 0x04
 6d8:	1a 83       	std	Y+2, r17	; 0x02
 6da:	09 83       	std	Y+1, r16	; 0x01
 6dc:	8f ef       	ldi	r24, 0xFF	; 255
 6de:	9f e7       	ldi	r25, 0x7F	; 127
 6e0:	9e 83       	std	Y+6, r25	; 0x06
 6e2:	8d 83       	std	Y+5, r24	; 0x05
 6e4:	ae 01       	movw	r20, r28
 6e6:	47 5e       	subi	r20, 0xE7	; 231
 6e8:	5f 4f       	sbci	r21, 0xFF	; 255
 6ea:	6f 89       	ldd	r22, Y+23	; 0x17
 6ec:	78 8d       	ldd	r23, Y+24	; 0x18
 6ee:	ce 01       	movw	r24, r28
 6f0:	01 96       	adiw	r24, 0x01	; 1
 6f2:	0e 94 84 03 	call	0x708	; 0x708 <vfprintf>
 6f6:	ef 81       	ldd	r30, Y+7	; 0x07
 6f8:	f8 85       	ldd	r31, Y+8	; 0x08
 6fa:	e0 0f       	add	r30, r16
 6fc:	f1 1f       	adc	r31, r17
 6fe:	10 82       	st	Z, r1
 700:	2e 96       	adiw	r28, 0x0e	; 14
 702:	e4 e0       	ldi	r30, 0x04	; 4
 704:	0c 94 3f 06 	jmp	0xc7e	; 0xc7e <__epilogue_restores__+0x1c>

00000708 <vfprintf>:
 708:	ab e0       	ldi	r26, 0x0B	; 11
 70a:	b0 e0       	ldi	r27, 0x00	; 0
 70c:	ea e8       	ldi	r30, 0x8A	; 138
 70e:	f3 e0       	ldi	r31, 0x03	; 3
 710:	0c 94 15 06 	jmp	0xc2a	; 0xc2a <__prologue_saves__>
 714:	6c 01       	movw	r12, r24
 716:	7b 01       	movw	r14, r22
 718:	8a 01       	movw	r16, r20
 71a:	fc 01       	movw	r30, r24
 71c:	17 82       	std	Z+7, r1	; 0x07
 71e:	16 82       	std	Z+6, r1	; 0x06
 720:	83 81       	ldd	r24, Z+3	; 0x03
 722:	81 ff       	sbrs	r24, 1
 724:	cc c1       	rjmp	.+920    	; 0xabe <__stack+0x25f>
 726:	ce 01       	movw	r24, r28
 728:	01 96       	adiw	r24, 0x01	; 1
 72a:	3c 01       	movw	r6, r24
 72c:	f6 01       	movw	r30, r12
 72e:	93 81       	ldd	r25, Z+3	; 0x03
 730:	f7 01       	movw	r30, r14
 732:	93 fd       	sbrc	r25, 3
 734:	85 91       	lpm	r24, Z+
 736:	93 ff       	sbrs	r25, 3
 738:	81 91       	ld	r24, Z+
 73a:	7f 01       	movw	r14, r30
 73c:	88 23       	and	r24, r24
 73e:	09 f4       	brne	.+2      	; 0x742 <vfprintf+0x3a>
 740:	ba c1       	rjmp	.+884    	; 0xab6 <__stack+0x257>
 742:	85 32       	cpi	r24, 0x25	; 37
 744:	39 f4       	brne	.+14     	; 0x754 <vfprintf+0x4c>
 746:	93 fd       	sbrc	r25, 3
 748:	85 91       	lpm	r24, Z+
 74a:	93 ff       	sbrs	r25, 3
 74c:	81 91       	ld	r24, Z+
 74e:	7f 01       	movw	r14, r30
 750:	85 32       	cpi	r24, 0x25	; 37
 752:	29 f4       	brne	.+10     	; 0x75e <vfprintf+0x56>
 754:	b6 01       	movw	r22, r12
 756:	90 e0       	ldi	r25, 0x00	; 0
 758:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <fputc>
 75c:	e7 cf       	rjmp	.-50     	; 0x72c <vfprintf+0x24>
 75e:	91 2c       	mov	r9, r1
 760:	21 2c       	mov	r2, r1
 762:	31 2c       	mov	r3, r1
 764:	ff e1       	ldi	r31, 0x1F	; 31
 766:	f3 15       	cp	r31, r3
 768:	d8 f0       	brcs	.+54     	; 0x7a0 <vfprintf+0x98>
 76a:	8b 32       	cpi	r24, 0x2B	; 43
 76c:	79 f0       	breq	.+30     	; 0x78c <vfprintf+0x84>
 76e:	38 f4       	brcc	.+14     	; 0x77e <vfprintf+0x76>
 770:	80 32       	cpi	r24, 0x20	; 32
 772:	79 f0       	breq	.+30     	; 0x792 <vfprintf+0x8a>
 774:	83 32       	cpi	r24, 0x23	; 35
 776:	a1 f4       	brne	.+40     	; 0x7a0 <vfprintf+0x98>
 778:	23 2d       	mov	r18, r3
 77a:	20 61       	ori	r18, 0x10	; 16
 77c:	1d c0       	rjmp	.+58     	; 0x7b8 <vfprintf+0xb0>
 77e:	8d 32       	cpi	r24, 0x2D	; 45
 780:	61 f0       	breq	.+24     	; 0x79a <vfprintf+0x92>
 782:	80 33       	cpi	r24, 0x30	; 48
 784:	69 f4       	brne	.+26     	; 0x7a0 <vfprintf+0x98>
 786:	23 2d       	mov	r18, r3
 788:	21 60       	ori	r18, 0x01	; 1
 78a:	16 c0       	rjmp	.+44     	; 0x7b8 <vfprintf+0xb0>
 78c:	83 2d       	mov	r24, r3
 78e:	82 60       	ori	r24, 0x02	; 2
 790:	38 2e       	mov	r3, r24
 792:	e3 2d       	mov	r30, r3
 794:	e4 60       	ori	r30, 0x04	; 4
 796:	3e 2e       	mov	r3, r30
 798:	2a c0       	rjmp	.+84     	; 0x7ee <vfprintf+0xe6>
 79a:	f3 2d       	mov	r31, r3
 79c:	f8 60       	ori	r31, 0x08	; 8
 79e:	1d c0       	rjmp	.+58     	; 0x7da <vfprintf+0xd2>
 7a0:	37 fc       	sbrc	r3, 7
 7a2:	2d c0       	rjmp	.+90     	; 0x7fe <vfprintf+0xf6>
 7a4:	20 ed       	ldi	r18, 0xD0	; 208
 7a6:	28 0f       	add	r18, r24
 7a8:	2a 30       	cpi	r18, 0x0A	; 10
 7aa:	40 f0       	brcs	.+16     	; 0x7bc <vfprintf+0xb4>
 7ac:	8e 32       	cpi	r24, 0x2E	; 46
 7ae:	b9 f4       	brne	.+46     	; 0x7de <vfprintf+0xd6>
 7b0:	36 fc       	sbrc	r3, 6
 7b2:	81 c1       	rjmp	.+770    	; 0xab6 <__stack+0x257>
 7b4:	23 2d       	mov	r18, r3
 7b6:	20 64       	ori	r18, 0x40	; 64
 7b8:	32 2e       	mov	r3, r18
 7ba:	19 c0       	rjmp	.+50     	; 0x7ee <vfprintf+0xe6>
 7bc:	36 fe       	sbrs	r3, 6
 7be:	06 c0       	rjmp	.+12     	; 0x7cc <vfprintf+0xc4>
 7c0:	8a e0       	ldi	r24, 0x0A	; 10
 7c2:	98 9e       	mul	r9, r24
 7c4:	20 0d       	add	r18, r0
 7c6:	11 24       	eor	r1, r1
 7c8:	92 2e       	mov	r9, r18
 7ca:	11 c0       	rjmp	.+34     	; 0x7ee <vfprintf+0xe6>
 7cc:	ea e0       	ldi	r30, 0x0A	; 10
 7ce:	2e 9e       	mul	r2, r30
 7d0:	20 0d       	add	r18, r0
 7d2:	11 24       	eor	r1, r1
 7d4:	22 2e       	mov	r2, r18
 7d6:	f3 2d       	mov	r31, r3
 7d8:	f0 62       	ori	r31, 0x20	; 32
 7da:	3f 2e       	mov	r3, r31
 7dc:	08 c0       	rjmp	.+16     	; 0x7ee <vfprintf+0xe6>
 7de:	8c 36       	cpi	r24, 0x6C	; 108
 7e0:	21 f4       	brne	.+8      	; 0x7ea <vfprintf+0xe2>
 7e2:	83 2d       	mov	r24, r3
 7e4:	80 68       	ori	r24, 0x80	; 128
 7e6:	38 2e       	mov	r3, r24
 7e8:	02 c0       	rjmp	.+4      	; 0x7ee <vfprintf+0xe6>
 7ea:	88 36       	cpi	r24, 0x68	; 104
 7ec:	41 f4       	brne	.+16     	; 0x7fe <vfprintf+0xf6>
 7ee:	f7 01       	movw	r30, r14
 7f0:	93 fd       	sbrc	r25, 3
 7f2:	85 91       	lpm	r24, Z+
 7f4:	93 ff       	sbrs	r25, 3
 7f6:	81 91       	ld	r24, Z+
 7f8:	7f 01       	movw	r14, r30
 7fa:	81 11       	cpse	r24, r1
 7fc:	b3 cf       	rjmp	.-154    	; 0x764 <vfprintf+0x5c>
 7fe:	98 2f       	mov	r25, r24
 800:	9f 7d       	andi	r25, 0xDF	; 223
 802:	95 54       	subi	r25, 0x45	; 69
 804:	93 30       	cpi	r25, 0x03	; 3
 806:	28 f4       	brcc	.+10     	; 0x812 <__DATA_REGION_LENGTH__+0x12>
 808:	0c 5f       	subi	r16, 0xFC	; 252
 80a:	1f 4f       	sbci	r17, 0xFF	; 255
 80c:	9f e3       	ldi	r25, 0x3F	; 63
 80e:	99 83       	std	Y+1, r25	; 0x01
 810:	0d c0       	rjmp	.+26     	; 0x82c <__DATA_REGION_LENGTH__+0x2c>
 812:	83 36       	cpi	r24, 0x63	; 99
 814:	31 f0       	breq	.+12     	; 0x822 <__DATA_REGION_LENGTH__+0x22>
 816:	83 37       	cpi	r24, 0x73	; 115
 818:	71 f0       	breq	.+28     	; 0x836 <__DATA_REGION_LENGTH__+0x36>
 81a:	83 35       	cpi	r24, 0x53	; 83
 81c:	09 f0       	breq	.+2      	; 0x820 <__DATA_REGION_LENGTH__+0x20>
 81e:	59 c0       	rjmp	.+178    	; 0x8d2 <__stack+0x73>
 820:	21 c0       	rjmp	.+66     	; 0x864 <__stack+0x5>
 822:	f8 01       	movw	r30, r16
 824:	80 81       	ld	r24, Z
 826:	89 83       	std	Y+1, r24	; 0x01
 828:	0e 5f       	subi	r16, 0xFE	; 254
 82a:	1f 4f       	sbci	r17, 0xFF	; 255
 82c:	88 24       	eor	r8, r8
 82e:	83 94       	inc	r8
 830:	91 2c       	mov	r9, r1
 832:	53 01       	movw	r10, r6
 834:	13 c0       	rjmp	.+38     	; 0x85c <__DATA_REGION_LENGTH__+0x5c>
 836:	28 01       	movw	r4, r16
 838:	f2 e0       	ldi	r31, 0x02	; 2
 83a:	4f 0e       	add	r4, r31
 83c:	51 1c       	adc	r5, r1
 83e:	f8 01       	movw	r30, r16
 840:	a0 80       	ld	r10, Z
 842:	b1 80       	ldd	r11, Z+1	; 0x01
 844:	36 fe       	sbrs	r3, 6
 846:	03 c0       	rjmp	.+6      	; 0x84e <__DATA_REGION_LENGTH__+0x4e>
 848:	69 2d       	mov	r22, r9
 84a:	70 e0       	ldi	r23, 0x00	; 0
 84c:	02 c0       	rjmp	.+4      	; 0x852 <__DATA_REGION_LENGTH__+0x52>
 84e:	6f ef       	ldi	r22, 0xFF	; 255
 850:	7f ef       	ldi	r23, 0xFF	; 255
 852:	c5 01       	movw	r24, r10
 854:	0e 94 70 05 	call	0xae0	; 0xae0 <strnlen>
 858:	4c 01       	movw	r8, r24
 85a:	82 01       	movw	r16, r4
 85c:	f3 2d       	mov	r31, r3
 85e:	ff 77       	andi	r31, 0x7F	; 127
 860:	3f 2e       	mov	r3, r31
 862:	16 c0       	rjmp	.+44     	; 0x890 <__stack+0x31>
 864:	28 01       	movw	r4, r16
 866:	22 e0       	ldi	r18, 0x02	; 2
 868:	42 0e       	add	r4, r18
 86a:	51 1c       	adc	r5, r1
 86c:	f8 01       	movw	r30, r16
 86e:	a0 80       	ld	r10, Z
 870:	b1 80       	ldd	r11, Z+1	; 0x01
 872:	36 fe       	sbrs	r3, 6
 874:	03 c0       	rjmp	.+6      	; 0x87c <__stack+0x1d>
 876:	69 2d       	mov	r22, r9
 878:	70 e0       	ldi	r23, 0x00	; 0
 87a:	02 c0       	rjmp	.+4      	; 0x880 <__stack+0x21>
 87c:	6f ef       	ldi	r22, 0xFF	; 255
 87e:	7f ef       	ldi	r23, 0xFF	; 255
 880:	c5 01       	movw	r24, r10
 882:	0e 94 65 05 	call	0xaca	; 0xaca <strnlen_P>
 886:	4c 01       	movw	r8, r24
 888:	f3 2d       	mov	r31, r3
 88a:	f0 68       	ori	r31, 0x80	; 128
 88c:	3f 2e       	mov	r3, r31
 88e:	82 01       	movw	r16, r4
 890:	33 fc       	sbrc	r3, 3
 892:	1b c0       	rjmp	.+54     	; 0x8ca <__stack+0x6b>
 894:	82 2d       	mov	r24, r2
 896:	90 e0       	ldi	r25, 0x00	; 0
 898:	88 16       	cp	r8, r24
 89a:	99 06       	cpc	r9, r25
 89c:	b0 f4       	brcc	.+44     	; 0x8ca <__stack+0x6b>
 89e:	b6 01       	movw	r22, r12
 8a0:	80 e2       	ldi	r24, 0x20	; 32
 8a2:	90 e0       	ldi	r25, 0x00	; 0
 8a4:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <fputc>
 8a8:	2a 94       	dec	r2
 8aa:	f4 cf       	rjmp	.-24     	; 0x894 <__stack+0x35>
 8ac:	f5 01       	movw	r30, r10
 8ae:	37 fc       	sbrc	r3, 7
 8b0:	85 91       	lpm	r24, Z+
 8b2:	37 fe       	sbrs	r3, 7
 8b4:	81 91       	ld	r24, Z+
 8b6:	5f 01       	movw	r10, r30
 8b8:	b6 01       	movw	r22, r12
 8ba:	90 e0       	ldi	r25, 0x00	; 0
 8bc:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <fputc>
 8c0:	21 10       	cpse	r2, r1
 8c2:	2a 94       	dec	r2
 8c4:	21 e0       	ldi	r18, 0x01	; 1
 8c6:	82 1a       	sub	r8, r18
 8c8:	91 08       	sbc	r9, r1
 8ca:	81 14       	cp	r8, r1
 8cc:	91 04       	cpc	r9, r1
 8ce:	71 f7       	brne	.-36     	; 0x8ac <__stack+0x4d>
 8d0:	e8 c0       	rjmp	.+464    	; 0xaa2 <__stack+0x243>
 8d2:	84 36       	cpi	r24, 0x64	; 100
 8d4:	11 f0       	breq	.+4      	; 0x8da <__stack+0x7b>
 8d6:	89 36       	cpi	r24, 0x69	; 105
 8d8:	41 f5       	brne	.+80     	; 0x92a <__stack+0xcb>
 8da:	f8 01       	movw	r30, r16
 8dc:	37 fe       	sbrs	r3, 7
 8de:	07 c0       	rjmp	.+14     	; 0x8ee <__stack+0x8f>
 8e0:	60 81       	ld	r22, Z
 8e2:	71 81       	ldd	r23, Z+1	; 0x01
 8e4:	82 81       	ldd	r24, Z+2	; 0x02
 8e6:	93 81       	ldd	r25, Z+3	; 0x03
 8e8:	0c 5f       	subi	r16, 0xFC	; 252
 8ea:	1f 4f       	sbci	r17, 0xFF	; 255
 8ec:	08 c0       	rjmp	.+16     	; 0x8fe <__stack+0x9f>
 8ee:	60 81       	ld	r22, Z
 8f0:	71 81       	ldd	r23, Z+1	; 0x01
 8f2:	07 2e       	mov	r0, r23
 8f4:	00 0c       	add	r0, r0
 8f6:	88 0b       	sbc	r24, r24
 8f8:	99 0b       	sbc	r25, r25
 8fa:	0e 5f       	subi	r16, 0xFE	; 254
 8fc:	1f 4f       	sbci	r17, 0xFF	; 255
 8fe:	f3 2d       	mov	r31, r3
 900:	ff 76       	andi	r31, 0x6F	; 111
 902:	3f 2e       	mov	r3, r31
 904:	97 ff       	sbrs	r25, 7
 906:	09 c0       	rjmp	.+18     	; 0x91a <__stack+0xbb>
 908:	90 95       	com	r25
 90a:	80 95       	com	r24
 90c:	70 95       	com	r23
 90e:	61 95       	neg	r22
 910:	7f 4f       	sbci	r23, 0xFF	; 255
 912:	8f 4f       	sbci	r24, 0xFF	; 255
 914:	9f 4f       	sbci	r25, 0xFF	; 255
 916:	f0 68       	ori	r31, 0x80	; 128
 918:	3f 2e       	mov	r3, r31
 91a:	2a e0       	ldi	r18, 0x0A	; 10
 91c:	30 e0       	ldi	r19, 0x00	; 0
 91e:	a3 01       	movw	r20, r6
 920:	0e 94 b7 05 	call	0xb6e	; 0xb6e <__ultoa_invert>
 924:	88 2e       	mov	r8, r24
 926:	86 18       	sub	r8, r6
 928:	45 c0       	rjmp	.+138    	; 0x9b4 <__stack+0x155>
 92a:	85 37       	cpi	r24, 0x75	; 117
 92c:	31 f4       	brne	.+12     	; 0x93a <__stack+0xdb>
 92e:	23 2d       	mov	r18, r3
 930:	2f 7e       	andi	r18, 0xEF	; 239
 932:	b2 2e       	mov	r11, r18
 934:	2a e0       	ldi	r18, 0x0A	; 10
 936:	30 e0       	ldi	r19, 0x00	; 0
 938:	25 c0       	rjmp	.+74     	; 0x984 <__stack+0x125>
 93a:	93 2d       	mov	r25, r3
 93c:	99 7f       	andi	r25, 0xF9	; 249
 93e:	b9 2e       	mov	r11, r25
 940:	8f 36       	cpi	r24, 0x6F	; 111
 942:	c1 f0       	breq	.+48     	; 0x974 <__stack+0x115>
 944:	18 f4       	brcc	.+6      	; 0x94c <__stack+0xed>
 946:	88 35       	cpi	r24, 0x58	; 88
 948:	79 f0       	breq	.+30     	; 0x968 <__stack+0x109>
 94a:	b5 c0       	rjmp	.+362    	; 0xab6 <__stack+0x257>
 94c:	80 37       	cpi	r24, 0x70	; 112
 94e:	19 f0       	breq	.+6      	; 0x956 <__stack+0xf7>
 950:	88 37       	cpi	r24, 0x78	; 120
 952:	21 f0       	breq	.+8      	; 0x95c <__stack+0xfd>
 954:	b0 c0       	rjmp	.+352    	; 0xab6 <__stack+0x257>
 956:	e9 2f       	mov	r30, r25
 958:	e0 61       	ori	r30, 0x10	; 16
 95a:	be 2e       	mov	r11, r30
 95c:	b4 fe       	sbrs	r11, 4
 95e:	0d c0       	rjmp	.+26     	; 0x97a <__stack+0x11b>
 960:	fb 2d       	mov	r31, r11
 962:	f4 60       	ori	r31, 0x04	; 4
 964:	bf 2e       	mov	r11, r31
 966:	09 c0       	rjmp	.+18     	; 0x97a <__stack+0x11b>
 968:	34 fe       	sbrs	r3, 4
 96a:	0a c0       	rjmp	.+20     	; 0x980 <__stack+0x121>
 96c:	29 2f       	mov	r18, r25
 96e:	26 60       	ori	r18, 0x06	; 6
 970:	b2 2e       	mov	r11, r18
 972:	06 c0       	rjmp	.+12     	; 0x980 <__stack+0x121>
 974:	28 e0       	ldi	r18, 0x08	; 8
 976:	30 e0       	ldi	r19, 0x00	; 0
 978:	05 c0       	rjmp	.+10     	; 0x984 <__stack+0x125>
 97a:	20 e1       	ldi	r18, 0x10	; 16
 97c:	30 e0       	ldi	r19, 0x00	; 0
 97e:	02 c0       	rjmp	.+4      	; 0x984 <__stack+0x125>
 980:	20 e1       	ldi	r18, 0x10	; 16
 982:	32 e0       	ldi	r19, 0x02	; 2
 984:	f8 01       	movw	r30, r16
 986:	b7 fe       	sbrs	r11, 7
 988:	07 c0       	rjmp	.+14     	; 0x998 <__stack+0x139>
 98a:	60 81       	ld	r22, Z
 98c:	71 81       	ldd	r23, Z+1	; 0x01
 98e:	82 81       	ldd	r24, Z+2	; 0x02
 990:	93 81       	ldd	r25, Z+3	; 0x03
 992:	0c 5f       	subi	r16, 0xFC	; 252
 994:	1f 4f       	sbci	r17, 0xFF	; 255
 996:	06 c0       	rjmp	.+12     	; 0x9a4 <__stack+0x145>
 998:	60 81       	ld	r22, Z
 99a:	71 81       	ldd	r23, Z+1	; 0x01
 99c:	80 e0       	ldi	r24, 0x00	; 0
 99e:	90 e0       	ldi	r25, 0x00	; 0
 9a0:	0e 5f       	subi	r16, 0xFE	; 254
 9a2:	1f 4f       	sbci	r17, 0xFF	; 255
 9a4:	a3 01       	movw	r20, r6
 9a6:	0e 94 b7 05 	call	0xb6e	; 0xb6e <__ultoa_invert>
 9aa:	88 2e       	mov	r8, r24
 9ac:	86 18       	sub	r8, r6
 9ae:	fb 2d       	mov	r31, r11
 9b0:	ff 77       	andi	r31, 0x7F	; 127
 9b2:	3f 2e       	mov	r3, r31
 9b4:	36 fe       	sbrs	r3, 6
 9b6:	0d c0       	rjmp	.+26     	; 0x9d2 <__stack+0x173>
 9b8:	23 2d       	mov	r18, r3
 9ba:	2e 7f       	andi	r18, 0xFE	; 254
 9bc:	a2 2e       	mov	r10, r18
 9be:	89 14       	cp	r8, r9
 9c0:	58 f4       	brcc	.+22     	; 0x9d8 <__stack+0x179>
 9c2:	34 fe       	sbrs	r3, 4
 9c4:	0b c0       	rjmp	.+22     	; 0x9dc <__stack+0x17d>
 9c6:	32 fc       	sbrc	r3, 2
 9c8:	09 c0       	rjmp	.+18     	; 0x9dc <__stack+0x17d>
 9ca:	83 2d       	mov	r24, r3
 9cc:	8e 7e       	andi	r24, 0xEE	; 238
 9ce:	a8 2e       	mov	r10, r24
 9d0:	05 c0       	rjmp	.+10     	; 0x9dc <__stack+0x17d>
 9d2:	b8 2c       	mov	r11, r8
 9d4:	a3 2c       	mov	r10, r3
 9d6:	03 c0       	rjmp	.+6      	; 0x9de <__stack+0x17f>
 9d8:	b8 2c       	mov	r11, r8
 9da:	01 c0       	rjmp	.+2      	; 0x9de <__stack+0x17f>
 9dc:	b9 2c       	mov	r11, r9
 9de:	a4 fe       	sbrs	r10, 4
 9e0:	0f c0       	rjmp	.+30     	; 0xa00 <__stack+0x1a1>
 9e2:	fe 01       	movw	r30, r28
 9e4:	e8 0d       	add	r30, r8
 9e6:	f1 1d       	adc	r31, r1
 9e8:	80 81       	ld	r24, Z
 9ea:	80 33       	cpi	r24, 0x30	; 48
 9ec:	21 f4       	brne	.+8      	; 0x9f6 <__stack+0x197>
 9ee:	9a 2d       	mov	r25, r10
 9f0:	99 7e       	andi	r25, 0xE9	; 233
 9f2:	a9 2e       	mov	r10, r25
 9f4:	09 c0       	rjmp	.+18     	; 0xa08 <__stack+0x1a9>
 9f6:	a2 fe       	sbrs	r10, 2
 9f8:	06 c0       	rjmp	.+12     	; 0xa06 <__stack+0x1a7>
 9fa:	b3 94       	inc	r11
 9fc:	b3 94       	inc	r11
 9fe:	04 c0       	rjmp	.+8      	; 0xa08 <__stack+0x1a9>
 a00:	8a 2d       	mov	r24, r10
 a02:	86 78       	andi	r24, 0x86	; 134
 a04:	09 f0       	breq	.+2      	; 0xa08 <__stack+0x1a9>
 a06:	b3 94       	inc	r11
 a08:	a3 fc       	sbrc	r10, 3
 a0a:	11 c0       	rjmp	.+34     	; 0xa2e <__stack+0x1cf>
 a0c:	a0 fe       	sbrs	r10, 0
 a0e:	06 c0       	rjmp	.+12     	; 0xa1c <__stack+0x1bd>
 a10:	b2 14       	cp	r11, r2
 a12:	88 f4       	brcc	.+34     	; 0xa36 <__stack+0x1d7>
 a14:	28 0c       	add	r2, r8
 a16:	92 2c       	mov	r9, r2
 a18:	9b 18       	sub	r9, r11
 a1a:	0e c0       	rjmp	.+28     	; 0xa38 <__stack+0x1d9>
 a1c:	b2 14       	cp	r11, r2
 a1e:	60 f4       	brcc	.+24     	; 0xa38 <__stack+0x1d9>
 a20:	b6 01       	movw	r22, r12
 a22:	80 e2       	ldi	r24, 0x20	; 32
 a24:	90 e0       	ldi	r25, 0x00	; 0
 a26:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <fputc>
 a2a:	b3 94       	inc	r11
 a2c:	f7 cf       	rjmp	.-18     	; 0xa1c <__stack+0x1bd>
 a2e:	b2 14       	cp	r11, r2
 a30:	18 f4       	brcc	.+6      	; 0xa38 <__stack+0x1d9>
 a32:	2b 18       	sub	r2, r11
 a34:	02 c0       	rjmp	.+4      	; 0xa3a <__stack+0x1db>
 a36:	98 2c       	mov	r9, r8
 a38:	21 2c       	mov	r2, r1
 a3a:	a4 fe       	sbrs	r10, 4
 a3c:	10 c0       	rjmp	.+32     	; 0xa5e <__stack+0x1ff>
 a3e:	b6 01       	movw	r22, r12
 a40:	80 e3       	ldi	r24, 0x30	; 48
 a42:	90 e0       	ldi	r25, 0x00	; 0
 a44:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <fputc>
 a48:	a2 fe       	sbrs	r10, 2
 a4a:	17 c0       	rjmp	.+46     	; 0xa7a <__stack+0x21b>
 a4c:	a1 fc       	sbrc	r10, 1
 a4e:	03 c0       	rjmp	.+6      	; 0xa56 <__stack+0x1f7>
 a50:	88 e7       	ldi	r24, 0x78	; 120
 a52:	90 e0       	ldi	r25, 0x00	; 0
 a54:	02 c0       	rjmp	.+4      	; 0xa5a <__stack+0x1fb>
 a56:	88 e5       	ldi	r24, 0x58	; 88
 a58:	90 e0       	ldi	r25, 0x00	; 0
 a5a:	b6 01       	movw	r22, r12
 a5c:	0c c0       	rjmp	.+24     	; 0xa76 <__stack+0x217>
 a5e:	8a 2d       	mov	r24, r10
 a60:	86 78       	andi	r24, 0x86	; 134
 a62:	59 f0       	breq	.+22     	; 0xa7a <__stack+0x21b>
 a64:	a1 fe       	sbrs	r10, 1
 a66:	02 c0       	rjmp	.+4      	; 0xa6c <__stack+0x20d>
 a68:	8b e2       	ldi	r24, 0x2B	; 43
 a6a:	01 c0       	rjmp	.+2      	; 0xa6e <__stack+0x20f>
 a6c:	80 e2       	ldi	r24, 0x20	; 32
 a6e:	a7 fc       	sbrc	r10, 7
 a70:	8d e2       	ldi	r24, 0x2D	; 45
 a72:	b6 01       	movw	r22, r12
 a74:	90 e0       	ldi	r25, 0x00	; 0
 a76:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <fputc>
 a7a:	89 14       	cp	r8, r9
 a7c:	38 f4       	brcc	.+14     	; 0xa8c <__stack+0x22d>
 a7e:	b6 01       	movw	r22, r12
 a80:	80 e3       	ldi	r24, 0x30	; 48
 a82:	90 e0       	ldi	r25, 0x00	; 0
 a84:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <fputc>
 a88:	9a 94       	dec	r9
 a8a:	f7 cf       	rjmp	.-18     	; 0xa7a <__stack+0x21b>
 a8c:	8a 94       	dec	r8
 a8e:	f3 01       	movw	r30, r6
 a90:	e8 0d       	add	r30, r8
 a92:	f1 1d       	adc	r31, r1
 a94:	80 81       	ld	r24, Z
 a96:	b6 01       	movw	r22, r12
 a98:	90 e0       	ldi	r25, 0x00	; 0
 a9a:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <fputc>
 a9e:	81 10       	cpse	r8, r1
 aa0:	f5 cf       	rjmp	.-22     	; 0xa8c <__stack+0x22d>
 aa2:	22 20       	and	r2, r2
 aa4:	09 f4       	brne	.+2      	; 0xaa8 <__stack+0x249>
 aa6:	42 ce       	rjmp	.-892    	; 0x72c <vfprintf+0x24>
 aa8:	b6 01       	movw	r22, r12
 aaa:	80 e2       	ldi	r24, 0x20	; 32
 aac:	90 e0       	ldi	r25, 0x00	; 0
 aae:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <fputc>
 ab2:	2a 94       	dec	r2
 ab4:	f6 cf       	rjmp	.-20     	; 0xaa2 <__stack+0x243>
 ab6:	f6 01       	movw	r30, r12
 ab8:	86 81       	ldd	r24, Z+6	; 0x06
 aba:	97 81       	ldd	r25, Z+7	; 0x07
 abc:	02 c0       	rjmp	.+4      	; 0xac2 <__stack+0x263>
 abe:	8f ef       	ldi	r24, 0xFF	; 255
 ac0:	9f ef       	ldi	r25, 0xFF	; 255
 ac2:	2b 96       	adiw	r28, 0x0b	; 11
 ac4:	e2 e1       	ldi	r30, 0x12	; 18
 ac6:	0c 94 31 06 	jmp	0xc62	; 0xc62 <__epilogue_restores__>

00000aca <strnlen_P>:
 aca:	fc 01       	movw	r30, r24
 acc:	05 90       	lpm	r0, Z+
 ace:	61 50       	subi	r22, 0x01	; 1
 ad0:	70 40       	sbci	r23, 0x00	; 0
 ad2:	01 10       	cpse	r0, r1
 ad4:	d8 f7       	brcc	.-10     	; 0xacc <strnlen_P+0x2>
 ad6:	80 95       	com	r24
 ad8:	90 95       	com	r25
 ada:	8e 0f       	add	r24, r30
 adc:	9f 1f       	adc	r25, r31
 ade:	08 95       	ret

00000ae0 <strnlen>:
 ae0:	fc 01       	movw	r30, r24
 ae2:	61 50       	subi	r22, 0x01	; 1
 ae4:	70 40       	sbci	r23, 0x00	; 0
 ae6:	01 90       	ld	r0, Z+
 ae8:	01 10       	cpse	r0, r1
 aea:	d8 f7       	brcc	.-10     	; 0xae2 <strnlen+0x2>
 aec:	80 95       	com	r24
 aee:	90 95       	com	r25
 af0:	8e 0f       	add	r24, r30
 af2:	9f 1f       	adc	r25, r31
 af4:	08 95       	ret

00000af6 <fputc>:
 af6:	0f 93       	push	r16
 af8:	1f 93       	push	r17
 afa:	cf 93       	push	r28
 afc:	df 93       	push	r29
 afe:	fb 01       	movw	r30, r22
 b00:	23 81       	ldd	r18, Z+3	; 0x03
 b02:	21 fd       	sbrc	r18, 1
 b04:	03 c0       	rjmp	.+6      	; 0xb0c <fputc+0x16>
 b06:	8f ef       	ldi	r24, 0xFF	; 255
 b08:	9f ef       	ldi	r25, 0xFF	; 255
 b0a:	2c c0       	rjmp	.+88     	; 0xb64 <fputc+0x6e>
 b0c:	22 ff       	sbrs	r18, 2
 b0e:	16 c0       	rjmp	.+44     	; 0xb3c <fputc+0x46>
 b10:	46 81       	ldd	r20, Z+6	; 0x06
 b12:	57 81       	ldd	r21, Z+7	; 0x07
 b14:	24 81       	ldd	r18, Z+4	; 0x04
 b16:	35 81       	ldd	r19, Z+5	; 0x05
 b18:	42 17       	cp	r20, r18
 b1a:	53 07       	cpc	r21, r19
 b1c:	44 f4       	brge	.+16     	; 0xb2e <fputc+0x38>
 b1e:	a0 81       	ld	r26, Z
 b20:	b1 81       	ldd	r27, Z+1	; 0x01
 b22:	9d 01       	movw	r18, r26
 b24:	2f 5f       	subi	r18, 0xFF	; 255
 b26:	3f 4f       	sbci	r19, 0xFF	; 255
 b28:	31 83       	std	Z+1, r19	; 0x01
 b2a:	20 83       	st	Z, r18
 b2c:	8c 93       	st	X, r24
 b2e:	26 81       	ldd	r18, Z+6	; 0x06
 b30:	37 81       	ldd	r19, Z+7	; 0x07
 b32:	2f 5f       	subi	r18, 0xFF	; 255
 b34:	3f 4f       	sbci	r19, 0xFF	; 255
 b36:	37 83       	std	Z+7, r19	; 0x07
 b38:	26 83       	std	Z+6, r18	; 0x06
 b3a:	14 c0       	rjmp	.+40     	; 0xb64 <fputc+0x6e>
 b3c:	8b 01       	movw	r16, r22
 b3e:	ec 01       	movw	r28, r24
 b40:	fb 01       	movw	r30, r22
 b42:	00 84       	ldd	r0, Z+8	; 0x08
 b44:	f1 85       	ldd	r31, Z+9	; 0x09
 b46:	e0 2d       	mov	r30, r0
 b48:	09 95       	icall
 b4a:	89 2b       	or	r24, r25
 b4c:	e1 f6       	brne	.-72     	; 0xb06 <fputc+0x10>
 b4e:	d8 01       	movw	r26, r16
 b50:	16 96       	adiw	r26, 0x06	; 6
 b52:	8d 91       	ld	r24, X+
 b54:	9c 91       	ld	r25, X
 b56:	17 97       	sbiw	r26, 0x07	; 7
 b58:	01 96       	adiw	r24, 0x01	; 1
 b5a:	17 96       	adiw	r26, 0x07	; 7
 b5c:	9c 93       	st	X, r25
 b5e:	8e 93       	st	-X, r24
 b60:	16 97       	sbiw	r26, 0x06	; 6
 b62:	ce 01       	movw	r24, r28
 b64:	df 91       	pop	r29
 b66:	cf 91       	pop	r28
 b68:	1f 91       	pop	r17
 b6a:	0f 91       	pop	r16
 b6c:	08 95       	ret

00000b6e <__ultoa_invert>:
 b6e:	fa 01       	movw	r30, r20
 b70:	aa 27       	eor	r26, r26
 b72:	28 30       	cpi	r18, 0x08	; 8
 b74:	51 f1       	breq	.+84     	; 0xbca <__ultoa_invert+0x5c>
 b76:	20 31       	cpi	r18, 0x10	; 16
 b78:	81 f1       	breq	.+96     	; 0xbda <__ultoa_invert+0x6c>
 b7a:	e8 94       	clt
 b7c:	6f 93       	push	r22
 b7e:	6e 7f       	andi	r22, 0xFE	; 254
 b80:	6e 5f       	subi	r22, 0xFE	; 254
 b82:	7f 4f       	sbci	r23, 0xFF	; 255
 b84:	8f 4f       	sbci	r24, 0xFF	; 255
 b86:	9f 4f       	sbci	r25, 0xFF	; 255
 b88:	af 4f       	sbci	r26, 0xFF	; 255
 b8a:	b1 e0       	ldi	r27, 0x01	; 1
 b8c:	3e d0       	rcall	.+124    	; 0xc0a <__ultoa_invert+0x9c>
 b8e:	b4 e0       	ldi	r27, 0x04	; 4
 b90:	3c d0       	rcall	.+120    	; 0xc0a <__ultoa_invert+0x9c>
 b92:	67 0f       	add	r22, r23
 b94:	78 1f       	adc	r23, r24
 b96:	89 1f       	adc	r24, r25
 b98:	9a 1f       	adc	r25, r26
 b9a:	a1 1d       	adc	r26, r1
 b9c:	68 0f       	add	r22, r24
 b9e:	79 1f       	adc	r23, r25
 ba0:	8a 1f       	adc	r24, r26
 ba2:	91 1d       	adc	r25, r1
 ba4:	a1 1d       	adc	r26, r1
 ba6:	6a 0f       	add	r22, r26
 ba8:	71 1d       	adc	r23, r1
 baa:	81 1d       	adc	r24, r1
 bac:	91 1d       	adc	r25, r1
 bae:	a1 1d       	adc	r26, r1
 bb0:	20 d0       	rcall	.+64     	; 0xbf2 <__ultoa_invert+0x84>
 bb2:	09 f4       	brne	.+2      	; 0xbb6 <__ultoa_invert+0x48>
 bb4:	68 94       	set
 bb6:	3f 91       	pop	r19
 bb8:	2a e0       	ldi	r18, 0x0A	; 10
 bba:	26 9f       	mul	r18, r22
 bbc:	11 24       	eor	r1, r1
 bbe:	30 19       	sub	r19, r0
 bc0:	30 5d       	subi	r19, 0xD0	; 208
 bc2:	31 93       	st	Z+, r19
 bc4:	de f6       	brtc	.-74     	; 0xb7c <__ultoa_invert+0xe>
 bc6:	cf 01       	movw	r24, r30
 bc8:	08 95       	ret
 bca:	46 2f       	mov	r20, r22
 bcc:	47 70       	andi	r20, 0x07	; 7
 bce:	40 5d       	subi	r20, 0xD0	; 208
 bd0:	41 93       	st	Z+, r20
 bd2:	b3 e0       	ldi	r27, 0x03	; 3
 bd4:	0f d0       	rcall	.+30     	; 0xbf4 <__ultoa_invert+0x86>
 bd6:	c9 f7       	brne	.-14     	; 0xbca <__ultoa_invert+0x5c>
 bd8:	f6 cf       	rjmp	.-20     	; 0xbc6 <__ultoa_invert+0x58>
 bda:	46 2f       	mov	r20, r22
 bdc:	4f 70       	andi	r20, 0x0F	; 15
 bde:	40 5d       	subi	r20, 0xD0	; 208
 be0:	4a 33       	cpi	r20, 0x3A	; 58
 be2:	18 f0       	brcs	.+6      	; 0xbea <__ultoa_invert+0x7c>
 be4:	49 5d       	subi	r20, 0xD9	; 217
 be6:	31 fd       	sbrc	r19, 1
 be8:	40 52       	subi	r20, 0x20	; 32
 bea:	41 93       	st	Z+, r20
 bec:	02 d0       	rcall	.+4      	; 0xbf2 <__ultoa_invert+0x84>
 bee:	a9 f7       	brne	.-22     	; 0xbda <__ultoa_invert+0x6c>
 bf0:	ea cf       	rjmp	.-44     	; 0xbc6 <__ultoa_invert+0x58>
 bf2:	b4 e0       	ldi	r27, 0x04	; 4
 bf4:	a6 95       	lsr	r26
 bf6:	97 95       	ror	r25
 bf8:	87 95       	ror	r24
 bfa:	77 95       	ror	r23
 bfc:	67 95       	ror	r22
 bfe:	ba 95       	dec	r27
 c00:	c9 f7       	brne	.-14     	; 0xbf4 <__ultoa_invert+0x86>
 c02:	00 97       	sbiw	r24, 0x00	; 0
 c04:	61 05       	cpc	r22, r1
 c06:	71 05       	cpc	r23, r1
 c08:	08 95       	ret
 c0a:	9b 01       	movw	r18, r22
 c0c:	ac 01       	movw	r20, r24
 c0e:	0a 2e       	mov	r0, r26
 c10:	06 94       	lsr	r0
 c12:	57 95       	ror	r21
 c14:	47 95       	ror	r20
 c16:	37 95       	ror	r19
 c18:	27 95       	ror	r18
 c1a:	ba 95       	dec	r27
 c1c:	c9 f7       	brne	.-14     	; 0xc10 <__ultoa_invert+0xa2>
 c1e:	62 0f       	add	r22, r18
 c20:	73 1f       	adc	r23, r19
 c22:	84 1f       	adc	r24, r20
 c24:	95 1f       	adc	r25, r21
 c26:	a0 1d       	adc	r26, r0
 c28:	08 95       	ret

00000c2a <__prologue_saves__>:
 c2a:	2f 92       	push	r2
 c2c:	3f 92       	push	r3
 c2e:	4f 92       	push	r4
 c30:	5f 92       	push	r5
 c32:	6f 92       	push	r6
 c34:	7f 92       	push	r7
 c36:	8f 92       	push	r8
 c38:	9f 92       	push	r9
 c3a:	af 92       	push	r10
 c3c:	bf 92       	push	r11
 c3e:	cf 92       	push	r12
 c40:	df 92       	push	r13
 c42:	ef 92       	push	r14
 c44:	ff 92       	push	r15
 c46:	0f 93       	push	r16
 c48:	1f 93       	push	r17
 c4a:	cf 93       	push	r28
 c4c:	df 93       	push	r29
 c4e:	cd b7       	in	r28, 0x3d	; 61
 c50:	de b7       	in	r29, 0x3e	; 62
 c52:	ca 1b       	sub	r28, r26
 c54:	db 0b       	sbc	r29, r27
 c56:	0f b6       	in	r0, 0x3f	; 63
 c58:	f8 94       	cli
 c5a:	de bf       	out	0x3e, r29	; 62
 c5c:	0f be       	out	0x3f, r0	; 63
 c5e:	cd bf       	out	0x3d, r28	; 61
 c60:	09 94       	ijmp

00000c62 <__epilogue_restores__>:
 c62:	2a 88       	ldd	r2, Y+18	; 0x12
 c64:	39 88       	ldd	r3, Y+17	; 0x11
 c66:	48 88       	ldd	r4, Y+16	; 0x10
 c68:	5f 84       	ldd	r5, Y+15	; 0x0f
 c6a:	6e 84       	ldd	r6, Y+14	; 0x0e
 c6c:	7d 84       	ldd	r7, Y+13	; 0x0d
 c6e:	8c 84       	ldd	r8, Y+12	; 0x0c
 c70:	9b 84       	ldd	r9, Y+11	; 0x0b
 c72:	aa 84       	ldd	r10, Y+10	; 0x0a
 c74:	b9 84       	ldd	r11, Y+9	; 0x09
 c76:	c8 84       	ldd	r12, Y+8	; 0x08
 c78:	df 80       	ldd	r13, Y+7	; 0x07
 c7a:	ee 80       	ldd	r14, Y+6	; 0x06
 c7c:	fd 80       	ldd	r15, Y+5	; 0x05
 c7e:	0c 81       	ldd	r16, Y+4	; 0x04
 c80:	1b 81       	ldd	r17, Y+3	; 0x03
 c82:	aa 81       	ldd	r26, Y+2	; 0x02
 c84:	b9 81       	ldd	r27, Y+1	; 0x01
 c86:	ce 0f       	add	r28, r30
 c88:	d1 1d       	adc	r29, r1
 c8a:	0f b6       	in	r0, 0x3f	; 63
 c8c:	f8 94       	cli
 c8e:	de bf       	out	0x3e, r29	; 62
 c90:	0f be       	out	0x3f, r0	; 63
 c92:	cd bf       	out	0x3d, r28	; 61
 c94:	ed 01       	movw	r28, r26
 c96:	08 95       	ret

00000c98 <_exit>:
 c98:	f8 94       	cli

00000c9a <__stop_program>:
 c9a:	ff cf       	rjmp	.-2      	; 0xc9a <__stop_program>
