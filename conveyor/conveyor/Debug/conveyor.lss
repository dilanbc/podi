
conveyor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000001f2  00800100  00002d16  00002daa  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002d16  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000151  008002f2  008002f2  00002f9c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00002f9c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002ff8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000290  00000000  00000000  00003038  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003cd5  00000000  00000000  000032c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a71  00000000  00000000  00006f9d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001af1  00000000  00000000  00007a0e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000994  00000000  00000000  00009500  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00001024  00000000  00000000  00009e94  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002d44  00000000  00000000  0000aeb8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000002d8  00000000  00000000  0000dbfc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__ctors_end>
       4:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
       8:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
       c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      10:	0c 94 c7 06 	jmp	0xd8e	; 0xd8e <__vector_4>
      14:	0c 94 30 06 	jmp	0xc60	; 0xc60 <__vector_5>
      18:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      1c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      20:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      24:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      28:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      2c:	0c 94 e8 04 	jmp	0x9d0	; 0x9d0 <__vector_11>
      30:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      34:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      38:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      3c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      40:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      44:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      48:	0c 94 17 01 	jmp	0x22e	; 0x22e <__vector_18>
      4c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      50:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      54:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      58:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      5c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      60:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      64:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	6e 61       	ori	r22, 0x1E	; 30
      6a:	6e 00       	.word	0x006e	; ????

0000006c <__c.2332>:
      6c:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      7c:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      8c:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      9c:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      ac:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      bc:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      cc:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      dc:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      ec:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      fc:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     10c:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     11c:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     12c:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     13c:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     14c:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     15c:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000016a <__ctors_end>:
     16a:	11 24       	eor	r1, r1
     16c:	1f be       	out	0x3f, r1	; 63
     16e:	cf ef       	ldi	r28, 0xFF	; 255
     170:	d8 e0       	ldi	r29, 0x08	; 8
     172:	de bf       	out	0x3e, r29	; 62
     174:	cd bf       	out	0x3d, r28	; 61

00000176 <__do_copy_data>:
     176:	12 e0       	ldi	r17, 0x02	; 2
     178:	a0 e0       	ldi	r26, 0x00	; 0
     17a:	b1 e0       	ldi	r27, 0x01	; 1
     17c:	e6 e1       	ldi	r30, 0x16	; 22
     17e:	fd e2       	ldi	r31, 0x2D	; 45
     180:	02 c0       	rjmp	.+4      	; 0x186 <__do_copy_data+0x10>
     182:	05 90       	lpm	r0, Z+
     184:	0d 92       	st	X+, r0
     186:	a2 3f       	cpi	r26, 0xF2	; 242
     188:	b1 07       	cpc	r27, r17
     18a:	d9 f7       	brne	.-10     	; 0x182 <__do_copy_data+0xc>

0000018c <__do_clear_bss>:
     18c:	24 e0       	ldi	r18, 0x04	; 4
     18e:	a2 ef       	ldi	r26, 0xF2	; 242
     190:	b2 e0       	ldi	r27, 0x02	; 2
     192:	01 c0       	rjmp	.+2      	; 0x196 <.do_clear_bss_start>

00000194 <.do_clear_bss_loop>:
     194:	1d 92       	st	X+, r1

00000196 <.do_clear_bss_start>:
     196:	a3 34       	cpi	r26, 0x43	; 67
     198:	b2 07       	cpc	r27, r18
     19a:	e1 f7       	brne	.-8      	; 0x194 <.do_clear_bss_loop>
     19c:	0e 94 1c 0d 	call	0x1a38	; 0x1a38 <main>
     1a0:	0c 94 89 16 	jmp	0x2d12	; 0x2d12 <_exit>

000001a4 <__bad_interrupt>:
     1a4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001a8 <_Z10USART_Initj>:
		
	}	

}
	
}
     1a8:	9c 01       	movw	r18, r24
     1aa:	40 e0       	ldi	r20, 0x00	; 0
     1ac:	50 e0       	ldi	r21, 0x00	; 0
     1ae:	60 e2       	ldi	r22, 0x20	; 32
     1b0:	71 ea       	ldi	r23, 0xA1	; 161
     1b2:	87 e0       	ldi	r24, 0x07	; 7
     1b4:	90 e0       	ldi	r25, 0x00	; 0
     1b6:	0e 94 2f 13 	call	0x265e	; 0x265e <__divmodsi4>
     1ba:	21 50       	subi	r18, 0x01	; 1
     1bc:	31 09       	sbc	r19, r1
     1be:	30 93 c5 00 	sts	0x00C5, r19	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
     1c2:	20 93 c4 00 	sts	0x00C4, r18	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
     1c6:	88 e9       	ldi	r24, 0x98	; 152
     1c8:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
     1cc:	86 e0       	ldi	r24, 0x06	; 6
     1ce:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
     1d2:	78 94       	sei
     1d4:	08 95       	ret

000001d6 <_Z14USART_Transmith>:
     1d6:	e0 ec       	ldi	r30, 0xC0	; 192
     1d8:	f0 e0       	ldi	r31, 0x00	; 0
     1da:	90 81       	ld	r25, Z
     1dc:	95 ff       	sbrs	r25, 5
     1de:	fd cf       	rjmp	.-6      	; 0x1da <_Z14USART_Transmith+0x4>
     1e0:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
     1e4:	08 95       	ret

000001e6 <_Z14USART_TxStringPc>:
     1e6:	cf 93       	push	r28
     1e8:	df 93       	push	r29
     1ea:	ec 01       	movw	r28, r24
     1ec:	88 81       	ld	r24, Y
     1ee:	88 23       	and	r24, r24
     1f0:	31 f0       	breq	.+12     	; 0x1fe <_Z14USART_TxStringPc+0x18>
     1f2:	21 96       	adiw	r28, 0x01	; 1
     1f4:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <_Z14USART_Transmith>
     1f8:	89 91       	ld	r24, Y+
     1fa:	81 11       	cpse	r24, r1
     1fc:	fb cf       	rjmp	.-10     	; 0x1f4 <_Z14USART_TxStringPc+0xe>
     1fe:	df 91       	pop	r29
     200:	cf 91       	pop	r28
     202:	08 95       	ret

00000204 <_Z16USART_TxStringlnPc>:
     204:	cf 93       	push	r28
     206:	df 93       	push	r29
     208:	ec 01       	movw	r28, r24
     20a:	88 81       	ld	r24, Y
     20c:	88 23       	and	r24, r24
     20e:	31 f0       	breq	.+12     	; 0x21c <_Z16USART_TxStringlnPc+0x18>
     210:	21 96       	adiw	r28, 0x01	; 1
     212:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <_Z14USART_Transmith>
     216:	89 91       	ld	r24, Y+
     218:	81 11       	cpse	r24, r1
     21a:	fb cf       	rjmp	.-10     	; 0x212 <_Z16USART_TxStringlnPc+0xe>
     21c:	8d e0       	ldi	r24, 0x0D	; 13
     21e:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <_Z14USART_Transmith>
     222:	8a e0       	ldi	r24, 0x0A	; 10
     224:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <_Z14USART_Transmith>
     228:	df 91       	pop	r29
     22a:	cf 91       	pop	r28
     22c:	08 95       	ret

0000022e <__vector_18>:
     22e:	1f 92       	push	r1
     230:	0f 92       	push	r0
     232:	0f b6       	in	r0, 0x3f	; 63
     234:	0f 92       	push	r0
     236:	11 24       	eor	r1, r1
     238:	2f 93       	push	r18
     23a:	3f 93       	push	r19
     23c:	4f 93       	push	r20
     23e:	8f 93       	push	r24
     240:	9f 93       	push	r25
     242:	af 93       	push	r26
     244:	bf 93       	push	r27
     246:	ef 93       	push	r30
     248:	ff 93       	push	r31
     24a:	40 91 c6 00 	lds	r20, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
     24e:	e1 e1       	ldi	r30, 0x11	; 17
     250:	f4 e0       	ldi	r31, 0x04	; 4
     252:	df 01       	movw	r26, r30
     254:	80 e0       	ldi	r24, 0x00	; 0
     256:	9d 91       	ld	r25, X+
     258:	99 23       	and	r25, r25
     25a:	a1 f0       	breq	.+40     	; 0x284 <__vector_18+0x56>
     25c:	8f 5f       	subi	r24, 0xFF	; 255
     25e:	82 33       	cpi	r24, 0x32	; 50
     260:	d1 f7       	brne	.-12     	; 0x256 <__vector_18+0x28>
     262:	06 c0       	rjmp	.+12     	; 0x270 <__vector_18+0x42>
     264:	e8 2f       	mov	r30, r24
     266:	f0 e0       	ldi	r31, 0x00	; 0
     268:	ef 5e       	subi	r30, 0xEF	; 239
     26a:	fb 4f       	sbci	r31, 0xFB	; 251
     26c:	40 83       	st	Z, r20
     26e:	0d c0       	rjmp	.+26     	; 0x28a <__vector_18+0x5c>
     270:	22 e4       	ldi	r18, 0x42	; 66
     272:	34 e0       	ldi	r19, 0x04	; 4
     274:	81 81       	ldd	r24, Z+1	; 0x01
     276:	81 93       	st	Z+, r24
     278:	e2 17       	cp	r30, r18
     27a:	f3 07       	cpc	r31, r19
     27c:	d9 f7       	brne	.-10     	; 0x274 <__vector_18+0x46>
     27e:	40 93 42 04 	sts	0x0442, r20	; 0x800442 <rxvalue+0x31>
     282:	03 c0       	rjmp	.+6      	; 0x28a <__vector_18+0x5c>
     284:	82 33       	cpi	r24, 0x32	; 50
     286:	70 f3       	brcs	.-36     	; 0x264 <__vector_18+0x36>
     288:	f3 cf       	rjmp	.-26     	; 0x270 <__vector_18+0x42>
     28a:	ff 91       	pop	r31
     28c:	ef 91       	pop	r30
     28e:	bf 91       	pop	r27
     290:	af 91       	pop	r26
     292:	9f 91       	pop	r25
     294:	8f 91       	pop	r24
     296:	4f 91       	pop	r20
     298:	3f 91       	pop	r19
     29a:	2f 91       	pop	r18
     29c:	0f 90       	pop	r0
     29e:	0f be       	out	0x3f, r0	; 63
     2a0:	0f 90       	pop	r0
     2a2:	1f 90       	pop	r1
     2a4:	18 95       	reti

000002a6 <_Z16USART_ReciveWaitPcib>:
     2a6:	df 92       	push	r13
     2a8:	ef 92       	push	r14
     2aa:	ff 92       	push	r15
     2ac:	0f 93       	push	r16
     2ae:	1f 93       	push	r17
     2b0:	cf 93       	push	r28
     2b2:	df 93       	push	r29
     2b4:	00 97       	sbiw	r24, 0x00	; 0
     2b6:	c1 f1       	breq	.+112    	; 0x328 <_Z16USART_ReciveWaitPcib+0x82>
     2b8:	7c 01       	movw	r14, r24
     2ba:	2f ef       	ldi	r18, 0xFF	; 255
     2bc:	80 e7       	ldi	r24, 0x70	; 112
     2be:	92 e0       	ldi	r25, 0x02	; 2
     2c0:	21 50       	subi	r18, 0x01	; 1
     2c2:	80 40       	sbci	r24, 0x00	; 0
     2c4:	90 40       	sbci	r25, 0x00	; 0
     2c6:	e1 f7       	brne	.-8      	; 0x2c0 <_Z16USART_ReciveWaitPcib+0x1a>
     2c8:	00 c0       	rjmp	.+0      	; 0x2ca <_Z16USART_ReciveWaitPcib+0x24>
     2ca:	00 00       	nop
     2cc:	cb 01       	movw	r24, r22
     2ce:	64 e6       	ldi	r22, 0x64	; 100
     2d0:	70 e0       	ldi	r23, 0x00	; 0
     2d2:	0e 94 1b 13 	call	0x2636	; 0x2636 <__divmodhi4>
     2d6:	8b 01       	movw	r16, r22
     2d8:	c0 e0       	ldi	r28, 0x00	; 0
     2da:	d1 e0       	ldi	r29, 0x01	; 1
     2dc:	d1 2c       	mov	r13, r1
     2de:	02 c0       	rjmp	.+4      	; 0x2e4 <_Z16USART_ReciveWaitPcib+0x3e>
     2e0:	45 2b       	or	r20, r21
     2e2:	21 f5       	brne	.+72     	; 0x32c <_Z16USART_ReciveWaitPcib+0x86>
     2e4:	b7 01       	movw	r22, r14
     2e6:	81 e1       	ldi	r24, 0x11	; 17
     2e8:	94 e0       	ldi	r25, 0x04	; 4
     2ea:	0e 94 73 15 	call	0x2ae6	; 0x2ae6 <strstr>
     2ee:	ac 01       	movw	r20, r24
     2f0:	2f ef       	ldi	r18, 0xFF	; 255
     2f2:	80 e7       	ldi	r24, 0x70	; 112
     2f4:	92 e0       	ldi	r25, 0x02	; 2
     2f6:	21 50       	subi	r18, 0x01	; 1
     2f8:	80 40       	sbci	r24, 0x00	; 0
     2fa:	90 40       	sbci	r25, 0x00	; 0
     2fc:	e1 f7       	brne	.-8      	; 0x2f6 <_Z16USART_ReciveWaitPcib+0x50>
     2fe:	00 c0       	rjmp	.+0      	; 0x300 <_Z16USART_ReciveWaitPcib+0x5a>
     300:	00 00       	nop
     302:	cf 5f       	subi	r28, 0xFF	; 255
     304:	2c 2f       	mov	r18, r28
     306:	30 e0       	ldi	r19, 0x00	; 0
     308:	9d 2f       	mov	r25, r29
     30a:	02 17       	cp	r16, r18
     30c:	13 07       	cpc	r17, r19
     30e:	0c f0       	brlt	.+2      	; 0x312 <_Z16USART_ReciveWaitPcib+0x6c>
     310:	9d 2d       	mov	r25, r13
     312:	99 23       	and	r25, r25
     314:	29 f3       	breq	.-54     	; 0x2e0 <_Z16USART_ReciveWaitPcib+0x3a>
     316:	8d 2f       	mov	r24, r29
     318:	01 15       	cp	r16, r1
     31a:	11 05       	cpc	r17, r1
     31c:	09 f4       	brne	.+2      	; 0x320 <_Z16USART_ReciveWaitPcib+0x7a>
     31e:	8d 2d       	mov	r24, r13
     320:	88 23       	and	r24, r24
     322:	f1 f2       	breq	.-68     	; 0x2e0 <_Z16USART_ReciveWaitPcib+0x3a>
     324:	80 e0       	ldi	r24, 0x00	; 0
     326:	03 c0       	rjmp	.+6      	; 0x32e <_Z16USART_ReciveWaitPcib+0x88>
     328:	80 e0       	ldi	r24, 0x00	; 0
     32a:	01 c0       	rjmp	.+2      	; 0x32e <_Z16USART_ReciveWaitPcib+0x88>
     32c:	81 e0       	ldi	r24, 0x01	; 1
     32e:	df 91       	pop	r29
     330:	cf 91       	pop	r28
     332:	1f 91       	pop	r17
     334:	0f 91       	pop	r16
     336:	ff 90       	pop	r15
     338:	ef 90       	pop	r14
     33a:	df 90       	pop	r13
     33c:	08 95       	ret

0000033e <_Z13USART_ClearRXv>:
     33e:	e1 e1       	ldi	r30, 0x11	; 17
     340:	f4 e0       	ldi	r31, 0x04	; 4
     342:	83 e4       	ldi	r24, 0x43	; 67
     344:	94 e0       	ldi	r25, 0x04	; 4
     346:	11 92       	st	Z+, r1
     348:	e8 17       	cp	r30, r24
     34a:	f9 07       	cpc	r31, r25
     34c:	e1 f7       	brne	.-8      	; 0x346 <_Z13USART_ClearRXv+0x8>
     34e:	08 95       	ret

00000350 <_Z7TWIInitv>:
     350:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
     354:	88 e4       	ldi	r24, 0x48	; 72
     356:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
     35a:	84 e0       	ldi	r24, 0x04	; 4
     35c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     360:	08 95       	ret

00000362 <_Z8TWIStartv>:
     362:	84 ea       	ldi	r24, 0xA4	; 164
     364:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     368:	ec eb       	ldi	r30, 0xBC	; 188
     36a:	f0 e0       	ldi	r31, 0x00	; 0
     36c:	80 81       	ld	r24, Z
     36e:	88 23       	and	r24, r24
     370:	ec f7       	brge	.-6      	; 0x36c <_Z8TWIStartv+0xa>
     372:	08 95       	ret

00000374 <_Z7TWIStopv>:
     374:	84 e9       	ldi	r24, 0x94	; 148
     376:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     37a:	ec eb       	ldi	r30, 0xBC	; 188
     37c:	f0 e0       	ldi	r31, 0x00	; 0
     37e:	80 81       	ld	r24, Z
     380:	84 fd       	sbrc	r24, 4
     382:	fd cf       	rjmp	.-6      	; 0x37e <_Z7TWIStopv+0xa>
     384:	08 95       	ret

00000386 <_Z13TWIWriteAddrshh>:
     386:	88 0f       	add	r24, r24
     388:	68 2b       	or	r22, r24
     38a:	60 93 bb 00 	sts	0x00BB, r22	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
     38e:	84 e8       	ldi	r24, 0x84	; 132
     390:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     394:	ec eb       	ldi	r30, 0xBC	; 188
     396:	f0 e0       	ldi	r31, 0x00	; 0
     398:	80 81       	ld	r24, Z
     39a:	88 23       	and	r24, r24
     39c:	ec f7       	brge	.-6      	; 0x398 <_Z13TWIWriteAddrshh+0x12>
     39e:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
     3a2:	88 7f       	andi	r24, 0xF8	; 248
     3a4:	08 95       	ret

000003a6 <_Z12TWIWriteDatah>:
     3a6:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
     3aa:	84 e8       	ldi	r24, 0x84	; 132
     3ac:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     3b0:	ec eb       	ldi	r30, 0xBC	; 188
     3b2:	f0 e0       	ldi	r31, 0x00	; 0
     3b4:	80 81       	ld	r24, Z
     3b6:	88 23       	and	r24, r24
     3b8:	ec f7       	brge	.-6      	; 0x3b4 <_Z12TWIWriteDatah+0xe>
     3ba:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
     3be:	88 7f       	andi	r24, 0xF8	; 248
     3c0:	08 95       	ret

000003c2 <_Z11Lcd4bitdatahb>:
     3c2:	1f 93       	push	r17
     3c4:	cf 93       	push	r28
     3c6:	df 93       	push	r29
     3c8:	d8 2f       	mov	r29, r24
     3ca:	c6 2f       	mov	r28, r22
     3cc:	0e 94 b1 01 	call	0x362	; 0x362 <_Z8TWIStartv>
     3d0:	60 e0       	ldi	r22, 0x00	; 0
     3d2:	80 91 10 04 	lds	r24, 0x0410	; 0x800410 <deviceAdress>
     3d6:	0e 94 c3 01 	call	0x386	; 0x386 <_Z13TWIWriteAddrshh>
     3da:	1c 2f       	mov	r17, r28
     3dc:	1d 2b       	or	r17, r29
     3de:	80 91 0f 04 	lds	r24, 0x040F	; 0x80040f <Backlight>
     3e2:	81 2b       	or	r24, r17
     3e4:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <_Z12TWIWriteDatah>
     3e8:	0e 94 ba 01 	call	0x374	; 0x374 <_Z7TWIStopv>
     3ec:	0e 94 b1 01 	call	0x362	; 0x362 <_Z8TWIStartv>
     3f0:	60 e0       	ldi	r22, 0x00	; 0
     3f2:	80 91 10 04 	lds	r24, 0x0410	; 0x800410 <deviceAdress>
     3f6:	0e 94 c3 01 	call	0x386	; 0x386 <_Z13TWIWriteAddrshh>
     3fa:	80 91 0f 04 	lds	r24, 0x040F	; 0x80040f <Backlight>
     3fe:	84 60       	ori	r24, 0x04	; 4
     400:	81 2b       	or	r24, r17
     402:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <_Z12TWIWriteDatah>
     406:	0e 94 ba 01 	call	0x374	; 0x374 <_Z7TWIStopv>
     40a:	8f e8       	ldi	r24, 0x8F	; 143
     40c:	91 e0       	ldi	r25, 0x01	; 1
     40e:	01 97       	sbiw	r24, 0x01	; 1
     410:	f1 f7       	brne	.-4      	; 0x40e <__EEPROM_REGION_LENGTH__+0xe>
     412:	00 c0       	rjmp	.+0      	; 0x414 <__EEPROM_REGION_LENGTH__+0x14>
     414:	00 00       	nop
     416:	0e 94 b1 01 	call	0x362	; 0x362 <_Z8TWIStartv>
     41a:	60 e0       	ldi	r22, 0x00	; 0
     41c:	80 91 10 04 	lds	r24, 0x0410	; 0x800410 <deviceAdress>
     420:	0e 94 c3 01 	call	0x386	; 0x386 <_Z13TWIWriteAddrshh>
     424:	db 7f       	andi	r29, 0xFB	; 251
     426:	cd 2b       	or	r28, r29
     428:	80 91 0f 04 	lds	r24, 0x040F	; 0x80040f <Backlight>
     42c:	8c 2b       	or	r24, r28
     42e:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <_Z12TWIWriteDatah>
     432:	0e 94 ba 01 	call	0x374	; 0x374 <_Z7TWIStopv>
     436:	8f e9       	ldi	r24, 0x9F	; 159
     438:	9f e0       	ldi	r25, 0x0F	; 15
     43a:	01 97       	sbiw	r24, 0x01	; 1
     43c:	f1 f7       	brne	.-4      	; 0x43a <__EEPROM_REGION_LENGTH__+0x3a>
     43e:	00 c0       	rjmp	.+0      	; 0x440 <__EEPROM_REGION_LENGTH__+0x40>
     440:	00 00       	nop
     442:	df 91       	pop	r29
     444:	cf 91       	pop	r28
     446:	1f 91       	pop	r17
     448:	08 95       	ret

0000044a <_Z10LcdCommandh>:
     44a:	cf 93       	push	r28
     44c:	c8 2f       	mov	r28, r24
     44e:	60 e0       	ldi	r22, 0x00	; 0
     450:	80 7f       	andi	r24, 0xF0	; 240
     452:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <_Z11Lcd4bitdatahb>
     456:	60 e0       	ldi	r22, 0x00	; 0
     458:	8c 2f       	mov	r24, r28
     45a:	82 95       	swap	r24
     45c:	80 7f       	andi	r24, 0xF0	; 240
     45e:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <_Z11Lcd4bitdatahb>
     462:	cf 91       	pop	r28
     464:	08 95       	ret

00000466 <_Z7LcdInith>:
     466:	cf 93       	push	r28
     468:	c8 2f       	mov	r28, r24
     46a:	0e 94 a8 01 	call	0x350	; 0x350 <_Z7TWIInitv>
     46e:	88 e0       	ldi	r24, 0x08	; 8
     470:	80 93 0f 04 	sts	0x040F, r24	; 0x80040f <Backlight>
     474:	8f e3       	ldi	r24, 0x3F	; 63
     476:	9c e9       	ldi	r25, 0x9C	; 156
     478:	01 97       	sbiw	r24, 0x01	; 1
     47a:	f1 f7       	brne	.-4      	; 0x478 <_Z7LcdInith+0x12>
     47c:	00 c0       	rjmp	.+0      	; 0x47e <_Z7LcdInith+0x18>
     47e:	00 00       	nop
     480:	c0 93 10 04 	sts	0x0410, r28	; 0x800410 <deviceAdress>
     484:	82 e0       	ldi	r24, 0x02	; 2
     486:	0e 94 25 02 	call	0x44a	; 0x44a <_Z10LcdCommandh>
     48a:	88 e2       	ldi	r24, 0x28	; 40
     48c:	0e 94 25 02 	call	0x44a	; 0x44a <_Z10LcdCommandh>
     490:	8c e0       	ldi	r24, 0x0C	; 12
     492:	0e 94 25 02 	call	0x44a	; 0x44a <_Z10LcdCommandh>
     496:	86 e0       	ldi	r24, 0x06	; 6
     498:	0e 94 25 02 	call	0x44a	; 0x44a <_Z10LcdCommandh>
     49c:	81 e0       	ldi	r24, 0x01	; 1
     49e:	0e 94 25 02 	call	0x44a	; 0x44a <_Z10LcdCommandh>
     4a2:	cf 91       	pop	r28
     4a4:	08 95       	ret

000004a6 <_Z7LcdCharh>:
     4a6:	cf 93       	push	r28
     4a8:	c8 2f       	mov	r28, r24
     4aa:	61 e0       	ldi	r22, 0x01	; 1
     4ac:	80 7f       	andi	r24, 0xF0	; 240
     4ae:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <_Z11Lcd4bitdatahb>
     4b2:	61 e0       	ldi	r22, 0x01	; 1
     4b4:	8c 2f       	mov	r24, r28
     4b6:	82 95       	swap	r24
     4b8:	80 7f       	andi	r24, 0xF0	; 240
     4ba:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <_Z11Lcd4bitdatahb>
     4be:	cf 91       	pop	r28
     4c0:	08 95       	ret

000004c2 <_Z9LcdStringPc>:
     4c2:	cf 93       	push	r28
     4c4:	df 93       	push	r29
     4c6:	ec 01       	movw	r28, r24
     4c8:	88 81       	ld	r24, Y
     4ca:	88 23       	and	r24, r24
     4cc:	31 f0       	breq	.+12     	; 0x4da <_Z9LcdStringPc+0x18>
     4ce:	21 96       	adiw	r28, 0x01	; 1
     4d0:	0e 94 53 02 	call	0x4a6	; 0x4a6 <_Z7LcdCharh>
     4d4:	89 91       	ld	r24, Y+
     4d6:	81 11       	cpse	r24, r1
     4d8:	fb cf       	rjmp	.-10     	; 0x4d0 <_Z9LcdStringPc+0xe>
     4da:	df 91       	pop	r29
     4dc:	cf 91       	pop	r28
     4de:	08 95       	ret

000004e0 <_Z12LcdSetCursorhhPc>:
     4e0:	cf 93       	push	r28
     4e2:	df 93       	push	r29
     4e4:	ea 01       	movw	r28, r20
     4e6:	61 30       	cpi	r22, 0x01	; 1
     4e8:	41 f0       	breq	.+16     	; 0x4fa <_Z12LcdSetCursorhhPc+0x1a>
     4ea:	28 f0       	brcs	.+10     	; 0x4f6 <_Z12LcdSetCursorhhPc+0x16>
     4ec:	62 30       	cpi	r22, 0x02	; 2
     4ee:	39 f0       	breq	.+14     	; 0x4fe <_Z12LcdSetCursorhhPc+0x1e>
     4f0:	63 30       	cpi	r22, 0x03	; 3
     4f2:	39 f0       	breq	.+14     	; 0x502 <_Z12LcdSetCursorhhPc+0x22>
     4f4:	07 c0       	rjmp	.+14     	; 0x504 <_Z12LcdSetCursorhhPc+0x24>
     4f6:	90 e8       	ldi	r25, 0x80	; 128
     4f8:	05 c0       	rjmp	.+10     	; 0x504 <_Z12LcdSetCursorhhPc+0x24>
     4fa:	90 ec       	ldi	r25, 0xC0	; 192
     4fc:	03 c0       	rjmp	.+6      	; 0x504 <_Z12LcdSetCursorhhPc+0x24>
     4fe:	94 e9       	ldi	r25, 0x94	; 148
     500:	01 c0       	rjmp	.+2      	; 0x504 <_Z12LcdSetCursorhhPc+0x24>
     502:	94 ed       	ldi	r25, 0xD4	; 212
     504:	8f 70       	andi	r24, 0x0F	; 15
     506:	89 2b       	or	r24, r25
     508:	0e 94 25 02 	call	0x44a	; 0x44a <_Z10LcdCommandh>
     50c:	ce 01       	movw	r24, r28
     50e:	0e 94 61 02 	call	0x4c2	; 0x4c2 <_Z9LcdStringPc>
     512:	df 91       	pop	r29
     514:	cf 91       	pop	r28
     516:	08 95       	ret

00000518 <_Z8SPI_Initv>:
     518:	84 b1       	in	r24, 0x04	; 4
     51a:	8e 62       	ori	r24, 0x2E	; 46
     51c:	84 b9       	out	0x04, r24	; 4
     51e:	24 98       	cbi	0x04, 4	; 4
     520:	2a 9a       	sbi	0x05, 2	; 5
     522:	81 e5       	ldi	r24, 0x51	; 81
     524:	8c bd       	out	0x2c, r24	; 44
     526:	08 95       	ret

00000528 <_Z9SPI_Writeh>:
     528:	8e bd       	out	0x2e, r24	; 46
     52a:	0d b4       	in	r0, 0x2d	; 45
     52c:	07 fe       	sbrs	r0, 7
     52e:	fd cf       	rjmp	.-6      	; 0x52a <_Z9SPI_Writeh+0x2>
     530:	8e b5       	in	r24, 0x2e	; 46
     532:	08 95       	ret

00000534 <_Z15Separate_hexP10h>:
     534:	80 7f       	andi	r24, 0xF0	; 240
     536:	90 e0       	ldi	r25, 0x00	; 0
     538:	95 95       	asr	r25
     53a:	87 95       	ror	r24
     53c:	95 95       	asr	r25
     53e:	87 95       	ror	r24
     540:	95 95       	asr	r25
     542:	87 95       	ror	r24
     544:	95 95       	asr	r25
     546:	87 95       	ror	r24
     548:	8a 30       	cpi	r24, 0x0A	; 10
     54a:	10 f4       	brcc	.+4      	; 0x550 <_Z15Separate_hexP10h+0x1c>
     54c:	80 5d       	subi	r24, 0xD0	; 208
     54e:	08 95       	ret
     550:	89 5c       	subi	r24, 0xC9	; 201
     552:	08 95       	ret

00000554 <_Z14Separate_hexP1h>:
     554:	8f 70       	andi	r24, 0x0F	; 15
     556:	8a 30       	cpi	r24, 0x0A	; 10
     558:	10 f4       	brcc	.+4      	; 0x55e <_Z14Separate_hexP1h+0xa>
     55a:	80 5d       	subi	r24, 0xD0	; 208
     55c:	08 95       	ret
     55e:	89 5c       	subi	r24, 0xC9	; 201
     560:	08 95       	ret

00000562 <_Z15SetFormatRDM630v>:
     562:	af 92       	push	r10
     564:	bf 92       	push	r11
     566:	cf 92       	push	r12
     568:	df 92       	push	r13
     56a:	ef 92       	push	r14
     56c:	ff 92       	push	r15
     56e:	0f 93       	push	r16
     570:	1f 93       	push	r17
     572:	cf 93       	push	r28
     574:	df 93       	push	r29
     576:	0a e0       	ldi	r16, 0x0A	; 10
     578:	14 e0       	ldi	r17, 0x04	; 4
     57a:	f8 01       	movw	r30, r16
     57c:	f0 80       	ld	r15, Z
     57e:	8f 2d       	mov	r24, r15
     580:	0e 94 9a 02 	call	0x534	; 0x534 <_Z15Separate_hexP10h>
     584:	a8 2e       	mov	r10, r24
     586:	c2 e0       	ldi	r28, 0x02	; 2
     588:	d4 e0       	ldi	r29, 0x04	; 4
     58a:	88 83       	st	Y, r24
     58c:	8f 2d       	mov	r24, r15
     58e:	0e 94 aa 02 	call	0x554	; 0x554 <_Z14Separate_hexP1h>
     592:	b8 2e       	mov	r11, r24
     594:	89 83       	std	Y+1, r24	; 0x01
     596:	f8 01       	movw	r30, r16
     598:	f1 80       	ldd	r15, Z+1	; 0x01
     59a:	8f 2d       	mov	r24, r15
     59c:	0e 94 9a 02 	call	0x534	; 0x534 <_Z15Separate_hexP10h>
     5a0:	c8 2e       	mov	r12, r24
     5a2:	8a 83       	std	Y+2, r24	; 0x02
     5a4:	8f 2d       	mov	r24, r15
     5a6:	0e 94 aa 02 	call	0x554	; 0x554 <_Z14Separate_hexP1h>
     5aa:	d8 2e       	mov	r13, r24
     5ac:	8b 83       	std	Y+3, r24	; 0x03
     5ae:	f8 01       	movw	r30, r16
     5b0:	f2 80       	ldd	r15, Z+2	; 0x02
     5b2:	8f 2d       	mov	r24, r15
     5b4:	0e 94 9a 02 	call	0x534	; 0x534 <_Z15Separate_hexP10h>
     5b8:	e8 2e       	mov	r14, r24
     5ba:	8c 83       	std	Y+4, r24	; 0x04
     5bc:	8f 2d       	mov	r24, r15
     5be:	0e 94 aa 02 	call	0x554	; 0x554 <_Z14Separate_hexP1h>
     5c2:	f8 2e       	mov	r15, r24
     5c4:	8d 83       	std	Y+5, r24	; 0x05
     5c6:	f8 01       	movw	r30, r16
     5c8:	03 81       	ldd	r16, Z+3	; 0x03
     5ca:	80 2f       	mov	r24, r16
     5cc:	0e 94 9a 02 	call	0x534	; 0x534 <_Z15Separate_hexP10h>
     5d0:	18 2f       	mov	r17, r24
     5d2:	8e 83       	std	Y+6, r24	; 0x06
     5d4:	80 2f       	mov	r24, r16
     5d6:	0e 94 aa 02 	call	0x554	; 0x554 <_Z14Separate_hexP1h>
     5da:	8f 83       	std	Y+7, r24	; 0x07
     5dc:	e8 ef       	ldi	r30, 0xF8	; 248
     5de:	f3 e0       	ldi	r31, 0x03	; 3
     5e0:	a0 82       	st	Z, r10
     5e2:	b1 82       	std	Z+1, r11	; 0x01
     5e4:	c2 82       	std	Z+2, r12	; 0x02
     5e6:	d3 82       	std	Z+3, r13	; 0x03
     5e8:	e4 82       	std	Z+4, r14	; 0x04
     5ea:	f5 82       	std	Z+5, r15	; 0x05
     5ec:	16 83       	std	Z+6, r17	; 0x06
     5ee:	87 83       	std	Z+7, r24	; 0x07
     5f0:	df 91       	pop	r29
     5f2:	cf 91       	pop	r28
     5f4:	1f 91       	pop	r17
     5f6:	0f 91       	pop	r16
     5f8:	ff 90       	pop	r15
     5fa:	ef 90       	pop	r14
     5fc:	df 90       	pop	r13
     5fe:	cf 90       	pop	r12
     600:	bf 90       	pop	r11
     602:	af 90       	pop	r10
     604:	08 95       	ret

00000606 <_Z13Write_MFRC522hh>:
     606:	cf 93       	push	r28
     608:	c6 2f       	mov	r28, r22
     60a:	2a 98       	cbi	0x05, 2	; 5
     60c:	88 0f       	add	r24, r24
     60e:	8e 77       	andi	r24, 0x7E	; 126
     610:	0e 94 94 02 	call	0x528	; 0x528 <_Z9SPI_Writeh>
     614:	8c 2f       	mov	r24, r28
     616:	0e 94 94 02 	call	0x528	; 0x528 <_Z9SPI_Writeh>
     61a:	2a 9a       	sbi	0x05, 2	; 5
     61c:	cf 91       	pop	r28
     61e:	08 95       	ret

00000620 <_Z12Read_MFRC522h>:
     620:	2a 98       	cbi	0x05, 2	; 5
     622:	88 0f       	add	r24, r24
     624:	8e 77       	andi	r24, 0x7E	; 126
     626:	80 68       	ori	r24, 0x80	; 128
     628:	0e 94 94 02 	call	0x528	; 0x528 <_Z9SPI_Writeh>
     62c:	80 e0       	ldi	r24, 0x00	; 0
     62e:	0e 94 94 02 	call	0x528	; 0x528 <_Z9SPI_Writeh>
     632:	2a 9a       	sbi	0x05, 2	; 5
     634:	08 95       	ret

00000636 <_Z10SetBitMaskhh>:
     636:	cf 93       	push	r28
     638:	df 93       	push	r29
     63a:	d8 2f       	mov	r29, r24
     63c:	c6 2f       	mov	r28, r22
     63e:	0e 94 10 03 	call	0x620	; 0x620 <_Z12Read_MFRC522h>
     642:	68 2f       	mov	r22, r24
     644:	6c 2b       	or	r22, r28
     646:	8d 2f       	mov	r24, r29
     648:	0e 94 03 03 	call	0x606	; 0x606 <_Z13Write_MFRC522hh>
     64c:	df 91       	pop	r29
     64e:	cf 91       	pop	r28
     650:	08 95       	ret

00000652 <_Z12ClearBitMaskhh>:
     652:	cf 93       	push	r28
     654:	df 93       	push	r29
     656:	d8 2f       	mov	r29, r24
     658:	c6 2f       	mov	r28, r22
     65a:	0e 94 10 03 	call	0x620	; 0x620 <_Z12Read_MFRC522h>
     65e:	c0 95       	com	r28
     660:	6c 2f       	mov	r22, r28
     662:	68 23       	and	r22, r24
     664:	8d 2f       	mov	r24, r29
     666:	0e 94 03 03 	call	0x606	; 0x606 <_Z13Write_MFRC522hh>
     66a:	df 91       	pop	r29
     66c:	cf 91       	pop	r28
     66e:	08 95       	ret

00000670 <_Z9AntennaOnv>:
     670:	84 e1       	ldi	r24, 0x14	; 20
     672:	0e 94 10 03 	call	0x620	; 0x620 <_Z12Read_MFRC522h>
     676:	83 70       	andi	r24, 0x03	; 3
     678:	21 f4       	brne	.+8      	; 0x682 <_Z9AntennaOnv+0x12>
     67a:	63 e0       	ldi	r22, 0x03	; 3
     67c:	84 e1       	ldi	r24, 0x14	; 20
     67e:	0e 94 1b 03 	call	0x636	; 0x636 <_Z10SetBitMaskhh>
     682:	08 95       	ret

00000684 <_Z13MFRC522_Resetv>:
     684:	6f e0       	ldi	r22, 0x0F	; 15
     686:	81 e0       	ldi	r24, 0x01	; 1
     688:	0e 94 03 03 	call	0x606	; 0x606 <_Z13Write_MFRC522hh>
     68c:	08 95       	ret

0000068e <_Z12MFRC522_Initv>:
     68e:	0e 94 42 03 	call	0x684	; 0x684 <_Z13MFRC522_Resetv>
     692:	6d e8       	ldi	r22, 0x8D	; 141
     694:	8a e2       	ldi	r24, 0x2A	; 42
     696:	0e 94 03 03 	call	0x606	; 0x606 <_Z13Write_MFRC522hh>
     69a:	6e e3       	ldi	r22, 0x3E	; 62
     69c:	8b e2       	ldi	r24, 0x2B	; 43
     69e:	0e 94 03 03 	call	0x606	; 0x606 <_Z13Write_MFRC522hh>
     6a2:	6e e1       	ldi	r22, 0x1E	; 30
     6a4:	8d e2       	ldi	r24, 0x2D	; 45
     6a6:	0e 94 03 03 	call	0x606	; 0x606 <_Z13Write_MFRC522hh>
     6aa:	60 e0       	ldi	r22, 0x00	; 0
     6ac:	8c e2       	ldi	r24, 0x2C	; 44
     6ae:	0e 94 03 03 	call	0x606	; 0x606 <_Z13Write_MFRC522hh>
     6b2:	60 e4       	ldi	r22, 0x40	; 64
     6b4:	85 e1       	ldi	r24, 0x15	; 21
     6b6:	0e 94 03 03 	call	0x606	; 0x606 <_Z13Write_MFRC522hh>
     6ba:	6d e3       	ldi	r22, 0x3D	; 61
     6bc:	81 e1       	ldi	r24, 0x11	; 17
     6be:	0e 94 03 03 	call	0x606	; 0x606 <_Z13Write_MFRC522hh>
     6c2:	0e 94 38 03 	call	0x670	; 0x670 <_Z9AntennaOnv>
     6c6:	08 95       	ret

000006c8 <_Z14MFRC522_ToCardhPhhS_Pj>:
     6c8:	7f 92       	push	r7
     6ca:	8f 92       	push	r8
     6cc:	9f 92       	push	r9
     6ce:	af 92       	push	r10
     6d0:	bf 92       	push	r11
     6d2:	cf 92       	push	r12
     6d4:	df 92       	push	r13
     6d6:	ef 92       	push	r14
     6d8:	ff 92       	push	r15
     6da:	0f 93       	push	r16
     6dc:	1f 93       	push	r17
     6de:	cf 93       	push	r28
     6e0:	df 93       	push	r29
     6e2:	b8 2e       	mov	r11, r24
     6e4:	c6 2f       	mov	r28, r22
     6e6:	d7 2f       	mov	r29, r23
     6e8:	c4 2e       	mov	r12, r20
     6ea:	a2 2e       	mov	r10, r18
     6ec:	93 2e       	mov	r9, r19
     6ee:	78 01       	movw	r14, r16
     6f0:	8c e0       	ldi	r24, 0x0C	; 12
     6f2:	b8 16       	cp	r11, r24
     6f4:	09 f4       	brne	.+2      	; 0x6f8 <_Z14MFRC522_ToCardhPhhS_Pj+0x30>
     6f6:	a7 c0       	rjmp	.+334    	; 0x846 <__DATA_REGION_LENGTH__+0x46>
     6f8:	ee e0       	ldi	r30, 0x0E	; 14
     6fa:	be 12       	cpse	r11, r30
     6fc:	08 c0       	rjmp	.+16     	; 0x70e <_Z14MFRC522_ToCardhPhhS_Pj+0x46>
     6fe:	68 94       	set
     700:	77 24       	eor	r7, r7
     702:	74 f8       	bld	r7, 4
     704:	0f 2e       	mov	r0, r31
     706:	f2 e1       	ldi	r31, 0x12	; 18
     708:	8f 2e       	mov	r8, r31
     70a:	f0 2d       	mov	r31, r0
     70c:	02 c0       	rjmp	.+4      	; 0x712 <_Z14MFRC522_ToCardhPhhS_Pj+0x4a>
     70e:	71 2c       	mov	r7, r1
     710:	81 2c       	mov	r8, r1
     712:	68 2d       	mov	r22, r8
     714:	60 68       	ori	r22, 0x80	; 128
     716:	82 e0       	ldi	r24, 0x02	; 2
     718:	0e 94 03 03 	call	0x606	; 0x606 <_Z13Write_MFRC522hh>
     71c:	60 e8       	ldi	r22, 0x80	; 128
     71e:	84 e0       	ldi	r24, 0x04	; 4
     720:	0e 94 29 03 	call	0x652	; 0x652 <_Z12ClearBitMaskhh>
     724:	60 e8       	ldi	r22, 0x80	; 128
     726:	8a e0       	ldi	r24, 0x0A	; 10
     728:	0e 94 1b 03 	call	0x636	; 0x636 <_Z10SetBitMaskhh>
     72c:	60 e0       	ldi	r22, 0x00	; 0
     72e:	81 e0       	ldi	r24, 0x01	; 1
     730:	0e 94 03 03 	call	0x606	; 0x606 <_Z13Write_MFRC522hh>
     734:	d1 2c       	mov	r13, r1
     736:	c1 14       	cp	r12, r1
     738:	d1 04       	cpc	r13, r1
     73a:	71 f0       	breq	.+28     	; 0x758 <_Z14MFRC522_ToCardhPhhS_Pj+0x90>
     73c:	0c 2f       	mov	r16, r28
     73e:	1d 2f       	mov	r17, r29
     740:	c0 e0       	ldi	r28, 0x00	; 0
     742:	d0 e0       	ldi	r29, 0x00	; 0
     744:	f8 01       	movw	r30, r16
     746:	61 91       	ld	r22, Z+
     748:	8f 01       	movw	r16, r30
     74a:	89 e0       	ldi	r24, 0x09	; 9
     74c:	0e 94 03 03 	call	0x606	; 0x606 <_Z13Write_MFRC522hh>
     750:	21 96       	adiw	r28, 0x01	; 1
     752:	cc 15       	cp	r28, r12
     754:	dd 05       	cpc	r29, r13
     756:	b0 f3       	brcs	.-20     	; 0x744 <_Z14MFRC522_ToCardhPhhS_Pj+0x7c>
     758:	6b 2d       	mov	r22, r11
     75a:	81 e0       	ldi	r24, 0x01	; 1
     75c:	0e 94 03 03 	call	0x606	; 0x606 <_Z13Write_MFRC522hh>
     760:	fc e0       	ldi	r31, 0x0C	; 12
     762:	bf 12       	cpse	r11, r31
     764:	04 c0       	rjmp	.+8      	; 0x76e <_Z14MFRC522_ToCardhPhhS_Pj+0xa6>
     766:	60 e8       	ldi	r22, 0x80	; 128
     768:	8d e0       	ldi	r24, 0x0D	; 13
     76a:	0e 94 1b 03 	call	0x636	; 0x636 <_Z10SetBitMaskhh>
     76e:	84 e0       	ldi	r24, 0x04	; 4
     770:	0e 94 10 03 	call	0x620	; 0x620 <_Z12Read_MFRC522h>
     774:	18 2f       	mov	r17, r24
     776:	cf ec       	ldi	r28, 0xCF	; 207
     778:	d7 e0       	ldi	r29, 0x07	; 7
     77a:	07 2d       	mov	r16, r7
     77c:	01 60       	ori	r16, 0x01	; 1
     77e:	07 c0       	rjmp	.+14     	; 0x78e <_Z14MFRC522_ToCardhPhhS_Pj+0xc6>
     780:	84 e0       	ldi	r24, 0x04	; 4
     782:	0e 94 10 03 	call	0x620	; 0x620 <_Z12Read_MFRC522h>
     786:	18 2f       	mov	r17, r24
     788:	21 97       	sbiw	r28, 0x01	; 1
     78a:	09 f4       	brne	.+2      	; 0x78e <_Z14MFRC522_ToCardhPhhS_Pj+0xc6>
     78c:	79 c0       	rjmp	.+242    	; 0x880 <__DATA_REGION_LENGTH__+0x80>
     78e:	80 2f       	mov	r24, r16
     790:	81 23       	and	r24, r17
     792:	b1 f3       	breq	.-20     	; 0x780 <_Z14MFRC522_ToCardhPhhS_Pj+0xb8>
     794:	7b c0       	rjmp	.+246    	; 0x88c <__DATA_REGION_LENGTH__+0x8c>
     796:	88 2d       	mov	r24, r8
     798:	81 70       	andi	r24, 0x01	; 1
     79a:	18 23       	and	r17, r24
     79c:	c1 e0       	ldi	r28, 0x01	; 1
     79e:	09 f4       	brne	.+2      	; 0x7a2 <_Z14MFRC522_ToCardhPhhS_Pj+0xda>
     7a0:	c0 e0       	ldi	r28, 0x00	; 0
     7a2:	8c e0       	ldi	r24, 0x0C	; 12
     7a4:	b8 12       	cpse	r11, r24
     7a6:	7d c0       	rjmp	.+250    	; 0x8a2 <__DATA_REGION_LENGTH__+0xa2>
     7a8:	8a e0       	ldi	r24, 0x0A	; 10
     7aa:	0e 94 10 03 	call	0x620	; 0x620 <_Z12Read_MFRC522h>
     7ae:	d8 2f       	mov	r29, r24
     7b0:	8c e0       	ldi	r24, 0x0C	; 12
     7b2:	0e 94 10 03 	call	0x620	; 0x620 <_Z12Read_MFRC522h>
     7b6:	28 2f       	mov	r18, r24
     7b8:	27 70       	andi	r18, 0x07	; 7
     7ba:	79 f0       	breq	.+30     	; 0x7da <_Z14MFRC522_ToCardhPhhS_Pj+0x112>
     7bc:	8d 2f       	mov	r24, r29
     7be:	90 e0       	ldi	r25, 0x00	; 0
     7c0:	01 97       	sbiw	r24, 0x01	; 1
     7c2:	88 0f       	add	r24, r24
     7c4:	99 1f       	adc	r25, r25
     7c6:	88 0f       	add	r24, r24
     7c8:	99 1f       	adc	r25, r25
     7ca:	88 0f       	add	r24, r24
     7cc:	99 1f       	adc	r25, r25
     7ce:	82 0f       	add	r24, r18
     7d0:	91 1d       	adc	r25, r1
     7d2:	f7 01       	movw	r30, r14
     7d4:	91 83       	std	Z+1, r25	; 0x01
     7d6:	80 83       	st	Z, r24
     7d8:	0b c0       	rjmp	.+22     	; 0x7f0 <_Z14MFRC522_ToCardhPhhS_Pj+0x128>
     7da:	8d 2f       	mov	r24, r29
     7dc:	90 e0       	ldi	r25, 0x00	; 0
     7de:	88 0f       	add	r24, r24
     7e0:	99 1f       	adc	r25, r25
     7e2:	88 0f       	add	r24, r24
     7e4:	99 1f       	adc	r25, r25
     7e6:	88 0f       	add	r24, r24
     7e8:	99 1f       	adc	r25, r25
     7ea:	f7 01       	movw	r30, r14
     7ec:	91 83       	std	Z+1, r25	; 0x01
     7ee:	80 83       	st	Z, r24
     7f0:	dd 23       	and	r29, r29
     7f2:	49 f0       	breq	.+18     	; 0x806 <__DATA_REGION_LENGTH__+0x6>
     7f4:	d1 31       	cpi	r29, 0x11	; 17
     7f6:	08 f0       	brcs	.+2      	; 0x7fa <_Z14MFRC522_ToCardhPhhS_Pj+0x132>
     7f8:	d0 e1       	ldi	r29, 0x10	; 16
     7fa:	ed 2e       	mov	r14, r29
     7fc:	f1 2c       	mov	r15, r1
     7fe:	e1 14       	cp	r14, r1
     800:	f1 04       	cpc	r15, r1
     802:	21 f4       	brne	.+8      	; 0x80c <__DATA_REGION_LENGTH__+0xc>
     804:	4e c0       	rjmp	.+156    	; 0x8a2 <__DATA_REGION_LENGTH__+0xa2>
     806:	ee 24       	eor	r14, r14
     808:	e3 94       	inc	r14
     80a:	f1 2c       	mov	r15, r1
     80c:	ca 2c       	mov	r12, r10
     80e:	d9 2c       	mov	r13, r9
     810:	00 e0       	ldi	r16, 0x00	; 0
     812:	10 e0       	ldi	r17, 0x00	; 0
     814:	89 e0       	ldi	r24, 0x09	; 9
     816:	0e 94 10 03 	call	0x620	; 0x620 <_Z12Read_MFRC522h>
     81a:	f6 01       	movw	r30, r12
     81c:	81 93       	st	Z+, r24
     81e:	6f 01       	movw	r12, r30
     820:	0f 5f       	subi	r16, 0xFF	; 255
     822:	1f 4f       	sbci	r17, 0xFF	; 255
     824:	0e 15       	cp	r16, r14
     826:	1f 05       	cpc	r17, r15
     828:	a8 f3       	brcs	.-22     	; 0x814 <__DATA_REGION_LENGTH__+0x14>
     82a:	3b c0       	rjmp	.+118    	; 0x8a2 <__DATA_REGION_LENGTH__+0xa2>
     82c:	6c e0       	ldi	r22, 0x0C	; 12
     82e:	81 e0       	ldi	r24, 0x01	; 1
     830:	0e 94 03 03 	call	0x606	; 0x606 <_Z13Write_MFRC522hh>
     834:	0f 2e       	mov	r0, r31
     836:	f0 e3       	ldi	r31, 0x30	; 48
     838:	7f 2e       	mov	r7, r31
     83a:	f0 2d       	mov	r31, r0
     83c:	0f 2e       	mov	r0, r31
     83e:	f7 e7       	ldi	r31, 0x77	; 119
     840:	8f 2e       	mov	r8, r31
     842:	f0 2d       	mov	r31, r0
     844:	90 cf       	rjmp	.-224    	; 0x766 <_Z14MFRC522_ToCardhPhhS_Pj+0x9e>
     846:	67 ef       	ldi	r22, 0xF7	; 247
     848:	82 e0       	ldi	r24, 0x02	; 2
     84a:	0e 94 03 03 	call	0x606	; 0x606 <_Z13Write_MFRC522hh>
     84e:	60 e8       	ldi	r22, 0x80	; 128
     850:	84 e0       	ldi	r24, 0x04	; 4
     852:	0e 94 29 03 	call	0x652	; 0x652 <_Z12ClearBitMaskhh>
     856:	60 e8       	ldi	r22, 0x80	; 128
     858:	8a e0       	ldi	r24, 0x0A	; 10
     85a:	0e 94 1b 03 	call	0x636	; 0x636 <_Z10SetBitMaskhh>
     85e:	60 e0       	ldi	r22, 0x00	; 0
     860:	81 e0       	ldi	r24, 0x01	; 1
     862:	0e 94 03 03 	call	0x606	; 0x606 <_Z13Write_MFRC522hh>
     866:	d1 2c       	mov	r13, r1
     868:	c1 14       	cp	r12, r1
     86a:	d1 04       	cpc	r13, r1
     86c:	f9 f2       	breq	.-66     	; 0x82c <__DATA_REGION_LENGTH__+0x2c>
     86e:	0f 2e       	mov	r0, r31
     870:	f0 e3       	ldi	r31, 0x30	; 48
     872:	7f 2e       	mov	r7, r31
     874:	f0 2d       	mov	r31, r0
     876:	0f 2e       	mov	r0, r31
     878:	f7 e7       	ldi	r31, 0x77	; 119
     87a:	8f 2e       	mov	r8, r31
     87c:	f0 2d       	mov	r31, r0
     87e:	5e cf       	rjmp	.-324    	; 0x73c <_Z14MFRC522_ToCardhPhhS_Pj+0x74>
     880:	60 e8       	ldi	r22, 0x80	; 128
     882:	8d e0       	ldi	r24, 0x0D	; 13
     884:	0e 94 29 03 	call	0x652	; 0x652 <_Z12ClearBitMaskhh>
     888:	c2 e0       	ldi	r28, 0x02	; 2
     88a:	0b c0       	rjmp	.+22     	; 0x8a2 <__DATA_REGION_LENGTH__+0xa2>
     88c:	60 e8       	ldi	r22, 0x80	; 128
     88e:	8d e0       	ldi	r24, 0x0D	; 13
     890:	0e 94 29 03 	call	0x652	; 0x652 <_Z12ClearBitMaskhh>
     894:	86 e0       	ldi	r24, 0x06	; 6
     896:	0e 94 10 03 	call	0x620	; 0x620 <_Z12Read_MFRC522h>
     89a:	8b 71       	andi	r24, 0x1B	; 27
     89c:	09 f4       	brne	.+2      	; 0x8a0 <__DATA_REGION_LENGTH__+0xa0>
     89e:	7b cf       	rjmp	.-266    	; 0x796 <_Z14MFRC522_ToCardhPhhS_Pj+0xce>
     8a0:	c2 e0       	ldi	r28, 0x02	; 2
     8a2:	8c 2f       	mov	r24, r28
     8a4:	df 91       	pop	r29
     8a6:	cf 91       	pop	r28
     8a8:	1f 91       	pop	r17
     8aa:	0f 91       	pop	r16
     8ac:	ff 90       	pop	r15
     8ae:	ef 90       	pop	r14
     8b0:	df 90       	pop	r13
     8b2:	cf 90       	pop	r12
     8b4:	bf 90       	pop	r11
     8b6:	af 90       	pop	r10
     8b8:	9f 90       	pop	r9
     8ba:	8f 90       	pop	r8
     8bc:	7f 90       	pop	r7
     8be:	08 95       	ret

000008c0 <_Z15MFRC522_RequesthPh>:
     8c0:	ef 92       	push	r14
     8c2:	ff 92       	push	r15
     8c4:	0f 93       	push	r16
     8c6:	1f 93       	push	r17
     8c8:	cf 93       	push	r28
     8ca:	df 93       	push	r29
     8cc:	00 d0       	rcall	.+0      	; 0x8ce <_Z15MFRC522_RequesthPh+0xe>
     8ce:	cd b7       	in	r28, 0x3d	; 61
     8d0:	de b7       	in	r29, 0x3e	; 62
     8d2:	18 2f       	mov	r17, r24
     8d4:	7b 01       	movw	r14, r22
     8d6:	67 e0       	ldi	r22, 0x07	; 7
     8d8:	8d e0       	ldi	r24, 0x0D	; 13
     8da:	0e 94 03 03 	call	0x606	; 0x606 <_Z13Write_MFRC522hh>
     8de:	f7 01       	movw	r30, r14
     8e0:	10 83       	st	Z, r17
     8e2:	8e 01       	movw	r16, r28
     8e4:	0f 5f       	subi	r16, 0xFF	; 255
     8e6:	1f 4f       	sbci	r17, 0xFF	; 255
     8e8:	97 01       	movw	r18, r14
     8ea:	41 e0       	ldi	r20, 0x01	; 1
     8ec:	b7 01       	movw	r22, r14
     8ee:	8c e0       	ldi	r24, 0x0C	; 12
     8f0:	0e 94 64 03 	call	0x6c8	; 0x6c8 <_Z14MFRC522_ToCardhPhhS_Pj>
     8f4:	81 11       	cpse	r24, r1
     8f6:	07 c0       	rjmp	.+14     	; 0x906 <__stack+0x7>
     8f8:	29 81       	ldd	r18, Y+1	; 0x01
     8fa:	3a 81       	ldd	r19, Y+2	; 0x02
     8fc:	20 31       	cpi	r18, 0x10	; 16
     8fe:	31 05       	cpc	r19, r1
     900:	19 f0       	breq	.+6      	; 0x908 <__stack+0x9>
     902:	82 e0       	ldi	r24, 0x02	; 2
     904:	01 c0       	rjmp	.+2      	; 0x908 <__stack+0x9>
     906:	82 e0       	ldi	r24, 0x02	; 2
     908:	0f 90       	pop	r0
     90a:	0f 90       	pop	r0
     90c:	df 91       	pop	r29
     90e:	cf 91       	pop	r28
     910:	1f 91       	pop	r17
     912:	0f 91       	pop	r16
     914:	ff 90       	pop	r15
     916:	ef 90       	pop	r14
     918:	08 95       	ret

0000091a <_Z16MFRC522_AnticollPh>:
     91a:	ef 92       	push	r14
     91c:	ff 92       	push	r15
     91e:	0f 93       	push	r16
     920:	1f 93       	push	r17
     922:	cf 93       	push	r28
     924:	df 93       	push	r29
     926:	00 d0       	rcall	.+0      	; 0x928 <_Z16MFRC522_AnticollPh+0xe>
     928:	cd b7       	in	r28, 0x3d	; 61
     92a:	de b7       	in	r29, 0x3e	; 62
     92c:	7c 01       	movw	r14, r24
     92e:	60 e0       	ldi	r22, 0x00	; 0
     930:	8d e0       	ldi	r24, 0x0D	; 13
     932:	0e 94 03 03 	call	0x606	; 0x606 <_Z13Write_MFRC522hh>
     936:	83 e9       	ldi	r24, 0x93	; 147
     938:	f7 01       	movw	r30, r14
     93a:	80 83       	st	Z, r24
     93c:	80 e2       	ldi	r24, 0x20	; 32
     93e:	81 83       	std	Z+1, r24	; 0x01
     940:	8e 01       	movw	r16, r28
     942:	0f 5f       	subi	r16, 0xFF	; 255
     944:	1f 4f       	sbci	r17, 0xFF	; 255
     946:	97 01       	movw	r18, r14
     948:	42 e0       	ldi	r20, 0x02	; 2
     94a:	b7 01       	movw	r22, r14
     94c:	8c e0       	ldi	r24, 0x0C	; 12
     94e:	0e 94 64 03 	call	0x6c8	; 0x6c8 <_Z14MFRC522_ToCardhPhhS_Pj>
     952:	81 11       	cpse	r24, r1
     954:	0e c0       	rjmp	.+28     	; 0x972 <_Z16MFRC522_AnticollPh+0x58>
     956:	f7 01       	movw	r30, r14
     958:	a7 01       	movw	r20, r14
     95a:	4c 5f       	subi	r20, 0xFC	; 252
     95c:	5f 4f       	sbci	r21, 0xFF	; 255
     95e:	90 e0       	ldi	r25, 0x00	; 0
     960:	21 91       	ld	r18, Z+
     962:	92 27       	eor	r25, r18
     964:	e4 17       	cp	r30, r20
     966:	f5 07       	cpc	r31, r21
     968:	d9 f7       	brne	.-10     	; 0x960 <_Z16MFRC522_AnticollPh+0x46>
     96a:	f7 01       	movw	r30, r14
     96c:	24 81       	ldd	r18, Z+4	; 0x04
     96e:	92 13       	cpse	r25, r18
     970:	82 e0       	ldi	r24, 0x02	; 2
     972:	0f 90       	pop	r0
     974:	0f 90       	pop	r0
     976:	df 91       	pop	r29
     978:	cf 91       	pop	r28
     97a:	1f 91       	pop	r17
     97c:	0f 91       	pop	r16
     97e:	ff 90       	pop	r15
     980:	ef 90       	pop	r14
     982:	08 95       	ret

00000984 <_Z10RandomInitv>:
     984:	81 e6       	ldi	r24, 0x61	; 97
     986:	90 e0       	ldi	r25, 0x00	; 0
     988:	0e 94 51 16 	call	0x2ca2	; 0x2ca2 <eeprom_read_byte>
     98c:	90 e0       	ldi	r25, 0x00	; 0
     98e:	0e 94 0c 14 	call	0x2818	; 0x2818 <srand>
     992:	81 e6       	ldi	r24, 0x61	; 97
     994:	90 e0       	ldi	r25, 0x00	; 0
     996:	0e 94 51 16 	call	0x2ca2	; 0x2ca2 <eeprom_read_byte>
     99a:	61 e0       	ldi	r22, 0x01	; 1
     99c:	68 0f       	add	r22, r24
     99e:	81 e6       	ldi	r24, 0x61	; 97
     9a0:	90 e0       	ldi	r25, 0x00	; 0
     9a2:	0e 94 59 16 	call	0x2cb2	; 0x2cb2 <eeprom_write_byte>
     9a6:	08 95       	ret

000009a8 <_Z9Timerinitv>:
     9a8:	e1 e8       	ldi	r30, 0x81	; 129
     9aa:	f0 e0       	ldi	r31, 0x00	; 0
     9ac:	80 81       	ld	r24, Z
     9ae:	88 60       	ori	r24, 0x08	; 8
     9b0:	80 83       	st	Z, r24
     9b2:	80 81       	ld	r24, Z
     9b4:	83 60       	ori	r24, 0x03	; 3
     9b6:	80 83       	st	Z, r24
     9b8:	88 ea       	ldi	r24, 0xA8	; 168
     9ba:	91 e6       	ldi	r25, 0x61	; 97
     9bc:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
     9c0:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
     9c4:	ef e6       	ldi	r30, 0x6F	; 111
     9c6:	f0 e0       	ldi	r31, 0x00	; 0
     9c8:	80 81       	ld	r24, Z
     9ca:	82 60       	ori	r24, 0x02	; 2
     9cc:	80 83       	st	Z, r24
     9ce:	08 95       	ret

000009d0 <__vector_11>:
     9d0:	1f 92       	push	r1
     9d2:	0f 92       	push	r0
     9d4:	0f b6       	in	r0, 0x3f	; 63
     9d6:	0f 92       	push	r0
     9d8:	11 24       	eor	r1, r1
     9da:	cf 92       	push	r12
     9dc:	df 92       	push	r13
     9de:	ef 92       	push	r14
     9e0:	ff 92       	push	r15
     9e2:	2f 93       	push	r18
     9e4:	3f 93       	push	r19
     9e6:	4f 93       	push	r20
     9e8:	5f 93       	push	r21
     9ea:	6f 93       	push	r22
     9ec:	7f 93       	push	r23
     9ee:	8f 93       	push	r24
     9f0:	9f 93       	push	r25
     9f2:	af 93       	push	r26
     9f4:	bf 93       	push	r27
     9f6:	ef 93       	push	r30
     9f8:	ff 93       	push	r31
     9fa:	95 b1       	in	r25, 0x05	; 5
     9fc:	80 e2       	ldi	r24, 0x20	; 32
     9fe:	89 27       	eor	r24, r25
     a00:	85 b9       	out	0x05, r24	; 5
     a02:	80 91 1f 03 	lds	r24, 0x031F	; 0x80031f <feedSpeedCal>
     a06:	90 91 20 03 	lds	r25, 0x0320	; 0x800320 <feedSpeedCal+0x1>
     a0a:	a0 91 21 03 	lds	r26, 0x0321	; 0x800321 <feedSpeedCal+0x2>
     a0e:	b0 91 22 03 	lds	r27, 0x0322	; 0x800322 <feedSpeedCal+0x3>
     a12:	80 93 1b 03 	sts	0x031B, r24	; 0x80031b <feedSpeedNow>
     a16:	90 93 1c 03 	sts	0x031C, r25	; 0x80031c <feedSpeedNow+0x1>
     a1a:	a0 93 1d 03 	sts	0x031D, r26	; 0x80031d <feedSpeedNow+0x2>
     a1e:	b0 93 1e 03 	sts	0x031E, r27	; 0x80031e <feedSpeedNow+0x3>
     a22:	60 91 04 01 	lds	r22, 0x0104	; 0x800104 <feedSpeed>
     a26:	70 91 05 01 	lds	r23, 0x0105	; 0x800105 <feedSpeed+0x1>
     a2a:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <feedSpeed+0x2>
     a2e:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <feedSpeed+0x3>
     a32:	20 91 1b 03 	lds	r18, 0x031B	; 0x80031b <feedSpeedNow>
     a36:	30 91 1c 03 	lds	r19, 0x031C	; 0x80031c <feedSpeedNow+0x1>
     a3a:	40 91 1d 03 	lds	r20, 0x031D	; 0x80031d <feedSpeedNow+0x2>
     a3e:	50 91 1e 03 	lds	r21, 0x031E	; 0x80031e <feedSpeedNow+0x3>
     a42:	0e 94 60 0d 	call	0x1ac0	; 0x1ac0 <__subsf3>
     a46:	0e 94 44 0e 	call	0x1c88	; 0x1c88 <__fixsfsi>
     a4a:	70 93 18 03 	sts	0x0318, r23	; 0x800318 <feedError+0x1>
     a4e:	60 93 17 03 	sts	0x0317, r22	; 0x800317 <feedError>
     a52:	20 91 17 03 	lds	r18, 0x0317	; 0x800317 <feedError>
     a56:	30 91 18 03 	lds	r19, 0x0318	; 0x800318 <feedError+0x1>
     a5a:	80 91 09 03 	lds	r24, 0x0309	; 0x800309 <totalFeederror>
     a5e:	90 91 0a 03 	lds	r25, 0x030A	; 0x80030a <totalFeederror+0x1>
     a62:	82 0f       	add	r24, r18
     a64:	93 1f       	adc	r25, r19
     a66:	90 93 0a 03 	sts	0x030A, r25	; 0x80030a <totalFeederror+0x1>
     a6a:	80 93 09 03 	sts	0x0309, r24	; 0x800309 <totalFeederror>
     a6e:	60 91 17 03 	lds	r22, 0x0317	; 0x800317 <feedError>
     a72:	70 91 18 03 	lds	r23, 0x0318	; 0x800318 <feedError+0x1>
     a76:	07 2e       	mov	r0, r23
     a78:	00 0c       	add	r0, r0
     a7a:	88 0b       	sbc	r24, r24
     a7c:	99 0b       	sbc	r25, r25
     a7e:	0e 94 7c 0e 	call	0x1cf8	; 0x1cf8 <__floatsisf>
     a82:	20 91 10 01 	lds	r18, 0x0110	; 0x800110 <kP>
     a86:	30 91 11 01 	lds	r19, 0x0111	; 0x800111 <kP+0x1>
     a8a:	40 91 12 01 	lds	r20, 0x0112	; 0x800112 <kP+0x2>
     a8e:	50 91 13 01 	lds	r21, 0x0113	; 0x800113 <kP+0x3>
     a92:	0e 94 31 0f 	call	0x1e62	; 0x1e62 <__mulsf3>
     a96:	60 93 13 03 	sts	0x0313, r22	; 0x800313 <kPchange>
     a9a:	70 93 14 03 	sts	0x0314, r23	; 0x800314 <kPchange+0x1>
     a9e:	80 93 15 03 	sts	0x0315, r24	; 0x800315 <kPchange+0x2>
     aa2:	90 93 16 03 	sts	0x0316, r25	; 0x800316 <kPchange+0x3>
     aa6:	60 91 17 03 	lds	r22, 0x0317	; 0x800317 <feedError>
     aaa:	70 91 18 03 	lds	r23, 0x0318	; 0x800318 <feedError+0x1>
     aae:	80 91 19 03 	lds	r24, 0x0319	; 0x800319 <prevFeederror>
     ab2:	90 91 1a 03 	lds	r25, 0x031A	; 0x80031a <prevFeederror+0x1>
     ab6:	68 1b       	sub	r22, r24
     ab8:	79 0b       	sbc	r23, r25
     aba:	07 2e       	mov	r0, r23
     abc:	00 0c       	add	r0, r0
     abe:	88 0b       	sbc	r24, r24
     ac0:	99 0b       	sbc	r25, r25
     ac2:	0e 94 7c 0e 	call	0x1cf8	; 0x1cf8 <__floatsisf>
     ac6:	20 91 0c 01 	lds	r18, 0x010C	; 0x80010c <kD>
     aca:	30 91 0d 01 	lds	r19, 0x010D	; 0x80010d <kD+0x1>
     ace:	40 91 0e 01 	lds	r20, 0x010E	; 0x80010e <kD+0x2>
     ad2:	50 91 0f 01 	lds	r21, 0x010F	; 0x80010f <kD+0x3>
     ad6:	0e 94 31 0f 	call	0x1e62	; 0x1e62 <__mulsf3>
     ada:	60 93 0f 03 	sts	0x030F, r22	; 0x80030f <kDchange>
     ade:	70 93 10 03 	sts	0x0310, r23	; 0x800310 <kDchange+0x1>
     ae2:	80 93 11 03 	sts	0x0311, r24	; 0x800311 <kDchange+0x2>
     ae6:	90 93 12 03 	sts	0x0312, r25	; 0x800312 <kDchange+0x3>
     aea:	60 91 09 03 	lds	r22, 0x0309	; 0x800309 <totalFeederror>
     aee:	70 91 0a 03 	lds	r23, 0x030A	; 0x80030a <totalFeederror+0x1>
     af2:	07 2e       	mov	r0, r23
     af4:	00 0c       	add	r0, r0
     af6:	88 0b       	sbc	r24, r24
     af8:	99 0b       	sbc	r25, r25
     afa:	0e 94 7c 0e 	call	0x1cf8	; 0x1cf8 <__floatsisf>
     afe:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <kI>
     b02:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <kI+0x1>
     b06:	40 91 0a 01 	lds	r20, 0x010A	; 0x80010a <kI+0x2>
     b0a:	50 91 0b 01 	lds	r21, 0x010B	; 0x80010b <kI+0x3>
     b0e:	0e 94 31 0f 	call	0x1e62	; 0x1e62 <__mulsf3>
     b12:	60 93 0b 03 	sts	0x030B, r22	; 0x80030b <kIchange>
     b16:	70 93 0c 03 	sts	0x030C, r23	; 0x80030c <kIchange+0x1>
     b1a:	80 93 0d 03 	sts	0x030D, r24	; 0x80030d <kIchange+0x2>
     b1e:	90 93 0e 03 	sts	0x030E, r25	; 0x80030e <kIchange+0x3>
     b22:	60 91 13 03 	lds	r22, 0x0313	; 0x800313 <kPchange>
     b26:	70 91 14 03 	lds	r23, 0x0314	; 0x800314 <kPchange+0x1>
     b2a:	80 91 15 03 	lds	r24, 0x0315	; 0x800315 <kPchange+0x2>
     b2e:	90 91 16 03 	lds	r25, 0x0316	; 0x800316 <kPchange+0x3>
     b32:	20 91 0b 03 	lds	r18, 0x030B	; 0x80030b <kIchange>
     b36:	30 91 0c 03 	lds	r19, 0x030C	; 0x80030c <kIchange+0x1>
     b3a:	40 91 0d 03 	lds	r20, 0x030D	; 0x80030d <kIchange+0x2>
     b3e:	50 91 0e 03 	lds	r21, 0x030E	; 0x80030e <kIchange+0x3>
     b42:	c0 90 0f 03 	lds	r12, 0x030F	; 0x80030f <kDchange>
     b46:	d0 90 10 03 	lds	r13, 0x0310	; 0x800310 <kDchange+0x1>
     b4a:	e0 90 11 03 	lds	r14, 0x0311	; 0x800311 <kDchange+0x2>
     b4e:	f0 90 12 03 	lds	r15, 0x0312	; 0x800312 <kDchange+0x3>
     b52:	0e 94 61 0d 	call	0x1ac2	; 0x1ac2 <__addsf3>
     b56:	a7 01       	movw	r20, r14
     b58:	96 01       	movw	r18, r12
     b5a:	0e 94 61 0d 	call	0x1ac2	; 0x1ac2 <__addsf3>
     b5e:	20 e0       	ldi	r18, 0x00	; 0
     b60:	30 e0       	ldi	r19, 0x00	; 0
     b62:	40 e4       	ldi	r20, 0x40	; 64
     b64:	50 e4       	ldi	r21, 0x40	; 64
     b66:	0e 94 d2 0d 	call	0x1ba4	; 0x1ba4 <__divsf3>
     b6a:	60 93 05 03 	sts	0x0305, r22	; 0x800305 <PIDval>
     b6e:	70 93 06 03 	sts	0x0306, r23	; 0x800306 <PIDval+0x1>
     b72:	80 93 07 03 	sts	0x0307, r24	; 0x800307 <PIDval+0x2>
     b76:	90 93 08 03 	sts	0x0308, r25	; 0x800308 <PIDval+0x3>
     b7a:	60 91 05 03 	lds	r22, 0x0305	; 0x800305 <PIDval>
     b7e:	70 91 06 03 	lds	r23, 0x0306	; 0x800306 <PIDval+0x1>
     b82:	80 91 07 03 	lds	r24, 0x0307	; 0x800307 <PIDval+0x2>
     b86:	90 91 08 03 	lds	r25, 0x0308	; 0x800308 <PIDval+0x3>
     b8a:	20 e0       	ldi	r18, 0x00	; 0
     b8c:	30 e0       	ldi	r19, 0x00	; 0
     b8e:	4f e7       	ldi	r20, 0x7F	; 127
     b90:	53 e4       	ldi	r21, 0x43	; 67
     b92:	0e 94 2c 0f 	call	0x1e58	; 0x1e58 <__gesf2>
     b96:	88 23       	and	r24, r24
     b98:	24 f0       	brlt	.+8      	; 0xba2 <__vector_11+0x1d2>
     b9a:	8f ef       	ldi	r24, 0xFF	; 255
     b9c:	80 93 b4 00 	sts	0x00B4, r24	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
     ba0:	1e c0       	rjmp	.+60     	; 0xbde <__vector_11+0x20e>
     ba2:	60 91 05 03 	lds	r22, 0x0305	; 0x800305 <PIDval>
     ba6:	70 91 06 03 	lds	r23, 0x0306	; 0x800306 <PIDval+0x1>
     baa:	80 91 07 03 	lds	r24, 0x0307	; 0x800307 <PIDval+0x2>
     bae:	90 91 08 03 	lds	r25, 0x0308	; 0x800308 <PIDval+0x3>
     bb2:	20 e0       	ldi	r18, 0x00	; 0
     bb4:	30 e0       	ldi	r19, 0x00	; 0
     bb6:	a9 01       	movw	r20, r18
     bb8:	0e 94 cd 0d 	call	0x1b9a	; 0x1b9a <__cmpsf2>
     bbc:	18 16       	cp	r1, r24
     bbe:	1c f0       	brlt	.+6      	; 0xbc6 <__vector_11+0x1f6>
     bc0:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
     bc4:	0c c0       	rjmp	.+24     	; 0xbde <__vector_11+0x20e>
     bc6:	60 91 05 03 	lds	r22, 0x0305	; 0x800305 <PIDval>
     bca:	70 91 06 03 	lds	r23, 0x0306	; 0x800306 <PIDval+0x1>
     bce:	80 91 07 03 	lds	r24, 0x0307	; 0x800307 <PIDval+0x2>
     bd2:	90 91 08 03 	lds	r25, 0x0308	; 0x800308 <PIDval+0x3>
     bd6:	0e 94 4b 0e 	call	0x1c96	; 0x1c96 <__fixunssfsi>
     bda:	60 93 b4 00 	sts	0x00B4, r22	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
     bde:	80 91 17 03 	lds	r24, 0x0317	; 0x800317 <feedError>
     be2:	90 91 18 03 	lds	r25, 0x0318	; 0x800318 <feedError+0x1>
     be6:	90 93 1a 03 	sts	0x031A, r25	; 0x80031a <prevFeederror+0x1>
     bea:	80 93 19 03 	sts	0x0319, r24	; 0x800319 <prevFeederror>
     bee:	10 92 1f 03 	sts	0x031F, r1	; 0x80031f <feedSpeedCal>
     bf2:	10 92 20 03 	sts	0x0320, r1	; 0x800320 <feedSpeedCal+0x1>
     bf6:	10 92 21 03 	sts	0x0321, r1	; 0x800321 <feedSpeedCal+0x2>
     bfa:	10 92 22 03 	sts	0x0322, r1	; 0x800322 <feedSpeedCal+0x3>
     bfe:	ff 91       	pop	r31
     c00:	ef 91       	pop	r30
     c02:	bf 91       	pop	r27
     c04:	af 91       	pop	r26
     c06:	9f 91       	pop	r25
     c08:	8f 91       	pop	r24
     c0a:	7f 91       	pop	r23
     c0c:	6f 91       	pop	r22
     c0e:	5f 91       	pop	r21
     c10:	4f 91       	pop	r20
     c12:	3f 91       	pop	r19
     c14:	2f 91       	pop	r18
     c16:	ff 90       	pop	r15
     c18:	ef 90       	pop	r14
     c1a:	df 90       	pop	r13
     c1c:	cf 90       	pop	r12
     c1e:	0f 90       	pop	r0
     c20:	0f be       	out	0x3f, r0	; 63
     c22:	0f 90       	pop	r0
     c24:	1f 90       	pop	r1
     c26:	18 95       	reti

00000c28 <_Z8PWM_initv>:
     c28:	53 9a       	sbi	0x0a, 3	; 10
     c2a:	e0 eb       	ldi	r30, 0xB0	; 176
     c2c:	f0 e0       	ldi	r31, 0x00	; 0
     c2e:	80 81       	ld	r24, Z
     c30:	80 62       	ori	r24, 0x20	; 32
     c32:	80 83       	st	Z, r24
     c34:	80 81       	ld	r24, Z
     c36:	83 60       	ori	r24, 0x03	; 3
     c38:	80 83       	st	Z, r24
     c3a:	e1 eb       	ldi	r30, 0xB1	; 177
     c3c:	f0 e0       	ldi	r31, 0x00	; 0
     c3e:	80 81       	ld	r24, Z
     c40:	81 60       	ori	r24, 0x01	; 1
     c42:	80 83       	st	Z, r24
     c44:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
     c48:	08 95       	ret

00000c4a <_Z11EncoderInitv>:
     c4a:	e8 e6       	ldi	r30, 0x68	; 104
     c4c:	f0 e0       	ldi	r31, 0x00	; 0
     c4e:	80 81       	ld	r24, Z
     c50:	84 60       	ori	r24, 0x04	; 4
     c52:	80 83       	st	Z, r24
     c54:	ed e6       	ldi	r30, 0x6D	; 109
     c56:	f0 e0       	ldi	r31, 0x00	; 0
     c58:	80 81       	ld	r24, Z
     c5a:	80 61       	ori	r24, 0x10	; 16
     c5c:	80 83       	st	Z, r24
     c5e:	08 95       	ret

00000c60 <__vector_5>:
     c60:	1f 92       	push	r1
     c62:	0f 92       	push	r0
     c64:	0f b6       	in	r0, 0x3f	; 63
     c66:	0f 92       	push	r0
     c68:	11 24       	eor	r1, r1
     c6a:	2f 93       	push	r18
     c6c:	3f 93       	push	r19
     c6e:	4f 93       	push	r20
     c70:	5f 93       	push	r21
     c72:	6f 93       	push	r22
     c74:	7f 93       	push	r23
     c76:	8f 93       	push	r24
     c78:	9f 93       	push	r25
     c7a:	af 93       	push	r26
     c7c:	bf 93       	push	r27
     c7e:	ef 93       	push	r30
     c80:	ff 93       	push	r31
     c82:	4c 9b       	sbis	0x09, 4	; 9
     c84:	16 c0       	rjmp	.+44     	; 0xcb2 <__vector_5+0x52>
     c86:	60 91 1f 03 	lds	r22, 0x031F	; 0x80031f <feedSpeedCal>
     c8a:	70 91 20 03 	lds	r23, 0x0320	; 0x800320 <feedSpeedCal+0x1>
     c8e:	80 91 21 03 	lds	r24, 0x0321	; 0x800321 <feedSpeedCal+0x2>
     c92:	90 91 22 03 	lds	r25, 0x0322	; 0x800322 <feedSpeedCal+0x3>
     c96:	20 e0       	ldi	r18, 0x00	; 0
     c98:	30 e0       	ldi	r19, 0x00	; 0
     c9a:	40 e8       	ldi	r20, 0x80	; 128
     c9c:	5f e3       	ldi	r21, 0x3F	; 63
     c9e:	0e 94 61 0d 	call	0x1ac2	; 0x1ac2 <__addsf3>
     ca2:	60 93 1f 03 	sts	0x031F, r22	; 0x80031f <feedSpeedCal>
     ca6:	70 93 20 03 	sts	0x0320, r23	; 0x800320 <feedSpeedCal+0x1>
     caa:	80 93 21 03 	sts	0x0321, r24	; 0x800321 <feedSpeedCal+0x2>
     cae:	90 93 22 03 	sts	0x0322, r25	; 0x800322 <feedSpeedCal+0x3>
     cb2:	ff 91       	pop	r31
     cb4:	ef 91       	pop	r30
     cb6:	bf 91       	pop	r27
     cb8:	af 91       	pop	r26
     cba:	9f 91       	pop	r25
     cbc:	8f 91       	pop	r24
     cbe:	7f 91       	pop	r23
     cc0:	6f 91       	pop	r22
     cc2:	5f 91       	pop	r21
     cc4:	4f 91       	pop	r20
     cc6:	3f 91       	pop	r19
     cc8:	2f 91       	pop	r18
     cca:	0f 90       	pop	r0
     ccc:	0f be       	out	0x3f, r0	; 63
     cce:	0f 90       	pop	r0
     cd0:	1f 90       	pop	r1
     cd2:	18 95       	reti

00000cd4 <_Z11keyapadInitv>:
     cd4:	8a b1       	in	r24, 0x0a	; 10
     cd6:	80 6e       	ori	r24, 0xE0	; 224
     cd8:	8a b9       	out	0x0a, r24	; 10
     cda:	8b b1       	in	r24, 0x0b	; 11
     cdc:	8f 71       	andi	r24, 0x1F	; 31
     cde:	8b b9       	out	0x0b, r24	; 11
     ce0:	87 b1       	in	r24, 0x07	; 7
     ce2:	80 7f       	andi	r24, 0xF0	; 240
     ce4:	87 b9       	out	0x07, r24	; 7
     ce6:	88 b1       	in	r24, 0x08	; 8
     ce8:	8f 60       	ori	r24, 0x0F	; 15
     cea:	88 b9       	out	0x08, r24	; 8
     cec:	e8 e6       	ldi	r30, 0x68	; 104
     cee:	f0 e0       	ldi	r31, 0x00	; 0
     cf0:	80 81       	ld	r24, Z
     cf2:	82 60       	ori	r24, 0x02	; 2
     cf4:	80 83       	st	Z, r24
     cf6:	ec e6       	ldi	r30, 0x6C	; 108
     cf8:	f0 e0       	ldi	r31, 0x00	; 0
     cfa:	80 81       	ld	r24, Z
     cfc:	8f 60       	ori	r24, 0x0F	; 15
     cfe:	80 83       	st	Z, r24
     d00:	08 95       	ret

00000d02 <_Z5cyclev>:
     d02:	87 b1       	in	r24, 0x07	; 7
     d04:	8f 60       	ori	r24, 0x0F	; 15
     d06:	87 b9       	out	0x07, r24	; 7
     d08:	88 b1       	in	r24, 0x08	; 8
     d0a:	80 7f       	andi	r24, 0xF0	; 240
     d0c:	88 b9       	out	0x08, r24	; 8
     d0e:	8a b1       	in	r24, 0x0a	; 10
     d10:	8f 71       	andi	r24, 0x1F	; 31
     d12:	8a b9       	out	0x0a, r24	; 10
     d14:	8b b1       	in	r24, 0x0b	; 11
     d16:	80 6e       	ori	r24, 0xE0	; 224
     d18:	8b b9       	out	0x0b, r24	; 11
     d1a:	89 b1       	in	r24, 0x09	; 9
     d1c:	80 93 04 03 	sts	0x0304, r24	; 0x800304 <pinj>
     d20:	89 b1       	in	r24, 0x09	; 9
     d22:	80 93 04 03 	sts	0x0304, r24	; 0x800304 <pinj>
     d26:	89 b1       	in	r24, 0x09	; 9
     d28:	80 93 04 03 	sts	0x0304, r24	; 0x800304 <pinj>
     d2c:	4d 99       	sbic	0x09, 5	; 9
     d2e:	03 c0       	rjmp	.+6      	; 0xd36 <_Z5cyclev+0x34>
     d30:	10 92 97 03 	sts	0x0397, r1	; 0x800397 <keycheck+0x1>
     d34:	0b c0       	rjmp	.+22     	; 0xd4c <_Z5cyclev+0x4a>
     d36:	4e 99       	sbic	0x09, 6	; 9
     d38:	04 c0       	rjmp	.+8      	; 0xd42 <_Z5cyclev+0x40>
     d3a:	81 e0       	ldi	r24, 0x01	; 1
     d3c:	80 93 97 03 	sts	0x0397, r24	; 0x800397 <keycheck+0x1>
     d40:	05 c0       	rjmp	.+10     	; 0xd4c <_Z5cyclev+0x4a>
     d42:	4f 99       	sbic	0x09, 7	; 9
     d44:	03 c0       	rjmp	.+6      	; 0xd4c <_Z5cyclev+0x4a>
     d46:	82 e0       	ldi	r24, 0x02	; 2
     d48:	80 93 97 03 	sts	0x0397, r24	; 0x800397 <keycheck+0x1>
     d4c:	e6 e9       	ldi	r30, 0x96	; 150
     d4e:	f3 e0       	ldi	r31, 0x03	; 3
     d50:	80 81       	ld	r24, Z
     d52:	21 81       	ldd	r18, Z+1	; 0x01
     d54:	90 e0       	ldi	r25, 0x00	; 0
     d56:	fc 01       	movw	r30, r24
     d58:	ee 0f       	add	r30, r30
     d5a:	ff 1f       	adc	r31, r31
     d5c:	e8 0f       	add	r30, r24
     d5e:	f9 1f       	adc	r31, r25
     d60:	ec 5e       	subi	r30, 0xEC	; 236
     d62:	fe 4f       	sbci	r31, 0xFE	; 254
     d64:	e2 0f       	add	r30, r18
     d66:	f1 1d       	adc	r31, r1
     d68:	80 81       	ld	r24, Z
     d6a:	80 93 03 03 	sts	0x0303, r24	; 0x800303 <nowKey>
     d6e:	81 e0       	ldi	r24, 0x01	; 1
     d70:	80 93 02 03 	sts	0x0302, r24	; 0x800302 <keyState>
     d74:	8a b1       	in	r24, 0x0a	; 10
     d76:	80 6e       	ori	r24, 0xE0	; 224
     d78:	8a b9       	out	0x0a, r24	; 10
     d7a:	8b b1       	in	r24, 0x0b	; 11
     d7c:	8f 71       	andi	r24, 0x1F	; 31
     d7e:	8b b9       	out	0x0b, r24	; 11
     d80:	87 b1       	in	r24, 0x07	; 7
     d82:	80 7f       	andi	r24, 0xF0	; 240
     d84:	87 b9       	out	0x07, r24	; 7
     d86:	88 b1       	in	r24, 0x08	; 8
     d88:	8f 60       	ori	r24, 0x0F	; 15
     d8a:	88 b9       	out	0x08, r24	; 8
     d8c:	08 95       	ret

00000d8e <__vector_4>:
     d8e:	1f 92       	push	r1
     d90:	0f 92       	push	r0
     d92:	0f b6       	in	r0, 0x3f	; 63
     d94:	0f 92       	push	r0
     d96:	11 24       	eor	r1, r1
     d98:	2f 93       	push	r18
     d9a:	3f 93       	push	r19
     d9c:	4f 93       	push	r20
     d9e:	5f 93       	push	r21
     da0:	6f 93       	push	r22
     da2:	7f 93       	push	r23
     da4:	8f 93       	push	r24
     da6:	9f 93       	push	r25
     da8:	af 93       	push	r26
     daa:	bf 93       	push	r27
     dac:	ef 93       	push	r30
     dae:	ff 93       	push	r31
     db0:	30 99       	sbic	0x06, 0	; 6
     db2:	05 c0       	rjmp	.+10     	; 0xdbe <__vector_4+0x30>
     db4:	10 92 96 03 	sts	0x0396, r1	; 0x800396 <keycheck>
     db8:	0e 94 81 06 	call	0xd02	; 0xd02 <_Z5cyclev>
     dbc:	17 c0       	rjmp	.+46     	; 0xdec <__vector_4+0x5e>
     dbe:	31 99       	sbic	0x06, 1	; 6
     dc0:	06 c0       	rjmp	.+12     	; 0xdce <__vector_4+0x40>
     dc2:	81 e0       	ldi	r24, 0x01	; 1
     dc4:	80 93 96 03 	sts	0x0396, r24	; 0x800396 <keycheck>
     dc8:	0e 94 81 06 	call	0xd02	; 0xd02 <_Z5cyclev>
     dcc:	0f c0       	rjmp	.+30     	; 0xdec <__vector_4+0x5e>
     dce:	32 99       	sbic	0x06, 2	; 6
     dd0:	06 c0       	rjmp	.+12     	; 0xdde <__vector_4+0x50>
     dd2:	82 e0       	ldi	r24, 0x02	; 2
     dd4:	80 93 96 03 	sts	0x0396, r24	; 0x800396 <keycheck>
     dd8:	0e 94 81 06 	call	0xd02	; 0xd02 <_Z5cyclev>
     ddc:	07 c0       	rjmp	.+14     	; 0xdec <__vector_4+0x5e>
     dde:	33 99       	sbic	0x06, 3	; 6
     de0:	05 c0       	rjmp	.+10     	; 0xdec <__vector_4+0x5e>
     de2:	83 e0       	ldi	r24, 0x03	; 3
     de4:	80 93 96 03 	sts	0x0396, r24	; 0x800396 <keycheck>
     de8:	0e 94 81 06 	call	0xd02	; 0xd02 <_Z5cyclev>
     dec:	ff 91       	pop	r31
     dee:	ef 91       	pop	r30
     df0:	bf 91       	pop	r27
     df2:	af 91       	pop	r26
     df4:	9f 91       	pop	r25
     df6:	8f 91       	pop	r24
     df8:	7f 91       	pop	r23
     dfa:	6f 91       	pop	r22
     dfc:	5f 91       	pop	r21
     dfe:	4f 91       	pop	r20
     e00:	3f 91       	pop	r19
     e02:	2f 91       	pop	r18
     e04:	0f 90       	pop	r0
     e06:	0f be       	out	0x3f, r0	; 63
     e08:	0f 90       	pop	r0
     e0a:	1f 90       	pop	r1
     e0c:	18 95       	reti

00000e0e <_Z8checkGSMv>:
     e0e:	cf 93       	push	r28
     e10:	52 9a       	sbi	0x0a, 2	; 10
     e12:	5a 9a       	sbi	0x0b, 2	; 11
     e14:	c4 e1       	ldi	r28, 0x14	; 20
     e16:	80 e2       	ldi	r24, 0x20	; 32
     e18:	91 e0       	ldi	r25, 0x01	; 1
     e1a:	0e 94 02 01 	call	0x204	; 0x204 <_Z16USART_TxStringlnPc>
     e1e:	40 e0       	ldi	r20, 0x00	; 0
     e20:	68 ee       	ldi	r22, 0xE8	; 232
     e22:	73 e0       	ldi	r23, 0x03	; 3
     e24:	88 e9       	ldi	r24, 0x98	; 152
     e26:	92 e0       	ldi	r25, 0x02	; 2
     e28:	0e 94 53 01 	call	0x2a6	; 0x2a6 <_Z16USART_ReciveWaitPcib>
     e2c:	88 23       	and	r24, r24
     e2e:	19 f0       	breq	.+6      	; 0xe36 <_Z8checkGSMv+0x28>
     e30:	0e 94 9f 01 	call	0x33e	; 0x33e <_Z13USART_ClearRXv>
     e34:	05 c0       	rjmp	.+10     	; 0xe40 <_Z8checkGSMv+0x32>
     e36:	c1 30       	cpi	r28, 0x01	; 1
     e38:	09 f4       	brne	.+2      	; 0xe3c <_Z8checkGSMv+0x2e>
     e3a:	4c c0       	rjmp	.+152    	; 0xed4 <_Z8checkGSMv+0xc6>
     e3c:	c1 50       	subi	r28, 0x01	; 1
     e3e:	59 f7       	brne	.-42     	; 0xe16 <_Z8checkGSMv+0x8>
     e40:	83 e2       	ldi	r24, 0x23	; 35
     e42:	91 e0       	ldi	r25, 0x01	; 1
     e44:	0e 94 02 01 	call	0x204	; 0x204 <_Z16USART_TxStringlnPc>
     e48:	40 e0       	ldi	r20, 0x00	; 0
     e4a:	60 e1       	ldi	r22, 0x10	; 16
     e4c:	77 e2       	ldi	r23, 0x27	; 39
     e4e:	8c e2       	ldi	r24, 0x2C	; 44
     e50:	91 e0       	ldi	r25, 0x01	; 1
     e52:	0e 94 53 01 	call	0x2a6	; 0x2a6 <_Z16USART_ReciveWaitPcib>
     e56:	88 23       	and	r24, r24
     e58:	21 f0       	breq	.+8      	; 0xe62 <_Z8checkGSMv+0x54>
     e5a:	0e 94 9f 01 	call	0x33e	; 0x33e <_Z13USART_ClearRXv>
     e5e:	c4 e1       	ldi	r28, 0x14	; 20
     e60:	03 c0       	rjmp	.+6      	; 0xe68 <_Z8checkGSMv+0x5a>
     e62:	0e 94 9f 01 	call	0x33e	; 0x33e <_Z13USART_ClearRXv>
     e66:	36 c0       	rjmp	.+108    	; 0xed4 <_Z8checkGSMv+0xc6>
     e68:	82 e3       	ldi	r24, 0x32	; 50
     e6a:	91 e0       	ldi	r25, 0x01	; 1
     e6c:	0e 94 02 01 	call	0x204	; 0x204 <_Z16USART_TxStringlnPc>
     e70:	2f ef       	ldi	r18, 0xFF	; 255
     e72:	84 e3       	ldi	r24, 0x34	; 52
     e74:	9c e0       	ldi	r25, 0x0C	; 12
     e76:	21 50       	subi	r18, 0x01	; 1
     e78:	80 40       	sbci	r24, 0x00	; 0
     e7a:	90 40       	sbci	r25, 0x00	; 0
     e7c:	e1 f7       	brne	.-8      	; 0xe76 <_Z8checkGSMv+0x68>
     e7e:	00 c0       	rjmp	.+0      	; 0xe80 <_Z8checkGSMv+0x72>
     e80:	00 00       	nop
     e82:	69 e3       	ldi	r22, 0x39	; 57
     e84:	71 e0       	ldi	r23, 0x01	; 1
     e86:	81 e1       	ldi	r24, 0x11	; 17
     e88:	94 e0       	ldi	r25, 0x04	; 4
     e8a:	0e 94 73 15 	call	0x2ae6	; 0x2ae6 <strstr>
     e8e:	bc 01       	movw	r22, r24
     e90:	6b 5f       	subi	r22, 0xFB	; 251
     e92:	7f 4f       	sbci	r23, 0xFF	; 255
     e94:	42 e0       	ldi	r20, 0x02	; 2
     e96:	50 e0       	ldi	r21, 0x00	; 0
     e98:	8e e6       	ldi	r24, 0x6E	; 110
     e9a:	93 e0       	ldi	r25, 0x03	; 3
     e9c:	0e 94 59 15 	call	0x2ab2	; 0x2ab2 <strncpy>
     ea0:	8e e6       	ldi	r24, 0x6E	; 110
     ea2:	93 e0       	ldi	r25, 0x03	; 3
     ea4:	0e 94 17 14 	call	0x282e	; 0x282e <atoi>
     ea8:	90 93 6d 03 	sts	0x036D, r25	; 0x80036d <gsm+0x1>
     eac:	80 93 6c 03 	sts	0x036C, r24	; 0x80036c <gsm>
     eb0:	40 97       	sbiw	r24, 0x10	; 16
     eb2:	7c f4       	brge	.+30     	; 0xed2 <_Z8checkGSMv+0xc4>
     eb4:	0e 94 9f 01 	call	0x33e	; 0x33e <_Z13USART_ClearRXv>
     eb8:	2f ef       	ldi	r18, 0xFF	; 255
     eba:	89 e6       	ldi	r24, 0x69	; 105
     ebc:	98 e1       	ldi	r25, 0x18	; 24
     ebe:	21 50       	subi	r18, 0x01	; 1
     ec0:	80 40       	sbci	r24, 0x00	; 0
     ec2:	90 40       	sbci	r25, 0x00	; 0
     ec4:	e1 f7       	brne	.-8      	; 0xebe <_Z8checkGSMv+0xb0>
     ec6:	00 c0       	rjmp	.+0      	; 0xec8 <_Z8checkGSMv+0xba>
     ec8:	00 00       	nop
     eca:	0e 94 9f 01 	call	0x33e	; 0x33e <_Z13USART_ClearRXv>
     ece:	c1 50       	subi	r28, 0x01	; 1
     ed0:	59 f6       	brne	.-106    	; 0xe68 <_Z8checkGSMv+0x5a>
     ed2:	01 c0       	rjmp	.+2      	; 0xed6 <_Z8checkGSMv+0xc8>
     ed4:	80 e0       	ldi	r24, 0x00	; 0
     ed6:	cf 91       	pop	r28
     ed8:	08 95       	ret

00000eda <_Z8setupGSMv>:
     eda:	8f e3       	ldi	r24, 0x3F	; 63
     edc:	91 e0       	ldi	r25, 0x01	; 1
     ede:	0e 94 02 01 	call	0x204	; 0x204 <_Z16USART_TxStringlnPc>
     ee2:	41 e0       	ldi	r20, 0x01	; 1
     ee4:	68 ee       	ldi	r22, 0xE8	; 232
     ee6:	73 e0       	ldi	r23, 0x03	; 3
     ee8:	88 e9       	ldi	r24, 0x98	; 152
     eea:	92 e0       	ldi	r25, 0x02	; 2
     eec:	0e 94 53 01 	call	0x2a6	; 0x2a6 <_Z16USART_ReciveWaitPcib>
     ef0:	2f ef       	ldi	r18, 0xFF	; 255
     ef2:	81 ee       	ldi	r24, 0xE1	; 225
     ef4:	94 e0       	ldi	r25, 0x04	; 4
     ef6:	21 50       	subi	r18, 0x01	; 1
     ef8:	80 40       	sbci	r24, 0x00	; 0
     efa:	90 40       	sbci	r25, 0x00	; 0
     efc:	e1 f7       	brne	.-8      	; 0xef6 <_Z8setupGSMv+0x1c>
     efe:	00 c0       	rjmp	.+0      	; 0xf00 <_Z8setupGSMv+0x26>
     f00:	00 00       	nop
     f02:	0e 94 9f 01 	call	0x33e	; 0x33e <_Z13USART_ClearRXv>
     f06:	89 e4       	ldi	r24, 0x49	; 73
     f08:	91 e0       	ldi	r25, 0x01	; 1
     f0a:	0e 94 02 01 	call	0x204	; 0x204 <_Z16USART_TxStringlnPc>
     f0e:	41 e0       	ldi	r20, 0x01	; 1
     f10:	68 ee       	ldi	r22, 0xE8	; 232
     f12:	73 e0       	ldi	r23, 0x03	; 3
     f14:	88 e9       	ldi	r24, 0x98	; 152
     f16:	92 e0       	ldi	r25, 0x02	; 2
     f18:	0e 94 53 01 	call	0x2a6	; 0x2a6 <_Z16USART_ReciveWaitPcib>
     f1c:	2f ef       	ldi	r18, 0xFF	; 255
     f1e:	81 ee       	ldi	r24, 0xE1	; 225
     f20:	94 e0       	ldi	r25, 0x04	; 4
     f22:	21 50       	subi	r18, 0x01	; 1
     f24:	80 40       	sbci	r24, 0x00	; 0
     f26:	90 40       	sbci	r25, 0x00	; 0
     f28:	e1 f7       	brne	.-8      	; 0xf22 <_Z8setupGSMv+0x48>
     f2a:	00 c0       	rjmp	.+0      	; 0xf2c <_Z8setupGSMv+0x52>
     f2c:	00 00       	nop
     f2e:	8b e5       	ldi	r24, 0x5B	; 91
     f30:	91 e0       	ldi	r25, 0x01	; 1
     f32:	0e 94 02 01 	call	0x204	; 0x204 <_Z16USART_TxStringlnPc>
     f36:	41 e0       	ldi	r20, 0x01	; 1
     f38:	68 ee       	ldi	r22, 0xE8	; 232
     f3a:	73 e0       	ldi	r23, 0x03	; 3
     f3c:	88 e9       	ldi	r24, 0x98	; 152
     f3e:	92 e0       	ldi	r25, 0x02	; 2
     f40:	0e 94 53 01 	call	0x2a6	; 0x2a6 <_Z16USART_ReciveWaitPcib>
     f44:	2f ef       	ldi	r18, 0xFF	; 255
     f46:	81 ee       	ldi	r24, 0xE1	; 225
     f48:	94 e0       	ldi	r25, 0x04	; 4
     f4a:	21 50       	subi	r18, 0x01	; 1
     f4c:	80 40       	sbci	r24, 0x00	; 0
     f4e:	90 40       	sbci	r25, 0x00	; 0
     f50:	e1 f7       	brne	.-8      	; 0xf4a <_Z8setupGSMv+0x70>
     f52:	00 c0       	rjmp	.+0      	; 0xf54 <_Z8setupGSMv+0x7a>
     f54:	00 00       	nop
     f56:	0e 94 9f 01 	call	0x33e	; 0x33e <_Z13USART_ClearRXv>
     f5a:	08 95       	ret

00000f5c <_Z13cardvalueReadv>:
void cardvalueRead(){
     f5c:	ef 92       	push	r14
     f5e:	ff 92       	push	r15
     f60:	0f 93       	push	r16
     f62:	1f 93       	push	r17
     f64:	cf 93       	push	r28
     f66:	df 93       	push	r29
     f68:	c0 e0       	ldi	r28, 0x00	; 0
     f6a:	d0 e0       	ldi	r29, 0x00	; 0
     f6c:	8e 01       	movw	r16, r28
     f6e:	08 56       	subi	r16, 0x68	; 104
     f70:	1c 4f       	sbci	r17, 0xFC	; 252
     f72:	7e 01       	movw	r14, r28
     f74:	88 e0       	ldi	r24, 0x08	; 8
     f76:	e8 0e       	add	r14, r24
     f78:	f1 1c       	adc	r15, r1
	for(uint8_t i=0;i<12;i++){
		for(uint8_t j=0;j<8;j++){
			eepromR[i][j]=eeprom_read_byte((uint8_t*)(8*i+j));
     f7a:	ce 01       	movw	r24, r28
     f7c:	0e 94 51 16 	call	0x2ca2	; 0x2ca2 <eeprom_read_byte>
     f80:	f8 01       	movw	r30, r16
     f82:	81 93       	st	Z+, r24
     f84:	8f 01       	movw	r16, r30
     f86:	21 96       	adiw	r28, 0x01	; 1
}
	
}
void cardvalueRead(){
	for(uint8_t i=0;i<12;i++){
		for(uint8_t j=0;j<8;j++){
     f88:	ce 15       	cp	r28, r14
     f8a:	df 05       	cpc	r29, r15
     f8c:	b1 f7       	brne	.-20     	; 0xf7a <_Z13cardvalueReadv+0x1e>
     f8e:	e7 01       	movw	r28, r14

}
	
}
void cardvalueRead(){
	for(uint8_t i=0;i<12;i++){
     f90:	c0 36       	cpi	r28, 0x60	; 96
     f92:	d1 05       	cpc	r29, r1
     f94:	59 f7       	brne	.-42     	; 0xf6c <_Z13cardvalueReadv+0x10>
		for(uint8_t j=0;j<8;j++){
			eepromR[i][j]=eeprom_read_byte((uint8_t*)(8*i+j));
		}
	}
}
     f96:	df 91       	pop	r29
     f98:	cf 91       	pop	r28
     f9a:	1f 91       	pop	r17
     f9c:	0f 91       	pop	r16
     f9e:	ff 90       	pop	r15
     fa0:	ef 90       	pop	r14
     fa2:	08 95       	ret

00000fa4 <_Z7addlistv>:
volatile uint8_t addlistnum[4]={0,0,0,0};
void addlist(){
     fa4:	cf 92       	push	r12
     fa6:	df 92       	push	r13
     fa8:	ef 92       	push	r14
     faa:	ff 92       	push	r15
     fac:	0f 93       	push	r16
     fae:	1f 93       	push	r17
     fb0:	cf 93       	push	r28
     fb2:	df 93       	push	r29
     fb4:	cd b7       	in	r28, 0x3d	; 61
     fb6:	de b7       	in	r29, 0x3e	; 62
     fb8:	60 97       	sbiw	r28, 0x10	; 16
     fba:	0f b6       	in	r0, 0x3f	; 63
     fbc:	f8 94       	cli
     fbe:	de bf       	out	0x3e, r29	; 62
     fc0:	0f be       	out	0x3f, r0	; 63
     fc2:	cd bf       	out	0x3d, r28	; 61
	addlistnum[0]=0;addlistnum[1]=0;addlistnum[2]=0;addlistnum[3]=0;
     fc4:	0e ef       	ldi	r16, 0xFE	; 254
     fc6:	12 e0       	ldi	r17, 0x02	; 2
     fc8:	f8 01       	movw	r30, r16
     fca:	10 82       	st	Z, r1
     fcc:	11 82       	std	Z+1, r1	; 0x01
     fce:	12 82       	std	Z+2, r1	; 0x02
     fd0:	13 82       	std	Z+3, r1	; 0x03
	keyState=0;
     fd2:	10 92 02 03 	sts	0x0302, r1	; 0x800302 <keyState>
	LcdCommand(LCD_CLEARDISPLAY);
     fd6:	81 e0       	ldi	r24, 0x01	; 1
     fd8:	0e 94 25 02 	call	0x44a	; 0x44a <_Z10LcdCommandh>
	LcdSetCursor(1,0,"ADD PART LIST");
     fdc:	40 e7       	ldi	r20, 0x70	; 112
     fde:	51 e0       	ldi	r21, 0x01	; 1
     fe0:	60 e0       	ldi	r22, 0x00	; 0
     fe2:	81 e0       	ldi	r24, 0x01	; 1
     fe4:	0e 94 70 02 	call	0x4e0	; 0x4e0 <_Z12LcdSetCursorhhPc>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     fe8:	ff ef       	ldi	r31, 0xFF	; 255
     fea:	29 e6       	ldi	r18, 0x69	; 105
     fec:	38 e1       	ldi	r19, 0x18	; 24
     fee:	f1 50       	subi	r31, 0x01	; 1
     ff0:	20 40       	sbci	r18, 0x00	; 0
     ff2:	30 40       	sbci	r19, 0x00	; 0
     ff4:	e1 f7       	brne	.-8      	; 0xfee <_Z7addlistv+0x4a>
     ff6:	00 c0       	rjmp	.+0      	; 0xff8 <_Z7addlistv+0x54>
     ff8:	00 00       	nop
	_delay_ms(1000);
	LcdCommand(LCD_CLEARDISPLAY);
     ffa:	81 e0       	ldi	r24, 0x01	; 1
     ffc:	0e 94 25 02 	call	0x44a	; 0x44a <_Z10LcdCommandh>
	LcdSetCursor(0,0,"A-1 B-2 C-3 D-4");
    1000:	4e e7       	ldi	r20, 0x7E	; 126
    1002:	51 e0       	ldi	r21, 0x01	; 1
    1004:	60 e0       	ldi	r22, 0x00	; 0
    1006:	80 e0       	ldi	r24, 0x00	; 0
    1008:	0e 94 70 02 	call	0x4e0	; 0x4e0 <_Z12LcdSetCursorhhPc>
	LcdSetCursor(0,1,"*-clear #-enter");
    100c:	4e e8       	ldi	r20, 0x8E	; 142
    100e:	51 e0       	ldi	r21, 0x01	; 1
    1010:	61 e0       	ldi	r22, 0x01	; 1
    1012:	80 e0       	ldi	r24, 0x00	; 0
    1014:	0e 94 70 02 	call	0x4e0	; 0x4e0 <_Z12LcdSetCursorhhPc>
    1018:	8f ef       	ldi	r24, 0xFF	; 255
    101a:	9d e3       	ldi	r25, 0x3D	; 61
    101c:	e9 e4       	ldi	r30, 0x49	; 73
    101e:	81 50       	subi	r24, 0x01	; 1
    1020:	90 40       	sbci	r25, 0x00	; 0
    1022:	e0 40       	sbci	r30, 0x00	; 0
    1024:	e1 f7       	brne	.-8      	; 0x101e <_Z7addlistv+0x7a>
    1026:	00 c0       	rjmp	.+0      	; 0x1028 <_Z7addlistv+0x84>
    1028:	00 00       	nop
	_delay_ms(3000);
	LcdCommand(LCD_CLEARDISPLAY);
    102a:	81 e0       	ldi	r24, 0x01	; 1
    102c:	0e 94 25 02 	call	0x44a	; 0x44a <_Z10LcdCommandh>
	LcdSetCursor(2,0,"A  B  C  D ");
    1030:	4e e9       	ldi	r20, 0x9E	; 158
    1032:	51 e0       	ldi	r21, 0x01	; 1
    1034:	60 e0       	ldi	r22, 0x00	; 0
    1036:	82 e0       	ldi	r24, 0x02	; 2
    1038:	0e 94 70 02 	call	0x4e0	; 0x4e0 <_Z12LcdSetCursorhhPc>
	char lcdt[16];
	sprintf(lcdt,"%u  %u  %u  %u",addlistnum[0],addlistnum[1],addlistnum[2],addlistnum[3]);
    103c:	f8 01       	movw	r30, r16
    103e:	33 81       	ldd	r19, Z+3	; 0x03
    1040:	22 81       	ldd	r18, Z+2	; 0x02
    1042:	91 81       	ldd	r25, Z+1	; 0x01
    1044:	80 81       	ld	r24, Z
    1046:	1f 92       	push	r1
    1048:	3f 93       	push	r19
    104a:	1f 92       	push	r1
    104c:	2f 93       	push	r18
    104e:	1f 92       	push	r1
    1050:	9f 93       	push	r25
    1052:	1f 92       	push	r1
    1054:	8f 93       	push	r24
    1056:	8f eb       	ldi	r24, 0xBF	; 191
    1058:	92 e0       	ldi	r25, 0x02	; 2
    105a:	9f 93       	push	r25
    105c:	8f 93       	push	r24
    105e:	8e 01       	movw	r16, r28
    1060:	0f 5f       	subi	r16, 0xFF	; 255
    1062:	1f 4f       	sbci	r17, 0xFF	; 255
    1064:	1f 93       	push	r17
    1066:	0f 93       	push	r16
    1068:	0e 94 d1 15 	call	0x2ba2	; 0x2ba2 <sprintf>
	LcdSetCursor(2,1,lcdt);
    106c:	a8 01       	movw	r20, r16
    106e:	61 e0       	ldi	r22, 0x01	; 1
    1070:	82 e0       	ldi	r24, 0x02	; 2
    1072:	0e 94 70 02 	call	0x4e0	; 0x4e0 <_Z12LcdSetCursorhhPc>
    1076:	0f b6       	in	r0, 0x3f	; 63
    1078:	f8 94       	cli
    107a:	de bf       	out	0x3e, r29	; 62
    107c:	0f be       	out	0x3f, r0	; 63
    107e:	cd bf       	out	0x3d, r28	; 61
			
			case 2: addlistnum[1]+=1;if (addlistnum[1]>3)
			{addlistnum[1]=0;
			}break;
			
			case 3: addlistnum[2]+=1;if (addlistnum[2]>3)
    1080:	0e ef       	ldi	r16, 0xFE	; 254
    1082:	12 e0       	ldi	r17, 0x02	; 2
			}break;
			
			case 11:addlistnum[0]=0; addlistnum[1]=0;addlistnum[2]=0;addlistnum[3]=0;break;
			
			}
			sprintf(lcdt,"%u  %u  %u  %u",addlistnum[0],addlistnum[1],addlistnum[2],addlistnum[3]);
    1084:	0f 2e       	mov	r0, r31
    1086:	ff eb       	ldi	r31, 0xBF	; 191
    1088:	cf 2e       	mov	r12, r31
    108a:	f2 e0       	ldi	r31, 0x02	; 2
    108c:	df 2e       	mov	r13, r31
    108e:	f0 2d       	mov	r31, r0
    1090:	ce 01       	movw	r24, r28
    1092:	01 96       	adiw	r24, 0x01	; 1
    1094:	7c 01       	movw	r14, r24
	LcdSetCursor(2,0,"A  B  C  D ");
	char lcdt[16];
	sprintf(lcdt,"%u  %u  %u  %u",addlistnum[0],addlistnum[1],addlistnum[2],addlistnum[3]);
	LcdSetCursor(2,1,lcdt);
	while(1){
		if (keyState)
    1096:	80 91 02 03 	lds	r24, 0x0302	; 0x800302 <keyState>
    109a:	88 23       	and	r24, r24
    109c:	e1 f3       	breq	.-8      	; 0x1096 <_Z7addlistv+0xf2>
		{	switch(nowKey){
    109e:	80 91 03 03 	lds	r24, 0x0303	; 0x800303 <nowKey>
    10a2:	83 30       	cpi	r24, 0x03	; 3
    10a4:	e9 f0       	breq	.+58     	; 0x10e0 <_Z7addlistv+0x13c>
    10a6:	28 f4       	brcc	.+10     	; 0x10b2 <_Z7addlistv+0x10e>
    10a8:	81 30       	cpi	r24, 0x01	; 1
    10aa:	41 f0       	breq	.+16     	; 0x10bc <_Z7addlistv+0x118>
    10ac:	82 30       	cpi	r24, 0x02	; 2
    10ae:	79 f0       	breq	.+30     	; 0x10ce <_Z7addlistv+0x12a>
    10b0:	2e c0       	rjmp	.+92     	; 0x110e <_Z7addlistv+0x16a>
    10b2:	84 30       	cpi	r24, 0x04	; 4
    10b4:	f1 f0       	breq	.+60     	; 0x10f2 <_Z7addlistv+0x14e>
    10b6:	8b 30       	cpi	r24, 0x0B	; 11
    10b8:	29 f1       	breq	.+74     	; 0x1104 <_Z7addlistv+0x160>
    10ba:	29 c0       	rjmp	.+82     	; 0x110e <_Z7addlistv+0x16a>
			case 1: addlistnum[0]+=1;if (addlistnum[0]>3)
    10bc:	f8 01       	movw	r30, r16
    10be:	80 81       	ld	r24, Z
    10c0:	8f 5f       	subi	r24, 0xFF	; 255
    10c2:	80 83       	st	Z, r24
    10c4:	80 81       	ld	r24, Z
    10c6:	84 30       	cpi	r24, 0x04	; 4
    10c8:	10 f1       	brcs	.+68     	; 0x110e <_Z7addlistv+0x16a>
			{addlistnum[0]=0;
    10ca:	10 82       	st	Z, r1
    10cc:	20 c0       	rjmp	.+64     	; 0x110e <_Z7addlistv+0x16a>
			}break;
			
			case 2: addlistnum[1]+=1;if (addlistnum[1]>3)
    10ce:	f8 01       	movw	r30, r16
    10d0:	81 81       	ldd	r24, Z+1	; 0x01
    10d2:	8f 5f       	subi	r24, 0xFF	; 255
    10d4:	81 83       	std	Z+1, r24	; 0x01
    10d6:	81 81       	ldd	r24, Z+1	; 0x01
    10d8:	84 30       	cpi	r24, 0x04	; 4
    10da:	c8 f0       	brcs	.+50     	; 0x110e <_Z7addlistv+0x16a>
			{addlistnum[1]=0;
    10dc:	11 82       	std	Z+1, r1	; 0x01
    10de:	17 c0       	rjmp	.+46     	; 0x110e <_Z7addlistv+0x16a>
			}break;
			
			case 3: addlistnum[2]+=1;if (addlistnum[2]>3)
    10e0:	f8 01       	movw	r30, r16
    10e2:	82 81       	ldd	r24, Z+2	; 0x02
    10e4:	8f 5f       	subi	r24, 0xFF	; 255
    10e6:	82 83       	std	Z+2, r24	; 0x02
    10e8:	82 81       	ldd	r24, Z+2	; 0x02
    10ea:	84 30       	cpi	r24, 0x04	; 4
    10ec:	80 f0       	brcs	.+32     	; 0x110e <_Z7addlistv+0x16a>
			{addlistnum[2]=0;
    10ee:	12 82       	std	Z+2, r1	; 0x02
    10f0:	0e c0       	rjmp	.+28     	; 0x110e <_Z7addlistv+0x16a>
			}break;
			
			case 4: addlistnum[3]+=1;if (addlistnum[3]>3)
    10f2:	f8 01       	movw	r30, r16
    10f4:	83 81       	ldd	r24, Z+3	; 0x03
    10f6:	8f 5f       	subi	r24, 0xFF	; 255
    10f8:	83 83       	std	Z+3, r24	; 0x03
    10fa:	83 81       	ldd	r24, Z+3	; 0x03
    10fc:	84 30       	cpi	r24, 0x04	; 4
    10fe:	38 f0       	brcs	.+14     	; 0x110e <_Z7addlistv+0x16a>
			{addlistnum[3]=0;
    1100:	13 82       	std	Z+3, r1	; 0x03
    1102:	05 c0       	rjmp	.+10     	; 0x110e <_Z7addlistv+0x16a>
			}break;
			
			case 11:addlistnum[0]=0; addlistnum[1]=0;addlistnum[2]=0;addlistnum[3]=0;break;
    1104:	f8 01       	movw	r30, r16
    1106:	10 82       	st	Z, r1
    1108:	11 82       	std	Z+1, r1	; 0x01
    110a:	12 82       	std	Z+2, r1	; 0x02
    110c:	13 82       	std	Z+3, r1	; 0x03
			
			}
			sprintf(lcdt,"%u  %u  %u  %u",addlistnum[0],addlistnum[1],addlistnum[2],addlistnum[3]);
    110e:	f8 01       	movw	r30, r16
    1110:	33 81       	ldd	r19, Z+3	; 0x03
    1112:	22 81       	ldd	r18, Z+2	; 0x02
    1114:	91 81       	ldd	r25, Z+1	; 0x01
    1116:	80 81       	ld	r24, Z
    1118:	1f 92       	push	r1
    111a:	3f 93       	push	r19
    111c:	1f 92       	push	r1
    111e:	2f 93       	push	r18
    1120:	1f 92       	push	r1
    1122:	9f 93       	push	r25
    1124:	1f 92       	push	r1
    1126:	8f 93       	push	r24
    1128:	df 92       	push	r13
    112a:	cf 92       	push	r12
    112c:	ff 92       	push	r15
    112e:	ef 92       	push	r14
    1130:	0e 94 d1 15 	call	0x2ba2	; 0x2ba2 <sprintf>
			LcdSetCursor(2,1,lcdt);
    1134:	a7 01       	movw	r20, r14
    1136:	61 e0       	ldi	r22, 0x01	; 1
    1138:	82 e0       	ldi	r24, 0x02	; 2
    113a:	0e 94 70 02 	call	0x4e0	; 0x4e0 <_Z12LcdSetCursorhhPc>
			keyState=0;
    113e:	10 92 02 03 	sts	0x0302, r1	; 0x800302 <keyState>
			
			if (nowKey==12)
    1142:	80 91 03 03 	lds	r24, 0x0303	; 0x800303 <nowKey>
    1146:	0f b6       	in	r0, 0x3f	; 63
    1148:	f8 94       	cli
    114a:	de bf       	out	0x3e, r29	; 62
    114c:	0f be       	out	0x3f, r0	; 63
    114e:	cd bf       	out	0x3d, r28	; 61
    1150:	8c 30       	cpi	r24, 0x0C	; 12
    1152:	09 f0       	breq	.+2      	; 0x1156 <_Z7addlistv+0x1b2>
    1154:	a0 cf       	rjmp	.-192    	; 0x1096 <_Z7addlistv+0xf2>
			{break;
			}
		}
	}
	keyState=0;nowKey=0;
    1156:	10 92 02 03 	sts	0x0302, r1	; 0x800302 <keyState>
    115a:	10 92 03 03 	sts	0x0303, r1	; 0x800303 <nowKey>
	LcdCommand(LCD_CLEARDISPLAY);
    115e:	81 e0       	ldi	r24, 0x01	; 1
    1160:	0e 94 25 02 	call	0x44a	; 0x44a <_Z10LcdCommandh>
	
}
    1164:	60 96       	adiw	r28, 0x10	; 16
    1166:	0f b6       	in	r0, 0x3f	; 63
    1168:	f8 94       	cli
    116a:	de bf       	out	0x3e, r29	; 62
    116c:	0f be       	out	0x3f, r0	; 63
    116e:	cd bf       	out	0x3d, r28	; 61
    1170:	df 91       	pop	r29
    1172:	cf 91       	pop	r28
    1174:	1f 91       	pop	r17
    1176:	0f 91       	pop	r16
    1178:	ff 90       	pop	r15
    117a:	ef 90       	pop	r14
    117c:	df 90       	pop	r13
    117e:	cf 90       	pop	r12
    1180:	08 95       	ret

00001182 <_Z11addPhoneNumv>:
uint8_t phoneNum[8]={0,0,0,0,0,0,0,0};
void addPhoneNum(){
    1182:	cf 92       	push	r12
    1184:	df 92       	push	r13
    1186:	ef 92       	push	r14
    1188:	ff 92       	push	r15
    118a:	1f 93       	push	r17
    118c:	cf 93       	push	r28
    118e:	df 93       	push	r29
    1190:	1f 92       	push	r1
    1192:	cd b7       	in	r28, 0x3d	; 61
    1194:	de b7       	in	r29, 0x3e	; 62
	keyState=0;
    1196:	10 92 02 03 	sts	0x0302, r1	; 0x800302 <keyState>
	uint8_t lcdPosition=0;
	char lcdt[1];
	LcdCommand(LCD_CLEARDISPLAY);
    119a:	81 e0       	ldi	r24, 0x01	; 1
    119c:	0e 94 25 02 	call	0x44a	; 0x44a <_Z10LcdCommandh>
	LcdSetCursor(0,0," Mobile Number");
    11a0:	4a ea       	ldi	r20, 0xAA	; 170
    11a2:	51 e0       	ldi	r21, 0x01	; 1
    11a4:	60 e0       	ldi	r22, 0x00	; 0
    11a6:	80 e0       	ldi	r24, 0x00	; 0
    11a8:	0e 94 70 02 	call	0x4e0	; 0x4e0 <_Z12LcdSetCursorhhPc>
	LcdSetCursor(1,1,"07");
    11ac:	49 eb       	ldi	r20, 0xB9	; 185
    11ae:	51 e0       	ldi	r21, 0x01	; 1
    11b0:	61 e0       	ldi	r22, 0x01	; 1
    11b2:	81 e0       	ldi	r24, 0x01	; 1
    11b4:	0e 94 70 02 	call	0x4e0	; 0x4e0 <_Z12LcdSetCursorhhPc>
	LcdCommand(LCD_DISPLAYCONTROL|(LCD_DISPLAYON|LCD_BLINKON));
    11b8:	8d e0       	ldi	r24, 0x0D	; 13
    11ba:	0e 94 25 02 	call	0x44a	; 0x44a <_Z10LcdCommandh>
	
}
uint8_t phoneNum[8]={0,0,0,0,0,0,0,0};
void addPhoneNum(){
	keyState=0;
	uint8_t lcdPosition=0;
    11be:	10 e0       	ldi	r17, 0x00	; 0
	LcdCommand(LCD_DISPLAYCONTROL|(LCD_DISPLAYON|LCD_BLINKON));
	while(1){
		if (keyState)
		{	
			if ((nowKey<10)&&(lcdPosition<8))
			{	sprintf(lcdt,"%u",nowKey);
    11c0:	0f 2e       	mov	r0, r31
    11c2:	fb ec       	ldi	r31, 0xCB	; 203
    11c4:	cf 2e       	mov	r12, r31
    11c6:	f2 e0       	ldi	r31, 0x02	; 2
    11c8:	df 2e       	mov	r13, r31
    11ca:	f0 2d       	mov	r31, r0
	LcdCommand(LCD_CLEARDISPLAY);
	LcdSetCursor(0,0," Mobile Number");
	LcdSetCursor(1,1,"07");
	LcdCommand(LCD_DISPLAYCONTROL|(LCD_DISPLAYON|LCD_BLINKON));
	while(1){
		if (keyState)
    11cc:	80 91 02 03 	lds	r24, 0x0302	; 0x800302 <keyState>
    11d0:	88 23       	and	r24, r24
    11d2:	c9 f0       	breq	.+50     	; 0x1206 <_Z11addPhoneNumv+0x84>
		{	
			if ((nowKey<10)&&(lcdPosition<8))
    11d4:	80 91 03 03 	lds	r24, 0x0303	; 0x800303 <nowKey>
    11d8:	8a 30       	cpi	r24, 0x0A	; 10
    11da:	18 f4       	brcc	.+6      	; 0x11e2 <_Z11addPhoneNumv+0x60>
    11dc:	18 30       	cpi	r17, 0x08	; 8
    11de:	d0 f0       	brcs	.+52     	; 0x1214 <_Z11addPhoneNumv+0x92>
    11e0:	97 c0       	rjmp	.+302    	; 0x1310 <_Z11addPhoneNumv+0x18e>
				LcdSetCursor(3+lcdPosition,1,lcdt);
				phoneNum[lcdPosition]=nowKey;
				lcdPosition++;
			}
			
			if ((nowKey==11)&&(lcdPosition>0))
    11e2:	80 91 03 03 	lds	r24, 0x0303	; 0x800303 <nowKey>
    11e6:	8b 30       	cpi	r24, 0x0B	; 11
    11e8:	19 f4       	brne	.+6      	; 0x11f0 <_Z11addPhoneNumv+0x6e>
    11ea:	11 11       	cpse	r17, r1
    11ec:	38 c0       	rjmp	.+112    	; 0x125e <_Z11addPhoneNumv+0xdc>
    11ee:	06 c0       	rjmp	.+12     	; 0x11fc <_Z11addPhoneNumv+0x7a>
			{	lcdPosition--;
				LcdSetCursor(3+lcdPosition,1," ");
				LcdSetCursor(3+lcdPosition,1,"");
			}
			
			if (lcdPosition>7)
    11f0:	18 30       	cpi	r17, 0x08	; 8
    11f2:	20 f0       	brcs	.+8      	; 0x11fc <_Z11addPhoneNumv+0x7a>
			{LcdCommand(LCD_DISPLAYCONTROL|(LCD_DISPLAYON&~LCD_BLINKON));
    11f4:	8c e0       	ldi	r24, 0x0C	; 12
    11f6:	0e 94 25 02 	call	0x44a	; 0x44a <_Z10LcdCommandh>
    11fa:	03 c0       	rjmp	.+6      	; 0x1202 <_Z11addPhoneNumv+0x80>
			}
			else{LcdCommand(LCD_DISPLAYCONTROL|(LCD_DISPLAYON|LCD_BLINKON));}
    11fc:	8d e0       	ldi	r24, 0x0D	; 13
    11fe:	0e 94 25 02 	call	0x44a	; 0x44a <_Z10LcdCommandh>
			
		keyState=0;
    1202:	10 92 02 03 	sts	0x0302, r1	; 0x800302 <keyState>
	}
	if ((nowKey==12)&&(lcdPosition>7))
    1206:	80 91 03 03 	lds	r24, 0x0303	; 0x800303 <nowKey>
    120a:	8c 30       	cpi	r24, 0x0C	; 12
    120c:	f9 f6       	brne	.-66     	; 0x11cc <_Z11addPhoneNumv+0x4a>
    120e:	18 30       	cpi	r17, 0x08	; 8
    1210:	e8 f2       	brcs	.-70     	; 0x11cc <_Z11addPhoneNumv+0x4a>
    1212:	3a c0       	rjmp	.+116    	; 0x1288 <_Z11addPhoneNumv+0x106>
	LcdCommand(LCD_DISPLAYCONTROL|(LCD_DISPLAYON|LCD_BLINKON));
	while(1){
		if (keyState)
		{	
			if ((nowKey<10)&&(lcdPosition<8))
			{	sprintf(lcdt,"%u",nowKey);
    1214:	80 91 03 03 	lds	r24, 0x0303	; 0x800303 <nowKey>
    1218:	1f 92       	push	r1
    121a:	8f 93       	push	r24
    121c:	df 92       	push	r13
    121e:	cf 92       	push	r12
    1220:	81 e0       	ldi	r24, 0x01	; 1
    1222:	90 e0       	ldi	r25, 0x00	; 0
    1224:	8c 0f       	add	r24, r28
    1226:	9d 1f       	adc	r25, r29
    1228:	9f 93       	push	r25
    122a:	8f 93       	push	r24
    122c:	0e 94 d1 15 	call	0x2ba2	; 0x2ba2 <sprintf>
				LcdSetCursor(3+lcdPosition,1,lcdt);
    1230:	ae 01       	movw	r20, r28
    1232:	4f 5f       	subi	r20, 0xFF	; 255
    1234:	5f 4f       	sbci	r21, 0xFF	; 255
    1236:	61 e0       	ldi	r22, 0x01	; 1
    1238:	83 e0       	ldi	r24, 0x03	; 3
    123a:	81 0f       	add	r24, r17
    123c:	0e 94 70 02 	call	0x4e0	; 0x4e0 <_Z12LcdSetCursorhhPc>
				phoneNum[lcdPosition]=nowKey;
    1240:	80 91 03 03 	lds	r24, 0x0303	; 0x800303 <nowKey>
    1244:	e1 2f       	mov	r30, r17
    1246:	f0 e0       	ldi	r31, 0x00	; 0
    1248:	ea 50       	subi	r30, 0x0A	; 10
    124a:	fd 4f       	sbci	r31, 0xFD	; 253
    124c:	80 83       	st	Z, r24
				lcdPosition++;
    124e:	1f 5f       	subi	r17, 0xFF	; 255
    1250:	0f 90       	pop	r0
    1252:	0f 90       	pop	r0
    1254:	0f 90       	pop	r0
    1256:	0f 90       	pop	r0
    1258:	0f 90       	pop	r0
    125a:	0f 90       	pop	r0
    125c:	c2 cf       	rjmp	.-124    	; 0x11e2 <_Z11addPhoneNumv+0x60>
			}
			
			if ((nowKey==11)&&(lcdPosition>0))
			{	lcdPosition--;
    125e:	ee 24       	eor	r14, r14
    1260:	ea 94       	dec	r14
    1262:	e1 0e       	add	r14, r17
				LcdSetCursor(3+lcdPosition,1," ");
    1264:	68 94       	set
    1266:	ff 24       	eor	r15, r15
    1268:	f1 f8       	bld	r15, 1
    126a:	f1 0e       	add	r15, r17
    126c:	40 e7       	ldi	r20, 0x70	; 112
    126e:	52 e0       	ldi	r21, 0x02	; 2
    1270:	61 e0       	ldi	r22, 0x01	; 1
    1272:	8f 2d       	mov	r24, r15
    1274:	0e 94 70 02 	call	0x4e0	; 0x4e0 <_Z12LcdSetCursorhhPc>
				LcdSetCursor(3+lcdPosition,1,"");
    1278:	4d ee       	ldi	r20, 0xED	; 237
    127a:	51 e0       	ldi	r21, 0x01	; 1
    127c:	61 e0       	ldi	r22, 0x01	; 1
    127e:	8f 2d       	mov	r24, r15
    1280:	0e 94 70 02 	call	0x4e0	; 0x4e0 <_Z12LcdSetCursorhhPc>
				phoneNum[lcdPosition]=nowKey;
				lcdPosition++;
			}
			
			if ((nowKey==11)&&(lcdPosition>0))
			{	lcdPosition--;
    1284:	1e 2d       	mov	r17, r14
    1286:	b4 cf       	rjmp	.-152    	; 0x11f0 <_Z11addPhoneNumv+0x6e>
	}
	if ((nowKey==12)&&(lcdPosition>7))
	{break;
	}
	}
	keyState=0;
    1288:	10 92 02 03 	sts	0x0302, r1	; 0x800302 <keyState>
	LcdCommand(LCD_CLEARDISPLAY);
    128c:	81 e0       	ldi	r24, 0x01	; 1
    128e:	0e 94 25 02 	call	0x44a	; 0x44a <_Z10LcdCommandh>
	LcdSetCursor(0,0," Entered Number");
    1292:	4c eb       	ldi	r20, 0xBC	; 188
    1294:	51 e0       	ldi	r21, 0x01	; 1
    1296:	60 e0       	ldi	r22, 0x00	; 0
    1298:	80 e0       	ldi	r24, 0x00	; 0
    129a:	0e 94 70 02 	call	0x4e0	; 0x4e0 <_Z12LcdSetCursorhhPc>
	
	sprintf(smsNumber,"07%u%u%u%u%u%u%u%u",phoneNum[0],phoneNum[1],phoneNum[2],phoneNum[3],phoneNum[4],phoneNum[5],phoneNum[6],phoneNum[7]);
    129e:	e6 ef       	ldi	r30, 0xF6	; 246
    12a0:	f2 e0       	ldi	r31, 0x02	; 2
    12a2:	87 81       	ldd	r24, Z+7	; 0x07
    12a4:	1f 92       	push	r1
    12a6:	8f 93       	push	r24
    12a8:	86 81       	ldd	r24, Z+6	; 0x06
    12aa:	1f 92       	push	r1
    12ac:	8f 93       	push	r24
    12ae:	85 81       	ldd	r24, Z+5	; 0x05
    12b0:	1f 92       	push	r1
    12b2:	8f 93       	push	r24
    12b4:	84 81       	ldd	r24, Z+4	; 0x04
    12b6:	1f 92       	push	r1
    12b8:	8f 93       	push	r24
    12ba:	83 81       	ldd	r24, Z+3	; 0x03
    12bc:	1f 92       	push	r1
    12be:	8f 93       	push	r24
    12c0:	82 81       	ldd	r24, Z+2	; 0x02
    12c2:	1f 92       	push	r1
    12c4:	8f 93       	push	r24
    12c6:	81 81       	ldd	r24, Z+1	; 0x01
    12c8:	1f 92       	push	r1
    12ca:	8f 93       	push	r24
    12cc:	80 81       	ld	r24, Z
    12ce:	1f 92       	push	r1
    12d0:	8f 93       	push	r24
    12d2:	8c ec       	ldi	r24, 0xCC	; 204
    12d4:	91 e0       	ldi	r25, 0x01	; 1
    12d6:	9f 93       	push	r25
    12d8:	8f 93       	push	r24
    12da:	82 e6       	ldi	r24, 0x62	; 98
    12dc:	93 e0       	ldi	r25, 0x03	; 3
    12de:	9f 93       	push	r25
    12e0:	8f 93       	push	r24
    12e2:	0e 94 d1 15 	call	0x2ba2	; 0x2ba2 <sprintf>
	LcdSetCursor(2,1,smsNumber);
    12e6:	42 e6       	ldi	r20, 0x62	; 98
    12e8:	53 e0       	ldi	r21, 0x03	; 3
    12ea:	61 e0       	ldi	r22, 0x01	; 1
    12ec:	82 e0       	ldi	r24, 0x02	; 2
    12ee:	0e 94 70 02 	call	0x4e0	; 0x4e0 <_Z12LcdSetCursorhhPc>
    12f2:	9f ef       	ldi	r25, 0xFF	; 255
    12f4:	24 e3       	ldi	r18, 0x34	; 52
    12f6:	8c e0       	ldi	r24, 0x0C	; 12
    12f8:	91 50       	subi	r25, 0x01	; 1
    12fa:	20 40       	sbci	r18, 0x00	; 0
    12fc:	80 40       	sbci	r24, 0x00	; 0
    12fe:	e1 f7       	brne	.-8      	; 0x12f8 <_Z11addPhoneNumv+0x176>
    1300:	00 c0       	rjmp	.+0      	; 0x1302 <_Z11addPhoneNumv+0x180>
    1302:	00 00       	nop
	_delay_ms(500);
}
    1304:	0f b6       	in	r0, 0x3f	; 63
    1306:	f8 94       	cli
    1308:	de bf       	out	0x3e, r29	; 62
    130a:	0f be       	out	0x3f, r0	; 63
    130c:	cd bf       	out	0x3d, r28	; 61
    130e:	06 c0       	rjmp	.+12     	; 0x131c <_Z11addPhoneNumv+0x19a>
				LcdSetCursor(3+lcdPosition,1,lcdt);
				phoneNum[lcdPosition]=nowKey;
				lcdPosition++;
			}
			
			if ((nowKey==11)&&(lcdPosition>0))
    1310:	80 91 03 03 	lds	r24, 0x0303	; 0x800303 <nowKey>
    1314:	8b 30       	cpi	r24, 0x0B	; 11
    1316:	09 f0       	breq	.+2      	; 0x131a <_Z11addPhoneNumv+0x198>
    1318:	6d cf       	rjmp	.-294    	; 0x11f4 <_Z11addPhoneNumv+0x72>
    131a:	67 cf       	rjmp	.-306    	; 0x11ea <_Z11addPhoneNumv+0x68>
	LcdSetCursor(0,0," Entered Number");
	
	sprintf(smsNumber,"07%u%u%u%u%u%u%u%u",phoneNum[0],phoneNum[1],phoneNum[2],phoneNum[3],phoneNum[4],phoneNum[5],phoneNum[6],phoneNum[7]);
	LcdSetCursor(2,1,smsNumber);
	_delay_ms(500);
}
    131c:	0f 90       	pop	r0
    131e:	df 91       	pop	r29
    1320:	cf 91       	pop	r28
    1322:	1f 91       	pop	r17
    1324:	ff 90       	pop	r15
    1326:	ef 90       	pop	r14
    1328:	df 90       	pop	r13
    132a:	cf 90       	pop	r12
    132c:	08 95       	ret

0000132e <_Z6otpSMSv>:
		return 0;
		
	}
}

bool otpSMS(){
    132e:	af 92       	push	r10
    1330:	bf 92       	push	r11
    1332:	cf 92       	push	r12
    1334:	df 92       	push	r13
    1336:	ef 92       	push	r14
    1338:	ff 92       	push	r15
    133a:	0f 93       	push	r16
    133c:	1f 93       	push	r17
    133e:	cf 93       	push	r28
    1340:	df 93       	push	r29
    1342:	00 d0       	rcall	.+0      	; 0x1344 <_Z6otpSMSv+0x16>
    1344:	00 d0       	rcall	.+0      	; 0x1346 <_Z6otpSMSv+0x18>
    1346:	00 d0       	rcall	.+0      	; 0x1348 <_Z6otpSMSv+0x1a>
    1348:	cd b7       	in	r28, 0x3d	; 61
    134a:	de b7       	in	r29, 0x3e	; 62
	sprintf(lengthcal,"AT+CMGS=\"%s\"\r\n",smsNumber);
    134c:	82 e6       	ldi	r24, 0x62	; 98
    134e:	93 e0       	ldi	r25, 0x03	; 3
    1350:	9f 93       	push	r25
    1352:	8f 93       	push	r24
    1354:	8f ed       	ldi	r24, 0xDF	; 223
    1356:	91 e0       	ldi	r25, 0x01	; 1
    1358:	9f 93       	push	r25
    135a:	8f 93       	push	r24
    135c:	0e e6       	ldi	r16, 0x6E	; 110
    135e:	13 e0       	ldi	r17, 0x03	; 3
    1360:	1f 93       	push	r17
    1362:	0f 93       	push	r16
    1364:	0e 94 d1 15 	call	0x2ba2	; 0x2ba2 <sprintf>
	USART_TxString(lengthcal);
    1368:	c8 01       	movw	r24, r16
    136a:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <_Z14USART_TxStringPc>
    136e:	2f ef       	ldi	r18, 0xFF	; 255
    1370:	51 ee       	ldi	r21, 0xE1	; 225
    1372:	84 e0       	ldi	r24, 0x04	; 4
    1374:	21 50       	subi	r18, 0x01	; 1
    1376:	50 40       	sbci	r21, 0x00	; 0
    1378:	80 40       	sbci	r24, 0x00	; 0
    137a:	e1 f7       	brne	.-8      	; 0x1374 <_Z6otpSMSv+0x46>
    137c:	00 c0       	rjmp	.+0      	; 0x137e <_Z6otpSMSv+0x50>
    137e:	00 00       	nop
	_delay_ms(200);
	uint16_t randomNum=(rand()%(9999-1000+1))+1000;
    1380:	0e 94 07 14 	call	0x280e	; 0x280e <rand>
    1384:	68 e2       	ldi	r22, 0x28	; 40
    1386:	73 e2       	ldi	r23, 0x23	; 35
    1388:	0e 94 1b 13 	call	0x2636	; 0x2636 <__divmodhi4>
    138c:	6c 01       	movw	r12, r24
    138e:	28 e1       	ldi	r18, 0x18	; 24
    1390:	c2 1a       	sub	r12, r18
    1392:	2c ef       	ldi	r18, 0xFC	; 252
    1394:	d2 0a       	sbc	r13, r18
	sprintf(lengthcal,"Your item list is\r\nA-%u\r\nB-%u\r\nC-%u\r\nD-%u\r\n OTP is %u ",addlistnumnow[0],addlistnumnow[1],addlistnumnow[2],addlistnumnow[3],randomNum);
    1396:	df 92       	push	r13
    1398:	cf 92       	push	r12
    139a:	e2 ef       	ldi	r30, 0xF2	; 242
    139c:	f2 e0       	ldi	r31, 0x02	; 2
    139e:	83 81       	ldd	r24, Z+3	; 0x03
    13a0:	1f 92       	push	r1
    13a2:	8f 93       	push	r24
    13a4:	82 81       	ldd	r24, Z+2	; 0x02
    13a6:	1f 92       	push	r1
    13a8:	8f 93       	push	r24
    13aa:	81 81       	ldd	r24, Z+1	; 0x01
    13ac:	1f 92       	push	r1
    13ae:	8f 93       	push	r24
    13b0:	80 81       	ld	r24, Z
    13b2:	1f 92       	push	r1
    13b4:	8f 93       	push	r24
    13b6:	8e ee       	ldi	r24, 0xEE	; 238
    13b8:	91 e0       	ldi	r25, 0x01	; 1
    13ba:	9f 93       	push	r25
    13bc:	8f 93       	push	r24
    13be:	1f 93       	push	r17
    13c0:	0f 93       	push	r16
    13c2:	0e 94 d1 15 	call	0x2ba2	; 0x2ba2 <sprintf>
	USART_TxString(lengthcal);
    13c6:	c8 01       	movw	r24, r16
    13c8:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <_Z14USART_TxStringPc>
    13cc:	5f ef       	ldi	r21, 0xFF	; 255
    13ce:	84 e3       	ldi	r24, 0x34	; 52
    13d0:	9c e0       	ldi	r25, 0x0C	; 12
    13d2:	51 50       	subi	r21, 0x01	; 1
    13d4:	80 40       	sbci	r24, 0x00	; 0
    13d6:	90 40       	sbci	r25, 0x00	; 0
    13d8:	e1 f7       	brne	.-8      	; 0x13d2 <_Z6otpSMSv+0xa4>
    13da:	00 c0       	rjmp	.+0      	; 0x13dc <_Z6otpSMSv+0xae>
    13dc:	00 00       	nop
	_delay_ms(500);
	USART_Transmit(26);
    13de:	8a e1       	ldi	r24, 0x1A	; 26
    13e0:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <_Z14USART_Transmith>
	
	keyState=0;
    13e4:	10 92 02 03 	sts	0x0302, r1	; 0x800302 <keyState>
	uint8_t lcdPosition=0;
	char lcdt[2];
	volatile uint8_t otpnum[4]={0};
    13e8:	1b 82       	std	Y+3, r1	; 0x03
    13ea:	1c 82       	std	Y+4, r1	; 0x04
    13ec:	1d 82       	std	Y+5, r1	; 0x05
    13ee:	1e 82       	std	Y+6, r1	; 0x06
	LcdCommand(LCD_CLEARDISPLAY);
    13f0:	81 e0       	ldi	r24, 0x01	; 1
    13f2:	0e 94 25 02 	call	0x44a	; 0x44a <_Z10LcdCommandh>
	LcdSetCursor(0,0,"Enter the OTP");
    13f6:	45 e2       	ldi	r20, 0x25	; 37
    13f8:	52 e0       	ldi	r21, 0x02	; 2
    13fa:	60 e0       	ldi	r22, 0x00	; 0
    13fc:	80 e0       	ldi	r24, 0x00	; 0
    13fe:	0e 94 70 02 	call	0x4e0	; 0x4e0 <_Z12LcdSetCursorhhPc>
	LcdCommand(LCD_DISPLAYCONTROL|(LCD_DISPLAYON|LCD_BLINKON));
    1402:	8d e0       	ldi	r24, 0x0D	; 13
    1404:	0e 94 25 02 	call	0x44a	; 0x44a <_Z10LcdCommandh>
	LcdSetCursor(1,2,"");
    1408:	4d ee       	ldi	r20, 0xED	; 237
    140a:	51 e0       	ldi	r21, 0x01	; 1
    140c:	62 e0       	ldi	r22, 0x02	; 2
    140e:	81 e0       	ldi	r24, 0x01	; 1
    1410:	0e 94 70 02 	call	0x4e0	; 0x4e0 <_Z12LcdSetCursorhhPc>
    1414:	0f b6       	in	r0, 0x3f	; 63
    1416:	f8 94       	cli
    1418:	de bf       	out	0x3e, r29	; 62
    141a:	0f be       	out	0x3f, r0	; 63
    141c:	cd bf       	out	0x3d, r28	; 61
	USART_TxString(lengthcal);
	_delay_ms(500);
	USART_Transmit(26);
	
	keyState=0;
	uint8_t lcdPosition=0;
    141e:	10 e0       	ldi	r17, 0x00	; 0
	LcdSetCursor(1,2,"");
	while(1){
		if (keyState)
		{
			if ((nowKey<10)&&(lcdPosition<4))
			{	sprintf(lcdt,"%u",nowKey);
    1420:	0f 2e       	mov	r0, r31
    1422:	fb ec       	ldi	r31, 0xCB	; 203
    1424:	af 2e       	mov	r10, r31
    1426:	f2 e0       	ldi	r31, 0x02	; 2
    1428:	bf 2e       	mov	r11, r31
    142a:	f0 2d       	mov	r31, r0
	LcdCommand(LCD_CLEARDISPLAY);
	LcdSetCursor(0,0,"Enter the OTP");
	LcdCommand(LCD_DISPLAYCONTROL|(LCD_DISPLAYON|LCD_BLINKON));
	LcdSetCursor(1,2,"");
	while(1){
		if (keyState)
    142c:	90 91 02 03 	lds	r25, 0x0302	; 0x800302 <keyState>
    1430:	99 23       	and	r25, r25
    1432:	c9 f0       	breq	.+50     	; 0x1466 <_Z6otpSMSv+0x138>
		{
			if ((nowKey<10)&&(lcdPosition<4))
    1434:	80 91 03 03 	lds	r24, 0x0303	; 0x800303 <nowKey>
    1438:	8a 30       	cpi	r24, 0x0A	; 10
    143a:	18 f4       	brcc	.+6      	; 0x1442 <_Z6otpSMSv+0x114>
    143c:	14 30       	cpi	r17, 0x04	; 4
    143e:	d0 f0       	brcs	.+52     	; 0x1474 <_Z6otpSMSv+0x146>
    1440:	7b c0       	rjmp	.+246    	; 0x1538 <_Z6otpSMSv+0x20a>
				LcdSetCursor(3+lcdPosition,1,lcdt);
				otpnum[lcdPosition]=nowKey;
				lcdPosition++;
			}
			
			if ((nowKey==11)&&(lcdPosition>0))
    1442:	80 91 03 03 	lds	r24, 0x0303	; 0x800303 <nowKey>
    1446:	8b 30       	cpi	r24, 0x0B	; 11
    1448:	19 f4       	brne	.+6      	; 0x1450 <_Z6otpSMSv+0x122>
    144a:	11 11       	cpse	r17, r1
    144c:	3a c0       	rjmp	.+116    	; 0x14c2 <_Z6otpSMSv+0x194>
    144e:	06 c0       	rjmp	.+12     	; 0x145c <_Z6otpSMSv+0x12e>
			{	lcdPosition--;
				LcdSetCursor(3+lcdPosition,1," ");
				LcdSetCursor(3+lcdPosition,1,"");
			}
			
			if (lcdPosition>3)
    1450:	14 30       	cpi	r17, 0x04	; 4
    1452:	20 f0       	brcs	.+8      	; 0x145c <_Z6otpSMSv+0x12e>
			{LcdCommand(LCD_DISPLAYCONTROL|(LCD_DISPLAYON&~LCD_BLINKON));
    1454:	8c e0       	ldi	r24, 0x0C	; 12
    1456:	0e 94 25 02 	call	0x44a	; 0x44a <_Z10LcdCommandh>
    145a:	03 c0       	rjmp	.+6      	; 0x1462 <_Z6otpSMSv+0x134>
			}
			else{LcdCommand(LCD_DISPLAYCONTROL|(LCD_DISPLAYON|LCD_BLINKON));}
    145c:	8d e0       	ldi	r24, 0x0D	; 13
    145e:	0e 94 25 02 	call	0x44a	; 0x44a <_Z10LcdCommandh>
			
			keyState=0;
    1462:	10 92 02 03 	sts	0x0302, r1	; 0x800302 <keyState>
		}
		if ((nowKey==12)&&(lcdPosition>3))
    1466:	90 91 03 03 	lds	r25, 0x0303	; 0x800303 <nowKey>
    146a:	9c 30       	cpi	r25, 0x0C	; 12
    146c:	f9 f6       	brne	.-66     	; 0x142c <_Z6otpSMSv+0xfe>
    146e:	14 30       	cpi	r17, 0x04	; 4
    1470:	e8 f2       	brcs	.-70     	; 0x142c <_Z6otpSMSv+0xfe>
    1472:	3c c0       	rjmp	.+120    	; 0x14ec <_Z6otpSMSv+0x1be>
	LcdSetCursor(1,2,"");
	while(1){
		if (keyState)
		{
			if ((nowKey<10)&&(lcdPosition<4))
			{	sprintf(lcdt,"%u",nowKey);
    1474:	80 91 03 03 	lds	r24, 0x0303	; 0x800303 <nowKey>
    1478:	1f 92       	push	r1
    147a:	8f 93       	push	r24
    147c:	bf 92       	push	r11
    147e:	af 92       	push	r10
    1480:	81 e0       	ldi	r24, 0x01	; 1
    1482:	90 e0       	ldi	r25, 0x00	; 0
    1484:	8c 0f       	add	r24, r28
    1486:	9d 1f       	adc	r25, r29
    1488:	9f 93       	push	r25
    148a:	8f 93       	push	r24
    148c:	0e 94 d1 15 	call	0x2ba2	; 0x2ba2 <sprintf>
				LcdSetCursor(3+lcdPosition,1,lcdt);
    1490:	ae 01       	movw	r20, r28
    1492:	4f 5f       	subi	r20, 0xFF	; 255
    1494:	5f 4f       	sbci	r21, 0xFF	; 255
    1496:	61 e0       	ldi	r22, 0x01	; 1
    1498:	83 e0       	ldi	r24, 0x03	; 3
    149a:	81 0f       	add	r24, r17
    149c:	0e 94 70 02 	call	0x4e0	; 0x4e0 <_Z12LcdSetCursorhhPc>
				otpnum[lcdPosition]=nowKey;
    14a0:	80 91 03 03 	lds	r24, 0x0303	; 0x800303 <nowKey>
    14a4:	e3 e0       	ldi	r30, 0x03	; 3
    14a6:	f0 e0       	ldi	r31, 0x00	; 0
    14a8:	ec 0f       	add	r30, r28
    14aa:	fd 1f       	adc	r31, r29
    14ac:	e1 0f       	add	r30, r17
    14ae:	f1 1d       	adc	r31, r1
    14b0:	80 83       	st	Z, r24
				lcdPosition++;
    14b2:	1f 5f       	subi	r17, 0xFF	; 255
    14b4:	0f 90       	pop	r0
    14b6:	0f 90       	pop	r0
    14b8:	0f 90       	pop	r0
    14ba:	0f 90       	pop	r0
    14bc:	0f 90       	pop	r0
    14be:	0f 90       	pop	r0
    14c0:	c0 cf       	rjmp	.-128    	; 0x1442 <_Z6otpSMSv+0x114>
			}
			
			if ((nowKey==11)&&(lcdPosition>0))
			{	lcdPosition--;
    14c2:	ee 24       	eor	r14, r14
    14c4:	ea 94       	dec	r14
    14c6:	e1 0e       	add	r14, r17
				LcdSetCursor(3+lcdPosition,1," ");
    14c8:	68 94       	set
    14ca:	ff 24       	eor	r15, r15
    14cc:	f1 f8       	bld	r15, 1
    14ce:	f1 0e       	add	r15, r17
    14d0:	40 e7       	ldi	r20, 0x70	; 112
    14d2:	52 e0       	ldi	r21, 0x02	; 2
    14d4:	61 e0       	ldi	r22, 0x01	; 1
    14d6:	8f 2d       	mov	r24, r15
    14d8:	0e 94 70 02 	call	0x4e0	; 0x4e0 <_Z12LcdSetCursorhhPc>
				LcdSetCursor(3+lcdPosition,1,"");
    14dc:	4d ee       	ldi	r20, 0xED	; 237
    14de:	51 e0       	ldi	r21, 0x01	; 1
    14e0:	61 e0       	ldi	r22, 0x01	; 1
    14e2:	8f 2d       	mov	r24, r15
    14e4:	0e 94 70 02 	call	0x4e0	; 0x4e0 <_Z12LcdSetCursorhhPc>
				otpnum[lcdPosition]=nowKey;
				lcdPosition++;
			}
			
			if ((nowKey==11)&&(lcdPosition>0))
			{	lcdPosition--;
    14e8:	1e 2d       	mov	r17, r14
    14ea:	b2 cf       	rjmp	.-156    	; 0x1450 <_Z6otpSMSv+0x122>
		if ((nowKey==12)&&(lcdPosition>3))
		{break;
		}
	}
	
	uint16_t otpcheck=(otpnum[0]*1000)+(otpnum[1]*100)+(otpnum[2]*10)+(otpnum[3]);
    14ec:	5b 81       	ldd	r21, Y+3	; 0x03
    14ee:	9c 81       	ldd	r25, Y+4	; 0x04
    14f0:	8d 81       	ldd	r24, Y+5	; 0x05
    14f2:	4e 81       	ldd	r20, Y+6	; 0x06
    14f4:	68 ee       	ldi	r22, 0xE8	; 232
    14f6:	73 e0       	ldi	r23, 0x03	; 3
    14f8:	56 9f       	mul	r21, r22
    14fa:	90 01       	movw	r18, r0
    14fc:	57 9f       	mul	r21, r23
    14fe:	30 0d       	add	r19, r0
    1500:	11 24       	eor	r1, r1
    1502:	54 e6       	ldi	r21, 0x64	; 100
    1504:	95 9f       	mul	r25, r21
    1506:	20 0d       	add	r18, r0
    1508:	31 1d       	adc	r19, r1
    150a:	11 24       	eor	r1, r1
    150c:	90 e0       	ldi	r25, 0x00	; 0
    150e:	bc 01       	movw	r22, r24
    1510:	66 0f       	add	r22, r22
    1512:	77 1f       	adc	r23, r23
    1514:	88 0f       	add	r24, r24
    1516:	99 1f       	adc	r25, r25
    1518:	88 0f       	add	r24, r24
    151a:	99 1f       	adc	r25, r25
    151c:	88 0f       	add	r24, r24
    151e:	99 1f       	adc	r25, r25
    1520:	86 0f       	add	r24, r22
    1522:	97 1f       	adc	r25, r23
    1524:	28 0f       	add	r18, r24
    1526:	39 1f       	adc	r19, r25
    1528:	24 0f       	add	r18, r20
    152a:	31 1d       	adc	r19, r1
    152c:	81 e0       	ldi	r24, 0x01	; 1
    152e:	2c 15       	cp	r18, r12
    1530:	3d 05       	cpc	r19, r13
    1532:	41 f0       	breq	.+16     	; 0x1544 <_Z6otpSMSv+0x216>
    1534:	80 e0       	ldi	r24, 0x00	; 0
    1536:	06 c0       	rjmp	.+12     	; 0x1544 <_Z6otpSMSv+0x216>
				LcdSetCursor(3+lcdPosition,1,lcdt);
				otpnum[lcdPosition]=nowKey;
				lcdPosition++;
			}
			
			if ((nowKey==11)&&(lcdPosition>0))
    1538:	80 91 03 03 	lds	r24, 0x0303	; 0x800303 <nowKey>
    153c:	8b 30       	cpi	r24, 0x0B	; 11
    153e:	09 f0       	breq	.+2      	; 0x1542 <_Z6otpSMSv+0x214>
    1540:	89 cf       	rjmp	.-238    	; 0x1454 <_Z6otpSMSv+0x126>
    1542:	83 cf       	rjmp	.-250    	; 0x144a <_Z6otpSMSv+0x11c>
	{return 1;
	} 
	else
	{return 0;
	}
}
    1544:	26 96       	adiw	r28, 0x06	; 6
    1546:	0f b6       	in	r0, 0x3f	; 63
    1548:	f8 94       	cli
    154a:	de bf       	out	0x3e, r29	; 62
    154c:	0f be       	out	0x3f, r0	; 63
    154e:	cd bf       	out	0x3d, r28	; 61
    1550:	df 91       	pop	r29
    1552:	cf 91       	pop	r28
    1554:	1f 91       	pop	r17
    1556:	0f 91       	pop	r16
    1558:	ff 90       	pop	r15
    155a:	ef 90       	pop	r14
    155c:	df 90       	pop	r13
    155e:	cf 90       	pop	r12
    1560:	bf 90       	pop	r11
    1562:	af 90       	pop	r10
    1564:	08 95       	ret

00001566 <_Z7fialSMSv>:

void fialSMS(){
    1566:	cf 93       	push	r28
    1568:	df 93       	push	r29
sprintf(lengthcal,"AT+CMGS=\"%s\"\r\n",smsNumber);
    156a:	82 e6       	ldi	r24, 0x62	; 98
    156c:	93 e0       	ldi	r25, 0x03	; 3
    156e:	9f 93       	push	r25
    1570:	8f 93       	push	r24
    1572:	8f ed       	ldi	r24, 0xDF	; 223
    1574:	91 e0       	ldi	r25, 0x01	; 1
    1576:	9f 93       	push	r25
    1578:	8f 93       	push	r24
    157a:	ce e6       	ldi	r28, 0x6E	; 110
    157c:	d3 e0       	ldi	r29, 0x03	; 3
    157e:	df 93       	push	r29
    1580:	cf 93       	push	r28
    1582:	0e 94 d1 15 	call	0x2ba2	; 0x2ba2 <sprintf>
USART_TxString(lengthcal);
    1586:	ce 01       	movw	r24, r28
    1588:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <_Z14USART_TxStringPc>
    158c:	9f ef       	ldi	r25, 0xFF	; 255
    158e:	21 ee       	ldi	r18, 0xE1	; 225
    1590:	84 e0       	ldi	r24, 0x04	; 4
    1592:	91 50       	subi	r25, 0x01	; 1
    1594:	20 40       	sbci	r18, 0x00	; 0
    1596:	80 40       	sbci	r24, 0x00	; 0
    1598:	e1 f7       	brne	.-8      	; 0x1592 <_Z7fialSMSv+0x2c>
    159a:	00 c0       	rjmp	.+0      	; 0x159c <_Z7fialSMSv+0x36>
    159c:	00 00       	nop
_delay_ms(200);
sprintf(lengthcal,"Order rejected.\r\n Your item list is\r\nA-%u\r\nB-%u\r\nC-%u\r\nD-%u\r\n ",addlistnumnow[0],addlistnumnow[1],addlistnumnow[2],addlistnumnow[3]);
    159e:	e2 ef       	ldi	r30, 0xF2	; 242
    15a0:	f2 e0       	ldi	r31, 0x02	; 2
    15a2:	83 81       	ldd	r24, Z+3	; 0x03
    15a4:	1f 92       	push	r1
    15a6:	8f 93       	push	r24
    15a8:	82 81       	ldd	r24, Z+2	; 0x02
    15aa:	1f 92       	push	r1
    15ac:	8f 93       	push	r24
    15ae:	81 81       	ldd	r24, Z+1	; 0x01
    15b0:	1f 92       	push	r1
    15b2:	8f 93       	push	r24
    15b4:	80 81       	ld	r24, Z
    15b6:	1f 92       	push	r1
    15b8:	8f 93       	push	r24
    15ba:	83 e3       	ldi	r24, 0x33	; 51
    15bc:	92 e0       	ldi	r25, 0x02	; 2
    15be:	9f 93       	push	r25
    15c0:	8f 93       	push	r24
    15c2:	df 93       	push	r29
    15c4:	cf 93       	push	r28
    15c6:	0e 94 d1 15 	call	0x2ba2	; 0x2ba2 <sprintf>
USART_TxString(lengthcal);
    15ca:	ce 01       	movw	r24, r28
    15cc:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <_Z14USART_TxStringPc>
    15d0:	8f ef       	ldi	r24, 0xFF	; 255
    15d2:	94 e3       	ldi	r25, 0x34	; 52
    15d4:	2c e0       	ldi	r18, 0x0C	; 12
    15d6:	81 50       	subi	r24, 0x01	; 1
    15d8:	90 40       	sbci	r25, 0x00	; 0
    15da:	20 40       	sbci	r18, 0x00	; 0
    15dc:	e1 f7       	brne	.-8      	; 0x15d6 <_Z7fialSMSv+0x70>
    15de:	00 c0       	rjmp	.+0      	; 0x15e0 <_Z7fialSMSv+0x7a>
    15e0:	00 00       	nop
_delay_ms(500);
USART_Transmit(26);
    15e2:	8a e1       	ldi	r24, 0x1A	; 26
    15e4:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <_Z14USART_Transmith>
    15e8:	8f ef       	ldi	r24, 0xFF	; 255
    15ea:	93 ed       	ldi	r25, 0xD3	; 211
    15ec:	20 e3       	ldi	r18, 0x30	; 48
    15ee:	81 50       	subi	r24, 0x01	; 1
    15f0:	90 40       	sbci	r25, 0x00	; 0
    15f2:	20 40       	sbci	r18, 0x00	; 0
    15f4:	e1 f7       	brne	.-8      	; 0x15ee <_Z7fialSMSv+0x88>
    15f6:	00 c0       	rjmp	.+0      	; 0x15f8 <_Z7fialSMSv+0x92>
    15f8:	00 00       	nop
_delay_ms(2000);	
	
}
    15fa:	8d b7       	in	r24, 0x3d	; 61
    15fc:	9e b7       	in	r25, 0x3e	; 62
    15fe:	42 96       	adiw	r24, 0x12	; 18
    1600:	0f b6       	in	r0, 0x3f	; 63
    1602:	f8 94       	cli
    1604:	9e bf       	out	0x3e, r25	; 62
    1606:	0f be       	out	0x3f, r0	; 63
    1608:	8d bf       	out	0x3d, r24	; 61
    160a:	df 91       	pop	r29
    160c:	cf 91       	pop	r28
    160e:	08 95       	ret

00001610 <_Z13stepperrotateb>:

void stepperrotate(bool dir){
	if (dir)
    1610:	88 23       	and	r24, r24
    1612:	51 f0       	breq	.+20     	; 0x1628 <_Z13stepperrotateb+0x18>
	{LcdCommand(LCD_CLEARDISPLAY);
    1614:	81 e0       	ldi	r24, 0x01	; 1
    1616:	0e 94 25 02 	call	0x44a	; 0x44a <_Z10LcdCommandh>
	LcdSetCursor(0,0,"OTP Correct");
    161a:	42 e7       	ldi	r20, 0x72	; 114
    161c:	52 e0       	ldi	r21, 0x02	; 2
    161e:	60 e0       	ldi	r22, 0x00	; 0
    1620:	80 e0       	ldi	r24, 0x00	; 0
    1622:	0e 94 70 02 	call	0x4e0	; 0x4e0 <_Z12LcdSetCursorhhPc>
    1626:	08 95       	ret
	} 
	else
	{LcdCommand(LCD_CLEARDISPLAY);
    1628:	81 e0       	ldi	r24, 0x01	; 1
    162a:	0e 94 25 02 	call	0x44a	; 0x44a <_Z10LcdCommandh>
	LcdSetCursor(0,0,"OTP Incorrect");
    162e:	4e e7       	ldi	r20, 0x7E	; 126
    1630:	52 e0       	ldi	r21, 0x02	; 2
    1632:	60 e0       	ldi	r22, 0x00	; 0
    1634:	80 e0       	ldi	r24, 0x00	; 0
    1636:	0e 94 70 02 	call	0x4e0	; 0x4e0 <_Z12LcdSetCursorhhPc>
    163a:	08 95       	ret

0000163c <_Z9steppergobj>:
	}
}

void steppergo(bool dir,uint16_t cycleCount){
	if (dir)
    163c:	88 23       	and	r24, r24
    163e:	11 f0       	breq	.+4      	; 0x1644 <_Z9steppergobj+0x8>
	{PORTB|=(1<<0);// dir pin high
    1640:	28 9a       	sbi	0x05, 0	; 5
    1642:	01 c0       	rjmp	.+2      	; 0x1646 <_Z9steppergobj+0xa>
	} 
	else
	{PORTB&=~(1<<0);// dir pin low
    1644:	28 98       	cbi	0x05, 0	; 5
	}
	
	for(uint16_t i=0;i<cycleCount;i++){
    1646:	61 15       	cp	r22, r1
    1648:	71 05       	cpc	r23, r1
    164a:	a1 f0       	breq	.+40     	; 0x1674 <_Z9steppergobj+0x38>
    164c:	80 e0       	ldi	r24, 0x00	; 0
    164e:	90 e0       	ldi	r25, 0x00	; 0
		PORTB|=(1<<1);
    1650:	29 9a       	sbi	0x05, 1	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1652:	ef e8       	ldi	r30, 0x8F	; 143
    1654:	f1 e0       	ldi	r31, 0x01	; 1
    1656:	31 97       	sbiw	r30, 0x01	; 1
    1658:	f1 f7       	brne	.-4      	; 0x1656 <_Z9steppergobj+0x1a>
    165a:	00 c0       	rjmp	.+0      	; 0x165c <_Z9steppergobj+0x20>
    165c:	00 00       	nop
		_delay_us(200);
		PORTB&=~(1<<1);
    165e:	29 98       	cbi	0x05, 1	; 5
    1660:	ef e8       	ldi	r30, 0x8F	; 143
    1662:	f1 e0       	ldi	r31, 0x01	; 1
    1664:	31 97       	sbiw	r30, 0x01	; 1
    1666:	f1 f7       	brne	.-4      	; 0x1664 <_Z9steppergobj+0x28>
    1668:	00 c0       	rjmp	.+0      	; 0x166a <_Z9steppergobj+0x2e>
    166a:	00 00       	nop
	} 
	else
	{PORTB&=~(1<<0);// dir pin low
	}
	
	for(uint16_t i=0;i<cycleCount;i++){
    166c:	01 96       	adiw	r24, 0x01	; 1
    166e:	68 17       	cp	r22, r24
    1670:	79 07       	cpc	r23, r25
    1672:	71 f7       	brne	.-36     	; 0x1650 <_Z9steppergobj+0x14>
    1674:	08 95       	ret

00001676 <_Z17BasicfunctionInitv>:
		
    }
}

void BasicfunctionInit(){
	LcdInit();
    1676:	87 e2       	ldi	r24, 0x27	; 39
    1678:	0e 94 33 02 	call	0x466	; 0x466 <_Z7LcdInith>
	LcdSetCursor(4,0,"WELCOME");
    167c:	4c e8       	ldi	r20, 0x8C	; 140
    167e:	52 e0       	ldi	r21, 0x02	; 2
    1680:	60 e0       	ldi	r22, 0x00	; 0
    1682:	84 e0       	ldi	r24, 0x04	; 4
    1684:	0e 94 70 02 	call	0x4e0	; 0x4e0 <_Z12LcdSetCursorhhPc>
	DDRB|=(1<<0)|(1<<1);// stepper motor signal dir,pulse set as output
    1688:	84 b1       	in	r24, 0x04	; 4
    168a:	83 60       	ori	r24, 0x03	; 3
    168c:	84 b9       	out	0x04, r24	; 4
	USART_Init(9600);//baud rate setup
    168e:	80 e8       	ldi	r24, 0x80	; 128
    1690:	95 e2       	ldi	r25, 0x25	; 37
    1692:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <_Z10USART_Initj>
	 PWM_init();//dc motor
    1696:	0e 94 14 06 	call	0xc28	; 0xc28 <_Z8PWM_initv>
	 Timerinit();
    169a:	0e 94 d4 04 	call	0x9a8	; 0x9a8 <_Z9Timerinitv>
	 EncoderInit();
    169e:	0e 94 25 06 	call	0xc4a	; 0xc4a <_Z11EncoderInitv>
	 keyapadInit();
    16a2:	0e 94 6a 06 	call	0xcd4	; 0xcd4 <_Z11keyapadInitv>
	 cardvalueRead();
    16a6:	0e 94 ae 07 	call	0xf5c	; 0xf5c <_Z13cardvalueReadv>
	 RandomInit();
    16aa:	0e 94 c2 04 	call	0x984	; 0x984 <_Z10RandomInitv>
	 steppergo(0,25000);
    16ae:	68 ea       	ldi	r22, 0xA8	; 168
    16b0:	71 e6       	ldi	r23, 0x61	; 97
    16b2:	80 e0       	ldi	r24, 0x00	; 0
    16b4:	0e 94 1e 0b 	call	0x163c	; 0x163c <_Z9steppergobj>
	 SPI_Init();
    16b8:	0e 94 8c 02 	call	0x518	; 0x518 <_Z8SPI_Initv>
	 MFRC522_Init();   // Initialize RC522 module
    16bc:	0e 94 47 03 	call	0x68e	; 0x68e <_Z12MFRC522_Initv>
	 if (!checkGSM())
    16c0:	0e 94 07 07 	call	0xe0e	; 0xe0e <_Z8checkGSMv>
    16c4:	81 11       	cpse	r24, r1
    16c6:	06 c0       	rjmp	.+12     	; 0x16d4 <_Z17BasicfunctionInitv+0x5e>
	 {longjmp(mainstart,1);
    16c8:	61 e0       	ldi	r22, 0x01	; 1
    16ca:	70 e0       	ldi	r23, 0x00	; 0
    16cc:	8a e3       	ldi	r24, 0x3A	; 58
    16ce:	93 e0       	ldi	r25, 0x03	; 3
    16d0:	0e 94 2d 15 	call	0x2a5a	; 0x2a5a <longjmp>
	 }
	 else{
		 LcdCommand(LCD_CLEARDISPLAY);
    16d4:	81 e0       	ldi	r24, 0x01	; 1
    16d6:	0e 94 25 02 	call	0x44a	; 0x44a <_Z10LcdCommandh>
		 LcdSetCursor(0,0,"GSM OK");}
    16da:	44 e9       	ldi	r20, 0x94	; 148
    16dc:	52 e0       	ldi	r21, 0x02	; 2
    16de:	60 e0       	ldi	r22, 0x00	; 0
    16e0:	80 e0       	ldi	r24, 0x00	; 0
    16e2:	0e 94 70 02 	call	0x4e0	; 0x4e0 <_Z12LcdSetCursorhhPc>
	 setupGSM();
    16e6:	0e 94 6d 07 	call	0xeda	; 0xeda <_Z8setupGSMv>

	 LcdSetCursor(0,1,"GSM Initialized");
    16ea:	4b e9       	ldi	r20, 0x9B	; 155
    16ec:	52 e0       	ldi	r21, 0x02	; 2
    16ee:	61 e0       	ldi	r22, 0x01	; 1
    16f0:	80 e0       	ldi	r24, 0x00	; 0
    16f2:	0e 94 70 02 	call	0x4e0	; 0x4e0 <_Z12LcdSetCursorhhPc>
    16f6:	08 95       	ret

000016f8 <_Z11cardReadOutv>:
	LcdSetCursor(2,1,smsNumber);
	_delay_ms(500);
}

uint8_t addlistnumnow[4]={0};
bool cardReadOut(){
    16f8:	2f 92       	push	r2
    16fa:	3f 92       	push	r3
    16fc:	4f 92       	push	r4
    16fe:	5f 92       	push	r5
    1700:	6f 92       	push	r6
    1702:	7f 92       	push	r7
    1704:	8f 92       	push	r8
    1706:	9f 92       	push	r9
    1708:	af 92       	push	r10
    170a:	bf 92       	push	r11
    170c:	cf 92       	push	r12
    170e:	df 92       	push	r13
    1710:	ef 92       	push	r14
    1712:	ff 92       	push	r15
    1714:	0f 93       	push	r16
    1716:	1f 93       	push	r17
    1718:	cf 93       	push	r28
    171a:	df 93       	push	r29
    171c:	cd b7       	in	r28, 0x3d	; 61
    171e:	de b7       	in	r29, 0x3e	; 62
    1720:	a1 97       	sbiw	r28, 0x21	; 33
    1722:	0f b6       	in	r0, 0x3f	; 63
    1724:	f8 94       	cli
    1726:	de bf       	out	0x3e, r29	; 62
    1728:	0f be       	out	0x3f, r0	; 63
    172a:	cd bf       	out	0x3d, r28	; 61
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    172c:	2f ef       	ldi	r18, 0xFF	; 255
    172e:	80 e7       	ldi	r24, 0x70	; 112
    1730:	92 e0       	ldi	r25, 0x02	; 2
    1732:	21 50       	subi	r18, 0x01	; 1
    1734:	80 40       	sbci	r24, 0x00	; 0
    1736:	90 40       	sbci	r25, 0x00	; 0
    1738:	e1 f7       	brne	.-8      	; 0x1732 <_Z11cardReadOutv+0x3a>
    173a:	00 c0       	rjmp	.+0      	; 0x173c <_Z11cardReadOutv+0x44>
    173c:	00 00       	nop
	_delay_ms(100);
	addlistnumnow[0]=0;addlistnumnow[1]=0;addlistnumnow[2]=0;addlistnumnow[3]=0;
    173e:	02 ef       	ldi	r16, 0xF2	; 242
    1740:	12 e0       	ldi	r17, 0x02	; 2
    1742:	d8 01       	movw	r26, r16
    1744:	1c 92       	st	X, r1
    1746:	11 96       	adiw	r26, 0x01	; 1
    1748:	1c 92       	st	X, r1
    174a:	11 97       	sbiw	r26, 0x01	; 1
    174c:	12 96       	adiw	r26, 0x02	; 2
    174e:	1c 92       	st	X, r1
    1750:	12 97       	sbiw	r26, 0x02	; 2
    1752:	13 96       	adiw	r26, 0x03	; 3
    1754:	1c 92       	st	X, r1
	keyState=0;
    1756:	10 92 02 03 	sts	0x0302, r1	; 0x800302 <keyState>
	LcdCommand(LCD_CLEARDISPLAY);
    175a:	81 e0       	ldi	r24, 0x01	; 1
    175c:	0e 94 25 02 	call	0x44a	; 0x44a <_Z10LcdCommandh>
	char lcdt[16]={0};
    1760:	fe 01       	movw	r30, r28
    1762:	31 96       	adiw	r30, 0x01	; 1
    1764:	7f 01       	movw	r14, r30
    1766:	80 e1       	ldi	r24, 0x10	; 16
    1768:	df 01       	movw	r26, r30
    176a:	1d 92       	st	X+, r1
    176c:	8a 95       	dec	r24
    176e:	e9 f7       	brne	.-6      	; 0x176a <_Z11cardReadOutv+0x72>
	sprintf(lcdt,"  A%u B%u C%u D%u",addlistnum[0],addlistnum[1],addlistnum[2],addlistnum[3]);
    1770:	ee ef       	ldi	r30, 0xFE	; 254
    1772:	f2 e0       	ldi	r31, 0x02	; 2
    1774:	33 81       	ldd	r19, Z+3	; 0x03
    1776:	22 81       	ldd	r18, Z+2	; 0x02
    1778:	91 81       	ldd	r25, Z+1	; 0x01
    177a:	80 81       	ld	r24, Z
    177c:	1f 92       	push	r1
    177e:	3f 93       	push	r19
    1780:	1f 92       	push	r1
    1782:	2f 93       	push	r18
    1784:	1f 92       	push	r1
    1786:	9f 93       	push	r25
    1788:	1f 92       	push	r1
    178a:	8f 93       	push	r24
    178c:	8b ea       	ldi	r24, 0xAB	; 171
    178e:	92 e0       	ldi	r25, 0x02	; 2
    1790:	9f 93       	push	r25
    1792:	8f 93       	push	r24
    1794:	ff 92       	push	r15
    1796:	ef 92       	push	r14
    1798:	0e 94 d1 15 	call	0x2ba2	; 0x2ba2 <sprintf>
	LcdSetCursor(0,0,lcdt);
    179c:	a7 01       	movw	r20, r14
    179e:	60 e0       	ldi	r22, 0x00	; 0
    17a0:	80 e0       	ldi	r24, 0x00	; 0
    17a2:	0e 94 70 02 	call	0x4e0	; 0x4e0 <_Z12LcdSetCursorhhPc>
	
	sprintf(lcdt,"  %u  %u  %u  %u",addlistnumnow[0],addlistnumnow[1],addlistnumnow[2],addlistnumnow[3]);
    17a6:	f8 01       	movw	r30, r16
    17a8:	83 81       	ldd	r24, Z+3	; 0x03
    17aa:	1f 92       	push	r1
    17ac:	8f 93       	push	r24
    17ae:	82 81       	ldd	r24, Z+2	; 0x02
    17b0:	1f 92       	push	r1
    17b2:	8f 93       	push	r24
    17b4:	81 81       	ldd	r24, Z+1	; 0x01
    17b6:	1f 92       	push	r1
    17b8:	8f 93       	push	r24
    17ba:	80 81       	ld	r24, Z
    17bc:	1f 92       	push	r1
    17be:	8f 93       	push	r24
    17c0:	8d eb       	ldi	r24, 0xBD	; 189
    17c2:	92 e0       	ldi	r25, 0x02	; 2
    17c4:	9f 93       	push	r25
    17c6:	8f 93       	push	r24
    17c8:	ff 92       	push	r15
    17ca:	ef 92       	push	r14
    17cc:	0e 94 d1 15 	call	0x2ba2	; 0x2ba2 <sprintf>
	LcdSetCursor(0,1,lcdt);
    17d0:	a7 01       	movw	r20, r14
    17d2:	61 e0       	ldi	r22, 0x01	; 1
    17d4:	80 e0       	ldi	r24, 0x00	; 0
    17d6:	0e 94 70 02 	call	0x4e0	; 0x4e0 <_Z12LcdSetCursorhhPc>
	volatile uint8_t findCard=5;
    17da:	85 e0       	ldi	r24, 0x05	; 5
    17dc:	89 8b       	std	Y+17, r24	; 0x11
	volatile bool cardReadState[12]={0,0,0,0,0,0,0,0,0,0,0,0};
    17de:	fe 01       	movw	r30, r28
    17e0:	72 96       	adiw	r30, 0x12	; 18
    17e2:	8c e0       	ldi	r24, 0x0C	; 12
    17e4:	df 01       	movw	r26, r30
    17e6:	1d 92       	st	X+, r1
    17e8:	8a 95       	dec	r24
    17ea:	e9 f7       	brne	.-6      	; 0x17e6 <_Z11cardReadOutv+0xee>
    17ec:	0f b6       	in	r0, 0x3f	; 63
    17ee:	f8 94       	cli
    17f0:	de bf       	out	0x3e, r29	; 62
    17f2:	0f be       	out	0x3f, r0	; 63
    17f4:	cd bf       	out	0x3d, r28	; 61

		if (status == MI_OK)   //if ther is a new card detected
		{
			SetFormatRDM630(); // take serNum and format it and return read
			volatile uint8_t rfup=0;
			 findCard=5;
    17f6:	0f 2e       	mov	r0, r31
    17f8:	f5 e0       	ldi	r31, 0x05	; 5
    17fa:	ff 2e       	mov	r15, r31
    17fc:	f0 2d       	mov	r31, r0
    17fe:	00 e0       	ldi	r16, 0x00	; 0
    1800:	14 e0       	ldi	r17, 0x04	; 4
				}
				else{
					rfup=0;
				}
				if ((rfup==8)&&(!cardReadState[i]))
				{	findCard=i/3;
    1802:	0f 2e       	mov	r0, r31
    1804:	fb ea       	ldi	r31, 0xAB	; 171
    1806:	9f 2e       	mov	r9, r31
    1808:	f0 2d       	mov	r31, r0
					cardReadState[i]=1;
    180a:	ee 24       	eor	r14, r14
    180c:	e3 94       	inc	r14
			}
				
			}//end i
			if (findCard<4)
			{
			addlistnumnow[findCard]+=1;
    180e:	0f 2e       	mov	r0, r31
    1810:	f2 ef       	ldi	r31, 0xF2	; 242
    1812:	af 2e       	mov	r10, r31
    1814:	f2 e0       	ldi	r31, 0x02	; 2
    1816:	bf 2e       	mov	r11, r31
    1818:	f0 2d       	mov	r31, r0
			sprintf(lcdt,"  %u  %u  %u  %u",addlistnumnow[0],addlistnumnow[1],addlistnumnow[2],addlistnumnow[3]);
    181a:	0f 2e       	mov	r0, r31
    181c:	fd eb       	ldi	r31, 0xBD	; 189
    181e:	6f 2e       	mov	r6, r31
    1820:	f2 e0       	ldi	r31, 0x02	; 2
    1822:	7f 2e       	mov	r7, r31
    1824:	f0 2d       	mov	r31, r0
	volatile uint8_t findCard=5;
	volatile bool cardReadState[12]={0,0,0,0,0,0,0,0,0,0,0,0};
	while(1){
		

		status = MFRC522_Request(PICC_REQIDL, str);
    1826:	61 e5       	ldi	r22, 0x51	; 81
    1828:	73 e0       	ldi	r23, 0x03	; 3
    182a:	86 e2       	ldi	r24, 0x26	; 38
    182c:	0e 94 60 04 	call	0x8c0	; 0x8c0 <_Z15MFRC522_RequesthPh>
    1830:	80 93 61 03 	sts	0x0361, r24	; 0x800361 <status>
		//Anti-collision, return card serial number 4 bytes
		status = MFRC522_Anticoll(str);
    1834:	81 e5       	ldi	r24, 0x51	; 81
    1836:	93 e0       	ldi	r25, 0x03	; 3
    1838:	0e 94 8d 04 	call	0x91a	; 0x91a <_Z16MFRC522_AnticollPh>
    183c:	80 93 61 03 	sts	0x0361, r24	; 0x800361 <status>
		memcpy(serNum, str, 5);
    1840:	95 e0       	ldi	r25, 0x05	; 5
    1842:	e1 e5       	ldi	r30, 0x51	; 81
    1844:	f3 e0       	ldi	r31, 0x03	; 3
    1846:	aa e0       	ldi	r26, 0x0A	; 10
    1848:	b4 e0       	ldi	r27, 0x04	; 4
    184a:	01 90       	ld	r0, Z+
    184c:	0d 92       	st	X+, r0
    184e:	9a 95       	dec	r25
    1850:	e1 f7       	brne	.-8      	; 0x184a <_Z11cardReadOutv+0x152>

		if (status == MI_OK)   //if ther is a new card detected
    1852:	81 11       	cpse	r24, r1
    1854:	79 c0       	rjmp	.+242    	; 0x1948 <_Z11cardReadOutv+0x250>
		{
			SetFormatRDM630(); // take serNum and format it and return read
    1856:	0e 94 b1 02 	call	0x562	; 0x562 <_Z15SetFormatRDM630v>
			volatile uint8_t rfup=0;
    185a:	1f 8e       	std	Y+31, r1	; 0x1f
			 findCard=5;
    185c:	f9 8a       	std	Y+17, r15	; 0x11
    185e:	68 e9       	ldi	r22, 0x98	; 152
    1860:	73 e0       	ldi	r23, 0x03	; 3
    1862:	40 e0       	ldi	r20, 0x00	; 0
    1864:	50 e0       	ldi	r21, 0x00	; 0
    1866:	44 2e       	mov	r4, r20
    1868:	e8 ef       	ldi	r30, 0xF8	; 248
    186a:	f3 e0       	ldi	r31, 0x03	; 3
    186c:	79 a3       	std	Y+33, r23	; 0x21
    186e:	68 a3       	std	Y+32, r22	; 0x20
			for(uint8_t i=0;i<12;i++){
				
			for(uint8_t k=0;k<8;k++){
				if (read[k]==eepromR[i][k])
    1870:	ca 01       	movw	r24, r20
					rfup++;
				}
				else{
					rfup=0;
				}
				if ((rfup==8)&&(!cardReadState[i]))
    1872:	0f 2e       	mov	r0, r31
    1874:	f2 e1       	ldi	r31, 0x12	; 18
    1876:	cf 2e       	mov	r12, r31
    1878:	d1 2c       	mov	r13, r1
    187a:	f0 2d       	mov	r31, r0
    187c:	cc 0e       	add	r12, r28
    187e:	dd 1e       	adc	r13, r29
    1880:	c8 0e       	add	r12, r24
    1882:	d9 1e       	adc	r13, r25
			volatile uint8_t rfup=0;
			 findCard=5;
			for(uint8_t i=0;i<12;i++){
				
			for(uint8_t k=0;k<8;k++){
				if (read[k]==eepromR[i][k])
    1884:	51 90       	ld	r5, Z+
    1886:	1c 01       	movw	r2, r24
    1888:	a8 a1       	ldd	r26, Y+32	; 0x20
    188a:	b9 a1       	ldd	r27, Y+33	; 0x21
    188c:	8d 90       	ld	r8, X+
    188e:	b9 a3       	std	Y+33, r27	; 0x21
    1890:	a8 a3       	std	Y+32, r26	; 0x20
    1892:	58 10       	cpse	r5, r8
    1894:	04 c0       	rjmp	.+8      	; 0x189e <_Z11cardReadOutv+0x1a6>
				{
					rfup++;
    1896:	8f 8c       	ldd	r8, Y+31	; 0x1f
    1898:	83 94       	inc	r8
    189a:	8f 8e       	std	Y+31, r8	; 0x1f
    189c:	01 c0       	rjmp	.+2      	; 0x18a0 <_Z11cardReadOutv+0x1a8>
				}
				else{
					rfup=0;
    189e:	1f 8e       	std	Y+31, r1	; 0x1f
				}
				if ((rfup==8)&&(!cardReadState[i]))
    18a0:	2f 8d       	ldd	r18, Y+31	; 0x1f
    18a2:	28 30       	cpi	r18, 0x08	; 8
    18a4:	09 f0       	breq	.+2      	; 0x18a8 <_Z11cardReadOutv+0x1b0>
    18a6:	8d c0       	rjmp	.+282    	; 0x19c2 <_Z11cardReadOutv+0x2ca>
    18a8:	d6 01       	movw	r26, r12
    18aa:	8c 90       	ld	r8, X
    18ac:	81 10       	cpse	r8, r1
    18ae:	89 c0       	rjmp	.+274    	; 0x19c2 <_Z11cardReadOutv+0x2ca>
    18b0:	8d c0       	rjmp	.+282    	; 0x19cc <_Z11cardReadOutv+0x2d4>
				{	findCard=i/3;
					cardReadState[i]=1;
					break;
				}
			}//end j
			if (findCard!=5)
    18b2:	89 89       	ldd	r24, Y+17	; 0x11
    18b4:	85 30       	cpi	r24, 0x05	; 5
    18b6:	39 f4       	brne	.+14     	; 0x18c6 <_Z11cardReadOutv+0x1ce>
    18b8:	4f 5f       	subi	r20, 0xFF	; 255
    18ba:	5f 4f       	sbci	r21, 0xFF	; 255
    18bc:	68 5f       	subi	r22, 0xF8	; 248
    18be:	7f 4f       	sbci	r23, 0xFF	; 255
		if (status == MI_OK)   //if ther is a new card detected
		{
			SetFormatRDM630(); // take serNum and format it and return read
			volatile uint8_t rfup=0;
			 findCard=5;
			for(uint8_t i=0;i<12;i++){
    18c0:	4c 30       	cpi	r20, 0x0C	; 12
    18c2:	51 05       	cpc	r21, r1
    18c4:	81 f6       	brne	.-96     	; 0x1866 <_Z11cardReadOutv+0x16e>
			if (findCard!=5)
			{break;
			}
				
			}//end i
			if (findCard<4)
    18c6:	89 89       	ldd	r24, Y+17	; 0x11
    18c8:	84 30       	cpi	r24, 0x04	; 4
    18ca:	e8 f5       	brcc	.+122    	; 0x1946 <_Z11cardReadOutv+0x24e>
			{
			addlistnumnow[findCard]+=1;
    18cc:	e9 89       	ldd	r30, Y+17	; 0x11
    18ce:	f0 e0       	ldi	r31, 0x00	; 0
    18d0:	ee 50       	subi	r30, 0x0E	; 14
    18d2:	fd 4f       	sbci	r31, 0xFD	; 253
    18d4:	80 81       	ld	r24, Z
    18d6:	8f 5f       	subi	r24, 0xFF	; 255
    18d8:	80 83       	st	Z, r24
			sprintf(lcdt,"  %u  %u  %u  %u",addlistnumnow[0],addlistnumnow[1],addlistnumnow[2],addlistnumnow[3]);
    18da:	f5 01       	movw	r30, r10
    18dc:	83 81       	ldd	r24, Z+3	; 0x03
    18de:	1f 92       	push	r1
    18e0:	8f 93       	push	r24
    18e2:	82 81       	ldd	r24, Z+2	; 0x02
    18e4:	1f 92       	push	r1
    18e6:	8f 93       	push	r24
    18e8:	81 81       	ldd	r24, Z+1	; 0x01
    18ea:	1f 92       	push	r1
    18ec:	8f 93       	push	r24
    18ee:	80 81       	ld	r24, Z
    18f0:	1f 92       	push	r1
    18f2:	8f 93       	push	r24
    18f4:	7f 92       	push	r7
    18f6:	6f 92       	push	r6
    18f8:	81 e0       	ldi	r24, 0x01	; 1
    18fa:	90 e0       	ldi	r25, 0x00	; 0
    18fc:	8c 0f       	add	r24, r28
    18fe:	9d 1f       	adc	r25, r29
    1900:	9f 93       	push	r25
    1902:	8f 93       	push	r24
    1904:	0e 94 d1 15 	call	0x2ba2	; 0x2ba2 <sprintf>
			LcdSetCursor(0,1,lcdt);
    1908:	ae 01       	movw	r20, r28
    190a:	4f 5f       	subi	r20, 0xFF	; 255
    190c:	5f 4f       	sbci	r21, 0xFF	; 255
    190e:	6e 2d       	mov	r22, r14
    1910:	80 e0       	ldi	r24, 0x00	; 0
    1912:	0e 94 70 02 	call	0x4e0	; 0x4e0 <_Z12LcdSetCursorhhPc>
    1916:	9f ef       	ldi	r25, 0xFF	; 255
    1918:	a3 ed       	ldi	r26, 0xD3	; 211
    191a:	b0 e3       	ldi	r27, 0x30	; 48
    191c:	91 50       	subi	r25, 0x01	; 1
    191e:	a0 40       	sbci	r26, 0x00	; 0
    1920:	b0 40       	sbci	r27, 0x00	; 0
    1922:	e1 f7       	brne	.-8      	; 0x191c <_Z11cardReadOutv+0x224>
    1924:	00 c0       	rjmp	.+0      	; 0x1926 <_Z11cardReadOutv+0x22e>
    1926:	00 00       	nop
			_delay_ms(2000);
			steppergo(1,4000);
    1928:	60 ea       	ldi	r22, 0xA0	; 160
    192a:	7f e0       	ldi	r23, 0x0F	; 15
    192c:	8e 2d       	mov	r24, r14
    192e:	0e 94 1e 0b 	call	0x163c	; 0x163c <_Z9steppergobj>
			steppergo(0,5000);	
    1932:	68 e8       	ldi	r22, 0x88	; 136
    1934:	73 e1       	ldi	r23, 0x13	; 19
    1936:	80 e0       	ldi	r24, 0x00	; 0
    1938:	0e 94 1e 0b 	call	0x163c	; 0x163c <_Z9steppergobj>
    193c:	0f b6       	in	r0, 0x3f	; 63
    193e:	f8 94       	cli
    1940:	de bf       	out	0x3e, r29	; 62
    1942:	0f be       	out	0x3f, r0	; 63
    1944:	cd bf       	out	0x3d, r28	; 61
			}
			findCard=5;
    1946:	f9 8a       	std	Y+17, r15	; 0x11
		}//if
		if ((nowKey==12)&&(keyState))
    1948:	80 91 03 03 	lds	r24, 0x0303	; 0x800303 <nowKey>
    194c:	8c 30       	cpi	r24, 0x0C	; 12
    194e:	09 f0       	breq	.+2      	; 0x1952 <_Z11cardReadOutv+0x25a>
    1950:	6a cf       	rjmp	.-300    	; 0x1826 <_Z11cardReadOutv+0x12e>
    1952:	d0 90 02 03 	lds	r13, 0x0302	; 0x800302 <keyState>
    1956:	dd 20       	and	r13, r13
    1958:	09 f4       	brne	.+2      	; 0x195c <_Z11cardReadOutv+0x264>
    195a:	65 cf       	rjmp	.-310    	; 0x1826 <_Z11cardReadOutv+0x12e>
    195c:	44 c0       	rjmp	.+136    	; 0x19e6 <_Z11cardReadOutv+0x2ee>
		{break;
		}
	}//while
	volatile uint8_t numcheck=0;
	for(uint8_t i=0;i<4;i++){
	if (addlistnum[i]==addlistnumnow[i])
    195e:	dc 01       	movw	r26, r24
    1960:	a2 50       	subi	r26, 0x02	; 2
    1962:	bd 4f       	sbci	r27, 0xFD	; 253
    1964:	3c 91       	ld	r19, X
    1966:	21 91       	ld	r18, Z+
    1968:	32 13       	cpse	r19, r18
    196a:	07 c0       	rjmp	.+14     	; 0x197a <_Z11cardReadOutv+0x282>
	{numcheck++;
    196c:	2e 8d       	ldd	r18, Y+30	; 0x1e
    196e:	2f 5f       	subi	r18, 0xFF	; 255
    1970:	2e 8f       	std	Y+30, r18	; 0x1e
    1972:	01 96       	adiw	r24, 0x01	; 1
		if ((nowKey==12)&&(keyState))
		{break;
		}
	}//while
	volatile uint8_t numcheck=0;
	for(uint8_t i=0;i<4;i++){
    1974:	84 30       	cpi	r24, 0x04	; 4
    1976:	91 05       	cpc	r25, r1
    1978:	91 f7       	brne	.-28     	; 0x195e <_Z11cardReadOutv+0x266>
	} 
	else
	{break;
	}
	}//for
	if (numcheck>3)
    197a:	8e 8d       	ldd	r24, Y+30	; 0x1e
    197c:	84 30       	cpi	r24, 0x04	; 4
    197e:	50 f0       	brcs	.+20     	; 0x1994 <_Z11cardReadOutv+0x29c>
	{	LcdCommand(LCD_CLEARDISPLAY);
    1980:	81 e0       	ldi	r24, 0x01	; 1
    1982:	0e 94 25 02 	call	0x44a	; 0x44a <_Z10LcdCommandh>
		LcdSetCursor(0,0,"Cards are Accepted");
    1986:	4e ec       	ldi	r20, 0xCE	; 206
    1988:	52 e0       	ldi	r21, 0x02	; 2
    198a:	60 e0       	ldi	r22, 0x00	; 0
    198c:	80 e0       	ldi	r24, 0x00	; 0
    198e:	0e 94 70 02 	call	0x4e0	; 0x4e0 <_Z12LcdSetCursorhhPc>
		return 1;
    1992:	38 c0       	rjmp	.+112    	; 0x1a04 <_Z11cardReadOutv+0x30c>
	} 
	else
	{	
		LcdCommand(LCD_CLEARDISPLAY);
    1994:	81 e0       	ldi	r24, 0x01	; 1
    1996:	0e 94 25 02 	call	0x44a	; 0x44a <_Z10LcdCommandh>
		LcdSetCursor(0,0," items Rejected");
    199a:	41 ee       	ldi	r20, 0xE1	; 225
    199c:	52 e0       	ldi	r21, 0x02	; 2
    199e:	60 e0       	ldi	r22, 0x00	; 0
    19a0:	80 e0       	ldi	r24, 0x00	; 0
    19a2:	0e 94 70 02 	call	0x4e0	; 0x4e0 <_Z12LcdSetCursorhhPc>
		LcdSetCursor(2,1,"");
    19a6:	4d ee       	ldi	r20, 0xED	; 237
    19a8:	51 e0       	ldi	r21, 0x01	; 1
    19aa:	61 e0       	ldi	r22, 0x01	; 1
    19ac:	82 e0       	ldi	r24, 0x02	; 2
    19ae:	0e 94 70 02 	call	0x4e0	; 0x4e0 <_Z12LcdSetCursorhhPc>
		for(uint8_t i=0;i<4;i++){
			if (addlistnum[i]==addlistnumnow[i])
    19b2:	ee ef       	ldi	r30, 0xFE	; 254
    19b4:	f2 e0       	ldi	r31, 0x02	; 2
    19b6:	80 81       	ld	r24, Z
    19b8:	81 81       	ldd	r24, Z+1	; 0x01
    19ba:	82 81       	ldd	r24, Z+2	; 0x02
    19bc:	83 81       	ldd	r24, Z+3	; 0x03
			{
			}
		}
		return 0;
    19be:	d1 2c       	mov	r13, r1
    19c0:	21 c0       	rjmp	.+66     	; 0x1a04 <_Z11cardReadOutv+0x30c>
			SetFormatRDM630(); // take serNum and format it and return read
			volatile uint8_t rfup=0;
			 findCard=5;
			for(uint8_t i=0;i<12;i++){
				
			for(uint8_t k=0;k<8;k++){
    19c2:	e0 17       	cp	r30, r16
    19c4:	f1 07       	cpc	r31, r17
    19c6:	09 f0       	breq	.+2      	; 0x19ca <_Z11cardReadOutv+0x2d2>
    19c8:	5d cf       	rjmp	.-326    	; 0x1884 <_Z11cardReadOutv+0x18c>
    19ca:	73 cf       	rjmp	.-282    	; 0x18b2 <_Z11cardReadOutv+0x1ba>
				}
				else{
					rfup=0;
				}
				if ((rfup==8)&&(!cardReadState[i]))
				{	findCard=i/3;
    19cc:	49 9c       	mul	r4, r9
    19ce:	41 2c       	mov	r4, r1
    19d0:	11 24       	eor	r1, r1
    19d2:	46 94       	lsr	r4
    19d4:	49 8a       	std	Y+17, r4	; 0x11
					cardReadState[i]=1;
    19d6:	e2 e1       	ldi	r30, 0x12	; 18
    19d8:	f0 e0       	ldi	r31, 0x00	; 0
    19da:	ec 0f       	add	r30, r28
    19dc:	fd 1f       	adc	r31, r29
    19de:	e2 0d       	add	r30, r2
    19e0:	f3 1d       	adc	r31, r3
    19e2:	e0 82       	st	Z, r14
					break;
    19e4:	66 cf       	rjmp	.-308    	; 0x18b2 <_Z11cardReadOutv+0x1ba>
		}//if
		if ((nowKey==12)&&(keyState))
		{break;
		}
	}//while
	volatile uint8_t numcheck=0;
    19e6:	1e 8e       	std	Y+30, r1	; 0x1e
	for(uint8_t i=0;i<4;i++){
	if (addlistnum[i]==addlistnumnow[i])
    19e8:	90 91 fe 02 	lds	r25, 0x02FE	; 0x8002fe <addlistnum>
    19ec:	80 91 f2 02 	lds	r24, 0x02F2	; 0x8002f2 <__data_end>
    19f0:	98 13       	cpse	r25, r24
    19f2:	c3 cf       	rjmp	.-122    	; 0x197a <_Z11cardReadOutv+0x282>
	{numcheck++;
    19f4:	8e 8d       	ldd	r24, Y+30	; 0x1e
    19f6:	8f 5f       	subi	r24, 0xFF	; 255
    19f8:	8e 8f       	std	Y+30, r24	; 0x1e
    19fa:	e3 ef       	ldi	r30, 0xF3	; 243
    19fc:	f2 e0       	ldi	r31, 0x02	; 2
    19fe:	81 e0       	ldi	r24, 0x01	; 1
    1a00:	90 e0       	ldi	r25, 0x00	; 0
    1a02:	ad cf       	rjmp	.-166    	; 0x195e <_Z11cardReadOutv+0x266>
			}
		}
		return 0;
		
	}
}
    1a04:	8d 2d       	mov	r24, r13
    1a06:	a1 96       	adiw	r28, 0x21	; 33
    1a08:	0f b6       	in	r0, 0x3f	; 63
    1a0a:	f8 94       	cli
    1a0c:	de bf       	out	0x3e, r29	; 62
    1a0e:	0f be       	out	0x3f, r0	; 63
    1a10:	cd bf       	out	0x3d, r28	; 61
    1a12:	df 91       	pop	r29
    1a14:	cf 91       	pop	r28
    1a16:	1f 91       	pop	r17
    1a18:	0f 91       	pop	r16
    1a1a:	ff 90       	pop	r15
    1a1c:	ef 90       	pop	r14
    1a1e:	df 90       	pop	r13
    1a20:	cf 90       	pop	r12
    1a22:	bf 90       	pop	r11
    1a24:	af 90       	pop	r10
    1a26:	9f 90       	pop	r9
    1a28:	8f 90       	pop	r8
    1a2a:	7f 90       	pop	r7
    1a2c:	6f 90       	pop	r6
    1a2e:	5f 90       	pop	r5
    1a30:	4f 90       	pop	r4
    1a32:	3f 90       	pop	r3
    1a34:	2f 90       	pop	r2
    1a36:	08 95       	ret

00001a38 <main>:
void RandomInit();  //otp number
void fialSMS(); //card fail
void stepperrotate(bool dir); //display
void steppergo(bool dir,uint16_t cycleCount);//stepr control
int main(void)
{
    1a38:	cf 93       	push	r28
    1a3a:	df 93       	push	r29
    1a3c:	cd b7       	in	r28, 0x3d	; 61
    1a3e:	de b7       	in	r29, 0x3e	; 62
	setjmp (mainstart);//reset point
    1a40:	8a e3       	ldi	r24, 0x3A	; 58
    1a42:	93 e0       	ldi	r25, 0x03	; 3
    1a44:	0e 94 0d 15 	call	0x2a1a	; 0x2a1a <setjmp>
	BasicfunctionInit();
    1a48:	0e 94 3b 0b 	call	0x1676	; 0x1676 <_Z17BasicfunctionInitv>
	sei();//inturrept eneble
    1a4c:	78 94       	sei
	DDRB|=(1<<5); 
    1a4e:	25 9a       	sbi	0x04, 5	; 4
	setjmp (midstart);
    1a50:	83 e2       	ldi	r24, 0x23	; 35
    1a52:	93 e0       	ldi	r25, 0x03	; 3
    1a54:	0e 94 0d 15 	call	0x2a1a	; 0x2a1a <setjmp>
	addlist();
    1a58:	0e 94 d2 07 	call	0xfa4	; 0xfa4 <_Z7addlistv>
	addPhoneNum();
    1a5c:	0e 94 c1 08 	call	0x1182	; 0x1182 <_Z11addPhoneNumv>
	if (cardReadOut())// check added card
    1a60:	0e 94 7c 0b 	call	0x16f8	; 0x16f8 <_Z11cardReadOutv>
    1a64:	88 23       	and	r24, r24
    1a66:	b1 f0       	breq	.+44     	; 0x1a94 <main+0x5c>
	{if (otpSMS())
    1a68:	0e 94 97 09 	call	0x132e	; 0x132e <_Z6otpSMSv>
    1a6c:	88 23       	and	r24, r24
    1a6e:	49 f0       	breq	.+18     	; 0x1a82 <main+0x4a>
	{stepperrotate(1);//otp ok
    1a70:	81 e0       	ldi	r24, 0x01	; 1
    1a72:	0e 94 08 0b 	call	0x1610	; 0x1610 <_Z13stepperrotateb>
		steppergo(1,25000);
    1a76:	68 ea       	ldi	r22, 0xA8	; 168
    1a78:	71 e6       	ldi	r23, 0x61	; 97
    1a7a:	81 e0       	ldi	r24, 0x01	; 1
    1a7c:	0e 94 1e 0b 	call	0x163c	; 0x163c <_Z9steppergobj>
    1a80:	10 c0       	rjmp	.+32     	; 0x1aa2 <main+0x6a>
	} 
	else
	{stepperrotate(0);//otp fail
    1a82:	80 e0       	ldi	r24, 0x00	; 0
    1a84:	0e 94 08 0b 	call	0x1610	; 0x1610 <_Z13stepperrotateb>
		steppergo(0,25000);
    1a88:	68 ea       	ldi	r22, 0xA8	; 168
    1a8a:	71 e6       	ldi	r23, 0x61	; 97
    1a8c:	80 e0       	ldi	r24, 0x00	; 0
    1a8e:	0e 94 1e 0b 	call	0x163c	; 0x163c <_Z9steppergobj>
    1a92:	07 c0       	rjmp	.+14     	; 0x1aa2 <main+0x6a>
	}
		
	}
	else{fialSMS();steppergo(0,25000);}//
    1a94:	0e 94 b3 0a 	call	0x1566	; 0x1566 <_Z7fialSMSv>
    1a98:	68 ea       	ldi	r22, 0xA8	; 168
    1a9a:	71 e6       	ldi	r23, 0x61	; 97
    1a9c:	80 e0       	ldi	r24, 0x00	; 0
    1a9e:	0e 94 1e 0b 	call	0x163c	; 0x163c <_Z9steppergobj>
    1aa2:	2f ef       	ldi	r18, 0xFF	; 255
    1aa4:	87 ea       	ldi	r24, 0xA7	; 167
    1aa6:	91 e6       	ldi	r25, 0x61	; 97
    1aa8:	21 50       	subi	r18, 0x01	; 1
    1aaa:	80 40       	sbci	r24, 0x00	; 0
    1aac:	90 40       	sbci	r25, 0x00	; 0
    1aae:	e1 f7       	brne	.-8      	; 0x1aa8 <main+0x70>
    1ab0:	00 c0       	rjmp	.+0      	; 0x1ab2 <main+0x7a>
    1ab2:	00 00       	nop
	_delay_ms(4000);
	longjmp(midstart,1);
    1ab4:	61 e0       	ldi	r22, 0x01	; 1
    1ab6:	70 e0       	ldi	r23, 0x00	; 0
    1ab8:	83 e2       	ldi	r24, 0x23	; 35
    1aba:	93 e0       	ldi	r25, 0x03	; 3
    1abc:	0e 94 2d 15 	call	0x2a5a	; 0x2a5a <longjmp>

00001ac0 <__subsf3>:
    1ac0:	50 58       	subi	r21, 0x80	; 128

00001ac2 <__addsf3>:
    1ac2:	bb 27       	eor	r27, r27
    1ac4:	aa 27       	eor	r26, r26
    1ac6:	0e 94 78 0d 	call	0x1af0	; 0x1af0 <__addsf3x>
    1aca:	0c 94 f2 0e 	jmp	0x1de4	; 0x1de4 <__fp_round>
    1ace:	0e 94 e4 0e 	call	0x1dc8	; 0x1dc8 <__fp_pscA>
    1ad2:	38 f0       	brcs	.+14     	; 0x1ae2 <__addsf3+0x20>
    1ad4:	0e 94 eb 0e 	call	0x1dd6	; 0x1dd6 <__fp_pscB>
    1ad8:	20 f0       	brcs	.+8      	; 0x1ae2 <__addsf3+0x20>
    1ada:	39 f4       	brne	.+14     	; 0x1aea <__addsf3+0x28>
    1adc:	9f 3f       	cpi	r25, 0xFF	; 255
    1ade:	19 f4       	brne	.+6      	; 0x1ae6 <__addsf3+0x24>
    1ae0:	26 f4       	brtc	.+8      	; 0x1aea <__addsf3+0x28>
    1ae2:	0c 94 e1 0e 	jmp	0x1dc2	; 0x1dc2 <__fp_nan>
    1ae6:	0e f4       	brtc	.+2      	; 0x1aea <__addsf3+0x28>
    1ae8:	e0 95       	com	r30
    1aea:	e7 fb       	bst	r30, 7
    1aec:	0c 94 db 0e 	jmp	0x1db6	; 0x1db6 <__fp_inf>

00001af0 <__addsf3x>:
    1af0:	e9 2f       	mov	r30, r25
    1af2:	0e 94 03 0f 	call	0x1e06	; 0x1e06 <__fp_split3>
    1af6:	58 f3       	brcs	.-42     	; 0x1ace <__addsf3+0xc>
    1af8:	ba 17       	cp	r27, r26
    1afa:	62 07       	cpc	r22, r18
    1afc:	73 07       	cpc	r23, r19
    1afe:	84 07       	cpc	r24, r20
    1b00:	95 07       	cpc	r25, r21
    1b02:	20 f0       	brcs	.+8      	; 0x1b0c <__addsf3x+0x1c>
    1b04:	79 f4       	brne	.+30     	; 0x1b24 <__addsf3x+0x34>
    1b06:	a6 f5       	brtc	.+104    	; 0x1b70 <__addsf3x+0x80>
    1b08:	0c 94 25 0f 	jmp	0x1e4a	; 0x1e4a <__fp_zero>
    1b0c:	0e f4       	brtc	.+2      	; 0x1b10 <__addsf3x+0x20>
    1b0e:	e0 95       	com	r30
    1b10:	0b 2e       	mov	r0, r27
    1b12:	ba 2f       	mov	r27, r26
    1b14:	a0 2d       	mov	r26, r0
    1b16:	0b 01       	movw	r0, r22
    1b18:	b9 01       	movw	r22, r18
    1b1a:	90 01       	movw	r18, r0
    1b1c:	0c 01       	movw	r0, r24
    1b1e:	ca 01       	movw	r24, r20
    1b20:	a0 01       	movw	r20, r0
    1b22:	11 24       	eor	r1, r1
    1b24:	ff 27       	eor	r31, r31
    1b26:	59 1b       	sub	r21, r25
    1b28:	99 f0       	breq	.+38     	; 0x1b50 <__addsf3x+0x60>
    1b2a:	59 3f       	cpi	r21, 0xF9	; 249
    1b2c:	50 f4       	brcc	.+20     	; 0x1b42 <__addsf3x+0x52>
    1b2e:	50 3e       	cpi	r21, 0xE0	; 224
    1b30:	68 f1       	brcs	.+90     	; 0x1b8c <__addsf3x+0x9c>
    1b32:	1a 16       	cp	r1, r26
    1b34:	f0 40       	sbci	r31, 0x00	; 0
    1b36:	a2 2f       	mov	r26, r18
    1b38:	23 2f       	mov	r18, r19
    1b3a:	34 2f       	mov	r19, r20
    1b3c:	44 27       	eor	r20, r20
    1b3e:	58 5f       	subi	r21, 0xF8	; 248
    1b40:	f3 cf       	rjmp	.-26     	; 0x1b28 <__addsf3x+0x38>
    1b42:	46 95       	lsr	r20
    1b44:	37 95       	ror	r19
    1b46:	27 95       	ror	r18
    1b48:	a7 95       	ror	r26
    1b4a:	f0 40       	sbci	r31, 0x00	; 0
    1b4c:	53 95       	inc	r21
    1b4e:	c9 f7       	brne	.-14     	; 0x1b42 <__addsf3x+0x52>
    1b50:	7e f4       	brtc	.+30     	; 0x1b70 <__addsf3x+0x80>
    1b52:	1f 16       	cp	r1, r31
    1b54:	ba 0b       	sbc	r27, r26
    1b56:	62 0b       	sbc	r22, r18
    1b58:	73 0b       	sbc	r23, r19
    1b5a:	84 0b       	sbc	r24, r20
    1b5c:	ba f0       	brmi	.+46     	; 0x1b8c <__addsf3x+0x9c>
    1b5e:	91 50       	subi	r25, 0x01	; 1
    1b60:	a1 f0       	breq	.+40     	; 0x1b8a <__addsf3x+0x9a>
    1b62:	ff 0f       	add	r31, r31
    1b64:	bb 1f       	adc	r27, r27
    1b66:	66 1f       	adc	r22, r22
    1b68:	77 1f       	adc	r23, r23
    1b6a:	88 1f       	adc	r24, r24
    1b6c:	c2 f7       	brpl	.-16     	; 0x1b5e <__addsf3x+0x6e>
    1b6e:	0e c0       	rjmp	.+28     	; 0x1b8c <__addsf3x+0x9c>
    1b70:	ba 0f       	add	r27, r26
    1b72:	62 1f       	adc	r22, r18
    1b74:	73 1f       	adc	r23, r19
    1b76:	84 1f       	adc	r24, r20
    1b78:	48 f4       	brcc	.+18     	; 0x1b8c <__addsf3x+0x9c>
    1b7a:	87 95       	ror	r24
    1b7c:	77 95       	ror	r23
    1b7e:	67 95       	ror	r22
    1b80:	b7 95       	ror	r27
    1b82:	f7 95       	ror	r31
    1b84:	9e 3f       	cpi	r25, 0xFE	; 254
    1b86:	08 f0       	brcs	.+2      	; 0x1b8a <__addsf3x+0x9a>
    1b88:	b0 cf       	rjmp	.-160    	; 0x1aea <__addsf3+0x28>
    1b8a:	93 95       	inc	r25
    1b8c:	88 0f       	add	r24, r24
    1b8e:	08 f0       	brcs	.+2      	; 0x1b92 <__addsf3x+0xa2>
    1b90:	99 27       	eor	r25, r25
    1b92:	ee 0f       	add	r30, r30
    1b94:	97 95       	ror	r25
    1b96:	87 95       	ror	r24
    1b98:	08 95       	ret

00001b9a <__cmpsf2>:
    1b9a:	0e 94 b7 0e 	call	0x1d6e	; 0x1d6e <__fp_cmp>
    1b9e:	08 f4       	brcc	.+2      	; 0x1ba2 <__cmpsf2+0x8>
    1ba0:	81 e0       	ldi	r24, 0x01	; 1
    1ba2:	08 95       	ret

00001ba4 <__divsf3>:
    1ba4:	0e 94 e6 0d 	call	0x1bcc	; 0x1bcc <__divsf3x>
    1ba8:	0c 94 f2 0e 	jmp	0x1de4	; 0x1de4 <__fp_round>
    1bac:	0e 94 eb 0e 	call	0x1dd6	; 0x1dd6 <__fp_pscB>
    1bb0:	58 f0       	brcs	.+22     	; 0x1bc8 <__divsf3+0x24>
    1bb2:	0e 94 e4 0e 	call	0x1dc8	; 0x1dc8 <__fp_pscA>
    1bb6:	40 f0       	brcs	.+16     	; 0x1bc8 <__divsf3+0x24>
    1bb8:	29 f4       	brne	.+10     	; 0x1bc4 <__divsf3+0x20>
    1bba:	5f 3f       	cpi	r21, 0xFF	; 255
    1bbc:	29 f0       	breq	.+10     	; 0x1bc8 <__divsf3+0x24>
    1bbe:	0c 94 db 0e 	jmp	0x1db6	; 0x1db6 <__fp_inf>
    1bc2:	51 11       	cpse	r21, r1
    1bc4:	0c 94 26 0f 	jmp	0x1e4c	; 0x1e4c <__fp_szero>
    1bc8:	0c 94 e1 0e 	jmp	0x1dc2	; 0x1dc2 <__fp_nan>

00001bcc <__divsf3x>:
    1bcc:	0e 94 03 0f 	call	0x1e06	; 0x1e06 <__fp_split3>
    1bd0:	68 f3       	brcs	.-38     	; 0x1bac <__divsf3+0x8>

00001bd2 <__divsf3_pse>:
    1bd2:	99 23       	and	r25, r25
    1bd4:	b1 f3       	breq	.-20     	; 0x1bc2 <__divsf3+0x1e>
    1bd6:	55 23       	and	r21, r21
    1bd8:	91 f3       	breq	.-28     	; 0x1bbe <__divsf3+0x1a>
    1bda:	95 1b       	sub	r25, r21
    1bdc:	55 0b       	sbc	r21, r21
    1bde:	bb 27       	eor	r27, r27
    1be0:	aa 27       	eor	r26, r26
    1be2:	62 17       	cp	r22, r18
    1be4:	73 07       	cpc	r23, r19
    1be6:	84 07       	cpc	r24, r20
    1be8:	38 f0       	brcs	.+14     	; 0x1bf8 <__divsf3_pse+0x26>
    1bea:	9f 5f       	subi	r25, 0xFF	; 255
    1bec:	5f 4f       	sbci	r21, 0xFF	; 255
    1bee:	22 0f       	add	r18, r18
    1bf0:	33 1f       	adc	r19, r19
    1bf2:	44 1f       	adc	r20, r20
    1bf4:	aa 1f       	adc	r26, r26
    1bf6:	a9 f3       	breq	.-22     	; 0x1be2 <__divsf3_pse+0x10>
    1bf8:	35 d0       	rcall	.+106    	; 0x1c64 <__divsf3_pse+0x92>
    1bfa:	0e 2e       	mov	r0, r30
    1bfc:	3a f0       	brmi	.+14     	; 0x1c0c <__divsf3_pse+0x3a>
    1bfe:	e0 e8       	ldi	r30, 0x80	; 128
    1c00:	32 d0       	rcall	.+100    	; 0x1c66 <__divsf3_pse+0x94>
    1c02:	91 50       	subi	r25, 0x01	; 1
    1c04:	50 40       	sbci	r21, 0x00	; 0
    1c06:	e6 95       	lsr	r30
    1c08:	00 1c       	adc	r0, r0
    1c0a:	ca f7       	brpl	.-14     	; 0x1bfe <__divsf3_pse+0x2c>
    1c0c:	2b d0       	rcall	.+86     	; 0x1c64 <__divsf3_pse+0x92>
    1c0e:	fe 2f       	mov	r31, r30
    1c10:	29 d0       	rcall	.+82     	; 0x1c64 <__divsf3_pse+0x92>
    1c12:	66 0f       	add	r22, r22
    1c14:	77 1f       	adc	r23, r23
    1c16:	88 1f       	adc	r24, r24
    1c18:	bb 1f       	adc	r27, r27
    1c1a:	26 17       	cp	r18, r22
    1c1c:	37 07       	cpc	r19, r23
    1c1e:	48 07       	cpc	r20, r24
    1c20:	ab 07       	cpc	r26, r27
    1c22:	b0 e8       	ldi	r27, 0x80	; 128
    1c24:	09 f0       	breq	.+2      	; 0x1c28 <__divsf3_pse+0x56>
    1c26:	bb 0b       	sbc	r27, r27
    1c28:	80 2d       	mov	r24, r0
    1c2a:	bf 01       	movw	r22, r30
    1c2c:	ff 27       	eor	r31, r31
    1c2e:	93 58       	subi	r25, 0x83	; 131
    1c30:	5f 4f       	sbci	r21, 0xFF	; 255
    1c32:	3a f0       	brmi	.+14     	; 0x1c42 <__divsf3_pse+0x70>
    1c34:	9e 3f       	cpi	r25, 0xFE	; 254
    1c36:	51 05       	cpc	r21, r1
    1c38:	78 f0       	brcs	.+30     	; 0x1c58 <__divsf3_pse+0x86>
    1c3a:	0c 94 db 0e 	jmp	0x1db6	; 0x1db6 <__fp_inf>
    1c3e:	0c 94 26 0f 	jmp	0x1e4c	; 0x1e4c <__fp_szero>
    1c42:	5f 3f       	cpi	r21, 0xFF	; 255
    1c44:	e4 f3       	brlt	.-8      	; 0x1c3e <__divsf3_pse+0x6c>
    1c46:	98 3e       	cpi	r25, 0xE8	; 232
    1c48:	d4 f3       	brlt	.-12     	; 0x1c3e <__divsf3_pse+0x6c>
    1c4a:	86 95       	lsr	r24
    1c4c:	77 95       	ror	r23
    1c4e:	67 95       	ror	r22
    1c50:	b7 95       	ror	r27
    1c52:	f7 95       	ror	r31
    1c54:	9f 5f       	subi	r25, 0xFF	; 255
    1c56:	c9 f7       	brne	.-14     	; 0x1c4a <__divsf3_pse+0x78>
    1c58:	88 0f       	add	r24, r24
    1c5a:	91 1d       	adc	r25, r1
    1c5c:	96 95       	lsr	r25
    1c5e:	87 95       	ror	r24
    1c60:	97 f9       	bld	r25, 7
    1c62:	08 95       	ret
    1c64:	e1 e0       	ldi	r30, 0x01	; 1
    1c66:	66 0f       	add	r22, r22
    1c68:	77 1f       	adc	r23, r23
    1c6a:	88 1f       	adc	r24, r24
    1c6c:	bb 1f       	adc	r27, r27
    1c6e:	62 17       	cp	r22, r18
    1c70:	73 07       	cpc	r23, r19
    1c72:	84 07       	cpc	r24, r20
    1c74:	ba 07       	cpc	r27, r26
    1c76:	20 f0       	brcs	.+8      	; 0x1c80 <__divsf3_pse+0xae>
    1c78:	62 1b       	sub	r22, r18
    1c7a:	73 0b       	sbc	r23, r19
    1c7c:	84 0b       	sbc	r24, r20
    1c7e:	ba 0b       	sbc	r27, r26
    1c80:	ee 1f       	adc	r30, r30
    1c82:	88 f7       	brcc	.-30     	; 0x1c66 <__divsf3_pse+0x94>
    1c84:	e0 95       	com	r30
    1c86:	08 95       	ret

00001c88 <__fixsfsi>:
    1c88:	0e 94 4b 0e 	call	0x1c96	; 0x1c96 <__fixunssfsi>
    1c8c:	68 94       	set
    1c8e:	b1 11       	cpse	r27, r1
    1c90:	0c 94 26 0f 	jmp	0x1e4c	; 0x1e4c <__fp_szero>
    1c94:	08 95       	ret

00001c96 <__fixunssfsi>:
    1c96:	0e 94 0b 0f 	call	0x1e16	; 0x1e16 <__fp_splitA>
    1c9a:	88 f0       	brcs	.+34     	; 0x1cbe <__fixunssfsi+0x28>
    1c9c:	9f 57       	subi	r25, 0x7F	; 127
    1c9e:	98 f0       	brcs	.+38     	; 0x1cc6 <__fixunssfsi+0x30>
    1ca0:	b9 2f       	mov	r27, r25
    1ca2:	99 27       	eor	r25, r25
    1ca4:	b7 51       	subi	r27, 0x17	; 23
    1ca6:	b0 f0       	brcs	.+44     	; 0x1cd4 <__fixunssfsi+0x3e>
    1ca8:	e1 f0       	breq	.+56     	; 0x1ce2 <__fixunssfsi+0x4c>
    1caa:	66 0f       	add	r22, r22
    1cac:	77 1f       	adc	r23, r23
    1cae:	88 1f       	adc	r24, r24
    1cb0:	99 1f       	adc	r25, r25
    1cb2:	1a f0       	brmi	.+6      	; 0x1cba <__fixunssfsi+0x24>
    1cb4:	ba 95       	dec	r27
    1cb6:	c9 f7       	brne	.-14     	; 0x1caa <__fixunssfsi+0x14>
    1cb8:	14 c0       	rjmp	.+40     	; 0x1ce2 <__fixunssfsi+0x4c>
    1cba:	b1 30       	cpi	r27, 0x01	; 1
    1cbc:	91 f0       	breq	.+36     	; 0x1ce2 <__fixunssfsi+0x4c>
    1cbe:	0e 94 25 0f 	call	0x1e4a	; 0x1e4a <__fp_zero>
    1cc2:	b1 e0       	ldi	r27, 0x01	; 1
    1cc4:	08 95       	ret
    1cc6:	0c 94 25 0f 	jmp	0x1e4a	; 0x1e4a <__fp_zero>
    1cca:	67 2f       	mov	r22, r23
    1ccc:	78 2f       	mov	r23, r24
    1cce:	88 27       	eor	r24, r24
    1cd0:	b8 5f       	subi	r27, 0xF8	; 248
    1cd2:	39 f0       	breq	.+14     	; 0x1ce2 <__fixunssfsi+0x4c>
    1cd4:	b9 3f       	cpi	r27, 0xF9	; 249
    1cd6:	cc f3       	brlt	.-14     	; 0x1cca <__fixunssfsi+0x34>
    1cd8:	86 95       	lsr	r24
    1cda:	77 95       	ror	r23
    1cdc:	67 95       	ror	r22
    1cde:	b3 95       	inc	r27
    1ce0:	d9 f7       	brne	.-10     	; 0x1cd8 <__fixunssfsi+0x42>
    1ce2:	3e f4       	brtc	.+14     	; 0x1cf2 <__fixunssfsi+0x5c>
    1ce4:	90 95       	com	r25
    1ce6:	80 95       	com	r24
    1ce8:	70 95       	com	r23
    1cea:	61 95       	neg	r22
    1cec:	7f 4f       	sbci	r23, 0xFF	; 255
    1cee:	8f 4f       	sbci	r24, 0xFF	; 255
    1cf0:	9f 4f       	sbci	r25, 0xFF	; 255
    1cf2:	08 95       	ret

00001cf4 <__floatunsisf>:
    1cf4:	e8 94       	clt
    1cf6:	09 c0       	rjmp	.+18     	; 0x1d0a <__floatsisf+0x12>

00001cf8 <__floatsisf>:
    1cf8:	97 fb       	bst	r25, 7
    1cfa:	3e f4       	brtc	.+14     	; 0x1d0a <__floatsisf+0x12>
    1cfc:	90 95       	com	r25
    1cfe:	80 95       	com	r24
    1d00:	70 95       	com	r23
    1d02:	61 95       	neg	r22
    1d04:	7f 4f       	sbci	r23, 0xFF	; 255
    1d06:	8f 4f       	sbci	r24, 0xFF	; 255
    1d08:	9f 4f       	sbci	r25, 0xFF	; 255
    1d0a:	99 23       	and	r25, r25
    1d0c:	a9 f0       	breq	.+42     	; 0x1d38 <__floatsisf+0x40>
    1d0e:	f9 2f       	mov	r31, r25
    1d10:	96 e9       	ldi	r25, 0x96	; 150
    1d12:	bb 27       	eor	r27, r27
    1d14:	93 95       	inc	r25
    1d16:	f6 95       	lsr	r31
    1d18:	87 95       	ror	r24
    1d1a:	77 95       	ror	r23
    1d1c:	67 95       	ror	r22
    1d1e:	b7 95       	ror	r27
    1d20:	f1 11       	cpse	r31, r1
    1d22:	f8 cf       	rjmp	.-16     	; 0x1d14 <__floatsisf+0x1c>
    1d24:	fa f4       	brpl	.+62     	; 0x1d64 <__floatsisf+0x6c>
    1d26:	bb 0f       	add	r27, r27
    1d28:	11 f4       	brne	.+4      	; 0x1d2e <__floatsisf+0x36>
    1d2a:	60 ff       	sbrs	r22, 0
    1d2c:	1b c0       	rjmp	.+54     	; 0x1d64 <__floatsisf+0x6c>
    1d2e:	6f 5f       	subi	r22, 0xFF	; 255
    1d30:	7f 4f       	sbci	r23, 0xFF	; 255
    1d32:	8f 4f       	sbci	r24, 0xFF	; 255
    1d34:	9f 4f       	sbci	r25, 0xFF	; 255
    1d36:	16 c0       	rjmp	.+44     	; 0x1d64 <__floatsisf+0x6c>
    1d38:	88 23       	and	r24, r24
    1d3a:	11 f0       	breq	.+4      	; 0x1d40 <__floatsisf+0x48>
    1d3c:	96 e9       	ldi	r25, 0x96	; 150
    1d3e:	11 c0       	rjmp	.+34     	; 0x1d62 <__floatsisf+0x6a>
    1d40:	77 23       	and	r23, r23
    1d42:	21 f0       	breq	.+8      	; 0x1d4c <__floatsisf+0x54>
    1d44:	9e e8       	ldi	r25, 0x8E	; 142
    1d46:	87 2f       	mov	r24, r23
    1d48:	76 2f       	mov	r23, r22
    1d4a:	05 c0       	rjmp	.+10     	; 0x1d56 <__floatsisf+0x5e>
    1d4c:	66 23       	and	r22, r22
    1d4e:	71 f0       	breq	.+28     	; 0x1d6c <__floatsisf+0x74>
    1d50:	96 e8       	ldi	r25, 0x86	; 134
    1d52:	86 2f       	mov	r24, r22
    1d54:	70 e0       	ldi	r23, 0x00	; 0
    1d56:	60 e0       	ldi	r22, 0x00	; 0
    1d58:	2a f0       	brmi	.+10     	; 0x1d64 <__floatsisf+0x6c>
    1d5a:	9a 95       	dec	r25
    1d5c:	66 0f       	add	r22, r22
    1d5e:	77 1f       	adc	r23, r23
    1d60:	88 1f       	adc	r24, r24
    1d62:	da f7       	brpl	.-10     	; 0x1d5a <__floatsisf+0x62>
    1d64:	88 0f       	add	r24, r24
    1d66:	96 95       	lsr	r25
    1d68:	87 95       	ror	r24
    1d6a:	97 f9       	bld	r25, 7
    1d6c:	08 95       	ret

00001d6e <__fp_cmp>:
    1d6e:	99 0f       	add	r25, r25
    1d70:	00 08       	sbc	r0, r0
    1d72:	55 0f       	add	r21, r21
    1d74:	aa 0b       	sbc	r26, r26
    1d76:	e0 e8       	ldi	r30, 0x80	; 128
    1d78:	fe ef       	ldi	r31, 0xFE	; 254
    1d7a:	16 16       	cp	r1, r22
    1d7c:	17 06       	cpc	r1, r23
    1d7e:	e8 07       	cpc	r30, r24
    1d80:	f9 07       	cpc	r31, r25
    1d82:	c0 f0       	brcs	.+48     	; 0x1db4 <__fp_cmp+0x46>
    1d84:	12 16       	cp	r1, r18
    1d86:	13 06       	cpc	r1, r19
    1d88:	e4 07       	cpc	r30, r20
    1d8a:	f5 07       	cpc	r31, r21
    1d8c:	98 f0       	brcs	.+38     	; 0x1db4 <__fp_cmp+0x46>
    1d8e:	62 1b       	sub	r22, r18
    1d90:	73 0b       	sbc	r23, r19
    1d92:	84 0b       	sbc	r24, r20
    1d94:	95 0b       	sbc	r25, r21
    1d96:	39 f4       	brne	.+14     	; 0x1da6 <__fp_cmp+0x38>
    1d98:	0a 26       	eor	r0, r26
    1d9a:	61 f0       	breq	.+24     	; 0x1db4 <__fp_cmp+0x46>
    1d9c:	23 2b       	or	r18, r19
    1d9e:	24 2b       	or	r18, r20
    1da0:	25 2b       	or	r18, r21
    1da2:	21 f4       	brne	.+8      	; 0x1dac <__fp_cmp+0x3e>
    1da4:	08 95       	ret
    1da6:	0a 26       	eor	r0, r26
    1da8:	09 f4       	brne	.+2      	; 0x1dac <__fp_cmp+0x3e>
    1daa:	a1 40       	sbci	r26, 0x01	; 1
    1dac:	a6 95       	lsr	r26
    1dae:	8f ef       	ldi	r24, 0xFF	; 255
    1db0:	81 1d       	adc	r24, r1
    1db2:	81 1d       	adc	r24, r1
    1db4:	08 95       	ret

00001db6 <__fp_inf>:
    1db6:	97 f9       	bld	r25, 7
    1db8:	9f 67       	ori	r25, 0x7F	; 127
    1dba:	80 e8       	ldi	r24, 0x80	; 128
    1dbc:	70 e0       	ldi	r23, 0x00	; 0
    1dbe:	60 e0       	ldi	r22, 0x00	; 0
    1dc0:	08 95       	ret

00001dc2 <__fp_nan>:
    1dc2:	9f ef       	ldi	r25, 0xFF	; 255
    1dc4:	80 ec       	ldi	r24, 0xC0	; 192
    1dc6:	08 95       	ret

00001dc8 <__fp_pscA>:
    1dc8:	00 24       	eor	r0, r0
    1dca:	0a 94       	dec	r0
    1dcc:	16 16       	cp	r1, r22
    1dce:	17 06       	cpc	r1, r23
    1dd0:	18 06       	cpc	r1, r24
    1dd2:	09 06       	cpc	r0, r25
    1dd4:	08 95       	ret

00001dd6 <__fp_pscB>:
    1dd6:	00 24       	eor	r0, r0
    1dd8:	0a 94       	dec	r0
    1dda:	12 16       	cp	r1, r18
    1ddc:	13 06       	cpc	r1, r19
    1dde:	14 06       	cpc	r1, r20
    1de0:	05 06       	cpc	r0, r21
    1de2:	08 95       	ret

00001de4 <__fp_round>:
    1de4:	09 2e       	mov	r0, r25
    1de6:	03 94       	inc	r0
    1de8:	00 0c       	add	r0, r0
    1dea:	11 f4       	brne	.+4      	; 0x1df0 <__fp_round+0xc>
    1dec:	88 23       	and	r24, r24
    1dee:	52 f0       	brmi	.+20     	; 0x1e04 <__fp_round+0x20>
    1df0:	bb 0f       	add	r27, r27
    1df2:	40 f4       	brcc	.+16     	; 0x1e04 <__fp_round+0x20>
    1df4:	bf 2b       	or	r27, r31
    1df6:	11 f4       	brne	.+4      	; 0x1dfc <__fp_round+0x18>
    1df8:	60 ff       	sbrs	r22, 0
    1dfa:	04 c0       	rjmp	.+8      	; 0x1e04 <__fp_round+0x20>
    1dfc:	6f 5f       	subi	r22, 0xFF	; 255
    1dfe:	7f 4f       	sbci	r23, 0xFF	; 255
    1e00:	8f 4f       	sbci	r24, 0xFF	; 255
    1e02:	9f 4f       	sbci	r25, 0xFF	; 255
    1e04:	08 95       	ret

00001e06 <__fp_split3>:
    1e06:	57 fd       	sbrc	r21, 7
    1e08:	90 58       	subi	r25, 0x80	; 128
    1e0a:	44 0f       	add	r20, r20
    1e0c:	55 1f       	adc	r21, r21
    1e0e:	59 f0       	breq	.+22     	; 0x1e26 <__fp_splitA+0x10>
    1e10:	5f 3f       	cpi	r21, 0xFF	; 255
    1e12:	71 f0       	breq	.+28     	; 0x1e30 <__fp_splitA+0x1a>
    1e14:	47 95       	ror	r20

00001e16 <__fp_splitA>:
    1e16:	88 0f       	add	r24, r24
    1e18:	97 fb       	bst	r25, 7
    1e1a:	99 1f       	adc	r25, r25
    1e1c:	61 f0       	breq	.+24     	; 0x1e36 <__fp_splitA+0x20>
    1e1e:	9f 3f       	cpi	r25, 0xFF	; 255
    1e20:	79 f0       	breq	.+30     	; 0x1e40 <__fp_splitA+0x2a>
    1e22:	87 95       	ror	r24
    1e24:	08 95       	ret
    1e26:	12 16       	cp	r1, r18
    1e28:	13 06       	cpc	r1, r19
    1e2a:	14 06       	cpc	r1, r20
    1e2c:	55 1f       	adc	r21, r21
    1e2e:	f2 cf       	rjmp	.-28     	; 0x1e14 <__fp_split3+0xe>
    1e30:	46 95       	lsr	r20
    1e32:	f1 df       	rcall	.-30     	; 0x1e16 <__fp_splitA>
    1e34:	08 c0       	rjmp	.+16     	; 0x1e46 <__fp_splitA+0x30>
    1e36:	16 16       	cp	r1, r22
    1e38:	17 06       	cpc	r1, r23
    1e3a:	18 06       	cpc	r1, r24
    1e3c:	99 1f       	adc	r25, r25
    1e3e:	f1 cf       	rjmp	.-30     	; 0x1e22 <__fp_splitA+0xc>
    1e40:	86 95       	lsr	r24
    1e42:	71 05       	cpc	r23, r1
    1e44:	61 05       	cpc	r22, r1
    1e46:	08 94       	sec
    1e48:	08 95       	ret

00001e4a <__fp_zero>:
    1e4a:	e8 94       	clt

00001e4c <__fp_szero>:
    1e4c:	bb 27       	eor	r27, r27
    1e4e:	66 27       	eor	r22, r22
    1e50:	77 27       	eor	r23, r23
    1e52:	cb 01       	movw	r24, r22
    1e54:	97 f9       	bld	r25, 7
    1e56:	08 95       	ret

00001e58 <__gesf2>:
    1e58:	0e 94 b7 0e 	call	0x1d6e	; 0x1d6e <__fp_cmp>
    1e5c:	08 f4       	brcc	.+2      	; 0x1e60 <__gesf2+0x8>
    1e5e:	8f ef       	ldi	r24, 0xFF	; 255
    1e60:	08 95       	ret

00001e62 <__mulsf3>:
    1e62:	0e 94 44 0f 	call	0x1e88	; 0x1e88 <__mulsf3x>
    1e66:	0c 94 f2 0e 	jmp	0x1de4	; 0x1de4 <__fp_round>
    1e6a:	0e 94 e4 0e 	call	0x1dc8	; 0x1dc8 <__fp_pscA>
    1e6e:	38 f0       	brcs	.+14     	; 0x1e7e <__mulsf3+0x1c>
    1e70:	0e 94 eb 0e 	call	0x1dd6	; 0x1dd6 <__fp_pscB>
    1e74:	20 f0       	brcs	.+8      	; 0x1e7e <__mulsf3+0x1c>
    1e76:	95 23       	and	r25, r21
    1e78:	11 f0       	breq	.+4      	; 0x1e7e <__mulsf3+0x1c>
    1e7a:	0c 94 db 0e 	jmp	0x1db6	; 0x1db6 <__fp_inf>
    1e7e:	0c 94 e1 0e 	jmp	0x1dc2	; 0x1dc2 <__fp_nan>
    1e82:	11 24       	eor	r1, r1
    1e84:	0c 94 26 0f 	jmp	0x1e4c	; 0x1e4c <__fp_szero>

00001e88 <__mulsf3x>:
    1e88:	0e 94 03 0f 	call	0x1e06	; 0x1e06 <__fp_split3>
    1e8c:	70 f3       	brcs	.-36     	; 0x1e6a <__mulsf3+0x8>

00001e8e <__mulsf3_pse>:
    1e8e:	95 9f       	mul	r25, r21
    1e90:	c1 f3       	breq	.-16     	; 0x1e82 <__mulsf3+0x20>
    1e92:	95 0f       	add	r25, r21
    1e94:	50 e0       	ldi	r21, 0x00	; 0
    1e96:	55 1f       	adc	r21, r21
    1e98:	62 9f       	mul	r22, r18
    1e9a:	f0 01       	movw	r30, r0
    1e9c:	72 9f       	mul	r23, r18
    1e9e:	bb 27       	eor	r27, r27
    1ea0:	f0 0d       	add	r31, r0
    1ea2:	b1 1d       	adc	r27, r1
    1ea4:	63 9f       	mul	r22, r19
    1ea6:	aa 27       	eor	r26, r26
    1ea8:	f0 0d       	add	r31, r0
    1eaa:	b1 1d       	adc	r27, r1
    1eac:	aa 1f       	adc	r26, r26
    1eae:	64 9f       	mul	r22, r20
    1eb0:	66 27       	eor	r22, r22
    1eb2:	b0 0d       	add	r27, r0
    1eb4:	a1 1d       	adc	r26, r1
    1eb6:	66 1f       	adc	r22, r22
    1eb8:	82 9f       	mul	r24, r18
    1eba:	22 27       	eor	r18, r18
    1ebc:	b0 0d       	add	r27, r0
    1ebe:	a1 1d       	adc	r26, r1
    1ec0:	62 1f       	adc	r22, r18
    1ec2:	73 9f       	mul	r23, r19
    1ec4:	b0 0d       	add	r27, r0
    1ec6:	a1 1d       	adc	r26, r1
    1ec8:	62 1f       	adc	r22, r18
    1eca:	83 9f       	mul	r24, r19
    1ecc:	a0 0d       	add	r26, r0
    1ece:	61 1d       	adc	r22, r1
    1ed0:	22 1f       	adc	r18, r18
    1ed2:	74 9f       	mul	r23, r20
    1ed4:	33 27       	eor	r19, r19
    1ed6:	a0 0d       	add	r26, r0
    1ed8:	61 1d       	adc	r22, r1
    1eda:	23 1f       	adc	r18, r19
    1edc:	84 9f       	mul	r24, r20
    1ede:	60 0d       	add	r22, r0
    1ee0:	21 1d       	adc	r18, r1
    1ee2:	82 2f       	mov	r24, r18
    1ee4:	76 2f       	mov	r23, r22
    1ee6:	6a 2f       	mov	r22, r26
    1ee8:	11 24       	eor	r1, r1
    1eea:	9f 57       	subi	r25, 0x7F	; 127
    1eec:	50 40       	sbci	r21, 0x00	; 0
    1eee:	9a f0       	brmi	.+38     	; 0x1f16 <__mulsf3_pse+0x88>
    1ef0:	f1 f0       	breq	.+60     	; 0x1f2e <__mulsf3_pse+0xa0>
    1ef2:	88 23       	and	r24, r24
    1ef4:	4a f0       	brmi	.+18     	; 0x1f08 <__mulsf3_pse+0x7a>
    1ef6:	ee 0f       	add	r30, r30
    1ef8:	ff 1f       	adc	r31, r31
    1efa:	bb 1f       	adc	r27, r27
    1efc:	66 1f       	adc	r22, r22
    1efe:	77 1f       	adc	r23, r23
    1f00:	88 1f       	adc	r24, r24
    1f02:	91 50       	subi	r25, 0x01	; 1
    1f04:	50 40       	sbci	r21, 0x00	; 0
    1f06:	a9 f7       	brne	.-22     	; 0x1ef2 <__mulsf3_pse+0x64>
    1f08:	9e 3f       	cpi	r25, 0xFE	; 254
    1f0a:	51 05       	cpc	r21, r1
    1f0c:	80 f0       	brcs	.+32     	; 0x1f2e <__mulsf3_pse+0xa0>
    1f0e:	0c 94 db 0e 	jmp	0x1db6	; 0x1db6 <__fp_inf>
    1f12:	0c 94 26 0f 	jmp	0x1e4c	; 0x1e4c <__fp_szero>
    1f16:	5f 3f       	cpi	r21, 0xFF	; 255
    1f18:	e4 f3       	brlt	.-8      	; 0x1f12 <__mulsf3_pse+0x84>
    1f1a:	98 3e       	cpi	r25, 0xE8	; 232
    1f1c:	d4 f3       	brlt	.-12     	; 0x1f12 <__mulsf3_pse+0x84>
    1f1e:	86 95       	lsr	r24
    1f20:	77 95       	ror	r23
    1f22:	67 95       	ror	r22
    1f24:	b7 95       	ror	r27
    1f26:	f7 95       	ror	r31
    1f28:	e7 95       	ror	r30
    1f2a:	9f 5f       	subi	r25, 0xFF	; 255
    1f2c:	c1 f7       	brne	.-16     	; 0x1f1e <__mulsf3_pse+0x90>
    1f2e:	fe 2b       	or	r31, r30
    1f30:	88 0f       	add	r24, r24
    1f32:	91 1d       	adc	r25, r1
    1f34:	96 95       	lsr	r25
    1f36:	87 95       	ror	r24
    1f38:	97 f9       	bld	r25, 7
    1f3a:	08 95       	ret

00001f3c <vfprintf>:
    1f3c:	a0 e1       	ldi	r26, 0x10	; 16
    1f3e:	b0 e0       	ldi	r27, 0x00	; 0
    1f40:	e4 ea       	ldi	r30, 0xA4	; 164
    1f42:	ff e0       	ldi	r31, 0x0F	; 15
    1f44:	0c 94 4e 13 	jmp	0x269c	; 0x269c <__prologue_saves__>
    1f48:	7c 01       	movw	r14, r24
    1f4a:	1b 01       	movw	r2, r22
    1f4c:	6a 01       	movw	r12, r20
    1f4e:	fc 01       	movw	r30, r24
    1f50:	17 82       	std	Z+7, r1	; 0x07
    1f52:	16 82       	std	Z+6, r1	; 0x06
    1f54:	83 81       	ldd	r24, Z+3	; 0x03
    1f56:	81 ff       	sbrs	r24, 1
    1f58:	44 c3       	rjmp	.+1672   	; 0x25e2 <vfprintf+0x6a6>
    1f5a:	9e 01       	movw	r18, r28
    1f5c:	2f 5f       	subi	r18, 0xFF	; 255
    1f5e:	3f 4f       	sbci	r19, 0xFF	; 255
    1f60:	39 01       	movw	r6, r18
    1f62:	f7 01       	movw	r30, r14
    1f64:	93 81       	ldd	r25, Z+3	; 0x03
    1f66:	f1 01       	movw	r30, r2
    1f68:	93 fd       	sbrc	r25, 3
    1f6a:	85 91       	lpm	r24, Z+
    1f6c:	93 ff       	sbrs	r25, 3
    1f6e:	81 91       	ld	r24, Z+
    1f70:	1f 01       	movw	r2, r30
    1f72:	88 23       	and	r24, r24
    1f74:	09 f4       	brne	.+2      	; 0x1f78 <vfprintf+0x3c>
    1f76:	31 c3       	rjmp	.+1634   	; 0x25da <vfprintf+0x69e>
    1f78:	85 32       	cpi	r24, 0x25	; 37
    1f7a:	39 f4       	brne	.+14     	; 0x1f8a <vfprintf+0x4e>
    1f7c:	93 fd       	sbrc	r25, 3
    1f7e:	85 91       	lpm	r24, Z+
    1f80:	93 ff       	sbrs	r25, 3
    1f82:	81 91       	ld	r24, Z+
    1f84:	1f 01       	movw	r2, r30
    1f86:	85 32       	cpi	r24, 0x25	; 37
    1f88:	39 f4       	brne	.+14     	; 0x1f98 <vfprintf+0x5c>
    1f8a:	b7 01       	movw	r22, r14
    1f8c:	90 e0       	ldi	r25, 0x00	; 0
    1f8e:	0e 94 95 15 	call	0x2b2a	; 0x2b2a <fputc>
    1f92:	56 01       	movw	r10, r12
    1f94:	65 01       	movw	r12, r10
    1f96:	e5 cf       	rjmp	.-54     	; 0x1f62 <vfprintf+0x26>
    1f98:	10 e0       	ldi	r17, 0x00	; 0
    1f9a:	51 2c       	mov	r5, r1
    1f9c:	91 2c       	mov	r9, r1
    1f9e:	ff e1       	ldi	r31, 0x1F	; 31
    1fa0:	f9 15       	cp	r31, r9
    1fa2:	d8 f0       	brcs	.+54     	; 0x1fda <vfprintf+0x9e>
    1fa4:	8b 32       	cpi	r24, 0x2B	; 43
    1fa6:	79 f0       	breq	.+30     	; 0x1fc6 <vfprintf+0x8a>
    1fa8:	38 f4       	brcc	.+14     	; 0x1fb8 <vfprintf+0x7c>
    1faa:	80 32       	cpi	r24, 0x20	; 32
    1fac:	79 f0       	breq	.+30     	; 0x1fcc <vfprintf+0x90>
    1fae:	83 32       	cpi	r24, 0x23	; 35
    1fb0:	a1 f4       	brne	.+40     	; 0x1fda <vfprintf+0x9e>
    1fb2:	f9 2d       	mov	r31, r9
    1fb4:	f0 61       	ori	r31, 0x10	; 16
    1fb6:	2e c0       	rjmp	.+92     	; 0x2014 <vfprintf+0xd8>
    1fb8:	8d 32       	cpi	r24, 0x2D	; 45
    1fba:	61 f0       	breq	.+24     	; 0x1fd4 <vfprintf+0x98>
    1fbc:	80 33       	cpi	r24, 0x30	; 48
    1fbe:	69 f4       	brne	.+26     	; 0x1fda <vfprintf+0x9e>
    1fc0:	29 2d       	mov	r18, r9
    1fc2:	21 60       	ori	r18, 0x01	; 1
    1fc4:	2d c0       	rjmp	.+90     	; 0x2020 <vfprintf+0xe4>
    1fc6:	39 2d       	mov	r19, r9
    1fc8:	32 60       	ori	r19, 0x02	; 2
    1fca:	93 2e       	mov	r9, r19
    1fcc:	89 2d       	mov	r24, r9
    1fce:	84 60       	ori	r24, 0x04	; 4
    1fd0:	98 2e       	mov	r9, r24
    1fd2:	2a c0       	rjmp	.+84     	; 0x2028 <vfprintf+0xec>
    1fd4:	e9 2d       	mov	r30, r9
    1fd6:	e8 60       	ori	r30, 0x08	; 8
    1fd8:	15 c0       	rjmp	.+42     	; 0x2004 <vfprintf+0xc8>
    1fda:	97 fc       	sbrc	r9, 7
    1fdc:	2d c0       	rjmp	.+90     	; 0x2038 <vfprintf+0xfc>
    1fde:	20 ed       	ldi	r18, 0xD0	; 208
    1fe0:	28 0f       	add	r18, r24
    1fe2:	2a 30       	cpi	r18, 0x0A	; 10
    1fe4:	88 f4       	brcc	.+34     	; 0x2008 <vfprintf+0xcc>
    1fe6:	96 fe       	sbrs	r9, 6
    1fe8:	06 c0       	rjmp	.+12     	; 0x1ff6 <vfprintf+0xba>
    1fea:	3a e0       	ldi	r19, 0x0A	; 10
    1fec:	13 9f       	mul	r17, r19
    1fee:	20 0d       	add	r18, r0
    1ff0:	11 24       	eor	r1, r1
    1ff2:	12 2f       	mov	r17, r18
    1ff4:	19 c0       	rjmp	.+50     	; 0x2028 <vfprintf+0xec>
    1ff6:	8a e0       	ldi	r24, 0x0A	; 10
    1ff8:	58 9e       	mul	r5, r24
    1ffa:	20 0d       	add	r18, r0
    1ffc:	11 24       	eor	r1, r1
    1ffe:	52 2e       	mov	r5, r18
    2000:	e9 2d       	mov	r30, r9
    2002:	e0 62       	ori	r30, 0x20	; 32
    2004:	9e 2e       	mov	r9, r30
    2006:	10 c0       	rjmp	.+32     	; 0x2028 <vfprintf+0xec>
    2008:	8e 32       	cpi	r24, 0x2E	; 46
    200a:	31 f4       	brne	.+12     	; 0x2018 <vfprintf+0xdc>
    200c:	96 fc       	sbrc	r9, 6
    200e:	e5 c2       	rjmp	.+1482   	; 0x25da <vfprintf+0x69e>
    2010:	f9 2d       	mov	r31, r9
    2012:	f0 64       	ori	r31, 0x40	; 64
    2014:	9f 2e       	mov	r9, r31
    2016:	08 c0       	rjmp	.+16     	; 0x2028 <vfprintf+0xec>
    2018:	8c 36       	cpi	r24, 0x6C	; 108
    201a:	21 f4       	brne	.+8      	; 0x2024 <vfprintf+0xe8>
    201c:	29 2d       	mov	r18, r9
    201e:	20 68       	ori	r18, 0x80	; 128
    2020:	92 2e       	mov	r9, r18
    2022:	02 c0       	rjmp	.+4      	; 0x2028 <vfprintf+0xec>
    2024:	88 36       	cpi	r24, 0x68	; 104
    2026:	41 f4       	brne	.+16     	; 0x2038 <vfprintf+0xfc>
    2028:	f1 01       	movw	r30, r2
    202a:	93 fd       	sbrc	r25, 3
    202c:	85 91       	lpm	r24, Z+
    202e:	93 ff       	sbrs	r25, 3
    2030:	81 91       	ld	r24, Z+
    2032:	1f 01       	movw	r2, r30
    2034:	81 11       	cpse	r24, r1
    2036:	b3 cf       	rjmp	.-154    	; 0x1f9e <vfprintf+0x62>
    2038:	9b eb       	ldi	r25, 0xBB	; 187
    203a:	98 0f       	add	r25, r24
    203c:	93 30       	cpi	r25, 0x03	; 3
    203e:	20 f4       	brcc	.+8      	; 0x2048 <vfprintf+0x10c>
    2040:	99 2d       	mov	r25, r9
    2042:	90 61       	ori	r25, 0x10	; 16
    2044:	80 5e       	subi	r24, 0xE0	; 224
    2046:	07 c0       	rjmp	.+14     	; 0x2056 <vfprintf+0x11a>
    2048:	9b e9       	ldi	r25, 0x9B	; 155
    204a:	98 0f       	add	r25, r24
    204c:	93 30       	cpi	r25, 0x03	; 3
    204e:	08 f0       	brcs	.+2      	; 0x2052 <vfprintf+0x116>
    2050:	66 c1       	rjmp	.+716    	; 0x231e <vfprintf+0x3e2>
    2052:	99 2d       	mov	r25, r9
    2054:	9f 7e       	andi	r25, 0xEF	; 239
    2056:	96 ff       	sbrs	r25, 6
    2058:	16 e0       	ldi	r17, 0x06	; 6
    205a:	9f 73       	andi	r25, 0x3F	; 63
    205c:	99 2e       	mov	r9, r25
    205e:	85 36       	cpi	r24, 0x65	; 101
    2060:	19 f4       	brne	.+6      	; 0x2068 <vfprintf+0x12c>
    2062:	90 64       	ori	r25, 0x40	; 64
    2064:	99 2e       	mov	r9, r25
    2066:	08 c0       	rjmp	.+16     	; 0x2078 <vfprintf+0x13c>
    2068:	86 36       	cpi	r24, 0x66	; 102
    206a:	21 f4       	brne	.+8      	; 0x2074 <vfprintf+0x138>
    206c:	39 2f       	mov	r19, r25
    206e:	30 68       	ori	r19, 0x80	; 128
    2070:	93 2e       	mov	r9, r19
    2072:	02 c0       	rjmp	.+4      	; 0x2078 <vfprintf+0x13c>
    2074:	11 11       	cpse	r17, r1
    2076:	11 50       	subi	r17, 0x01	; 1
    2078:	97 fe       	sbrs	r9, 7
    207a:	07 c0       	rjmp	.+14     	; 0x208a <vfprintf+0x14e>
    207c:	1c 33       	cpi	r17, 0x3C	; 60
    207e:	50 f4       	brcc	.+20     	; 0x2094 <vfprintf+0x158>
    2080:	44 24       	eor	r4, r4
    2082:	43 94       	inc	r4
    2084:	41 0e       	add	r4, r17
    2086:	27 e0       	ldi	r18, 0x07	; 7
    2088:	0b c0       	rjmp	.+22     	; 0x20a0 <vfprintf+0x164>
    208a:	18 30       	cpi	r17, 0x08	; 8
    208c:	38 f0       	brcs	.+14     	; 0x209c <vfprintf+0x160>
    208e:	27 e0       	ldi	r18, 0x07	; 7
    2090:	17 e0       	ldi	r17, 0x07	; 7
    2092:	05 c0       	rjmp	.+10     	; 0x209e <vfprintf+0x162>
    2094:	27 e0       	ldi	r18, 0x07	; 7
    2096:	9c e3       	ldi	r25, 0x3C	; 60
    2098:	49 2e       	mov	r4, r25
    209a:	02 c0       	rjmp	.+4      	; 0x20a0 <vfprintf+0x164>
    209c:	21 2f       	mov	r18, r17
    209e:	41 2c       	mov	r4, r1
    20a0:	56 01       	movw	r10, r12
    20a2:	84 e0       	ldi	r24, 0x04	; 4
    20a4:	a8 0e       	add	r10, r24
    20a6:	b1 1c       	adc	r11, r1
    20a8:	f6 01       	movw	r30, r12
    20aa:	60 81       	ld	r22, Z
    20ac:	71 81       	ldd	r23, Z+1	; 0x01
    20ae:	82 81       	ldd	r24, Z+2	; 0x02
    20b0:	93 81       	ldd	r25, Z+3	; 0x03
    20b2:	04 2d       	mov	r16, r4
    20b4:	a3 01       	movw	r20, r6
    20b6:	0e 94 35 14 	call	0x286a	; 0x286a <__ftoa_engine>
    20ba:	6c 01       	movw	r12, r24
    20bc:	f9 81       	ldd	r31, Y+1	; 0x01
    20be:	fc 87       	std	Y+12, r31	; 0x0c
    20c0:	f0 ff       	sbrs	r31, 0
    20c2:	02 c0       	rjmp	.+4      	; 0x20c8 <vfprintf+0x18c>
    20c4:	f3 ff       	sbrs	r31, 3
    20c6:	06 c0       	rjmp	.+12     	; 0x20d4 <vfprintf+0x198>
    20c8:	91 fc       	sbrc	r9, 1
    20ca:	06 c0       	rjmp	.+12     	; 0x20d8 <vfprintf+0x19c>
    20cc:	92 fe       	sbrs	r9, 2
    20ce:	06 c0       	rjmp	.+12     	; 0x20dc <vfprintf+0x1a0>
    20d0:	00 e2       	ldi	r16, 0x20	; 32
    20d2:	05 c0       	rjmp	.+10     	; 0x20de <vfprintf+0x1a2>
    20d4:	0d e2       	ldi	r16, 0x2D	; 45
    20d6:	03 c0       	rjmp	.+6      	; 0x20de <vfprintf+0x1a2>
    20d8:	0b e2       	ldi	r16, 0x2B	; 43
    20da:	01 c0       	rjmp	.+2      	; 0x20de <vfprintf+0x1a2>
    20dc:	00 e0       	ldi	r16, 0x00	; 0
    20de:	8c 85       	ldd	r24, Y+12	; 0x0c
    20e0:	8c 70       	andi	r24, 0x0C	; 12
    20e2:	19 f0       	breq	.+6      	; 0x20ea <vfprintf+0x1ae>
    20e4:	01 11       	cpse	r16, r1
    20e6:	5a c2       	rjmp	.+1204   	; 0x259c <vfprintf+0x660>
    20e8:	9b c2       	rjmp	.+1334   	; 0x2620 <vfprintf+0x6e4>
    20ea:	97 fe       	sbrs	r9, 7
    20ec:	10 c0       	rjmp	.+32     	; 0x210e <vfprintf+0x1d2>
    20ee:	4c 0c       	add	r4, r12
    20f0:	fc 85       	ldd	r31, Y+12	; 0x0c
    20f2:	f4 ff       	sbrs	r31, 4
    20f4:	04 c0       	rjmp	.+8      	; 0x20fe <vfprintf+0x1c2>
    20f6:	8a 81       	ldd	r24, Y+2	; 0x02
    20f8:	81 33       	cpi	r24, 0x31	; 49
    20fa:	09 f4       	brne	.+2      	; 0x20fe <vfprintf+0x1c2>
    20fc:	4a 94       	dec	r4
    20fe:	14 14       	cp	r1, r4
    2100:	74 f5       	brge	.+92     	; 0x215e <vfprintf+0x222>
    2102:	28 e0       	ldi	r18, 0x08	; 8
    2104:	24 15       	cp	r18, r4
    2106:	78 f5       	brcc	.+94     	; 0x2166 <vfprintf+0x22a>
    2108:	88 e0       	ldi	r24, 0x08	; 8
    210a:	48 2e       	mov	r4, r24
    210c:	2c c0       	rjmp	.+88     	; 0x2166 <vfprintf+0x22a>
    210e:	96 fc       	sbrc	r9, 6
    2110:	2a c0       	rjmp	.+84     	; 0x2166 <vfprintf+0x22a>
    2112:	81 2f       	mov	r24, r17
    2114:	90 e0       	ldi	r25, 0x00	; 0
    2116:	8c 15       	cp	r24, r12
    2118:	9d 05       	cpc	r25, r13
    211a:	9c f0       	brlt	.+38     	; 0x2142 <vfprintf+0x206>
    211c:	3c ef       	ldi	r19, 0xFC	; 252
    211e:	c3 16       	cp	r12, r19
    2120:	3f ef       	ldi	r19, 0xFF	; 255
    2122:	d3 06       	cpc	r13, r19
    2124:	74 f0       	brlt	.+28     	; 0x2142 <vfprintf+0x206>
    2126:	89 2d       	mov	r24, r9
    2128:	80 68       	ori	r24, 0x80	; 128
    212a:	98 2e       	mov	r9, r24
    212c:	0a c0       	rjmp	.+20     	; 0x2142 <vfprintf+0x206>
    212e:	e2 e0       	ldi	r30, 0x02	; 2
    2130:	f0 e0       	ldi	r31, 0x00	; 0
    2132:	ec 0f       	add	r30, r28
    2134:	fd 1f       	adc	r31, r29
    2136:	e1 0f       	add	r30, r17
    2138:	f1 1d       	adc	r31, r1
    213a:	80 81       	ld	r24, Z
    213c:	80 33       	cpi	r24, 0x30	; 48
    213e:	19 f4       	brne	.+6      	; 0x2146 <vfprintf+0x20a>
    2140:	11 50       	subi	r17, 0x01	; 1
    2142:	11 11       	cpse	r17, r1
    2144:	f4 cf       	rjmp	.-24     	; 0x212e <vfprintf+0x1f2>
    2146:	97 fe       	sbrs	r9, 7
    2148:	0e c0       	rjmp	.+28     	; 0x2166 <vfprintf+0x22a>
    214a:	44 24       	eor	r4, r4
    214c:	43 94       	inc	r4
    214e:	41 0e       	add	r4, r17
    2150:	81 2f       	mov	r24, r17
    2152:	90 e0       	ldi	r25, 0x00	; 0
    2154:	c8 16       	cp	r12, r24
    2156:	d9 06       	cpc	r13, r25
    2158:	2c f4       	brge	.+10     	; 0x2164 <vfprintf+0x228>
    215a:	1c 19       	sub	r17, r12
    215c:	04 c0       	rjmp	.+8      	; 0x2166 <vfprintf+0x22a>
    215e:	44 24       	eor	r4, r4
    2160:	43 94       	inc	r4
    2162:	01 c0       	rjmp	.+2      	; 0x2166 <vfprintf+0x22a>
    2164:	10 e0       	ldi	r17, 0x00	; 0
    2166:	97 fe       	sbrs	r9, 7
    2168:	06 c0       	rjmp	.+12     	; 0x2176 <vfprintf+0x23a>
    216a:	1c 14       	cp	r1, r12
    216c:	1d 04       	cpc	r1, r13
    216e:	34 f4       	brge	.+12     	; 0x217c <vfprintf+0x240>
    2170:	c6 01       	movw	r24, r12
    2172:	01 96       	adiw	r24, 0x01	; 1
    2174:	05 c0       	rjmp	.+10     	; 0x2180 <vfprintf+0x244>
    2176:	85 e0       	ldi	r24, 0x05	; 5
    2178:	90 e0       	ldi	r25, 0x00	; 0
    217a:	02 c0       	rjmp	.+4      	; 0x2180 <vfprintf+0x244>
    217c:	81 e0       	ldi	r24, 0x01	; 1
    217e:	90 e0       	ldi	r25, 0x00	; 0
    2180:	01 11       	cpse	r16, r1
    2182:	01 96       	adiw	r24, 0x01	; 1
    2184:	11 23       	and	r17, r17
    2186:	31 f0       	breq	.+12     	; 0x2194 <vfprintf+0x258>
    2188:	21 2f       	mov	r18, r17
    218a:	30 e0       	ldi	r19, 0x00	; 0
    218c:	2f 5f       	subi	r18, 0xFF	; 255
    218e:	3f 4f       	sbci	r19, 0xFF	; 255
    2190:	82 0f       	add	r24, r18
    2192:	93 1f       	adc	r25, r19
    2194:	25 2d       	mov	r18, r5
    2196:	30 e0       	ldi	r19, 0x00	; 0
    2198:	82 17       	cp	r24, r18
    219a:	93 07       	cpc	r25, r19
    219c:	14 f4       	brge	.+4      	; 0x21a2 <vfprintf+0x266>
    219e:	58 1a       	sub	r5, r24
    21a0:	01 c0       	rjmp	.+2      	; 0x21a4 <vfprintf+0x268>
    21a2:	51 2c       	mov	r5, r1
    21a4:	89 2d       	mov	r24, r9
    21a6:	89 70       	andi	r24, 0x09	; 9
    21a8:	49 f4       	brne	.+18     	; 0x21bc <vfprintf+0x280>
    21aa:	55 20       	and	r5, r5
    21ac:	39 f0       	breq	.+14     	; 0x21bc <vfprintf+0x280>
    21ae:	b7 01       	movw	r22, r14
    21b0:	80 e2       	ldi	r24, 0x20	; 32
    21b2:	90 e0       	ldi	r25, 0x00	; 0
    21b4:	0e 94 95 15 	call	0x2b2a	; 0x2b2a <fputc>
    21b8:	5a 94       	dec	r5
    21ba:	f7 cf       	rjmp	.-18     	; 0x21aa <vfprintf+0x26e>
    21bc:	00 23       	and	r16, r16
    21be:	29 f0       	breq	.+10     	; 0x21ca <vfprintf+0x28e>
    21c0:	b7 01       	movw	r22, r14
    21c2:	80 2f       	mov	r24, r16
    21c4:	90 e0       	ldi	r25, 0x00	; 0
    21c6:	0e 94 95 15 	call	0x2b2a	; 0x2b2a <fputc>
    21ca:	93 fc       	sbrc	r9, 3
    21cc:	09 c0       	rjmp	.+18     	; 0x21e0 <vfprintf+0x2a4>
    21ce:	55 20       	and	r5, r5
    21d0:	39 f0       	breq	.+14     	; 0x21e0 <vfprintf+0x2a4>
    21d2:	b7 01       	movw	r22, r14
    21d4:	80 e3       	ldi	r24, 0x30	; 48
    21d6:	90 e0       	ldi	r25, 0x00	; 0
    21d8:	0e 94 95 15 	call	0x2b2a	; 0x2b2a <fputc>
    21dc:	5a 94       	dec	r5
    21de:	f7 cf       	rjmp	.-18     	; 0x21ce <vfprintf+0x292>
    21e0:	97 fe       	sbrs	r9, 7
    21e2:	4c c0       	rjmp	.+152    	; 0x227c <vfprintf+0x340>
    21e4:	46 01       	movw	r8, r12
    21e6:	d7 fe       	sbrs	r13, 7
    21e8:	02 c0       	rjmp	.+4      	; 0x21ee <vfprintf+0x2b2>
    21ea:	81 2c       	mov	r8, r1
    21ec:	91 2c       	mov	r9, r1
    21ee:	c6 01       	movw	r24, r12
    21f0:	88 19       	sub	r24, r8
    21f2:	99 09       	sbc	r25, r9
    21f4:	f3 01       	movw	r30, r6
    21f6:	e8 0f       	add	r30, r24
    21f8:	f9 1f       	adc	r31, r25
    21fa:	fe 87       	std	Y+14, r31	; 0x0e
    21fc:	ed 87       	std	Y+13, r30	; 0x0d
    21fe:	96 01       	movw	r18, r12
    2200:	24 19       	sub	r18, r4
    2202:	31 09       	sbc	r19, r1
    2204:	38 8b       	std	Y+16, r19	; 0x10
    2206:	2f 87       	std	Y+15, r18	; 0x0f
    2208:	01 2f       	mov	r16, r17
    220a:	10 e0       	ldi	r17, 0x00	; 0
    220c:	11 95       	neg	r17
    220e:	01 95       	neg	r16
    2210:	11 09       	sbc	r17, r1
    2212:	3f ef       	ldi	r19, 0xFF	; 255
    2214:	83 16       	cp	r8, r19
    2216:	93 06       	cpc	r9, r19
    2218:	29 f4       	brne	.+10     	; 0x2224 <vfprintf+0x2e8>
    221a:	b7 01       	movw	r22, r14
    221c:	8e e2       	ldi	r24, 0x2E	; 46
    221e:	90 e0       	ldi	r25, 0x00	; 0
    2220:	0e 94 95 15 	call	0x2b2a	; 0x2b2a <fputc>
    2224:	c8 14       	cp	r12, r8
    2226:	d9 04       	cpc	r13, r9
    2228:	4c f0       	brlt	.+18     	; 0x223c <vfprintf+0x300>
    222a:	8f 85       	ldd	r24, Y+15	; 0x0f
    222c:	98 89       	ldd	r25, Y+16	; 0x10
    222e:	88 15       	cp	r24, r8
    2230:	99 05       	cpc	r25, r9
    2232:	24 f4       	brge	.+8      	; 0x223c <vfprintf+0x300>
    2234:	ed 85       	ldd	r30, Y+13	; 0x0d
    2236:	fe 85       	ldd	r31, Y+14	; 0x0e
    2238:	81 81       	ldd	r24, Z+1	; 0x01
    223a:	01 c0       	rjmp	.+2      	; 0x223e <vfprintf+0x302>
    223c:	80 e3       	ldi	r24, 0x30	; 48
    223e:	f1 e0       	ldi	r31, 0x01	; 1
    2240:	8f 1a       	sub	r8, r31
    2242:	91 08       	sbc	r9, r1
    2244:	2d 85       	ldd	r18, Y+13	; 0x0d
    2246:	3e 85       	ldd	r19, Y+14	; 0x0e
    2248:	2f 5f       	subi	r18, 0xFF	; 255
    224a:	3f 4f       	sbci	r19, 0xFF	; 255
    224c:	3e 87       	std	Y+14, r19	; 0x0e
    224e:	2d 87       	std	Y+13, r18	; 0x0d
    2250:	80 16       	cp	r8, r16
    2252:	91 06       	cpc	r9, r17
    2254:	2c f0       	brlt	.+10     	; 0x2260 <vfprintf+0x324>
    2256:	b7 01       	movw	r22, r14
    2258:	90 e0       	ldi	r25, 0x00	; 0
    225a:	0e 94 95 15 	call	0x2b2a	; 0x2b2a <fputc>
    225e:	d9 cf       	rjmp	.-78     	; 0x2212 <vfprintf+0x2d6>
    2260:	c8 14       	cp	r12, r8
    2262:	d9 04       	cpc	r13, r9
    2264:	41 f4       	brne	.+16     	; 0x2276 <vfprintf+0x33a>
    2266:	9a 81       	ldd	r25, Y+2	; 0x02
    2268:	96 33       	cpi	r25, 0x36	; 54
    226a:	20 f4       	brcc	.+8      	; 0x2274 <vfprintf+0x338>
    226c:	95 33       	cpi	r25, 0x35	; 53
    226e:	19 f4       	brne	.+6      	; 0x2276 <vfprintf+0x33a>
    2270:	3c 85       	ldd	r19, Y+12	; 0x0c
    2272:	34 ff       	sbrs	r19, 4
    2274:	81 e3       	ldi	r24, 0x31	; 49
    2276:	b7 01       	movw	r22, r14
    2278:	90 e0       	ldi	r25, 0x00	; 0
    227a:	4e c0       	rjmp	.+156    	; 0x2318 <vfprintf+0x3dc>
    227c:	8a 81       	ldd	r24, Y+2	; 0x02
    227e:	81 33       	cpi	r24, 0x31	; 49
    2280:	19 f0       	breq	.+6      	; 0x2288 <vfprintf+0x34c>
    2282:	9c 85       	ldd	r25, Y+12	; 0x0c
    2284:	9f 7e       	andi	r25, 0xEF	; 239
    2286:	9c 87       	std	Y+12, r25	; 0x0c
    2288:	b7 01       	movw	r22, r14
    228a:	90 e0       	ldi	r25, 0x00	; 0
    228c:	0e 94 95 15 	call	0x2b2a	; 0x2b2a <fputc>
    2290:	11 11       	cpse	r17, r1
    2292:	05 c0       	rjmp	.+10     	; 0x229e <vfprintf+0x362>
    2294:	94 fc       	sbrc	r9, 4
    2296:	18 c0       	rjmp	.+48     	; 0x22c8 <vfprintf+0x38c>
    2298:	85 e6       	ldi	r24, 0x65	; 101
    229a:	90 e0       	ldi	r25, 0x00	; 0
    229c:	17 c0       	rjmp	.+46     	; 0x22cc <vfprintf+0x390>
    229e:	b7 01       	movw	r22, r14
    22a0:	8e e2       	ldi	r24, 0x2E	; 46
    22a2:	90 e0       	ldi	r25, 0x00	; 0
    22a4:	0e 94 95 15 	call	0x2b2a	; 0x2b2a <fputc>
    22a8:	1e 5f       	subi	r17, 0xFE	; 254
    22aa:	82 e0       	ldi	r24, 0x02	; 2
    22ac:	01 e0       	ldi	r16, 0x01	; 1
    22ae:	08 0f       	add	r16, r24
    22b0:	f3 01       	movw	r30, r6
    22b2:	e8 0f       	add	r30, r24
    22b4:	f1 1d       	adc	r31, r1
    22b6:	80 81       	ld	r24, Z
    22b8:	b7 01       	movw	r22, r14
    22ba:	90 e0       	ldi	r25, 0x00	; 0
    22bc:	0e 94 95 15 	call	0x2b2a	; 0x2b2a <fputc>
    22c0:	80 2f       	mov	r24, r16
    22c2:	01 13       	cpse	r16, r17
    22c4:	f3 cf       	rjmp	.-26     	; 0x22ac <vfprintf+0x370>
    22c6:	e6 cf       	rjmp	.-52     	; 0x2294 <vfprintf+0x358>
    22c8:	85 e4       	ldi	r24, 0x45	; 69
    22ca:	90 e0       	ldi	r25, 0x00	; 0
    22cc:	b7 01       	movw	r22, r14
    22ce:	0e 94 95 15 	call	0x2b2a	; 0x2b2a <fputc>
    22d2:	d7 fc       	sbrc	r13, 7
    22d4:	06 c0       	rjmp	.+12     	; 0x22e2 <vfprintf+0x3a6>
    22d6:	c1 14       	cp	r12, r1
    22d8:	d1 04       	cpc	r13, r1
    22da:	41 f4       	brne	.+16     	; 0x22ec <vfprintf+0x3b0>
    22dc:	ec 85       	ldd	r30, Y+12	; 0x0c
    22de:	e4 ff       	sbrs	r30, 4
    22e0:	05 c0       	rjmp	.+10     	; 0x22ec <vfprintf+0x3b0>
    22e2:	d1 94       	neg	r13
    22e4:	c1 94       	neg	r12
    22e6:	d1 08       	sbc	r13, r1
    22e8:	8d e2       	ldi	r24, 0x2D	; 45
    22ea:	01 c0       	rjmp	.+2      	; 0x22ee <vfprintf+0x3b2>
    22ec:	8b e2       	ldi	r24, 0x2B	; 43
    22ee:	b7 01       	movw	r22, r14
    22f0:	90 e0       	ldi	r25, 0x00	; 0
    22f2:	0e 94 95 15 	call	0x2b2a	; 0x2b2a <fputc>
    22f6:	80 e3       	ldi	r24, 0x30	; 48
    22f8:	2a e0       	ldi	r18, 0x0A	; 10
    22fa:	c2 16       	cp	r12, r18
    22fc:	d1 04       	cpc	r13, r1
    22fe:	2c f0       	brlt	.+10     	; 0x230a <vfprintf+0x3ce>
    2300:	8f 5f       	subi	r24, 0xFF	; 255
    2302:	fa e0       	ldi	r31, 0x0A	; 10
    2304:	cf 1a       	sub	r12, r31
    2306:	d1 08       	sbc	r13, r1
    2308:	f7 cf       	rjmp	.-18     	; 0x22f8 <vfprintf+0x3bc>
    230a:	b7 01       	movw	r22, r14
    230c:	90 e0       	ldi	r25, 0x00	; 0
    230e:	0e 94 95 15 	call	0x2b2a	; 0x2b2a <fputc>
    2312:	b7 01       	movw	r22, r14
    2314:	c6 01       	movw	r24, r12
    2316:	c0 96       	adiw	r24, 0x30	; 48
    2318:	0e 94 95 15 	call	0x2b2a	; 0x2b2a <fputc>
    231c:	54 c1       	rjmp	.+680    	; 0x25c6 <vfprintf+0x68a>
    231e:	83 36       	cpi	r24, 0x63	; 99
    2320:	31 f0       	breq	.+12     	; 0x232e <vfprintf+0x3f2>
    2322:	83 37       	cpi	r24, 0x73	; 115
    2324:	79 f0       	breq	.+30     	; 0x2344 <vfprintf+0x408>
    2326:	83 35       	cpi	r24, 0x53	; 83
    2328:	09 f0       	breq	.+2      	; 0x232c <vfprintf+0x3f0>
    232a:	56 c0       	rjmp	.+172    	; 0x23d8 <vfprintf+0x49c>
    232c:	20 c0       	rjmp	.+64     	; 0x236e <vfprintf+0x432>
    232e:	56 01       	movw	r10, r12
    2330:	32 e0       	ldi	r19, 0x02	; 2
    2332:	a3 0e       	add	r10, r19
    2334:	b1 1c       	adc	r11, r1
    2336:	f6 01       	movw	r30, r12
    2338:	80 81       	ld	r24, Z
    233a:	89 83       	std	Y+1, r24	; 0x01
    233c:	01 e0       	ldi	r16, 0x01	; 1
    233e:	10 e0       	ldi	r17, 0x00	; 0
    2340:	63 01       	movw	r12, r6
    2342:	12 c0       	rjmp	.+36     	; 0x2368 <vfprintf+0x42c>
    2344:	56 01       	movw	r10, r12
    2346:	f2 e0       	ldi	r31, 0x02	; 2
    2348:	af 0e       	add	r10, r31
    234a:	b1 1c       	adc	r11, r1
    234c:	f6 01       	movw	r30, r12
    234e:	c0 80       	ld	r12, Z
    2350:	d1 80       	ldd	r13, Z+1	; 0x01
    2352:	96 fe       	sbrs	r9, 6
    2354:	03 c0       	rjmp	.+6      	; 0x235c <vfprintf+0x420>
    2356:	61 2f       	mov	r22, r17
    2358:	70 e0       	ldi	r23, 0x00	; 0
    235a:	02 c0       	rjmp	.+4      	; 0x2360 <vfprintf+0x424>
    235c:	6f ef       	ldi	r22, 0xFF	; 255
    235e:	7f ef       	ldi	r23, 0xFF	; 255
    2360:	c6 01       	movw	r24, r12
    2362:	0e 94 68 15 	call	0x2ad0	; 0x2ad0 <strnlen>
    2366:	8c 01       	movw	r16, r24
    2368:	f9 2d       	mov	r31, r9
    236a:	ff 77       	andi	r31, 0x7F	; 127
    236c:	14 c0       	rjmp	.+40     	; 0x2396 <vfprintf+0x45a>
    236e:	56 01       	movw	r10, r12
    2370:	22 e0       	ldi	r18, 0x02	; 2
    2372:	a2 0e       	add	r10, r18
    2374:	b1 1c       	adc	r11, r1
    2376:	f6 01       	movw	r30, r12
    2378:	c0 80       	ld	r12, Z
    237a:	d1 80       	ldd	r13, Z+1	; 0x01
    237c:	96 fe       	sbrs	r9, 6
    237e:	03 c0       	rjmp	.+6      	; 0x2386 <vfprintf+0x44a>
    2380:	61 2f       	mov	r22, r17
    2382:	70 e0       	ldi	r23, 0x00	; 0
    2384:	02 c0       	rjmp	.+4      	; 0x238a <vfprintf+0x44e>
    2386:	6f ef       	ldi	r22, 0xFF	; 255
    2388:	7f ef       	ldi	r23, 0xFF	; 255
    238a:	c6 01       	movw	r24, r12
    238c:	0e 94 4e 15 	call	0x2a9c	; 0x2a9c <strnlen_P>
    2390:	8c 01       	movw	r16, r24
    2392:	f9 2d       	mov	r31, r9
    2394:	f0 68       	ori	r31, 0x80	; 128
    2396:	9f 2e       	mov	r9, r31
    2398:	f3 fd       	sbrc	r31, 3
    239a:	1a c0       	rjmp	.+52     	; 0x23d0 <vfprintf+0x494>
    239c:	85 2d       	mov	r24, r5
    239e:	90 e0       	ldi	r25, 0x00	; 0
    23a0:	08 17       	cp	r16, r24
    23a2:	19 07       	cpc	r17, r25
    23a4:	a8 f4       	brcc	.+42     	; 0x23d0 <vfprintf+0x494>
    23a6:	b7 01       	movw	r22, r14
    23a8:	80 e2       	ldi	r24, 0x20	; 32
    23aa:	90 e0       	ldi	r25, 0x00	; 0
    23ac:	0e 94 95 15 	call	0x2b2a	; 0x2b2a <fputc>
    23b0:	5a 94       	dec	r5
    23b2:	f4 cf       	rjmp	.-24     	; 0x239c <vfprintf+0x460>
    23b4:	f6 01       	movw	r30, r12
    23b6:	97 fc       	sbrc	r9, 7
    23b8:	85 91       	lpm	r24, Z+
    23ba:	97 fe       	sbrs	r9, 7
    23bc:	81 91       	ld	r24, Z+
    23be:	6f 01       	movw	r12, r30
    23c0:	b7 01       	movw	r22, r14
    23c2:	90 e0       	ldi	r25, 0x00	; 0
    23c4:	0e 94 95 15 	call	0x2b2a	; 0x2b2a <fputc>
    23c8:	51 10       	cpse	r5, r1
    23ca:	5a 94       	dec	r5
    23cc:	01 50       	subi	r16, 0x01	; 1
    23ce:	11 09       	sbc	r17, r1
    23d0:	01 15       	cp	r16, r1
    23d2:	11 05       	cpc	r17, r1
    23d4:	79 f7       	brne	.-34     	; 0x23b4 <vfprintf+0x478>
    23d6:	f7 c0       	rjmp	.+494    	; 0x25c6 <vfprintf+0x68a>
    23d8:	84 36       	cpi	r24, 0x64	; 100
    23da:	11 f0       	breq	.+4      	; 0x23e0 <vfprintf+0x4a4>
    23dc:	89 36       	cpi	r24, 0x69	; 105
    23de:	61 f5       	brne	.+88     	; 0x2438 <vfprintf+0x4fc>
    23e0:	56 01       	movw	r10, r12
    23e2:	97 fe       	sbrs	r9, 7
    23e4:	09 c0       	rjmp	.+18     	; 0x23f8 <vfprintf+0x4bc>
    23e6:	24 e0       	ldi	r18, 0x04	; 4
    23e8:	a2 0e       	add	r10, r18
    23ea:	b1 1c       	adc	r11, r1
    23ec:	f6 01       	movw	r30, r12
    23ee:	60 81       	ld	r22, Z
    23f0:	71 81       	ldd	r23, Z+1	; 0x01
    23f2:	82 81       	ldd	r24, Z+2	; 0x02
    23f4:	93 81       	ldd	r25, Z+3	; 0x03
    23f6:	0a c0       	rjmp	.+20     	; 0x240c <vfprintf+0x4d0>
    23f8:	f2 e0       	ldi	r31, 0x02	; 2
    23fa:	af 0e       	add	r10, r31
    23fc:	b1 1c       	adc	r11, r1
    23fe:	f6 01       	movw	r30, r12
    2400:	60 81       	ld	r22, Z
    2402:	71 81       	ldd	r23, Z+1	; 0x01
    2404:	07 2e       	mov	r0, r23
    2406:	00 0c       	add	r0, r0
    2408:	88 0b       	sbc	r24, r24
    240a:	99 0b       	sbc	r25, r25
    240c:	f9 2d       	mov	r31, r9
    240e:	ff 76       	andi	r31, 0x6F	; 111
    2410:	9f 2e       	mov	r9, r31
    2412:	97 ff       	sbrs	r25, 7
    2414:	09 c0       	rjmp	.+18     	; 0x2428 <vfprintf+0x4ec>
    2416:	90 95       	com	r25
    2418:	80 95       	com	r24
    241a:	70 95       	com	r23
    241c:	61 95       	neg	r22
    241e:	7f 4f       	sbci	r23, 0xFF	; 255
    2420:	8f 4f       	sbci	r24, 0xFF	; 255
    2422:	9f 4f       	sbci	r25, 0xFF	; 255
    2424:	f0 68       	ori	r31, 0x80	; 128
    2426:	9f 2e       	mov	r9, r31
    2428:	2a e0       	ldi	r18, 0x0A	; 10
    242a:	30 e0       	ldi	r19, 0x00	; 0
    242c:	a3 01       	movw	r20, r6
    242e:	0e 94 f3 15 	call	0x2be6	; 0x2be6 <__ultoa_invert>
    2432:	c8 2e       	mov	r12, r24
    2434:	c6 18       	sub	r12, r6
    2436:	3f c0       	rjmp	.+126    	; 0x24b6 <vfprintf+0x57a>
    2438:	09 2d       	mov	r16, r9
    243a:	85 37       	cpi	r24, 0x75	; 117
    243c:	21 f4       	brne	.+8      	; 0x2446 <vfprintf+0x50a>
    243e:	0f 7e       	andi	r16, 0xEF	; 239
    2440:	2a e0       	ldi	r18, 0x0A	; 10
    2442:	30 e0       	ldi	r19, 0x00	; 0
    2444:	1d c0       	rjmp	.+58     	; 0x2480 <vfprintf+0x544>
    2446:	09 7f       	andi	r16, 0xF9	; 249
    2448:	8f 36       	cpi	r24, 0x6F	; 111
    244a:	91 f0       	breq	.+36     	; 0x2470 <vfprintf+0x534>
    244c:	18 f4       	brcc	.+6      	; 0x2454 <vfprintf+0x518>
    244e:	88 35       	cpi	r24, 0x58	; 88
    2450:	59 f0       	breq	.+22     	; 0x2468 <vfprintf+0x52c>
    2452:	c3 c0       	rjmp	.+390    	; 0x25da <vfprintf+0x69e>
    2454:	80 37       	cpi	r24, 0x70	; 112
    2456:	19 f0       	breq	.+6      	; 0x245e <vfprintf+0x522>
    2458:	88 37       	cpi	r24, 0x78	; 120
    245a:	11 f0       	breq	.+4      	; 0x2460 <vfprintf+0x524>
    245c:	be c0       	rjmp	.+380    	; 0x25da <vfprintf+0x69e>
    245e:	00 61       	ori	r16, 0x10	; 16
    2460:	04 ff       	sbrs	r16, 4
    2462:	09 c0       	rjmp	.+18     	; 0x2476 <vfprintf+0x53a>
    2464:	04 60       	ori	r16, 0x04	; 4
    2466:	07 c0       	rjmp	.+14     	; 0x2476 <vfprintf+0x53a>
    2468:	94 fe       	sbrs	r9, 4
    246a:	08 c0       	rjmp	.+16     	; 0x247c <vfprintf+0x540>
    246c:	06 60       	ori	r16, 0x06	; 6
    246e:	06 c0       	rjmp	.+12     	; 0x247c <vfprintf+0x540>
    2470:	28 e0       	ldi	r18, 0x08	; 8
    2472:	30 e0       	ldi	r19, 0x00	; 0
    2474:	05 c0       	rjmp	.+10     	; 0x2480 <vfprintf+0x544>
    2476:	20 e1       	ldi	r18, 0x10	; 16
    2478:	30 e0       	ldi	r19, 0x00	; 0
    247a:	02 c0       	rjmp	.+4      	; 0x2480 <vfprintf+0x544>
    247c:	20 e1       	ldi	r18, 0x10	; 16
    247e:	32 e0       	ldi	r19, 0x02	; 2
    2480:	56 01       	movw	r10, r12
    2482:	07 ff       	sbrs	r16, 7
    2484:	09 c0       	rjmp	.+18     	; 0x2498 <vfprintf+0x55c>
    2486:	84 e0       	ldi	r24, 0x04	; 4
    2488:	a8 0e       	add	r10, r24
    248a:	b1 1c       	adc	r11, r1
    248c:	f6 01       	movw	r30, r12
    248e:	60 81       	ld	r22, Z
    2490:	71 81       	ldd	r23, Z+1	; 0x01
    2492:	82 81       	ldd	r24, Z+2	; 0x02
    2494:	93 81       	ldd	r25, Z+3	; 0x03
    2496:	08 c0       	rjmp	.+16     	; 0x24a8 <vfprintf+0x56c>
    2498:	f2 e0       	ldi	r31, 0x02	; 2
    249a:	af 0e       	add	r10, r31
    249c:	b1 1c       	adc	r11, r1
    249e:	f6 01       	movw	r30, r12
    24a0:	60 81       	ld	r22, Z
    24a2:	71 81       	ldd	r23, Z+1	; 0x01
    24a4:	80 e0       	ldi	r24, 0x00	; 0
    24a6:	90 e0       	ldi	r25, 0x00	; 0
    24a8:	a3 01       	movw	r20, r6
    24aa:	0e 94 f3 15 	call	0x2be6	; 0x2be6 <__ultoa_invert>
    24ae:	c8 2e       	mov	r12, r24
    24b0:	c6 18       	sub	r12, r6
    24b2:	0f 77       	andi	r16, 0x7F	; 127
    24b4:	90 2e       	mov	r9, r16
    24b6:	96 fe       	sbrs	r9, 6
    24b8:	0b c0       	rjmp	.+22     	; 0x24d0 <vfprintf+0x594>
    24ba:	09 2d       	mov	r16, r9
    24bc:	0e 7f       	andi	r16, 0xFE	; 254
    24be:	c1 16       	cp	r12, r17
    24c0:	50 f4       	brcc	.+20     	; 0x24d6 <vfprintf+0x59a>
    24c2:	94 fe       	sbrs	r9, 4
    24c4:	0a c0       	rjmp	.+20     	; 0x24da <vfprintf+0x59e>
    24c6:	92 fc       	sbrc	r9, 2
    24c8:	08 c0       	rjmp	.+16     	; 0x24da <vfprintf+0x59e>
    24ca:	09 2d       	mov	r16, r9
    24cc:	0e 7e       	andi	r16, 0xEE	; 238
    24ce:	05 c0       	rjmp	.+10     	; 0x24da <vfprintf+0x59e>
    24d0:	dc 2c       	mov	r13, r12
    24d2:	09 2d       	mov	r16, r9
    24d4:	03 c0       	rjmp	.+6      	; 0x24dc <vfprintf+0x5a0>
    24d6:	dc 2c       	mov	r13, r12
    24d8:	01 c0       	rjmp	.+2      	; 0x24dc <vfprintf+0x5a0>
    24da:	d1 2e       	mov	r13, r17
    24dc:	04 ff       	sbrs	r16, 4
    24de:	0d c0       	rjmp	.+26     	; 0x24fa <vfprintf+0x5be>
    24e0:	fe 01       	movw	r30, r28
    24e2:	ec 0d       	add	r30, r12
    24e4:	f1 1d       	adc	r31, r1
    24e6:	80 81       	ld	r24, Z
    24e8:	80 33       	cpi	r24, 0x30	; 48
    24ea:	11 f4       	brne	.+4      	; 0x24f0 <vfprintf+0x5b4>
    24ec:	09 7e       	andi	r16, 0xE9	; 233
    24ee:	09 c0       	rjmp	.+18     	; 0x2502 <vfprintf+0x5c6>
    24f0:	02 ff       	sbrs	r16, 2
    24f2:	06 c0       	rjmp	.+12     	; 0x2500 <vfprintf+0x5c4>
    24f4:	d3 94       	inc	r13
    24f6:	d3 94       	inc	r13
    24f8:	04 c0       	rjmp	.+8      	; 0x2502 <vfprintf+0x5c6>
    24fa:	80 2f       	mov	r24, r16
    24fc:	86 78       	andi	r24, 0x86	; 134
    24fe:	09 f0       	breq	.+2      	; 0x2502 <vfprintf+0x5c6>
    2500:	d3 94       	inc	r13
    2502:	03 fd       	sbrc	r16, 3
    2504:	11 c0       	rjmp	.+34     	; 0x2528 <vfprintf+0x5ec>
    2506:	00 ff       	sbrs	r16, 0
    2508:	06 c0       	rjmp	.+12     	; 0x2516 <vfprintf+0x5da>
    250a:	1c 2d       	mov	r17, r12
    250c:	d5 14       	cp	r13, r5
    250e:	80 f4       	brcc	.+32     	; 0x2530 <vfprintf+0x5f4>
    2510:	15 0d       	add	r17, r5
    2512:	1d 19       	sub	r17, r13
    2514:	0d c0       	rjmp	.+26     	; 0x2530 <vfprintf+0x5f4>
    2516:	d5 14       	cp	r13, r5
    2518:	58 f4       	brcc	.+22     	; 0x2530 <vfprintf+0x5f4>
    251a:	b7 01       	movw	r22, r14
    251c:	80 e2       	ldi	r24, 0x20	; 32
    251e:	90 e0       	ldi	r25, 0x00	; 0
    2520:	0e 94 95 15 	call	0x2b2a	; 0x2b2a <fputc>
    2524:	d3 94       	inc	r13
    2526:	f7 cf       	rjmp	.-18     	; 0x2516 <vfprintf+0x5da>
    2528:	d5 14       	cp	r13, r5
    252a:	10 f4       	brcc	.+4      	; 0x2530 <vfprintf+0x5f4>
    252c:	5d 18       	sub	r5, r13
    252e:	01 c0       	rjmp	.+2      	; 0x2532 <vfprintf+0x5f6>
    2530:	51 2c       	mov	r5, r1
    2532:	04 ff       	sbrs	r16, 4
    2534:	10 c0       	rjmp	.+32     	; 0x2556 <vfprintf+0x61a>
    2536:	b7 01       	movw	r22, r14
    2538:	80 e3       	ldi	r24, 0x30	; 48
    253a:	90 e0       	ldi	r25, 0x00	; 0
    253c:	0e 94 95 15 	call	0x2b2a	; 0x2b2a <fputc>
    2540:	02 ff       	sbrs	r16, 2
    2542:	17 c0       	rjmp	.+46     	; 0x2572 <vfprintf+0x636>
    2544:	01 fd       	sbrc	r16, 1
    2546:	03 c0       	rjmp	.+6      	; 0x254e <vfprintf+0x612>
    2548:	88 e7       	ldi	r24, 0x78	; 120
    254a:	90 e0       	ldi	r25, 0x00	; 0
    254c:	02 c0       	rjmp	.+4      	; 0x2552 <vfprintf+0x616>
    254e:	88 e5       	ldi	r24, 0x58	; 88
    2550:	90 e0       	ldi	r25, 0x00	; 0
    2552:	b7 01       	movw	r22, r14
    2554:	0c c0       	rjmp	.+24     	; 0x256e <vfprintf+0x632>
    2556:	80 2f       	mov	r24, r16
    2558:	86 78       	andi	r24, 0x86	; 134
    255a:	59 f0       	breq	.+22     	; 0x2572 <vfprintf+0x636>
    255c:	01 ff       	sbrs	r16, 1
    255e:	02 c0       	rjmp	.+4      	; 0x2564 <vfprintf+0x628>
    2560:	8b e2       	ldi	r24, 0x2B	; 43
    2562:	01 c0       	rjmp	.+2      	; 0x2566 <vfprintf+0x62a>
    2564:	80 e2       	ldi	r24, 0x20	; 32
    2566:	07 fd       	sbrc	r16, 7
    2568:	8d e2       	ldi	r24, 0x2D	; 45
    256a:	b7 01       	movw	r22, r14
    256c:	90 e0       	ldi	r25, 0x00	; 0
    256e:	0e 94 95 15 	call	0x2b2a	; 0x2b2a <fputc>
    2572:	c1 16       	cp	r12, r17
    2574:	38 f4       	brcc	.+14     	; 0x2584 <vfprintf+0x648>
    2576:	b7 01       	movw	r22, r14
    2578:	80 e3       	ldi	r24, 0x30	; 48
    257a:	90 e0       	ldi	r25, 0x00	; 0
    257c:	0e 94 95 15 	call	0x2b2a	; 0x2b2a <fputc>
    2580:	11 50       	subi	r17, 0x01	; 1
    2582:	f7 cf       	rjmp	.-18     	; 0x2572 <vfprintf+0x636>
    2584:	ca 94       	dec	r12
    2586:	f3 01       	movw	r30, r6
    2588:	ec 0d       	add	r30, r12
    258a:	f1 1d       	adc	r31, r1
    258c:	80 81       	ld	r24, Z
    258e:	b7 01       	movw	r22, r14
    2590:	90 e0       	ldi	r25, 0x00	; 0
    2592:	0e 94 95 15 	call	0x2b2a	; 0x2b2a <fputc>
    2596:	c1 10       	cpse	r12, r1
    2598:	f5 cf       	rjmp	.-22     	; 0x2584 <vfprintf+0x648>
    259a:	15 c0       	rjmp	.+42     	; 0x25c6 <vfprintf+0x68a>
    259c:	f4 e0       	ldi	r31, 0x04	; 4
    259e:	f5 15       	cp	r31, r5
    25a0:	60 f5       	brcc	.+88     	; 0x25fa <vfprintf+0x6be>
    25a2:	84 e0       	ldi	r24, 0x04	; 4
    25a4:	58 1a       	sub	r5, r24
    25a6:	93 fe       	sbrs	r9, 3
    25a8:	1f c0       	rjmp	.+62     	; 0x25e8 <vfprintf+0x6ac>
    25aa:	01 11       	cpse	r16, r1
    25ac:	27 c0       	rjmp	.+78     	; 0x25fc <vfprintf+0x6c0>
    25ae:	2c 85       	ldd	r18, Y+12	; 0x0c
    25b0:	23 ff       	sbrs	r18, 3
    25b2:	2a c0       	rjmp	.+84     	; 0x2608 <vfprintf+0x6cc>
    25b4:	08 e6       	ldi	r16, 0x68	; 104
    25b6:	10 e0       	ldi	r17, 0x00	; 0
    25b8:	39 2d       	mov	r19, r9
    25ba:	30 71       	andi	r19, 0x10	; 16
    25bc:	93 2e       	mov	r9, r19
    25be:	f8 01       	movw	r30, r16
    25c0:	84 91       	lpm	r24, Z
    25c2:	81 11       	cpse	r24, r1
    25c4:	24 c0       	rjmp	.+72     	; 0x260e <vfprintf+0x6d2>
    25c6:	55 20       	and	r5, r5
    25c8:	09 f4       	brne	.+2      	; 0x25cc <vfprintf+0x690>
    25ca:	e4 cc       	rjmp	.-1592   	; 0x1f94 <vfprintf+0x58>
    25cc:	b7 01       	movw	r22, r14
    25ce:	80 e2       	ldi	r24, 0x20	; 32
    25d0:	90 e0       	ldi	r25, 0x00	; 0
    25d2:	0e 94 95 15 	call	0x2b2a	; 0x2b2a <fputc>
    25d6:	5a 94       	dec	r5
    25d8:	f6 cf       	rjmp	.-20     	; 0x25c6 <vfprintf+0x68a>
    25da:	f7 01       	movw	r30, r14
    25dc:	86 81       	ldd	r24, Z+6	; 0x06
    25de:	97 81       	ldd	r25, Z+7	; 0x07
    25e0:	26 c0       	rjmp	.+76     	; 0x262e <vfprintf+0x6f2>
    25e2:	8f ef       	ldi	r24, 0xFF	; 255
    25e4:	9f ef       	ldi	r25, 0xFF	; 255
    25e6:	23 c0       	rjmp	.+70     	; 0x262e <vfprintf+0x6f2>
    25e8:	b7 01       	movw	r22, r14
    25ea:	80 e2       	ldi	r24, 0x20	; 32
    25ec:	90 e0       	ldi	r25, 0x00	; 0
    25ee:	0e 94 95 15 	call	0x2b2a	; 0x2b2a <fputc>
    25f2:	5a 94       	dec	r5
    25f4:	51 10       	cpse	r5, r1
    25f6:	f8 cf       	rjmp	.-16     	; 0x25e8 <vfprintf+0x6ac>
    25f8:	d8 cf       	rjmp	.-80     	; 0x25aa <vfprintf+0x66e>
    25fa:	51 2c       	mov	r5, r1
    25fc:	b7 01       	movw	r22, r14
    25fe:	80 2f       	mov	r24, r16
    2600:	90 e0       	ldi	r25, 0x00	; 0
    2602:	0e 94 95 15 	call	0x2b2a	; 0x2b2a <fputc>
    2606:	d3 cf       	rjmp	.-90     	; 0x25ae <vfprintf+0x672>
    2608:	0c e6       	ldi	r16, 0x6C	; 108
    260a:	10 e0       	ldi	r17, 0x00	; 0
    260c:	d5 cf       	rjmp	.-86     	; 0x25b8 <vfprintf+0x67c>
    260e:	91 10       	cpse	r9, r1
    2610:	80 52       	subi	r24, 0x20	; 32
    2612:	b7 01       	movw	r22, r14
    2614:	90 e0       	ldi	r25, 0x00	; 0
    2616:	0e 94 95 15 	call	0x2b2a	; 0x2b2a <fputc>
    261a:	0f 5f       	subi	r16, 0xFF	; 255
    261c:	1f 4f       	sbci	r17, 0xFF	; 255
    261e:	cf cf       	rjmp	.-98     	; 0x25be <vfprintf+0x682>
    2620:	23 e0       	ldi	r18, 0x03	; 3
    2622:	25 15       	cp	r18, r5
    2624:	10 f4       	brcc	.+4      	; 0x262a <vfprintf+0x6ee>
    2626:	83 e0       	ldi	r24, 0x03	; 3
    2628:	bd cf       	rjmp	.-134    	; 0x25a4 <vfprintf+0x668>
    262a:	51 2c       	mov	r5, r1
    262c:	c0 cf       	rjmp	.-128    	; 0x25ae <vfprintf+0x672>
    262e:	60 96       	adiw	r28, 0x10	; 16
    2630:	e2 e1       	ldi	r30, 0x12	; 18
    2632:	0c 94 6a 13 	jmp	0x26d4	; 0x26d4 <__epilogue_restores__>

00002636 <__divmodhi4>:
    2636:	97 fb       	bst	r25, 7
    2638:	07 2e       	mov	r0, r23
    263a:	16 f4       	brtc	.+4      	; 0x2640 <__divmodhi4+0xa>
    263c:	00 94       	com	r0
    263e:	07 d0       	rcall	.+14     	; 0x264e <__divmodhi4_neg1>
    2640:	77 fd       	sbrc	r23, 7
    2642:	09 d0       	rcall	.+18     	; 0x2656 <__divmodhi4_neg2>
    2644:	0e 94 85 13 	call	0x270a	; 0x270a <__udivmodhi4>
    2648:	07 fc       	sbrc	r0, 7
    264a:	05 d0       	rcall	.+10     	; 0x2656 <__divmodhi4_neg2>
    264c:	3e f4       	brtc	.+14     	; 0x265c <__divmodhi4_exit>

0000264e <__divmodhi4_neg1>:
    264e:	90 95       	com	r25
    2650:	81 95       	neg	r24
    2652:	9f 4f       	sbci	r25, 0xFF	; 255
    2654:	08 95       	ret

00002656 <__divmodhi4_neg2>:
    2656:	70 95       	com	r23
    2658:	61 95       	neg	r22
    265a:	7f 4f       	sbci	r23, 0xFF	; 255

0000265c <__divmodhi4_exit>:
    265c:	08 95       	ret

0000265e <__divmodsi4>:
    265e:	05 2e       	mov	r0, r21
    2660:	97 fb       	bst	r25, 7
    2662:	1e f4       	brtc	.+6      	; 0x266a <__divmodsi4+0xc>
    2664:	00 94       	com	r0
    2666:	0e 94 46 13 	call	0x268c	; 0x268c <__negsi2>
    266a:	57 fd       	sbrc	r21, 7
    266c:	07 d0       	rcall	.+14     	; 0x267c <__divmodsi4_neg2>
    266e:	0e 94 99 13 	call	0x2732	; 0x2732 <__udivmodsi4>
    2672:	07 fc       	sbrc	r0, 7
    2674:	03 d0       	rcall	.+6      	; 0x267c <__divmodsi4_neg2>
    2676:	4e f4       	brtc	.+18     	; 0x268a <__divmodsi4_exit>
    2678:	0c 94 46 13 	jmp	0x268c	; 0x268c <__negsi2>

0000267c <__divmodsi4_neg2>:
    267c:	50 95       	com	r21
    267e:	40 95       	com	r20
    2680:	30 95       	com	r19
    2682:	21 95       	neg	r18
    2684:	3f 4f       	sbci	r19, 0xFF	; 255
    2686:	4f 4f       	sbci	r20, 0xFF	; 255
    2688:	5f 4f       	sbci	r21, 0xFF	; 255

0000268a <__divmodsi4_exit>:
    268a:	08 95       	ret

0000268c <__negsi2>:
    268c:	90 95       	com	r25
    268e:	80 95       	com	r24
    2690:	70 95       	com	r23
    2692:	61 95       	neg	r22
    2694:	7f 4f       	sbci	r23, 0xFF	; 255
    2696:	8f 4f       	sbci	r24, 0xFF	; 255
    2698:	9f 4f       	sbci	r25, 0xFF	; 255
    269a:	08 95       	ret

0000269c <__prologue_saves__>:
    269c:	2f 92       	push	r2
    269e:	3f 92       	push	r3
    26a0:	4f 92       	push	r4
    26a2:	5f 92       	push	r5
    26a4:	6f 92       	push	r6
    26a6:	7f 92       	push	r7
    26a8:	8f 92       	push	r8
    26aa:	9f 92       	push	r9
    26ac:	af 92       	push	r10
    26ae:	bf 92       	push	r11
    26b0:	cf 92       	push	r12
    26b2:	df 92       	push	r13
    26b4:	ef 92       	push	r14
    26b6:	ff 92       	push	r15
    26b8:	0f 93       	push	r16
    26ba:	1f 93       	push	r17
    26bc:	cf 93       	push	r28
    26be:	df 93       	push	r29
    26c0:	cd b7       	in	r28, 0x3d	; 61
    26c2:	de b7       	in	r29, 0x3e	; 62
    26c4:	ca 1b       	sub	r28, r26
    26c6:	db 0b       	sbc	r29, r27
    26c8:	0f b6       	in	r0, 0x3f	; 63
    26ca:	f8 94       	cli
    26cc:	de bf       	out	0x3e, r29	; 62
    26ce:	0f be       	out	0x3f, r0	; 63
    26d0:	cd bf       	out	0x3d, r28	; 61
    26d2:	09 94       	ijmp

000026d4 <__epilogue_restores__>:
    26d4:	2a 88       	ldd	r2, Y+18	; 0x12
    26d6:	39 88       	ldd	r3, Y+17	; 0x11
    26d8:	48 88       	ldd	r4, Y+16	; 0x10
    26da:	5f 84       	ldd	r5, Y+15	; 0x0f
    26dc:	6e 84       	ldd	r6, Y+14	; 0x0e
    26de:	7d 84       	ldd	r7, Y+13	; 0x0d
    26e0:	8c 84       	ldd	r8, Y+12	; 0x0c
    26e2:	9b 84       	ldd	r9, Y+11	; 0x0b
    26e4:	aa 84       	ldd	r10, Y+10	; 0x0a
    26e6:	b9 84       	ldd	r11, Y+9	; 0x09
    26e8:	c8 84       	ldd	r12, Y+8	; 0x08
    26ea:	df 80       	ldd	r13, Y+7	; 0x07
    26ec:	ee 80       	ldd	r14, Y+6	; 0x06
    26ee:	fd 80       	ldd	r15, Y+5	; 0x05
    26f0:	0c 81       	ldd	r16, Y+4	; 0x04
    26f2:	1b 81       	ldd	r17, Y+3	; 0x03
    26f4:	aa 81       	ldd	r26, Y+2	; 0x02
    26f6:	b9 81       	ldd	r27, Y+1	; 0x01
    26f8:	ce 0f       	add	r28, r30
    26fa:	d1 1d       	adc	r29, r1
    26fc:	0f b6       	in	r0, 0x3f	; 63
    26fe:	f8 94       	cli
    2700:	de bf       	out	0x3e, r29	; 62
    2702:	0f be       	out	0x3f, r0	; 63
    2704:	cd bf       	out	0x3d, r28	; 61
    2706:	ed 01       	movw	r28, r26
    2708:	08 95       	ret

0000270a <__udivmodhi4>:
    270a:	aa 1b       	sub	r26, r26
    270c:	bb 1b       	sub	r27, r27
    270e:	51 e1       	ldi	r21, 0x11	; 17
    2710:	07 c0       	rjmp	.+14     	; 0x2720 <__udivmodhi4_ep>

00002712 <__udivmodhi4_loop>:
    2712:	aa 1f       	adc	r26, r26
    2714:	bb 1f       	adc	r27, r27
    2716:	a6 17       	cp	r26, r22
    2718:	b7 07       	cpc	r27, r23
    271a:	10 f0       	brcs	.+4      	; 0x2720 <__udivmodhi4_ep>
    271c:	a6 1b       	sub	r26, r22
    271e:	b7 0b       	sbc	r27, r23

00002720 <__udivmodhi4_ep>:
    2720:	88 1f       	adc	r24, r24
    2722:	99 1f       	adc	r25, r25
    2724:	5a 95       	dec	r21
    2726:	a9 f7       	brne	.-22     	; 0x2712 <__udivmodhi4_loop>
    2728:	80 95       	com	r24
    272a:	90 95       	com	r25
    272c:	bc 01       	movw	r22, r24
    272e:	cd 01       	movw	r24, r26
    2730:	08 95       	ret

00002732 <__udivmodsi4>:
    2732:	a1 e2       	ldi	r26, 0x21	; 33
    2734:	1a 2e       	mov	r1, r26
    2736:	aa 1b       	sub	r26, r26
    2738:	bb 1b       	sub	r27, r27
    273a:	fd 01       	movw	r30, r26
    273c:	0d c0       	rjmp	.+26     	; 0x2758 <__udivmodsi4_ep>

0000273e <__udivmodsi4_loop>:
    273e:	aa 1f       	adc	r26, r26
    2740:	bb 1f       	adc	r27, r27
    2742:	ee 1f       	adc	r30, r30
    2744:	ff 1f       	adc	r31, r31
    2746:	a2 17       	cp	r26, r18
    2748:	b3 07       	cpc	r27, r19
    274a:	e4 07       	cpc	r30, r20
    274c:	f5 07       	cpc	r31, r21
    274e:	20 f0       	brcs	.+8      	; 0x2758 <__udivmodsi4_ep>
    2750:	a2 1b       	sub	r26, r18
    2752:	b3 0b       	sbc	r27, r19
    2754:	e4 0b       	sbc	r30, r20
    2756:	f5 0b       	sbc	r31, r21

00002758 <__udivmodsi4_ep>:
    2758:	66 1f       	adc	r22, r22
    275a:	77 1f       	adc	r23, r23
    275c:	88 1f       	adc	r24, r24
    275e:	99 1f       	adc	r25, r25
    2760:	1a 94       	dec	r1
    2762:	69 f7       	brne	.-38     	; 0x273e <__udivmodsi4_loop>
    2764:	60 95       	com	r22
    2766:	70 95       	com	r23
    2768:	80 95       	com	r24
    276a:	90 95       	com	r25
    276c:	9b 01       	movw	r18, r22
    276e:	ac 01       	movw	r20, r24
    2770:	bd 01       	movw	r22, r26
    2772:	cf 01       	movw	r24, r30
    2774:	08 95       	ret

00002776 <do_rand>:
    2776:	8f 92       	push	r8
    2778:	9f 92       	push	r9
    277a:	af 92       	push	r10
    277c:	bf 92       	push	r11
    277e:	cf 92       	push	r12
    2780:	df 92       	push	r13
    2782:	ef 92       	push	r14
    2784:	ff 92       	push	r15
    2786:	cf 93       	push	r28
    2788:	df 93       	push	r29
    278a:	ec 01       	movw	r28, r24
    278c:	68 81       	ld	r22, Y
    278e:	79 81       	ldd	r23, Y+1	; 0x01
    2790:	8a 81       	ldd	r24, Y+2	; 0x02
    2792:	9b 81       	ldd	r25, Y+3	; 0x03
    2794:	61 15       	cp	r22, r1
    2796:	71 05       	cpc	r23, r1
    2798:	81 05       	cpc	r24, r1
    279a:	91 05       	cpc	r25, r1
    279c:	21 f4       	brne	.+8      	; 0x27a6 <do_rand+0x30>
    279e:	64 e2       	ldi	r22, 0x24	; 36
    27a0:	79 ed       	ldi	r23, 0xD9	; 217
    27a2:	8b e5       	ldi	r24, 0x5B	; 91
    27a4:	97 e0       	ldi	r25, 0x07	; 7
    27a6:	2d e1       	ldi	r18, 0x1D	; 29
    27a8:	33 ef       	ldi	r19, 0xF3	; 243
    27aa:	41 e0       	ldi	r20, 0x01	; 1
    27ac:	50 e0       	ldi	r21, 0x00	; 0
    27ae:	0e 94 2f 13 	call	0x265e	; 0x265e <__divmodsi4>
    27b2:	49 01       	movw	r8, r18
    27b4:	5a 01       	movw	r10, r20
    27b6:	9b 01       	movw	r18, r22
    27b8:	ac 01       	movw	r20, r24
    27ba:	a7 ea       	ldi	r26, 0xA7	; 167
    27bc:	b1 e4       	ldi	r27, 0x41	; 65
    27be:	0e 94 67 16 	call	0x2cce	; 0x2cce <__muluhisi3>
    27c2:	6b 01       	movw	r12, r22
    27c4:	7c 01       	movw	r14, r24
    27c6:	ac ee       	ldi	r26, 0xEC	; 236
    27c8:	b4 ef       	ldi	r27, 0xF4	; 244
    27ca:	a5 01       	movw	r20, r10
    27cc:	94 01       	movw	r18, r8
    27ce:	0e 94 75 16 	call	0x2cea	; 0x2cea <__mulohisi3>
    27d2:	dc 01       	movw	r26, r24
    27d4:	cb 01       	movw	r24, r22
    27d6:	8c 0d       	add	r24, r12
    27d8:	9d 1d       	adc	r25, r13
    27da:	ae 1d       	adc	r26, r14
    27dc:	bf 1d       	adc	r27, r15
    27de:	b7 ff       	sbrs	r27, 7
    27e0:	03 c0       	rjmp	.+6      	; 0x27e8 <do_rand+0x72>
    27e2:	01 97       	sbiw	r24, 0x01	; 1
    27e4:	a1 09       	sbc	r26, r1
    27e6:	b0 48       	sbci	r27, 0x80	; 128
    27e8:	88 83       	st	Y, r24
    27ea:	99 83       	std	Y+1, r25	; 0x01
    27ec:	aa 83       	std	Y+2, r26	; 0x02
    27ee:	bb 83       	std	Y+3, r27	; 0x03
    27f0:	9f 77       	andi	r25, 0x7F	; 127
    27f2:	df 91       	pop	r29
    27f4:	cf 91       	pop	r28
    27f6:	ff 90       	pop	r15
    27f8:	ef 90       	pop	r14
    27fa:	df 90       	pop	r13
    27fc:	cf 90       	pop	r12
    27fe:	bf 90       	pop	r11
    2800:	af 90       	pop	r10
    2802:	9f 90       	pop	r9
    2804:	8f 90       	pop	r8
    2806:	08 95       	ret

00002808 <rand_r>:
    2808:	0e 94 bb 13 	call	0x2776	; 0x2776 <do_rand>
    280c:	08 95       	ret

0000280e <rand>:
    280e:	80 e0       	ldi	r24, 0x00	; 0
    2810:	91 e0       	ldi	r25, 0x01	; 1
    2812:	0e 94 bb 13 	call	0x2776	; 0x2776 <do_rand>
    2816:	08 95       	ret

00002818 <srand>:
    2818:	a0 e0       	ldi	r26, 0x00	; 0
    281a:	b0 e0       	ldi	r27, 0x00	; 0
    281c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
    2820:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
    2824:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__data_start+0x2>
    2828:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__data_start+0x3>
    282c:	08 95       	ret

0000282e <atoi>:
    282e:	fc 01       	movw	r30, r24
    2830:	88 27       	eor	r24, r24
    2832:	99 27       	eor	r25, r25
    2834:	e8 94       	clt
    2836:	21 91       	ld	r18, Z+
    2838:	20 32       	cpi	r18, 0x20	; 32
    283a:	e9 f3       	breq	.-6      	; 0x2836 <atoi+0x8>
    283c:	29 30       	cpi	r18, 0x09	; 9
    283e:	10 f0       	brcs	.+4      	; 0x2844 <atoi+0x16>
    2840:	2e 30       	cpi	r18, 0x0E	; 14
    2842:	c8 f3       	brcs	.-14     	; 0x2836 <atoi+0x8>
    2844:	2b 32       	cpi	r18, 0x2B	; 43
    2846:	41 f0       	breq	.+16     	; 0x2858 <atoi+0x2a>
    2848:	2d 32       	cpi	r18, 0x2D	; 45
    284a:	39 f4       	brne	.+14     	; 0x285a <atoi+0x2c>
    284c:	68 94       	set
    284e:	04 c0       	rjmp	.+8      	; 0x2858 <atoi+0x2a>
    2850:	0e 94 8d 15 	call	0x2b1a	; 0x2b1a <__mulhi_const_10>
    2854:	82 0f       	add	r24, r18
    2856:	91 1d       	adc	r25, r1
    2858:	21 91       	ld	r18, Z+
    285a:	20 53       	subi	r18, 0x30	; 48
    285c:	2a 30       	cpi	r18, 0x0A	; 10
    285e:	c0 f3       	brcs	.-16     	; 0x2850 <atoi+0x22>
    2860:	1e f4       	brtc	.+6      	; 0x2868 <atoi+0x3a>
    2862:	90 95       	com	r25
    2864:	81 95       	neg	r24
    2866:	9f 4f       	sbci	r25, 0xFF	; 255
    2868:	08 95       	ret

0000286a <__ftoa_engine>:
    286a:	28 30       	cpi	r18, 0x08	; 8
    286c:	08 f0       	brcs	.+2      	; 0x2870 <__ftoa_engine+0x6>
    286e:	27 e0       	ldi	r18, 0x07	; 7
    2870:	33 27       	eor	r19, r19
    2872:	da 01       	movw	r26, r20
    2874:	99 0f       	add	r25, r25
    2876:	31 1d       	adc	r19, r1
    2878:	87 fd       	sbrc	r24, 7
    287a:	91 60       	ori	r25, 0x01	; 1
    287c:	00 96       	adiw	r24, 0x00	; 0
    287e:	61 05       	cpc	r22, r1
    2880:	71 05       	cpc	r23, r1
    2882:	39 f4       	brne	.+14     	; 0x2892 <__ftoa_engine+0x28>
    2884:	32 60       	ori	r19, 0x02	; 2
    2886:	2e 5f       	subi	r18, 0xFE	; 254
    2888:	3d 93       	st	X+, r19
    288a:	30 e3       	ldi	r19, 0x30	; 48
    288c:	2a 95       	dec	r18
    288e:	e1 f7       	brne	.-8      	; 0x2888 <__ftoa_engine+0x1e>
    2890:	08 95       	ret
    2892:	9f 3f       	cpi	r25, 0xFF	; 255
    2894:	30 f0       	brcs	.+12     	; 0x28a2 <__ftoa_engine+0x38>
    2896:	80 38       	cpi	r24, 0x80	; 128
    2898:	71 05       	cpc	r23, r1
    289a:	61 05       	cpc	r22, r1
    289c:	09 f0       	breq	.+2      	; 0x28a0 <__ftoa_engine+0x36>
    289e:	3c 5f       	subi	r19, 0xFC	; 252
    28a0:	3c 5f       	subi	r19, 0xFC	; 252
    28a2:	3d 93       	st	X+, r19
    28a4:	91 30       	cpi	r25, 0x01	; 1
    28a6:	08 f0       	brcs	.+2      	; 0x28aa <__ftoa_engine+0x40>
    28a8:	80 68       	ori	r24, 0x80	; 128
    28aa:	91 1d       	adc	r25, r1
    28ac:	df 93       	push	r29
    28ae:	cf 93       	push	r28
    28b0:	1f 93       	push	r17
    28b2:	0f 93       	push	r16
    28b4:	ff 92       	push	r15
    28b6:	ef 92       	push	r14
    28b8:	19 2f       	mov	r17, r25
    28ba:	98 7f       	andi	r25, 0xF8	; 248
    28bc:	96 95       	lsr	r25
    28be:	e9 2f       	mov	r30, r25
    28c0:	96 95       	lsr	r25
    28c2:	96 95       	lsr	r25
    28c4:	e9 0f       	add	r30, r25
    28c6:	ff 27       	eor	r31, r31
    28c8:	e6 53       	subi	r30, 0x36	; 54
    28ca:	ff 4f       	sbci	r31, 0xFF	; 255
    28cc:	99 27       	eor	r25, r25
    28ce:	33 27       	eor	r19, r19
    28d0:	ee 24       	eor	r14, r14
    28d2:	ff 24       	eor	r15, r15
    28d4:	a7 01       	movw	r20, r14
    28d6:	e7 01       	movw	r28, r14
    28d8:	05 90       	lpm	r0, Z+
    28da:	08 94       	sec
    28dc:	07 94       	ror	r0
    28de:	28 f4       	brcc	.+10     	; 0x28ea <__ftoa_engine+0x80>
    28e0:	36 0f       	add	r19, r22
    28e2:	e7 1e       	adc	r14, r23
    28e4:	f8 1e       	adc	r15, r24
    28e6:	49 1f       	adc	r20, r25
    28e8:	51 1d       	adc	r21, r1
    28ea:	66 0f       	add	r22, r22
    28ec:	77 1f       	adc	r23, r23
    28ee:	88 1f       	adc	r24, r24
    28f0:	99 1f       	adc	r25, r25
    28f2:	06 94       	lsr	r0
    28f4:	a1 f7       	brne	.-24     	; 0x28de <__ftoa_engine+0x74>
    28f6:	05 90       	lpm	r0, Z+
    28f8:	07 94       	ror	r0
    28fa:	28 f4       	brcc	.+10     	; 0x2906 <__ftoa_engine+0x9c>
    28fc:	e7 0e       	add	r14, r23
    28fe:	f8 1e       	adc	r15, r24
    2900:	49 1f       	adc	r20, r25
    2902:	56 1f       	adc	r21, r22
    2904:	c1 1d       	adc	r28, r1
    2906:	77 0f       	add	r23, r23
    2908:	88 1f       	adc	r24, r24
    290a:	99 1f       	adc	r25, r25
    290c:	66 1f       	adc	r22, r22
    290e:	06 94       	lsr	r0
    2910:	a1 f7       	brne	.-24     	; 0x28fa <__ftoa_engine+0x90>
    2912:	05 90       	lpm	r0, Z+
    2914:	07 94       	ror	r0
    2916:	28 f4       	brcc	.+10     	; 0x2922 <__ftoa_engine+0xb8>
    2918:	f8 0e       	add	r15, r24
    291a:	49 1f       	adc	r20, r25
    291c:	56 1f       	adc	r21, r22
    291e:	c7 1f       	adc	r28, r23
    2920:	d1 1d       	adc	r29, r1
    2922:	88 0f       	add	r24, r24
    2924:	99 1f       	adc	r25, r25
    2926:	66 1f       	adc	r22, r22
    2928:	77 1f       	adc	r23, r23
    292a:	06 94       	lsr	r0
    292c:	a1 f7       	brne	.-24     	; 0x2916 <__ftoa_engine+0xac>
    292e:	05 90       	lpm	r0, Z+
    2930:	07 94       	ror	r0
    2932:	20 f4       	brcc	.+8      	; 0x293c <__ftoa_engine+0xd2>
    2934:	49 0f       	add	r20, r25
    2936:	56 1f       	adc	r21, r22
    2938:	c7 1f       	adc	r28, r23
    293a:	d8 1f       	adc	r29, r24
    293c:	99 0f       	add	r25, r25
    293e:	66 1f       	adc	r22, r22
    2940:	77 1f       	adc	r23, r23
    2942:	88 1f       	adc	r24, r24
    2944:	06 94       	lsr	r0
    2946:	a9 f7       	brne	.-22     	; 0x2932 <__ftoa_engine+0xc8>
    2948:	84 91       	lpm	r24, Z
    294a:	10 95       	com	r17
    294c:	17 70       	andi	r17, 0x07	; 7
    294e:	41 f0       	breq	.+16     	; 0x2960 <__ftoa_engine+0xf6>
    2950:	d6 95       	lsr	r29
    2952:	c7 95       	ror	r28
    2954:	57 95       	ror	r21
    2956:	47 95       	ror	r20
    2958:	f7 94       	ror	r15
    295a:	e7 94       	ror	r14
    295c:	1a 95       	dec	r17
    295e:	c1 f7       	brne	.-16     	; 0x2950 <__ftoa_engine+0xe6>
    2960:	e0 e7       	ldi	r30, 0x70	; 112
    2962:	f0 e0       	ldi	r31, 0x00	; 0
    2964:	68 94       	set
    2966:	15 90       	lpm	r1, Z+
    2968:	15 91       	lpm	r17, Z+
    296a:	35 91       	lpm	r19, Z+
    296c:	65 91       	lpm	r22, Z+
    296e:	95 91       	lpm	r25, Z+
    2970:	05 90       	lpm	r0, Z+
    2972:	7f e2       	ldi	r23, 0x2F	; 47
    2974:	73 95       	inc	r23
    2976:	e1 18       	sub	r14, r1
    2978:	f1 0a       	sbc	r15, r17
    297a:	43 0b       	sbc	r20, r19
    297c:	56 0b       	sbc	r21, r22
    297e:	c9 0b       	sbc	r28, r25
    2980:	d0 09       	sbc	r29, r0
    2982:	c0 f7       	brcc	.-16     	; 0x2974 <__ftoa_engine+0x10a>
    2984:	e1 0c       	add	r14, r1
    2986:	f1 1e       	adc	r15, r17
    2988:	43 1f       	adc	r20, r19
    298a:	56 1f       	adc	r21, r22
    298c:	c9 1f       	adc	r28, r25
    298e:	d0 1d       	adc	r29, r0
    2990:	7e f4       	brtc	.+30     	; 0x29b0 <__ftoa_engine+0x146>
    2992:	70 33       	cpi	r23, 0x30	; 48
    2994:	11 f4       	brne	.+4      	; 0x299a <__ftoa_engine+0x130>
    2996:	8a 95       	dec	r24
    2998:	e6 cf       	rjmp	.-52     	; 0x2966 <__ftoa_engine+0xfc>
    299a:	e8 94       	clt
    299c:	01 50       	subi	r16, 0x01	; 1
    299e:	30 f0       	brcs	.+12     	; 0x29ac <__ftoa_engine+0x142>
    29a0:	08 0f       	add	r16, r24
    29a2:	0a f4       	brpl	.+2      	; 0x29a6 <__ftoa_engine+0x13c>
    29a4:	00 27       	eor	r16, r16
    29a6:	02 17       	cp	r16, r18
    29a8:	08 f4       	brcc	.+2      	; 0x29ac <__ftoa_engine+0x142>
    29aa:	20 2f       	mov	r18, r16
    29ac:	23 95       	inc	r18
    29ae:	02 2f       	mov	r16, r18
    29b0:	7a 33       	cpi	r23, 0x3A	; 58
    29b2:	28 f0       	brcs	.+10     	; 0x29be <__ftoa_engine+0x154>
    29b4:	79 e3       	ldi	r23, 0x39	; 57
    29b6:	7d 93       	st	X+, r23
    29b8:	2a 95       	dec	r18
    29ba:	e9 f7       	brne	.-6      	; 0x29b6 <__ftoa_engine+0x14c>
    29bc:	10 c0       	rjmp	.+32     	; 0x29de <__ftoa_engine+0x174>
    29be:	7d 93       	st	X+, r23
    29c0:	2a 95       	dec	r18
    29c2:	89 f6       	brne	.-94     	; 0x2966 <__ftoa_engine+0xfc>
    29c4:	06 94       	lsr	r0
    29c6:	97 95       	ror	r25
    29c8:	67 95       	ror	r22
    29ca:	37 95       	ror	r19
    29cc:	17 95       	ror	r17
    29ce:	17 94       	ror	r1
    29d0:	e1 18       	sub	r14, r1
    29d2:	f1 0a       	sbc	r15, r17
    29d4:	43 0b       	sbc	r20, r19
    29d6:	56 0b       	sbc	r21, r22
    29d8:	c9 0b       	sbc	r28, r25
    29da:	d0 09       	sbc	r29, r0
    29dc:	98 f0       	brcs	.+38     	; 0x2a04 <__ftoa_engine+0x19a>
    29de:	23 95       	inc	r18
    29e0:	7e 91       	ld	r23, -X
    29e2:	73 95       	inc	r23
    29e4:	7a 33       	cpi	r23, 0x3A	; 58
    29e6:	08 f0       	brcs	.+2      	; 0x29ea <__ftoa_engine+0x180>
    29e8:	70 e3       	ldi	r23, 0x30	; 48
    29ea:	7c 93       	st	X, r23
    29ec:	20 13       	cpse	r18, r16
    29ee:	b8 f7       	brcc	.-18     	; 0x29de <__ftoa_engine+0x174>
    29f0:	7e 91       	ld	r23, -X
    29f2:	70 61       	ori	r23, 0x10	; 16
    29f4:	7d 93       	st	X+, r23
    29f6:	30 f0       	brcs	.+12     	; 0x2a04 <__ftoa_engine+0x19a>
    29f8:	83 95       	inc	r24
    29fa:	71 e3       	ldi	r23, 0x31	; 49
    29fc:	7d 93       	st	X+, r23
    29fe:	70 e3       	ldi	r23, 0x30	; 48
    2a00:	2a 95       	dec	r18
    2a02:	e1 f7       	brne	.-8      	; 0x29fc <__ftoa_engine+0x192>
    2a04:	11 24       	eor	r1, r1
    2a06:	ef 90       	pop	r14
    2a08:	ff 90       	pop	r15
    2a0a:	0f 91       	pop	r16
    2a0c:	1f 91       	pop	r17
    2a0e:	cf 91       	pop	r28
    2a10:	df 91       	pop	r29
    2a12:	99 27       	eor	r25, r25
    2a14:	87 fd       	sbrc	r24, 7
    2a16:	90 95       	com	r25
    2a18:	08 95       	ret

00002a1a <setjmp>:
    2a1a:	dc 01       	movw	r26, r24
    2a1c:	2d 92       	st	X+, r2
    2a1e:	3d 92       	st	X+, r3
    2a20:	4d 92       	st	X+, r4
    2a22:	5d 92       	st	X+, r5
    2a24:	6d 92       	st	X+, r6
    2a26:	7d 92       	st	X+, r7
    2a28:	8d 92       	st	X+, r8
    2a2a:	9d 92       	st	X+, r9
    2a2c:	ad 92       	st	X+, r10
    2a2e:	bd 92       	st	X+, r11
    2a30:	cd 92       	st	X+, r12
    2a32:	dd 92       	st	X+, r13
    2a34:	ed 92       	st	X+, r14
    2a36:	fd 92       	st	X+, r15
    2a38:	0d 93       	st	X+, r16
    2a3a:	1d 93       	st	X+, r17
    2a3c:	cd 93       	st	X+, r28
    2a3e:	dd 93       	st	X+, r29
    2a40:	ff 91       	pop	r31
    2a42:	ef 91       	pop	r30
    2a44:	8d b7       	in	r24, 0x3d	; 61
    2a46:	8d 93       	st	X+, r24
    2a48:	8e b7       	in	r24, 0x3e	; 62
    2a4a:	8d 93       	st	X+, r24
    2a4c:	8f b7       	in	r24, 0x3f	; 63
    2a4e:	8d 93       	st	X+, r24
    2a50:	ed 93       	st	X+, r30
    2a52:	fd 93       	st	X+, r31
    2a54:	88 27       	eor	r24, r24
    2a56:	99 27       	eor	r25, r25
    2a58:	09 94       	ijmp

00002a5a <longjmp>:
    2a5a:	dc 01       	movw	r26, r24
    2a5c:	cb 01       	movw	r24, r22
    2a5e:	81 30       	cpi	r24, 0x01	; 1
    2a60:	91 05       	cpc	r25, r1
    2a62:	81 1d       	adc	r24, r1
    2a64:	2d 90       	ld	r2, X+
    2a66:	3d 90       	ld	r3, X+
    2a68:	4d 90       	ld	r4, X+
    2a6a:	5d 90       	ld	r5, X+
    2a6c:	6d 90       	ld	r6, X+
    2a6e:	7d 90       	ld	r7, X+
    2a70:	8d 90       	ld	r8, X+
    2a72:	9d 90       	ld	r9, X+
    2a74:	ad 90       	ld	r10, X+
    2a76:	bd 90       	ld	r11, X+
    2a78:	cd 90       	ld	r12, X+
    2a7a:	dd 90       	ld	r13, X+
    2a7c:	ed 90       	ld	r14, X+
    2a7e:	fd 90       	ld	r15, X+
    2a80:	0d 91       	ld	r16, X+
    2a82:	1d 91       	ld	r17, X+
    2a84:	cd 91       	ld	r28, X+
    2a86:	dd 91       	ld	r29, X+
    2a88:	ed 91       	ld	r30, X+
    2a8a:	fd 91       	ld	r31, X+
    2a8c:	0d 90       	ld	r0, X+
    2a8e:	f8 94       	cli
    2a90:	fe bf       	out	0x3e, r31	; 62
    2a92:	0f be       	out	0x3f, r0	; 63
    2a94:	ed bf       	out	0x3d, r30	; 61
    2a96:	ed 91       	ld	r30, X+
    2a98:	fd 91       	ld	r31, X+
    2a9a:	09 94       	ijmp

00002a9c <strnlen_P>:
    2a9c:	fc 01       	movw	r30, r24
    2a9e:	05 90       	lpm	r0, Z+
    2aa0:	61 50       	subi	r22, 0x01	; 1
    2aa2:	70 40       	sbci	r23, 0x00	; 0
    2aa4:	01 10       	cpse	r0, r1
    2aa6:	d8 f7       	brcc	.-10     	; 0x2a9e <strnlen_P+0x2>
    2aa8:	80 95       	com	r24
    2aaa:	90 95       	com	r25
    2aac:	8e 0f       	add	r24, r30
    2aae:	9f 1f       	adc	r25, r31
    2ab0:	08 95       	ret

00002ab2 <strncpy>:
    2ab2:	fb 01       	movw	r30, r22
    2ab4:	dc 01       	movw	r26, r24
    2ab6:	41 50       	subi	r20, 0x01	; 1
    2ab8:	50 40       	sbci	r21, 0x00	; 0
    2aba:	48 f0       	brcs	.+18     	; 0x2ace <strncpy+0x1c>
    2abc:	01 90       	ld	r0, Z+
    2abe:	0d 92       	st	X+, r0
    2ac0:	00 20       	and	r0, r0
    2ac2:	c9 f7       	brne	.-14     	; 0x2ab6 <strncpy+0x4>
    2ac4:	01 c0       	rjmp	.+2      	; 0x2ac8 <strncpy+0x16>
    2ac6:	1d 92       	st	X+, r1
    2ac8:	41 50       	subi	r20, 0x01	; 1
    2aca:	50 40       	sbci	r21, 0x00	; 0
    2acc:	e0 f7       	brcc	.-8      	; 0x2ac6 <strncpy+0x14>
    2ace:	08 95       	ret

00002ad0 <strnlen>:
    2ad0:	fc 01       	movw	r30, r24
    2ad2:	61 50       	subi	r22, 0x01	; 1
    2ad4:	70 40       	sbci	r23, 0x00	; 0
    2ad6:	01 90       	ld	r0, Z+
    2ad8:	01 10       	cpse	r0, r1
    2ada:	d8 f7       	brcc	.-10     	; 0x2ad2 <strnlen+0x2>
    2adc:	80 95       	com	r24
    2ade:	90 95       	com	r25
    2ae0:	8e 0f       	add	r24, r30
    2ae2:	9f 1f       	adc	r25, r31
    2ae4:	08 95       	ret

00002ae6 <strstr>:
    2ae6:	fb 01       	movw	r30, r22
    2ae8:	51 91       	ld	r21, Z+
    2aea:	55 23       	and	r21, r21
    2aec:	a9 f0       	breq	.+42     	; 0x2b18 <strstr+0x32>
    2aee:	bf 01       	movw	r22, r30
    2af0:	dc 01       	movw	r26, r24
    2af2:	4d 91       	ld	r20, X+
    2af4:	45 17       	cp	r20, r21
    2af6:	41 11       	cpse	r20, r1
    2af8:	e1 f7       	brne	.-8      	; 0x2af2 <strstr+0xc>
    2afa:	59 f4       	brne	.+22     	; 0x2b12 <strstr+0x2c>
    2afc:	cd 01       	movw	r24, r26
    2afe:	01 90       	ld	r0, Z+
    2b00:	00 20       	and	r0, r0
    2b02:	49 f0       	breq	.+18     	; 0x2b16 <strstr+0x30>
    2b04:	4d 91       	ld	r20, X+
    2b06:	40 15       	cp	r20, r0
    2b08:	41 11       	cpse	r20, r1
    2b0a:	c9 f3       	breq	.-14     	; 0x2afe <strstr+0x18>
    2b0c:	fb 01       	movw	r30, r22
    2b0e:	41 11       	cpse	r20, r1
    2b10:	ef cf       	rjmp	.-34     	; 0x2af0 <strstr+0xa>
    2b12:	81 e0       	ldi	r24, 0x01	; 1
    2b14:	90 e0       	ldi	r25, 0x00	; 0
    2b16:	01 97       	sbiw	r24, 0x01	; 1
    2b18:	08 95       	ret

00002b1a <__mulhi_const_10>:
    2b1a:	7a e0       	ldi	r23, 0x0A	; 10
    2b1c:	97 9f       	mul	r25, r23
    2b1e:	90 2d       	mov	r25, r0
    2b20:	87 9f       	mul	r24, r23
    2b22:	80 2d       	mov	r24, r0
    2b24:	91 0d       	add	r25, r1
    2b26:	11 24       	eor	r1, r1
    2b28:	08 95       	ret

00002b2a <fputc>:
    2b2a:	0f 93       	push	r16
    2b2c:	1f 93       	push	r17
    2b2e:	cf 93       	push	r28
    2b30:	df 93       	push	r29
    2b32:	fb 01       	movw	r30, r22
    2b34:	23 81       	ldd	r18, Z+3	; 0x03
    2b36:	21 fd       	sbrc	r18, 1
    2b38:	03 c0       	rjmp	.+6      	; 0x2b40 <fputc+0x16>
    2b3a:	8f ef       	ldi	r24, 0xFF	; 255
    2b3c:	9f ef       	ldi	r25, 0xFF	; 255
    2b3e:	2c c0       	rjmp	.+88     	; 0x2b98 <fputc+0x6e>
    2b40:	22 ff       	sbrs	r18, 2
    2b42:	16 c0       	rjmp	.+44     	; 0x2b70 <fputc+0x46>
    2b44:	46 81       	ldd	r20, Z+6	; 0x06
    2b46:	57 81       	ldd	r21, Z+7	; 0x07
    2b48:	24 81       	ldd	r18, Z+4	; 0x04
    2b4a:	35 81       	ldd	r19, Z+5	; 0x05
    2b4c:	42 17       	cp	r20, r18
    2b4e:	53 07       	cpc	r21, r19
    2b50:	44 f4       	brge	.+16     	; 0x2b62 <fputc+0x38>
    2b52:	a0 81       	ld	r26, Z
    2b54:	b1 81       	ldd	r27, Z+1	; 0x01
    2b56:	9d 01       	movw	r18, r26
    2b58:	2f 5f       	subi	r18, 0xFF	; 255
    2b5a:	3f 4f       	sbci	r19, 0xFF	; 255
    2b5c:	31 83       	std	Z+1, r19	; 0x01
    2b5e:	20 83       	st	Z, r18
    2b60:	8c 93       	st	X, r24
    2b62:	26 81       	ldd	r18, Z+6	; 0x06
    2b64:	37 81       	ldd	r19, Z+7	; 0x07
    2b66:	2f 5f       	subi	r18, 0xFF	; 255
    2b68:	3f 4f       	sbci	r19, 0xFF	; 255
    2b6a:	37 83       	std	Z+7, r19	; 0x07
    2b6c:	26 83       	std	Z+6, r18	; 0x06
    2b6e:	14 c0       	rjmp	.+40     	; 0x2b98 <fputc+0x6e>
    2b70:	8b 01       	movw	r16, r22
    2b72:	ec 01       	movw	r28, r24
    2b74:	fb 01       	movw	r30, r22
    2b76:	00 84       	ldd	r0, Z+8	; 0x08
    2b78:	f1 85       	ldd	r31, Z+9	; 0x09
    2b7a:	e0 2d       	mov	r30, r0
    2b7c:	09 95       	icall
    2b7e:	89 2b       	or	r24, r25
    2b80:	e1 f6       	brne	.-72     	; 0x2b3a <fputc+0x10>
    2b82:	d8 01       	movw	r26, r16
    2b84:	16 96       	adiw	r26, 0x06	; 6
    2b86:	8d 91       	ld	r24, X+
    2b88:	9c 91       	ld	r25, X
    2b8a:	17 97       	sbiw	r26, 0x07	; 7
    2b8c:	01 96       	adiw	r24, 0x01	; 1
    2b8e:	17 96       	adiw	r26, 0x07	; 7
    2b90:	9c 93       	st	X, r25
    2b92:	8e 93       	st	-X, r24
    2b94:	16 97       	sbiw	r26, 0x06	; 6
    2b96:	ce 01       	movw	r24, r28
    2b98:	df 91       	pop	r29
    2b9a:	cf 91       	pop	r28
    2b9c:	1f 91       	pop	r17
    2b9e:	0f 91       	pop	r16
    2ba0:	08 95       	ret

00002ba2 <sprintf>:
    2ba2:	ae e0       	ldi	r26, 0x0E	; 14
    2ba4:	b0 e0       	ldi	r27, 0x00	; 0
    2ba6:	e7 ed       	ldi	r30, 0xD7	; 215
    2ba8:	f5 e1       	ldi	r31, 0x15	; 21
    2baa:	0c 94 5c 13 	jmp	0x26b8	; 0x26b8 <__prologue_saves__+0x1c>
    2bae:	0d 89       	ldd	r16, Y+21	; 0x15
    2bb0:	1e 89       	ldd	r17, Y+22	; 0x16
    2bb2:	86 e0       	ldi	r24, 0x06	; 6
    2bb4:	8c 83       	std	Y+4, r24	; 0x04
    2bb6:	1a 83       	std	Y+2, r17	; 0x02
    2bb8:	09 83       	std	Y+1, r16	; 0x01
    2bba:	8f ef       	ldi	r24, 0xFF	; 255
    2bbc:	9f e7       	ldi	r25, 0x7F	; 127
    2bbe:	9e 83       	std	Y+6, r25	; 0x06
    2bc0:	8d 83       	std	Y+5, r24	; 0x05
    2bc2:	ae 01       	movw	r20, r28
    2bc4:	47 5e       	subi	r20, 0xE7	; 231
    2bc6:	5f 4f       	sbci	r21, 0xFF	; 255
    2bc8:	6f 89       	ldd	r22, Y+23	; 0x17
    2bca:	78 8d       	ldd	r23, Y+24	; 0x18
    2bcc:	ce 01       	movw	r24, r28
    2bce:	01 96       	adiw	r24, 0x01	; 1
    2bd0:	0e 94 9e 0f 	call	0x1f3c	; 0x1f3c <vfprintf>
    2bd4:	ef 81       	ldd	r30, Y+7	; 0x07
    2bd6:	f8 85       	ldd	r31, Y+8	; 0x08
    2bd8:	e0 0f       	add	r30, r16
    2bda:	f1 1f       	adc	r31, r17
    2bdc:	10 82       	st	Z, r1
    2bde:	2e 96       	adiw	r28, 0x0e	; 14
    2be0:	e4 e0       	ldi	r30, 0x04	; 4
    2be2:	0c 94 78 13 	jmp	0x26f0	; 0x26f0 <__epilogue_restores__+0x1c>

00002be6 <__ultoa_invert>:
    2be6:	fa 01       	movw	r30, r20
    2be8:	aa 27       	eor	r26, r26
    2bea:	28 30       	cpi	r18, 0x08	; 8
    2bec:	51 f1       	breq	.+84     	; 0x2c42 <__ultoa_invert+0x5c>
    2bee:	20 31       	cpi	r18, 0x10	; 16
    2bf0:	81 f1       	breq	.+96     	; 0x2c52 <__ultoa_invert+0x6c>
    2bf2:	e8 94       	clt
    2bf4:	6f 93       	push	r22
    2bf6:	6e 7f       	andi	r22, 0xFE	; 254
    2bf8:	6e 5f       	subi	r22, 0xFE	; 254
    2bfa:	7f 4f       	sbci	r23, 0xFF	; 255
    2bfc:	8f 4f       	sbci	r24, 0xFF	; 255
    2bfe:	9f 4f       	sbci	r25, 0xFF	; 255
    2c00:	af 4f       	sbci	r26, 0xFF	; 255
    2c02:	b1 e0       	ldi	r27, 0x01	; 1
    2c04:	3e d0       	rcall	.+124    	; 0x2c82 <__ultoa_invert+0x9c>
    2c06:	b4 e0       	ldi	r27, 0x04	; 4
    2c08:	3c d0       	rcall	.+120    	; 0x2c82 <__ultoa_invert+0x9c>
    2c0a:	67 0f       	add	r22, r23
    2c0c:	78 1f       	adc	r23, r24
    2c0e:	89 1f       	adc	r24, r25
    2c10:	9a 1f       	adc	r25, r26
    2c12:	a1 1d       	adc	r26, r1
    2c14:	68 0f       	add	r22, r24
    2c16:	79 1f       	adc	r23, r25
    2c18:	8a 1f       	adc	r24, r26
    2c1a:	91 1d       	adc	r25, r1
    2c1c:	a1 1d       	adc	r26, r1
    2c1e:	6a 0f       	add	r22, r26
    2c20:	71 1d       	adc	r23, r1
    2c22:	81 1d       	adc	r24, r1
    2c24:	91 1d       	adc	r25, r1
    2c26:	a1 1d       	adc	r26, r1
    2c28:	20 d0       	rcall	.+64     	; 0x2c6a <__ultoa_invert+0x84>
    2c2a:	09 f4       	brne	.+2      	; 0x2c2e <__ultoa_invert+0x48>
    2c2c:	68 94       	set
    2c2e:	3f 91       	pop	r19
    2c30:	2a e0       	ldi	r18, 0x0A	; 10
    2c32:	26 9f       	mul	r18, r22
    2c34:	11 24       	eor	r1, r1
    2c36:	30 19       	sub	r19, r0
    2c38:	30 5d       	subi	r19, 0xD0	; 208
    2c3a:	31 93       	st	Z+, r19
    2c3c:	de f6       	brtc	.-74     	; 0x2bf4 <__ultoa_invert+0xe>
    2c3e:	cf 01       	movw	r24, r30
    2c40:	08 95       	ret
    2c42:	46 2f       	mov	r20, r22
    2c44:	47 70       	andi	r20, 0x07	; 7
    2c46:	40 5d       	subi	r20, 0xD0	; 208
    2c48:	41 93       	st	Z+, r20
    2c4a:	b3 e0       	ldi	r27, 0x03	; 3
    2c4c:	0f d0       	rcall	.+30     	; 0x2c6c <__ultoa_invert+0x86>
    2c4e:	c9 f7       	brne	.-14     	; 0x2c42 <__ultoa_invert+0x5c>
    2c50:	f6 cf       	rjmp	.-20     	; 0x2c3e <__ultoa_invert+0x58>
    2c52:	46 2f       	mov	r20, r22
    2c54:	4f 70       	andi	r20, 0x0F	; 15
    2c56:	40 5d       	subi	r20, 0xD0	; 208
    2c58:	4a 33       	cpi	r20, 0x3A	; 58
    2c5a:	18 f0       	brcs	.+6      	; 0x2c62 <__ultoa_invert+0x7c>
    2c5c:	49 5d       	subi	r20, 0xD9	; 217
    2c5e:	31 fd       	sbrc	r19, 1
    2c60:	40 52       	subi	r20, 0x20	; 32
    2c62:	41 93       	st	Z+, r20
    2c64:	02 d0       	rcall	.+4      	; 0x2c6a <__ultoa_invert+0x84>
    2c66:	a9 f7       	brne	.-22     	; 0x2c52 <__ultoa_invert+0x6c>
    2c68:	ea cf       	rjmp	.-44     	; 0x2c3e <__ultoa_invert+0x58>
    2c6a:	b4 e0       	ldi	r27, 0x04	; 4
    2c6c:	a6 95       	lsr	r26
    2c6e:	97 95       	ror	r25
    2c70:	87 95       	ror	r24
    2c72:	77 95       	ror	r23
    2c74:	67 95       	ror	r22
    2c76:	ba 95       	dec	r27
    2c78:	c9 f7       	brne	.-14     	; 0x2c6c <__ultoa_invert+0x86>
    2c7a:	00 97       	sbiw	r24, 0x00	; 0
    2c7c:	61 05       	cpc	r22, r1
    2c7e:	71 05       	cpc	r23, r1
    2c80:	08 95       	ret
    2c82:	9b 01       	movw	r18, r22
    2c84:	ac 01       	movw	r20, r24
    2c86:	0a 2e       	mov	r0, r26
    2c88:	06 94       	lsr	r0
    2c8a:	57 95       	ror	r21
    2c8c:	47 95       	ror	r20
    2c8e:	37 95       	ror	r19
    2c90:	27 95       	ror	r18
    2c92:	ba 95       	dec	r27
    2c94:	c9 f7       	brne	.-14     	; 0x2c88 <__ultoa_invert+0xa2>
    2c96:	62 0f       	add	r22, r18
    2c98:	73 1f       	adc	r23, r19
    2c9a:	84 1f       	adc	r24, r20
    2c9c:	95 1f       	adc	r25, r21
    2c9e:	a0 1d       	adc	r26, r0
    2ca0:	08 95       	ret

00002ca2 <eeprom_read_byte>:
    2ca2:	f9 99       	sbic	0x1f, 1	; 31
    2ca4:	fe cf       	rjmp	.-4      	; 0x2ca2 <eeprom_read_byte>
    2ca6:	92 bd       	out	0x22, r25	; 34
    2ca8:	81 bd       	out	0x21, r24	; 33
    2caa:	f8 9a       	sbi	0x1f, 0	; 31
    2cac:	99 27       	eor	r25, r25
    2cae:	80 b5       	in	r24, 0x20	; 32
    2cb0:	08 95       	ret

00002cb2 <eeprom_write_byte>:
    2cb2:	26 2f       	mov	r18, r22

00002cb4 <eeprom_write_r18>:
    2cb4:	f9 99       	sbic	0x1f, 1	; 31
    2cb6:	fe cf       	rjmp	.-4      	; 0x2cb4 <eeprom_write_r18>
    2cb8:	1f ba       	out	0x1f, r1	; 31
    2cba:	92 bd       	out	0x22, r25	; 34
    2cbc:	81 bd       	out	0x21, r24	; 33
    2cbe:	20 bd       	out	0x20, r18	; 32
    2cc0:	0f b6       	in	r0, 0x3f	; 63
    2cc2:	f8 94       	cli
    2cc4:	fa 9a       	sbi	0x1f, 2	; 31
    2cc6:	f9 9a       	sbi	0x1f, 1	; 31
    2cc8:	0f be       	out	0x3f, r0	; 63
    2cca:	01 96       	adiw	r24, 0x01	; 1
    2ccc:	08 95       	ret

00002cce <__muluhisi3>:
    2cce:	0e 94 7a 16 	call	0x2cf4	; 0x2cf4 <__umulhisi3>
    2cd2:	a5 9f       	mul	r26, r21
    2cd4:	90 0d       	add	r25, r0
    2cd6:	b4 9f       	mul	r27, r20
    2cd8:	90 0d       	add	r25, r0
    2cda:	a4 9f       	mul	r26, r20
    2cdc:	80 0d       	add	r24, r0
    2cde:	91 1d       	adc	r25, r1
    2ce0:	11 24       	eor	r1, r1
    2ce2:	08 95       	ret

00002ce4 <__mulshisi3>:
    2ce4:	b7 ff       	sbrs	r27, 7
    2ce6:	0c 94 67 16 	jmp	0x2cce	; 0x2cce <__muluhisi3>

00002cea <__mulohisi3>:
    2cea:	0e 94 67 16 	call	0x2cce	; 0x2cce <__muluhisi3>
    2cee:	82 1b       	sub	r24, r18
    2cf0:	93 0b       	sbc	r25, r19
    2cf2:	08 95       	ret

00002cf4 <__umulhisi3>:
    2cf4:	a2 9f       	mul	r26, r18
    2cf6:	b0 01       	movw	r22, r0
    2cf8:	b3 9f       	mul	r27, r19
    2cfa:	c0 01       	movw	r24, r0
    2cfc:	a3 9f       	mul	r26, r19
    2cfe:	70 0d       	add	r23, r0
    2d00:	81 1d       	adc	r24, r1
    2d02:	11 24       	eor	r1, r1
    2d04:	91 1d       	adc	r25, r1
    2d06:	b2 9f       	mul	r27, r18
    2d08:	70 0d       	add	r23, r0
    2d0a:	81 1d       	adc	r24, r1
    2d0c:	11 24       	eor	r1, r1
    2d0e:	91 1d       	adc	r25, r1
    2d10:	08 95       	ret

00002d12 <_exit>:
    2d12:	f8 94       	cli

00002d14 <__stop_program>:
    2d14:	ff cf       	rjmp	.-2      	; 0x2d14 <__stop_program>
