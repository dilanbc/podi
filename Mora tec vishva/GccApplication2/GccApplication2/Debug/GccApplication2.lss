
GccApplication2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000003c0  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000434  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000004  00800060  00800060  00000434  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000434  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000464  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000028  00000000  00000000  000004a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000071b  00000000  00000000  000004c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000005d2  00000000  00000000  00000be3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000002cf  00000000  00000000  000011b5  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000048  00000000  00000000  00001484  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000387  00000000  00000000  000014cc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000011d  00000000  00000000  00001853  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000018  00000000  00000000  00001970  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 97 00 	jmp	0x12e	; 0x12e <__vector_10>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	20 e0       	ldi	r18, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a4 36       	cpi	r26, 0x64	; 100
  6c:	b2 07       	cpc	r27, r18
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 3e 00 	call	0x7c	; 0x7c <main>
  74:	0c 94 de 01 	jmp	0x3bc	; 0x3bc <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <main>:

int main(void)
{	
	
	/*Ultrasonic Timer Part*/
	DDRD|=(1<<3); //D4 as output
  7c:	81 b3       	in	r24, 0x11	; 17
  7e:	88 60       	ori	r24, 0x08	; 8
  80:	81 bb       	out	0x11, r24	; 17
	TCCR0|=(1<<WGM01);//Enable Compare match mode
  82:	83 b7       	in	r24, 0x33	; 51
  84:	88 60       	ori	r24, 0x08	; 8
  86:	83 bf       	out	0x33, r24	; 51
	TCCR0|=(1<<CS01);//Start timer  prescaler =8
  88:	83 b7       	in	r24, 0x33	; 51
  8a:	82 60       	ori	r24, 0x02	; 2
  8c:	83 bf       	out	0x33, r24	; 51
	TCNT0=0;
  8e:	12 be       	out	0x32, r1	; 50
	OCR0=10;
  90:	8a e0       	ldi	r24, 0x0A	; 10
  92:	8c bf       	out	0x3c, r24	; 60
	/*register value= time*(clock speed/prescale)
	register value=0.000001*(8000000/1)
	register value=10*/
	TIMSK|=(1<<OCIE0);//enable timer Compare inturrept
  94:	89 b7       	in	r24, 0x39	; 57
  96:	82 60       	ori	r24, 0x02	; 2
  98:	89 bf       	out	0x39, r24	; 57
	sei();
  9a:	78 94       	sei
	DDRD|=(1<<4);
  9c:	81 b3       	in	r24, 0x11	; 17
  9e:	80 61       	ori	r24, 0x10	; 16
  a0:	81 bb       	out	0x11, r24	; 17
    while (1) 
    {
		PORTD&=~(1<<3);//TRIG pin low
  a2:	82 b3       	in	r24, 0x12	; 18
  a4:	87 7f       	andi	r24, 0xF7	; 247
  a6:	82 bb       	out	0x12, r24	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  a8:	25 e8       	ldi	r18, 0x85	; 133
  aa:	2a 95       	dec	r18
  ac:	f1 f7       	brne	.-4      	; 0xaa <main+0x2e>
  ae:	00 00       	nop
		_delay_us(50);//wait 50 micro sec
		PORTD|=(1<<3);//TRIG pin high
  b0:	82 b3       	in	r24, 0x12	; 18
  b2:	88 60       	ori	r24, 0x08	; 8
  b4:	82 bb       	out	0x12, r24	; 18
  b6:	85 e8       	ldi	r24, 0x85	; 133
  b8:	8a 95       	dec	r24
  ba:	f1 f7       	brne	.-4      	; 0xb8 <main+0x3c>
  bc:	00 00       	nop
		_delay_us(50);//wait 50 micro sec
		PORTD&=~(1<<3);////TRIG pin low
  be:	82 b3       	in	r24, 0x12	; 18
  c0:	87 7f       	andi	r24, 0xF7	; 247
  c2:	82 bb       	out	0x12, r24	; 18
		while(!(PIND&(1<<2)))//wait for pulse
  c4:	04 c0       	rjmp	.+8      	; 0xce <main+0x52>
		TimerCalVal=0;//rest timer
  c6:	10 92 63 00 	sts	0x0063, r1	; 0x800063 <TimerCalVal+0x1>
  ca:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <TimerCalVal>
		PORTD&=~(1<<3);//TRIG pin low
		_delay_us(50);//wait 50 micro sec
		PORTD|=(1<<3);//TRIG pin high
		_delay_us(50);//wait 50 micro sec
		PORTD&=~(1<<3);////TRIG pin low
		while(!(PIND&(1<<2)))//wait for pulse
  ce:	82 9b       	sbis	0x10, 2	; 16
  d0:	fa cf       	rjmp	.-12     	; 0xc6 <main+0x4a>
  d2:	14 c0       	rjmp	.+40     	; 0xfc <main+0x80>
		TimerCalVal=0;//rest timer
		while((PIND&(1<<2)))////wait for pulse down
		ultralength=TimerCalVal/4.1282;//copy timer value
  d4:	60 91 62 00 	lds	r22, 0x0062	; 0x800062 <TimerCalVal>
  d8:	70 91 63 00 	lds	r23, 0x0063	; 0x800063 <TimerCalVal+0x1>
  dc:	80 e0       	ldi	r24, 0x00	; 0
  de:	90 e0       	ldi	r25, 0x00	; 0
  e0:	0e 94 50 01 	call	0x2a0	; 0x2a0 <__floatunsisf>
  e4:	27 e3       	ldi	r18, 0x37	; 55
  e6:	3a e1       	ldi	r19, 0x1A	; 26
  e8:	44 e8       	ldi	r20, 0x84	; 132
  ea:	50 e4       	ldi	r21, 0x40	; 64
  ec:	0e 94 af 00 	call	0x15e	; 0x15e <__divsf3>
  f0:	0e 94 21 01 	call	0x242	; 0x242 <__fixunssfsi>
  f4:	70 93 61 00 	sts	0x0061, r23	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
  f8:	60 93 60 00 	sts	0x0060, r22	; 0x800060 <__DATA_REGION_ORIGIN__>
		PORTD|=(1<<3);//TRIG pin high
		_delay_us(50);//wait 50 micro sec
		PORTD&=~(1<<3);////TRIG pin low
		while(!(PIND&(1<<2)))//wait for pulse
		TimerCalVal=0;//rest timer
		while((PIND&(1<<2)))////wait for pulse down
  fc:	82 99       	sbic	0x10, 2	; 16
  fe:	ea cf       	rjmp	.-44     	; 0xd4 <main+0x58>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 100:	9f ef       	ldi	r25, 0xFF	; 255
 102:	20 e7       	ldi	r18, 0x70	; 112
 104:	82 e0       	ldi	r24, 0x02	; 2
 106:	91 50       	subi	r25, 0x01	; 1
 108:	20 40       	sbci	r18, 0x00	; 0
 10a:	80 40       	sbci	r24, 0x00	; 0
 10c:	e1 f7       	brne	.-8      	; 0x106 <main+0x8a>
 10e:	00 c0       	rjmp	.+0      	; 0x110 <main+0x94>
 110:	00 00       	nop
		ultralength=TimerCalVal/4.1282;//copy timer value
		
		
		_delay_ms(100);
		
		if (ultralength<50)
 112:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 116:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 11a:	c2 97       	sbiw	r24, 0x32	; 50
 11c:	20 f4       	brcc	.+8      	; 0x126 <main+0xaa>
		{PORTD|=(1<<4);
 11e:	82 b3       	in	r24, 0x12	; 18
 120:	80 61       	ori	r24, 0x10	; 16
 122:	82 bb       	out	0x12, r24	; 18
 124:	be cf       	rjmp	.-132    	; 0xa2 <main+0x26>
		
		} 
		else
		{PORTD&=~(1<<4);
 126:	82 b3       	in	r24, 0x12	; 18
 128:	8f 7e       	andi	r24, 0xEF	; 239
 12a:	82 bb       	out	0x12, r24	; 18
 12c:	ba cf       	rjmp	.-140    	; 0xa2 <main+0x26>

0000012e <__vector_10>:
		}
		
    }
}

ISR(TIMER0_COMP_vect){//ultrasonic
 12e:	1f 92       	push	r1
 130:	0f 92       	push	r0
 132:	0f b6       	in	r0, 0x3f	; 63
 134:	0f 92       	push	r0
 136:	11 24       	eor	r1, r1
 138:	8f 93       	push	r24
 13a:	9f 93       	push	r25
	TimerCalVal++;
 13c:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <TimerCalVal>
 140:	90 91 63 00 	lds	r25, 0x0063	; 0x800063 <TimerCalVal+0x1>
 144:	01 96       	adiw	r24, 0x01	; 1
 146:	90 93 63 00 	sts	0x0063, r25	; 0x800063 <TimerCalVal+0x1>
 14a:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <TimerCalVal>
	TCNT0=0;
 14e:	12 be       	out	0x32, r1	; 50
	
}
 150:	9f 91       	pop	r25
 152:	8f 91       	pop	r24
 154:	0f 90       	pop	r0
 156:	0f be       	out	0x3f, r0	; 63
 158:	0f 90       	pop	r0
 15a:	1f 90       	pop	r1
 15c:	18 95       	reti

0000015e <__divsf3>:
 15e:	0e 94 c3 00 	call	0x186	; 0x186 <__divsf3x>
 162:	0c 94 a4 01 	jmp	0x348	; 0x348 <__fp_round>
 166:	0e 94 9d 01 	call	0x33a	; 0x33a <__fp_pscB>
 16a:	58 f0       	brcs	.+22     	; 0x182 <__divsf3+0x24>
 16c:	0e 94 96 01 	call	0x32c	; 0x32c <__fp_pscA>
 170:	40 f0       	brcs	.+16     	; 0x182 <__divsf3+0x24>
 172:	29 f4       	brne	.+10     	; 0x17e <__divsf3+0x20>
 174:	5f 3f       	cpi	r21, 0xFF	; 255
 176:	29 f0       	breq	.+10     	; 0x182 <__divsf3+0x24>
 178:	0c 94 8d 01 	jmp	0x31a	; 0x31a <__fp_inf>
 17c:	51 11       	cpse	r21, r1
 17e:	0c 94 d8 01 	jmp	0x3b0	; 0x3b0 <__fp_szero>
 182:	0c 94 93 01 	jmp	0x326	; 0x326 <__fp_nan>

00000186 <__divsf3x>:
 186:	0e 94 b5 01 	call	0x36a	; 0x36a <__fp_split3>
 18a:	68 f3       	brcs	.-38     	; 0x166 <__divsf3+0x8>

0000018c <__divsf3_pse>:
 18c:	99 23       	and	r25, r25
 18e:	b1 f3       	breq	.-20     	; 0x17c <__divsf3+0x1e>
 190:	55 23       	and	r21, r21
 192:	91 f3       	breq	.-28     	; 0x178 <__divsf3+0x1a>
 194:	95 1b       	sub	r25, r21
 196:	55 0b       	sbc	r21, r21
 198:	bb 27       	eor	r27, r27
 19a:	aa 27       	eor	r26, r26
 19c:	62 17       	cp	r22, r18
 19e:	73 07       	cpc	r23, r19
 1a0:	84 07       	cpc	r24, r20
 1a2:	38 f0       	brcs	.+14     	; 0x1b2 <__divsf3_pse+0x26>
 1a4:	9f 5f       	subi	r25, 0xFF	; 255
 1a6:	5f 4f       	sbci	r21, 0xFF	; 255
 1a8:	22 0f       	add	r18, r18
 1aa:	33 1f       	adc	r19, r19
 1ac:	44 1f       	adc	r20, r20
 1ae:	aa 1f       	adc	r26, r26
 1b0:	a9 f3       	breq	.-22     	; 0x19c <__divsf3_pse+0x10>
 1b2:	35 d0       	rcall	.+106    	; 0x21e <__divsf3_pse+0x92>
 1b4:	0e 2e       	mov	r0, r30
 1b6:	3a f0       	brmi	.+14     	; 0x1c6 <__divsf3_pse+0x3a>
 1b8:	e0 e8       	ldi	r30, 0x80	; 128
 1ba:	32 d0       	rcall	.+100    	; 0x220 <__divsf3_pse+0x94>
 1bc:	91 50       	subi	r25, 0x01	; 1
 1be:	50 40       	sbci	r21, 0x00	; 0
 1c0:	e6 95       	lsr	r30
 1c2:	00 1c       	adc	r0, r0
 1c4:	ca f7       	brpl	.-14     	; 0x1b8 <__divsf3_pse+0x2c>
 1c6:	2b d0       	rcall	.+86     	; 0x21e <__divsf3_pse+0x92>
 1c8:	fe 2f       	mov	r31, r30
 1ca:	29 d0       	rcall	.+82     	; 0x21e <__divsf3_pse+0x92>
 1cc:	66 0f       	add	r22, r22
 1ce:	77 1f       	adc	r23, r23
 1d0:	88 1f       	adc	r24, r24
 1d2:	bb 1f       	adc	r27, r27
 1d4:	26 17       	cp	r18, r22
 1d6:	37 07       	cpc	r19, r23
 1d8:	48 07       	cpc	r20, r24
 1da:	ab 07       	cpc	r26, r27
 1dc:	b0 e8       	ldi	r27, 0x80	; 128
 1de:	09 f0       	breq	.+2      	; 0x1e2 <__divsf3_pse+0x56>
 1e0:	bb 0b       	sbc	r27, r27
 1e2:	80 2d       	mov	r24, r0
 1e4:	bf 01       	movw	r22, r30
 1e6:	ff 27       	eor	r31, r31
 1e8:	93 58       	subi	r25, 0x83	; 131
 1ea:	5f 4f       	sbci	r21, 0xFF	; 255
 1ec:	3a f0       	brmi	.+14     	; 0x1fc <__divsf3_pse+0x70>
 1ee:	9e 3f       	cpi	r25, 0xFE	; 254
 1f0:	51 05       	cpc	r21, r1
 1f2:	78 f0       	brcs	.+30     	; 0x212 <__divsf3_pse+0x86>
 1f4:	0c 94 8d 01 	jmp	0x31a	; 0x31a <__fp_inf>
 1f8:	0c 94 d8 01 	jmp	0x3b0	; 0x3b0 <__fp_szero>
 1fc:	5f 3f       	cpi	r21, 0xFF	; 255
 1fe:	e4 f3       	brlt	.-8      	; 0x1f8 <__divsf3_pse+0x6c>
 200:	98 3e       	cpi	r25, 0xE8	; 232
 202:	d4 f3       	brlt	.-12     	; 0x1f8 <__divsf3_pse+0x6c>
 204:	86 95       	lsr	r24
 206:	77 95       	ror	r23
 208:	67 95       	ror	r22
 20a:	b7 95       	ror	r27
 20c:	f7 95       	ror	r31
 20e:	9f 5f       	subi	r25, 0xFF	; 255
 210:	c9 f7       	brne	.-14     	; 0x204 <__divsf3_pse+0x78>
 212:	88 0f       	add	r24, r24
 214:	91 1d       	adc	r25, r1
 216:	96 95       	lsr	r25
 218:	87 95       	ror	r24
 21a:	97 f9       	bld	r25, 7
 21c:	08 95       	ret
 21e:	e1 e0       	ldi	r30, 0x01	; 1
 220:	66 0f       	add	r22, r22
 222:	77 1f       	adc	r23, r23
 224:	88 1f       	adc	r24, r24
 226:	bb 1f       	adc	r27, r27
 228:	62 17       	cp	r22, r18
 22a:	73 07       	cpc	r23, r19
 22c:	84 07       	cpc	r24, r20
 22e:	ba 07       	cpc	r27, r26
 230:	20 f0       	brcs	.+8      	; 0x23a <__divsf3_pse+0xae>
 232:	62 1b       	sub	r22, r18
 234:	73 0b       	sbc	r23, r19
 236:	84 0b       	sbc	r24, r20
 238:	ba 0b       	sbc	r27, r26
 23a:	ee 1f       	adc	r30, r30
 23c:	88 f7       	brcc	.-30     	; 0x220 <__divsf3_pse+0x94>
 23e:	e0 95       	com	r30
 240:	08 95       	ret

00000242 <__fixunssfsi>:
 242:	0e 94 bd 01 	call	0x37a	; 0x37a <__fp_splitA>
 246:	88 f0       	brcs	.+34     	; 0x26a <__fixunssfsi+0x28>
 248:	9f 57       	subi	r25, 0x7F	; 127
 24a:	98 f0       	brcs	.+38     	; 0x272 <__fixunssfsi+0x30>
 24c:	b9 2f       	mov	r27, r25
 24e:	99 27       	eor	r25, r25
 250:	b7 51       	subi	r27, 0x17	; 23
 252:	b0 f0       	brcs	.+44     	; 0x280 <__fixunssfsi+0x3e>
 254:	e1 f0       	breq	.+56     	; 0x28e <__fixunssfsi+0x4c>
 256:	66 0f       	add	r22, r22
 258:	77 1f       	adc	r23, r23
 25a:	88 1f       	adc	r24, r24
 25c:	99 1f       	adc	r25, r25
 25e:	1a f0       	brmi	.+6      	; 0x266 <__fixunssfsi+0x24>
 260:	ba 95       	dec	r27
 262:	c9 f7       	brne	.-14     	; 0x256 <__fixunssfsi+0x14>
 264:	14 c0       	rjmp	.+40     	; 0x28e <__fixunssfsi+0x4c>
 266:	b1 30       	cpi	r27, 0x01	; 1
 268:	91 f0       	breq	.+36     	; 0x28e <__fixunssfsi+0x4c>
 26a:	0e 94 d7 01 	call	0x3ae	; 0x3ae <__fp_zero>
 26e:	b1 e0       	ldi	r27, 0x01	; 1
 270:	08 95       	ret
 272:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__fp_zero>
 276:	67 2f       	mov	r22, r23
 278:	78 2f       	mov	r23, r24
 27a:	88 27       	eor	r24, r24
 27c:	b8 5f       	subi	r27, 0xF8	; 248
 27e:	39 f0       	breq	.+14     	; 0x28e <__fixunssfsi+0x4c>
 280:	b9 3f       	cpi	r27, 0xF9	; 249
 282:	cc f3       	brlt	.-14     	; 0x276 <__fixunssfsi+0x34>
 284:	86 95       	lsr	r24
 286:	77 95       	ror	r23
 288:	67 95       	ror	r22
 28a:	b3 95       	inc	r27
 28c:	d9 f7       	brne	.-10     	; 0x284 <__fixunssfsi+0x42>
 28e:	3e f4       	brtc	.+14     	; 0x29e <__fixunssfsi+0x5c>
 290:	90 95       	com	r25
 292:	80 95       	com	r24
 294:	70 95       	com	r23
 296:	61 95       	neg	r22
 298:	7f 4f       	sbci	r23, 0xFF	; 255
 29a:	8f 4f       	sbci	r24, 0xFF	; 255
 29c:	9f 4f       	sbci	r25, 0xFF	; 255
 29e:	08 95       	ret

000002a0 <__floatunsisf>:
 2a0:	e8 94       	clt
 2a2:	09 c0       	rjmp	.+18     	; 0x2b6 <__floatsisf+0x12>

000002a4 <__floatsisf>:
 2a4:	97 fb       	bst	r25, 7
 2a6:	3e f4       	brtc	.+14     	; 0x2b6 <__floatsisf+0x12>
 2a8:	90 95       	com	r25
 2aa:	80 95       	com	r24
 2ac:	70 95       	com	r23
 2ae:	61 95       	neg	r22
 2b0:	7f 4f       	sbci	r23, 0xFF	; 255
 2b2:	8f 4f       	sbci	r24, 0xFF	; 255
 2b4:	9f 4f       	sbci	r25, 0xFF	; 255
 2b6:	99 23       	and	r25, r25
 2b8:	a9 f0       	breq	.+42     	; 0x2e4 <__floatsisf+0x40>
 2ba:	f9 2f       	mov	r31, r25
 2bc:	96 e9       	ldi	r25, 0x96	; 150
 2be:	bb 27       	eor	r27, r27
 2c0:	93 95       	inc	r25
 2c2:	f6 95       	lsr	r31
 2c4:	87 95       	ror	r24
 2c6:	77 95       	ror	r23
 2c8:	67 95       	ror	r22
 2ca:	b7 95       	ror	r27
 2cc:	f1 11       	cpse	r31, r1
 2ce:	f8 cf       	rjmp	.-16     	; 0x2c0 <__floatsisf+0x1c>
 2d0:	fa f4       	brpl	.+62     	; 0x310 <__floatsisf+0x6c>
 2d2:	bb 0f       	add	r27, r27
 2d4:	11 f4       	brne	.+4      	; 0x2da <__floatsisf+0x36>
 2d6:	60 ff       	sbrs	r22, 0
 2d8:	1b c0       	rjmp	.+54     	; 0x310 <__floatsisf+0x6c>
 2da:	6f 5f       	subi	r22, 0xFF	; 255
 2dc:	7f 4f       	sbci	r23, 0xFF	; 255
 2de:	8f 4f       	sbci	r24, 0xFF	; 255
 2e0:	9f 4f       	sbci	r25, 0xFF	; 255
 2e2:	16 c0       	rjmp	.+44     	; 0x310 <__floatsisf+0x6c>
 2e4:	88 23       	and	r24, r24
 2e6:	11 f0       	breq	.+4      	; 0x2ec <__floatsisf+0x48>
 2e8:	96 e9       	ldi	r25, 0x96	; 150
 2ea:	11 c0       	rjmp	.+34     	; 0x30e <__floatsisf+0x6a>
 2ec:	77 23       	and	r23, r23
 2ee:	21 f0       	breq	.+8      	; 0x2f8 <__floatsisf+0x54>
 2f0:	9e e8       	ldi	r25, 0x8E	; 142
 2f2:	87 2f       	mov	r24, r23
 2f4:	76 2f       	mov	r23, r22
 2f6:	05 c0       	rjmp	.+10     	; 0x302 <__floatsisf+0x5e>
 2f8:	66 23       	and	r22, r22
 2fa:	71 f0       	breq	.+28     	; 0x318 <__floatsisf+0x74>
 2fc:	96 e8       	ldi	r25, 0x86	; 134
 2fe:	86 2f       	mov	r24, r22
 300:	70 e0       	ldi	r23, 0x00	; 0
 302:	60 e0       	ldi	r22, 0x00	; 0
 304:	2a f0       	brmi	.+10     	; 0x310 <__floatsisf+0x6c>
 306:	9a 95       	dec	r25
 308:	66 0f       	add	r22, r22
 30a:	77 1f       	adc	r23, r23
 30c:	88 1f       	adc	r24, r24
 30e:	da f7       	brpl	.-10     	; 0x306 <__floatsisf+0x62>
 310:	88 0f       	add	r24, r24
 312:	96 95       	lsr	r25
 314:	87 95       	ror	r24
 316:	97 f9       	bld	r25, 7
 318:	08 95       	ret

0000031a <__fp_inf>:
 31a:	97 f9       	bld	r25, 7
 31c:	9f 67       	ori	r25, 0x7F	; 127
 31e:	80 e8       	ldi	r24, 0x80	; 128
 320:	70 e0       	ldi	r23, 0x00	; 0
 322:	60 e0       	ldi	r22, 0x00	; 0
 324:	08 95       	ret

00000326 <__fp_nan>:
 326:	9f ef       	ldi	r25, 0xFF	; 255
 328:	80 ec       	ldi	r24, 0xC0	; 192
 32a:	08 95       	ret

0000032c <__fp_pscA>:
 32c:	00 24       	eor	r0, r0
 32e:	0a 94       	dec	r0
 330:	16 16       	cp	r1, r22
 332:	17 06       	cpc	r1, r23
 334:	18 06       	cpc	r1, r24
 336:	09 06       	cpc	r0, r25
 338:	08 95       	ret

0000033a <__fp_pscB>:
 33a:	00 24       	eor	r0, r0
 33c:	0a 94       	dec	r0
 33e:	12 16       	cp	r1, r18
 340:	13 06       	cpc	r1, r19
 342:	14 06       	cpc	r1, r20
 344:	05 06       	cpc	r0, r21
 346:	08 95       	ret

00000348 <__fp_round>:
 348:	09 2e       	mov	r0, r25
 34a:	03 94       	inc	r0
 34c:	00 0c       	add	r0, r0
 34e:	11 f4       	brne	.+4      	; 0x354 <__fp_round+0xc>
 350:	88 23       	and	r24, r24
 352:	52 f0       	brmi	.+20     	; 0x368 <__fp_round+0x20>
 354:	bb 0f       	add	r27, r27
 356:	40 f4       	brcc	.+16     	; 0x368 <__fp_round+0x20>
 358:	bf 2b       	or	r27, r31
 35a:	11 f4       	brne	.+4      	; 0x360 <__fp_round+0x18>
 35c:	60 ff       	sbrs	r22, 0
 35e:	04 c0       	rjmp	.+8      	; 0x368 <__fp_round+0x20>
 360:	6f 5f       	subi	r22, 0xFF	; 255
 362:	7f 4f       	sbci	r23, 0xFF	; 255
 364:	8f 4f       	sbci	r24, 0xFF	; 255
 366:	9f 4f       	sbci	r25, 0xFF	; 255
 368:	08 95       	ret

0000036a <__fp_split3>:
 36a:	57 fd       	sbrc	r21, 7
 36c:	90 58       	subi	r25, 0x80	; 128
 36e:	44 0f       	add	r20, r20
 370:	55 1f       	adc	r21, r21
 372:	59 f0       	breq	.+22     	; 0x38a <__fp_splitA+0x10>
 374:	5f 3f       	cpi	r21, 0xFF	; 255
 376:	71 f0       	breq	.+28     	; 0x394 <__fp_splitA+0x1a>
 378:	47 95       	ror	r20

0000037a <__fp_splitA>:
 37a:	88 0f       	add	r24, r24
 37c:	97 fb       	bst	r25, 7
 37e:	99 1f       	adc	r25, r25
 380:	61 f0       	breq	.+24     	; 0x39a <__fp_splitA+0x20>
 382:	9f 3f       	cpi	r25, 0xFF	; 255
 384:	79 f0       	breq	.+30     	; 0x3a4 <__fp_splitA+0x2a>
 386:	87 95       	ror	r24
 388:	08 95       	ret
 38a:	12 16       	cp	r1, r18
 38c:	13 06       	cpc	r1, r19
 38e:	14 06       	cpc	r1, r20
 390:	55 1f       	adc	r21, r21
 392:	f2 cf       	rjmp	.-28     	; 0x378 <__fp_split3+0xe>
 394:	46 95       	lsr	r20
 396:	f1 df       	rcall	.-30     	; 0x37a <__fp_splitA>
 398:	08 c0       	rjmp	.+16     	; 0x3aa <__fp_splitA+0x30>
 39a:	16 16       	cp	r1, r22
 39c:	17 06       	cpc	r1, r23
 39e:	18 06       	cpc	r1, r24
 3a0:	99 1f       	adc	r25, r25
 3a2:	f1 cf       	rjmp	.-30     	; 0x386 <__fp_splitA+0xc>
 3a4:	86 95       	lsr	r24
 3a6:	71 05       	cpc	r23, r1
 3a8:	61 05       	cpc	r22, r1
 3aa:	08 94       	sec
 3ac:	08 95       	ret

000003ae <__fp_zero>:
 3ae:	e8 94       	clt

000003b0 <__fp_szero>:
 3b0:	bb 27       	eor	r27, r27
 3b2:	66 27       	eor	r22, r22
 3b4:	77 27       	eor	r23, r23
 3b6:	cb 01       	movw	r24, r22
 3b8:	97 f9       	bld	r25, 7
 3ba:	08 95       	ret

000003bc <_exit>:
 3bc:	f8 94       	cli

000003be <__stop_program>:
 3be:	ff cf       	rjmp	.-2      	; 0x3be <__stop_program>
