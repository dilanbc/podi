
door2313a.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000720  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000010  00800060  00000720  000007b4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000002b  00800070  00800070  000007c4  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000007c4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000007f4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000118  00000000  00000000  00000834  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001b4e  00000000  00000000  0000094c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000779  00000000  00000000  0000249a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000b6c  00000000  00000000  00002c13  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000003f8  00000000  00000000  00003780  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000973  00000000  00000000  00003b78  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000014aa  00000000  00000000  000044eb  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000108  00000000  00000000  00005995  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	14 c0       	rjmp	.+40     	; 0x2a <__ctors_end>
   2:	2c c0       	rjmp	.+88     	; 0x5c <__bad_interrupt>
   4:	2b c0       	rjmp	.+86     	; 0x5c <__bad_interrupt>
   6:	2a c0       	rjmp	.+84     	; 0x5c <__bad_interrupt>
   8:	29 c0       	rjmp	.+82     	; 0x5c <__bad_interrupt>
   a:	28 c0       	rjmp	.+80     	; 0x5c <__bad_interrupt>
   c:	27 c0       	rjmp	.+78     	; 0x5c <__bad_interrupt>
   e:	26 c0       	rjmp	.+76     	; 0x5c <__bad_interrupt>
  10:	25 c0       	rjmp	.+74     	; 0x5c <__bad_interrupt>
  12:	24 c0       	rjmp	.+72     	; 0x5c <__bad_interrupt>
  14:	23 c0       	rjmp	.+70     	; 0x5c <__bad_interrupt>
  16:	22 c0       	rjmp	.+68     	; 0x5c <__bad_interrupt>
  18:	21 c0       	rjmp	.+66     	; 0x5c <__bad_interrupt>
  1a:	57 c0       	rjmp	.+174    	; 0xca <__vector_13>
  1c:	1f c0       	rjmp	.+62     	; 0x5c <__bad_interrupt>
  1e:	1e c0       	rjmp	.+60     	; 0x5c <__bad_interrupt>
  20:	1d c0       	rjmp	.+58     	; 0x5c <__bad_interrupt>
  22:	1c c0       	rjmp	.+56     	; 0x5c <__bad_interrupt>
  24:	1b c0       	rjmp	.+54     	; 0x5c <__bad_interrupt>
  26:	1a c0       	rjmp	.+52     	; 0x5c <__bad_interrupt>
  28:	19 c0       	rjmp	.+50     	; 0x5c <__bad_interrupt>

0000002a <__ctors_end>:
  2a:	11 24       	eor	r1, r1
  2c:	1f be       	out	0x3f, r1	; 63
  2e:	cf ed       	ldi	r28, 0xDF	; 223
  30:	cd bf       	out	0x3d, r28	; 61

00000032 <__do_copy_data>:
  32:	10 e0       	ldi	r17, 0x00	; 0
  34:	a0 e6       	ldi	r26, 0x60	; 96
  36:	b0 e0       	ldi	r27, 0x00	; 0
  38:	e0 e2       	ldi	r30, 0x20	; 32
  3a:	f7 e0       	ldi	r31, 0x07	; 7
  3c:	02 c0       	rjmp	.+4      	; 0x42 <__SREG__+0x3>
  3e:	05 90       	lpm	r0, Z+
  40:	0d 92       	st	X+, r0
  42:	a0 37       	cpi	r26, 0x70	; 112
  44:	b1 07       	cpc	r27, r17
  46:	d9 f7       	brne	.-10     	; 0x3e <__SP_L__+0x1>

00000048 <__do_clear_bss>:
  48:	20 e0       	ldi	r18, 0x00	; 0
  4a:	a0 e7       	ldi	r26, 0x70	; 112
  4c:	b0 e0       	ldi	r27, 0x00	; 0
  4e:	01 c0       	rjmp	.+2      	; 0x52 <.do_clear_bss_start>

00000050 <.do_clear_bss_loop>:
  50:	1d 92       	st	X+, r1

00000052 <.do_clear_bss_start>:
  52:	ab 39       	cpi	r26, 0x9B	; 155
  54:	b2 07       	cpc	r27, r18
  56:	e1 f7       	brne	.-8      	; 0x50 <.do_clear_bss_loop>
  58:	d2 d2       	rcall	.+1444   	; 0x5fe <main>
  5a:	60 c3       	rjmp	.+1728   	; 0x71c <_exit>

0000005c <__bad_interrupt>:
  5c:	d1 cf       	rjmp	.-94     	; 0x0 <__vectors>

0000005e <_Z13SoftUART_Initv>:
  buff[0] = PICC_HALT;
  buff[1] = 0;
  CalulateCRC(buff, 2, &buff[2]);

  status = MFRC522_ToCard(PCD_TRANSCEIVE, buff, 4, buff,&unLen);
}
  5e:	d1 9a       	sbi	0x1a, 1	; 26
  60:	d9 9a       	sbi	0x1b, 1	; 27
  62:	80 b7       	in	r24, 0x30	; 48
  64:	82 60       	ori	r24, 0x02	; 2
  66:	80 bf       	out	0x30, r24	; 48
  68:	89 b7       	in	r24, 0x39	; 57
  6a:	81 60       	ori	r24, 0x01	; 1
  6c:	89 bf       	out	0x39, r24	; 57
  6e:	88 e3       	ldi	r24, 0x38	; 56
  70:	86 bf       	out	0x36, r24	; 54
  72:	78 94       	sei
  74:	08 95       	ret

00000076 <_Z11SoftUART_txc>:
  76:	d9 9a       	sbi	0x1b, 1	; 27
  78:	20 91 98 00 	lds	r18, 0x0098	; 0x800098 <tx_shift_reg>
  7c:	30 91 99 00 	lds	r19, 0x0099	; 0x800099 <tx_shift_reg+0x1>
  80:	23 2b       	or	r18, r19
  82:	11 f5       	brne	.+68     	; 0xc8 <_Z11SoftUART_txc+0x52>
  84:	90 e0       	ldi	r25, 0x00	; 0
  86:	88 0f       	add	r24, r24
  88:	99 1f       	adc	r25, r25
  8a:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <tx_shift_reg+0x1>
  8e:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <tx_shift_reg>
  92:	80 91 98 00 	lds	r24, 0x0098	; 0x800098 <tx_shift_reg>
  96:	90 91 99 00 	lds	r25, 0x0099	; 0x800099 <tx_shift_reg+0x1>
  9a:	8e 7f       	andi	r24, 0xFE	; 254
  9c:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <tx_shift_reg+0x1>
  a0:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <tx_shift_reg>
  a4:	80 91 98 00 	lds	r24, 0x0098	; 0x800098 <tx_shift_reg>
  a8:	90 91 99 00 	lds	r25, 0x0099	; 0x800099 <tx_shift_reg+0x1>
  ac:	92 60       	ori	r25, 0x02	; 2
  ae:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <tx_shift_reg+0x1>
  b2:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <tx_shift_reg>
  b6:	83 b7       	in	r24, 0x33	; 51
  b8:	82 60       	ori	r24, 0x02	; 2
  ba:	83 bf       	out	0x33, r24	; 51
  bc:	80 91 98 00 	lds	r24, 0x0098	; 0x800098 <tx_shift_reg>
  c0:	90 91 99 00 	lds	r25, 0x0099	; 0x800099 <tx_shift_reg+0x1>
  c4:	89 2b       	or	r24, r25
  c6:	d1 f7       	brne	.-12     	; 0xbc <_Z11SoftUART_txc+0x46>
  c8:	08 95       	ret

000000ca <__vector_13>:
  ca:	1f 92       	push	r1
  cc:	0f 92       	push	r0
  ce:	0f b6       	in	r0, 0x3f	; 63
  d0:	0f 92       	push	r0
  d2:	11 24       	eor	r1, r1
  d4:	8f 93       	push	r24
  d6:	9f 93       	push	r25
  d8:	80 91 98 00 	lds	r24, 0x0098	; 0x800098 <tx_shift_reg>
  dc:	90 91 99 00 	lds	r25, 0x0099	; 0x800099 <tx_shift_reg+0x1>
  e0:	80 ff       	sbrs	r24, 0
  e2:	02 c0       	rjmp	.+4      	; 0xe8 <__stack+0x9>
  e4:	d9 9a       	sbi	0x1b, 1	; 27
  e6:	01 c0       	rjmp	.+2      	; 0xea <__stack+0xb>
  e8:	d9 98       	cbi	0x1b, 1	; 27
  ea:	80 91 98 00 	lds	r24, 0x0098	; 0x800098 <tx_shift_reg>
  ee:	90 91 99 00 	lds	r25, 0x0099	; 0x800099 <tx_shift_reg+0x1>
  f2:	96 95       	lsr	r25
  f4:	87 95       	ror	r24
  f6:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <tx_shift_reg+0x1>
  fa:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <tx_shift_reg>
  fe:	80 91 98 00 	lds	r24, 0x0098	; 0x800098 <tx_shift_reg>
 102:	90 91 99 00 	lds	r25, 0x0099	; 0x800099 <tx_shift_reg+0x1>
 106:	89 2b       	or	r24, r25
 108:	21 f4       	brne	.+8      	; 0x112 <__stack+0x33>
 10a:	83 b7       	in	r24, 0x33	; 51
 10c:	88 7f       	andi	r24, 0xF8	; 248
 10e:	83 bf       	out	0x33, r24	; 51
 110:	12 be       	out	0x32, r1	; 50
 112:	9f 91       	pop	r25
 114:	8f 91       	pop	r24
 116:	0f 90       	pop	r0
 118:	0f be       	out	0x3f, r0	; 63
 11a:	0f 90       	pop	r0
 11c:	1f 90       	pop	r1
 11e:	18 95       	reti

00000120 <_Z16SoftUSART_tx_strPc>:
 120:	cf 93       	push	r28
 122:	df 93       	push	r29
 124:	ec 01       	movw	r28, r24
 126:	88 81       	ld	r24, Y
 128:	88 23       	and	r24, r24
 12a:	29 f0       	breq	.+10     	; 0x136 <_Z16SoftUSART_tx_strPc+0x16>
 12c:	21 96       	adiw	r28, 0x01	; 1
 12e:	a3 df       	rcall	.-186    	; 0x76 <_Z11SoftUART_txc>
 130:	89 91       	ld	r24, Y+
 132:	81 11       	cpse	r24, r1
 134:	fc cf       	rjmp	.-8      	; 0x12e <_Z16SoftUSART_tx_strPc+0xe>
 136:	df 91       	pop	r29
 138:	cf 91       	pop	r28
 13a:	08 95       	ret

0000013c <_Z18SoftUSART_TxNumberlh>:
 13c:	dc 01       	movw	r26, r24
 13e:	cb 01       	movw	r24, r22
 140:	50 e0       	ldi	r21, 0x00	; 0
 142:	6a e9       	ldi	r22, 0x9A	; 154
 144:	70 e0       	ldi	r23, 0x00	; 0
 146:	ad d2       	rcall	.+1370   	; 0x6a2 <itoa>
 148:	8a e9       	ldi	r24, 0x9A	; 154
 14a:	90 e0       	ldi	r25, 0x00	; 0
 14c:	e9 df       	rcall	.-46     	; 0x120 <_Z16SoftUSART_tx_strPc>
 14e:	08 95       	ret

00000150 <_Z18SoftUSART_tx_strlnPc>:
 150:	cf 93       	push	r28
 152:	df 93       	push	r29
 154:	ec 01       	movw	r28, r24
 156:	88 81       	ld	r24, Y
 158:	88 23       	and	r24, r24
 15a:	29 f0       	breq	.+10     	; 0x166 <_Z18SoftUSART_tx_strlnPc+0x16>
 15c:	21 96       	adiw	r28, 0x01	; 1
 15e:	8b df       	rcall	.-234    	; 0x76 <_Z11SoftUART_txc>
 160:	89 91       	ld	r24, Y+
 162:	81 11       	cpse	r24, r1
 164:	fc cf       	rjmp	.-8      	; 0x15e <_Z18SoftUSART_tx_strlnPc+0xe>
 166:	8d e0       	ldi	r24, 0x0D	; 13
 168:	86 df       	rcall	.-244    	; 0x76 <_Z11SoftUART_txc>
 16a:	8a e0       	ldi	r24, 0x0A	; 10
 16c:	84 df       	rcall	.-248    	; 0x76 <_Z11SoftUART_txc>
 16e:	df 91       	pop	r29
 170:	cf 91       	pop	r28
 172:	08 95       	ret

00000174 <_Z8SPI_Initj>:
 174:	27 b3       	in	r18, 0x17	; 23
 176:	22 6b       	ori	r18, 0xB2	; 178
 178:	27 bb       	out	0x17, r18	; 23
 17a:	be 98       	cbi	0x17, 6	; 23
 17c:	c4 9a       	sbi	0x18, 4	; 24
 17e:	20 ec       	ldi	r18, 0xC0	; 192
 180:	23 b9       	out	0x03, r18	; 3
 182:	28 e1       	ldi	r18, 0x18	; 24
 184:	2a b9       	out	0x0a, r18	; 10
 186:	9c 01       	movw	r18, r24
 188:	40 e0       	ldi	r20, 0x00	; 0
 18a:	50 e0       	ldi	r21, 0x00	; 0
 18c:	60 e9       	ldi	r22, 0x90	; 144
 18e:	70 ed       	ldi	r23, 0xD0	; 208
 190:	83 e0       	ldi	r24, 0x03	; 3
 192:	90 e0       	ldi	r25, 0x00	; 0
 194:	64 d2       	rcall	.+1224   	; 0x65e <__udivmodsi4>
 196:	21 50       	subi	r18, 0x01	; 1
 198:	31 09       	sbc	r19, r1
 19a:	32 b9       	out	0x02, r19	; 2
 19c:	29 b9       	out	0x09, r18	; 9
 19e:	08 95       	ret

000001a0 <_Z9SPI_Writeh>:
 1a0:	5d 9b       	sbis	0x0b, 5	; 11
 1a2:	fe cf       	rjmp	.-4      	; 0x1a0 <_Z9SPI_Writeh>
 1a4:	8c b9       	out	0x0c, r24	; 12
 1a6:	5f 9b       	sbis	0x0b, 7	; 11
 1a8:	fe cf       	rjmp	.-4      	; 0x1a6 <_Z9SPI_Writeh+0x6>
 1aa:	8c b1       	in	r24, 0x0c	; 12
 1ac:	08 95       	ret

000001ae <_Z15Separate_hexP10h>:
 1ae:	80 7f       	andi	r24, 0xF0	; 240
 1b0:	90 e0       	ldi	r25, 0x00	; 0
 1b2:	95 95       	asr	r25
 1b4:	87 95       	ror	r24
 1b6:	95 95       	asr	r25
 1b8:	87 95       	ror	r24
 1ba:	95 95       	asr	r25
 1bc:	87 95       	ror	r24
 1be:	95 95       	asr	r25
 1c0:	87 95       	ror	r24
 1c2:	8a 30       	cpi	r24, 0x0A	; 10
 1c4:	10 f4       	brcc	.+4      	; 0x1ca <_Z15Separate_hexP10h+0x1c>
 1c6:	80 5d       	subi	r24, 0xD0	; 208
 1c8:	08 95       	ret
 1ca:	89 5c       	subi	r24, 0xC9	; 201
 1cc:	08 95       	ret

000001ce <_Z14Separate_hexP1h>:
 1ce:	8f 70       	andi	r24, 0x0F	; 15
 1d0:	8a 30       	cpi	r24, 0x0A	; 10
 1d2:	10 f4       	brcc	.+4      	; 0x1d8 <_Z14Separate_hexP1h+0xa>
 1d4:	80 5d       	subi	r24, 0xD0	; 208
 1d6:	08 95       	ret
 1d8:	89 5c       	subi	r24, 0xC9	; 201
 1da:	08 95       	ret

000001dc <_Z15SetFormatRDM630v>:
 1dc:	af 92       	push	r10
 1de:	bf 92       	push	r11
 1e0:	cf 92       	push	r12
 1e2:	df 92       	push	r13
 1e4:	ef 92       	push	r14
 1e6:	ff 92       	push	r15
 1e8:	0f 93       	push	r16
 1ea:	1f 93       	push	r17
 1ec:	cf 93       	push	r28
 1ee:	df 93       	push	r29
 1f0:	03 e9       	ldi	r16, 0x93	; 147
 1f2:	10 e0       	ldi	r17, 0x00	; 0
 1f4:	f8 01       	movw	r30, r16
 1f6:	f0 80       	ld	r15, Z
 1f8:	8f 2d       	mov	r24, r15
 1fa:	d9 df       	rcall	.-78     	; 0x1ae <_Z15Separate_hexP10h>
 1fc:	a8 2e       	mov	r10, r24
 1fe:	cb e8       	ldi	r28, 0x8B	; 139
 200:	d0 e0       	ldi	r29, 0x00	; 0
 202:	88 83       	st	Y, r24
 204:	8f 2d       	mov	r24, r15
 206:	e3 df       	rcall	.-58     	; 0x1ce <_Z14Separate_hexP1h>
 208:	b8 2e       	mov	r11, r24
 20a:	89 83       	std	Y+1, r24	; 0x01
 20c:	f8 01       	movw	r30, r16
 20e:	f1 80       	ldd	r15, Z+1	; 0x01
 210:	8f 2d       	mov	r24, r15
 212:	cd df       	rcall	.-102    	; 0x1ae <_Z15Separate_hexP10h>
 214:	c8 2e       	mov	r12, r24
 216:	8a 83       	std	Y+2, r24	; 0x02
 218:	8f 2d       	mov	r24, r15
 21a:	d9 df       	rcall	.-78     	; 0x1ce <_Z14Separate_hexP1h>
 21c:	d8 2e       	mov	r13, r24
 21e:	8b 83       	std	Y+3, r24	; 0x03
 220:	f8 01       	movw	r30, r16
 222:	f2 80       	ldd	r15, Z+2	; 0x02
 224:	8f 2d       	mov	r24, r15
 226:	c3 df       	rcall	.-122    	; 0x1ae <_Z15Separate_hexP10h>
 228:	e8 2e       	mov	r14, r24
 22a:	8c 83       	std	Y+4, r24	; 0x04
 22c:	8f 2d       	mov	r24, r15
 22e:	cf df       	rcall	.-98     	; 0x1ce <_Z14Separate_hexP1h>
 230:	f8 2e       	mov	r15, r24
 232:	8d 83       	std	Y+5, r24	; 0x05
 234:	f8 01       	movw	r30, r16
 236:	03 81       	ldd	r16, Z+3	; 0x03
 238:	80 2f       	mov	r24, r16
 23a:	b9 df       	rcall	.-142    	; 0x1ae <_Z15Separate_hexP10h>
 23c:	18 2f       	mov	r17, r24
 23e:	8e 83       	std	Y+6, r24	; 0x06
 240:	80 2f       	mov	r24, r16
 242:	c5 df       	rcall	.-118    	; 0x1ce <_Z14Separate_hexP1h>
 244:	8f 83       	std	Y+7, r24	; 0x07
 246:	e1 e8       	ldi	r30, 0x81	; 129
 248:	f0 e0       	ldi	r31, 0x00	; 0
 24a:	a0 82       	st	Z, r10
 24c:	b1 82       	std	Z+1, r11	; 0x01
 24e:	c2 82       	std	Z+2, r12	; 0x02
 250:	d3 82       	std	Z+3, r13	; 0x03
 252:	e4 82       	std	Z+4, r14	; 0x04
 254:	f5 82       	std	Z+5, r15	; 0x05
 256:	16 83       	std	Z+6, r17	; 0x06
 258:	87 83       	std	Z+7, r24	; 0x07
 25a:	df 91       	pop	r29
 25c:	cf 91       	pop	r28
 25e:	1f 91       	pop	r17
 260:	0f 91       	pop	r16
 262:	ff 90       	pop	r15
 264:	ef 90       	pop	r14
 266:	df 90       	pop	r13
 268:	cf 90       	pop	r12
 26a:	bf 90       	pop	r11
 26c:	af 90       	pop	r10
 26e:	08 95       	ret

00000270 <_Z13Write_MFRC522hh>:
 270:	cf 93       	push	r28
 272:	c6 2f       	mov	r28, r22
 274:	c4 98       	cbi	0x18, 4	; 24
 276:	88 0f       	add	r24, r24
 278:	8e 77       	andi	r24, 0x7E	; 126
 27a:	92 df       	rcall	.-220    	; 0x1a0 <_Z9SPI_Writeh>
 27c:	8c 2f       	mov	r24, r28
 27e:	90 df       	rcall	.-224    	; 0x1a0 <_Z9SPI_Writeh>
 280:	c4 9a       	sbi	0x18, 4	; 24
 282:	cf 91       	pop	r28
 284:	08 95       	ret

00000286 <_Z12Read_MFRC522h>:
 286:	c4 98       	cbi	0x18, 4	; 24
 288:	88 0f       	add	r24, r24
 28a:	8e 77       	andi	r24, 0x7E	; 126
 28c:	80 68       	ori	r24, 0x80	; 128
 28e:	88 df       	rcall	.-240    	; 0x1a0 <_Z9SPI_Writeh>
 290:	80 e0       	ldi	r24, 0x00	; 0
 292:	86 df       	rcall	.-244    	; 0x1a0 <_Z9SPI_Writeh>
 294:	c4 9a       	sbi	0x18, 4	; 24
 296:	08 95       	ret

00000298 <_Z10SetBitMaskhh>:
 298:	cf 93       	push	r28
 29a:	df 93       	push	r29
 29c:	d8 2f       	mov	r29, r24
 29e:	c6 2f       	mov	r28, r22
 2a0:	f2 df       	rcall	.-28     	; 0x286 <_Z12Read_MFRC522h>
 2a2:	68 2f       	mov	r22, r24
 2a4:	6c 2b       	or	r22, r28
 2a6:	8d 2f       	mov	r24, r29
 2a8:	e3 df       	rcall	.-58     	; 0x270 <_Z13Write_MFRC522hh>
 2aa:	df 91       	pop	r29
 2ac:	cf 91       	pop	r28
 2ae:	08 95       	ret

000002b0 <_Z12ClearBitMaskhh>:
 2b0:	cf 93       	push	r28
 2b2:	df 93       	push	r29
 2b4:	d8 2f       	mov	r29, r24
 2b6:	c6 2f       	mov	r28, r22
 2b8:	e6 df       	rcall	.-52     	; 0x286 <_Z12Read_MFRC522h>
 2ba:	c0 95       	com	r28
 2bc:	6c 2f       	mov	r22, r28
 2be:	68 23       	and	r22, r24
 2c0:	8d 2f       	mov	r24, r29
 2c2:	d6 df       	rcall	.-84     	; 0x270 <_Z13Write_MFRC522hh>
 2c4:	df 91       	pop	r29
 2c6:	cf 91       	pop	r28
 2c8:	08 95       	ret

000002ca <_Z9AntennaOnv>:
 2ca:	84 e1       	ldi	r24, 0x14	; 20
 2cc:	dc df       	rcall	.-72     	; 0x286 <_Z12Read_MFRC522h>
 2ce:	83 70       	andi	r24, 0x03	; 3
 2d0:	19 f4       	brne	.+6      	; 0x2d8 <_Z9AntennaOnv+0xe>
 2d2:	63 e0       	ldi	r22, 0x03	; 3
 2d4:	84 e1       	ldi	r24, 0x14	; 20
 2d6:	e0 df       	rcall	.-64     	; 0x298 <_Z10SetBitMaskhh>
 2d8:	08 95       	ret

000002da <_Z13MFRC522_Resetv>:
 2da:	6f e0       	ldi	r22, 0x0F	; 15
 2dc:	81 e0       	ldi	r24, 0x01	; 1
 2de:	c8 df       	rcall	.-112    	; 0x270 <_Z13Write_MFRC522hh>
 2e0:	08 95       	ret

000002e2 <_Z12MFRC522_Initv>:
 2e2:	fb df       	rcall	.-10     	; 0x2da <_Z13MFRC522_Resetv>
 2e4:	6d e8       	ldi	r22, 0x8D	; 141
 2e6:	8a e2       	ldi	r24, 0x2A	; 42
 2e8:	c3 df       	rcall	.-122    	; 0x270 <_Z13Write_MFRC522hh>
 2ea:	6e e3       	ldi	r22, 0x3E	; 62
 2ec:	8b e2       	ldi	r24, 0x2B	; 43
 2ee:	c0 df       	rcall	.-128    	; 0x270 <_Z13Write_MFRC522hh>
 2f0:	6e e1       	ldi	r22, 0x1E	; 30
 2f2:	8d e2       	ldi	r24, 0x2D	; 45
 2f4:	bd df       	rcall	.-134    	; 0x270 <_Z13Write_MFRC522hh>
 2f6:	60 e0       	ldi	r22, 0x00	; 0
 2f8:	8c e2       	ldi	r24, 0x2C	; 44
 2fa:	ba df       	rcall	.-140    	; 0x270 <_Z13Write_MFRC522hh>
 2fc:	60 e4       	ldi	r22, 0x40	; 64
 2fe:	85 e1       	ldi	r24, 0x15	; 21
 300:	b7 df       	rcall	.-146    	; 0x270 <_Z13Write_MFRC522hh>
 302:	6d e3       	ldi	r22, 0x3D	; 61
 304:	81 e1       	ldi	r24, 0x11	; 17
 306:	b4 df       	rcall	.-152    	; 0x270 <_Z13Write_MFRC522hh>
 308:	e0 df       	rcall	.-64     	; 0x2ca <_Z9AntennaOnv>
 30a:	08 95       	ret

0000030c <_Z14MFRC522_ToCardhPhhS_Pj>:
 30c:	7f 92       	push	r7
 30e:	8f 92       	push	r8
 310:	9f 92       	push	r9
 312:	af 92       	push	r10
 314:	bf 92       	push	r11
 316:	cf 92       	push	r12
 318:	df 92       	push	r13
 31a:	ef 92       	push	r14
 31c:	ff 92       	push	r15
 31e:	0f 93       	push	r16
 320:	1f 93       	push	r17
 322:	cf 93       	push	r28
 324:	df 93       	push	r29
 326:	b8 2e       	mov	r11, r24
 328:	c6 2f       	mov	r28, r22
 32a:	d7 2f       	mov	r29, r23
 32c:	c4 2e       	mov	r12, r20
 32e:	a2 2e       	mov	r10, r18
 330:	93 2e       	mov	r9, r19
 332:	78 01       	movw	r14, r16
 334:	8c e0       	ldi	r24, 0x0C	; 12
 336:	b8 16       	cp	r11, r24
 338:	09 f4       	brne	.+2      	; 0x33c <_Z14MFRC522_ToCardhPhhS_Pj+0x30>
 33a:	9a c0       	rjmp	.+308    	; 0x470 <__LOCK_REGION_LENGTH__+0x70>
 33c:	ee e0       	ldi	r30, 0x0E	; 14
 33e:	be 12       	cpse	r11, r30
 340:	08 c0       	rjmp	.+16     	; 0x352 <_Z14MFRC522_ToCardhPhhS_Pj+0x46>
 342:	68 94       	set
 344:	77 24       	eor	r7, r7
 346:	74 f8       	bld	r7, 4
 348:	0f 2e       	mov	r0, r31
 34a:	f2 e1       	ldi	r31, 0x12	; 18
 34c:	8f 2e       	mov	r8, r31
 34e:	f0 2d       	mov	r31, r0
 350:	02 c0       	rjmp	.+4      	; 0x356 <_Z14MFRC522_ToCardhPhhS_Pj+0x4a>
 352:	71 2c       	mov	r7, r1
 354:	81 2c       	mov	r8, r1
 356:	68 2d       	mov	r22, r8
 358:	60 68       	ori	r22, 0x80	; 128
 35a:	82 e0       	ldi	r24, 0x02	; 2
 35c:	89 df       	rcall	.-238    	; 0x270 <_Z13Write_MFRC522hh>
 35e:	60 e8       	ldi	r22, 0x80	; 128
 360:	84 e0       	ldi	r24, 0x04	; 4
 362:	a6 df       	rcall	.-180    	; 0x2b0 <_Z12ClearBitMaskhh>
 364:	60 e8       	ldi	r22, 0x80	; 128
 366:	8a e0       	ldi	r24, 0x0A	; 10
 368:	97 df       	rcall	.-210    	; 0x298 <_Z10SetBitMaskhh>
 36a:	60 e0       	ldi	r22, 0x00	; 0
 36c:	81 e0       	ldi	r24, 0x01	; 1
 36e:	80 df       	rcall	.-256    	; 0x270 <_Z13Write_MFRC522hh>
 370:	d1 2c       	mov	r13, r1
 372:	c1 14       	cp	r12, r1
 374:	d1 04       	cpc	r13, r1
 376:	69 f0       	breq	.+26     	; 0x392 <_Z14MFRC522_ToCardhPhhS_Pj+0x86>
 378:	0c 2f       	mov	r16, r28
 37a:	1d 2f       	mov	r17, r29
 37c:	c0 e0       	ldi	r28, 0x00	; 0
 37e:	d0 e0       	ldi	r29, 0x00	; 0
 380:	f8 01       	movw	r30, r16
 382:	61 91       	ld	r22, Z+
 384:	8f 01       	movw	r16, r30
 386:	89 e0       	ldi	r24, 0x09	; 9
 388:	73 df       	rcall	.-282    	; 0x270 <_Z13Write_MFRC522hh>
 38a:	21 96       	adiw	r28, 0x01	; 1
 38c:	cc 15       	cp	r28, r12
 38e:	dd 05       	cpc	r29, r13
 390:	b8 f3       	brcs	.-18     	; 0x380 <_Z14MFRC522_ToCardhPhhS_Pj+0x74>
 392:	6b 2d       	mov	r22, r11
 394:	81 e0       	ldi	r24, 0x01	; 1
 396:	6c df       	rcall	.-296    	; 0x270 <_Z13Write_MFRC522hh>
 398:	fc e0       	ldi	r31, 0x0C	; 12
 39a:	bf 12       	cpse	r11, r31
 39c:	03 c0       	rjmp	.+6      	; 0x3a4 <_Z14MFRC522_ToCardhPhhS_Pj+0x98>
 39e:	60 e8       	ldi	r22, 0x80	; 128
 3a0:	8d e0       	ldi	r24, 0x0D	; 13
 3a2:	7a df       	rcall	.-268    	; 0x298 <_Z10SetBitMaskhh>
 3a4:	84 e0       	ldi	r24, 0x04	; 4
 3a6:	6f df       	rcall	.-290    	; 0x286 <_Z12Read_MFRC522h>
 3a8:	18 2f       	mov	r17, r24
 3aa:	cf ec       	ldi	r28, 0xCF	; 207
 3ac:	d7 e0       	ldi	r29, 0x07	; 7
 3ae:	07 2d       	mov	r16, r7
 3b0:	01 60       	ori	r16, 0x01	; 1
 3b2:	06 c0       	rjmp	.+12     	; 0x3c0 <_Z14MFRC522_ToCardhPhhS_Pj+0xb4>
 3b4:	84 e0       	ldi	r24, 0x04	; 4
 3b6:	67 df       	rcall	.-306    	; 0x286 <_Z12Read_MFRC522h>
 3b8:	18 2f       	mov	r17, r24
 3ba:	21 97       	sbiw	r28, 0x01	; 1
 3bc:	09 f4       	brne	.+2      	; 0x3c0 <_Z14MFRC522_ToCardhPhhS_Pj+0xb4>
 3be:	71 c0       	rjmp	.+226    	; 0x4a2 <__LOCK_REGION_LENGTH__+0xa2>
 3c0:	80 2f       	mov	r24, r16
 3c2:	81 23       	and	r24, r17
 3c4:	b9 f3       	breq	.-18     	; 0x3b4 <_Z14MFRC522_ToCardhPhhS_Pj+0xa8>
 3c6:	72 c0       	rjmp	.+228    	; 0x4ac <__LOCK_REGION_LENGTH__+0xac>
 3c8:	88 2d       	mov	r24, r8
 3ca:	81 70       	andi	r24, 0x01	; 1
 3cc:	18 23       	and	r17, r24
 3ce:	c1 e0       	ldi	r28, 0x01	; 1
 3d0:	09 f4       	brne	.+2      	; 0x3d4 <_Z14MFRC522_ToCardhPhhS_Pj+0xc8>
 3d2:	c0 e0       	ldi	r28, 0x00	; 0
 3d4:	8c e0       	ldi	r24, 0x0C	; 12
 3d6:	b8 12       	cpse	r11, r24
 3d8:	72 c0       	rjmp	.+228    	; 0x4be <__LOCK_REGION_LENGTH__+0xbe>
 3da:	8a e0       	ldi	r24, 0x0A	; 10
 3dc:	54 df       	rcall	.-344    	; 0x286 <_Z12Read_MFRC522h>
 3de:	d8 2f       	mov	r29, r24
 3e0:	8c e0       	ldi	r24, 0x0C	; 12
 3e2:	51 df       	rcall	.-350    	; 0x286 <_Z12Read_MFRC522h>
 3e4:	28 2f       	mov	r18, r24
 3e6:	27 70       	andi	r18, 0x07	; 7
 3e8:	79 f0       	breq	.+30     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 3ea:	8d 2f       	mov	r24, r29
 3ec:	90 e0       	ldi	r25, 0x00	; 0
 3ee:	01 97       	sbiw	r24, 0x01	; 1
 3f0:	88 0f       	add	r24, r24
 3f2:	99 1f       	adc	r25, r25
 3f4:	88 0f       	add	r24, r24
 3f6:	99 1f       	adc	r25, r25
 3f8:	88 0f       	add	r24, r24
 3fa:	99 1f       	adc	r25, r25
 3fc:	82 0f       	add	r24, r18
 3fe:	91 1d       	adc	r25, r1
 400:	f7 01       	movw	r30, r14
 402:	91 83       	std	Z+1, r25	; 0x01
 404:	80 83       	st	Z, r24
 406:	0b c0       	rjmp	.+22     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 408:	8d 2f       	mov	r24, r29
 40a:	90 e0       	ldi	r25, 0x00	; 0
 40c:	88 0f       	add	r24, r24
 40e:	99 1f       	adc	r25, r25
 410:	88 0f       	add	r24, r24
 412:	99 1f       	adc	r25, r25
 414:	88 0f       	add	r24, r24
 416:	99 1f       	adc	r25, r25
 418:	f7 01       	movw	r30, r14
 41a:	91 83       	std	Z+1, r25	; 0x01
 41c:	80 83       	st	Z, r24
 41e:	dd 23       	and	r29, r29
 420:	49 f0       	breq	.+18     	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
 422:	d1 31       	cpi	r29, 0x11	; 17
 424:	08 f0       	brcs	.+2      	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
 426:	d0 e1       	ldi	r29, 0x10	; 16
 428:	ed 2e       	mov	r14, r29
 42a:	f1 2c       	mov	r15, r1
 42c:	e1 14       	cp	r14, r1
 42e:	f1 04       	cpc	r15, r1
 430:	21 f4       	brne	.+8      	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 432:	45 c0       	rjmp	.+138    	; 0x4be <__LOCK_REGION_LENGTH__+0xbe>
 434:	ee 24       	eor	r14, r14
 436:	e3 94       	inc	r14
 438:	f1 2c       	mov	r15, r1
 43a:	ca 2c       	mov	r12, r10
 43c:	d9 2c       	mov	r13, r9
 43e:	00 e0       	ldi	r16, 0x00	; 0
 440:	10 e0       	ldi	r17, 0x00	; 0
 442:	89 e0       	ldi	r24, 0x09	; 9
 444:	20 df       	rcall	.-448    	; 0x286 <_Z12Read_MFRC522h>
 446:	f6 01       	movw	r30, r12
 448:	81 93       	st	Z+, r24
 44a:	6f 01       	movw	r12, r30
 44c:	0f 5f       	subi	r16, 0xFF	; 255
 44e:	1f 4f       	sbci	r17, 0xFF	; 255
 450:	0e 15       	cp	r16, r14
 452:	1f 05       	cpc	r17, r15
 454:	b0 f3       	brcs	.-20     	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
 456:	33 c0       	rjmp	.+102    	; 0x4be <__LOCK_REGION_LENGTH__+0xbe>
 458:	6c e0       	ldi	r22, 0x0C	; 12
 45a:	81 e0       	ldi	r24, 0x01	; 1
 45c:	09 df       	rcall	.-494    	; 0x270 <_Z13Write_MFRC522hh>
 45e:	0f 2e       	mov	r0, r31
 460:	f0 e3       	ldi	r31, 0x30	; 48
 462:	7f 2e       	mov	r7, r31
 464:	f0 2d       	mov	r31, r0
 466:	0f 2e       	mov	r0, r31
 468:	f7 e7       	ldi	r31, 0x77	; 119
 46a:	8f 2e       	mov	r8, r31
 46c:	f0 2d       	mov	r31, r0
 46e:	97 cf       	rjmp	.-210    	; 0x39e <_Z14MFRC522_ToCardhPhhS_Pj+0x92>
 470:	67 ef       	ldi	r22, 0xF7	; 247
 472:	82 e0       	ldi	r24, 0x02	; 2
 474:	fd de       	rcall	.-518    	; 0x270 <_Z13Write_MFRC522hh>
 476:	60 e8       	ldi	r22, 0x80	; 128
 478:	84 e0       	ldi	r24, 0x04	; 4
 47a:	1a df       	rcall	.-460    	; 0x2b0 <_Z12ClearBitMaskhh>
 47c:	60 e8       	ldi	r22, 0x80	; 128
 47e:	8a e0       	ldi	r24, 0x0A	; 10
 480:	0b df       	rcall	.-490    	; 0x298 <_Z10SetBitMaskhh>
 482:	60 e0       	ldi	r22, 0x00	; 0
 484:	81 e0       	ldi	r24, 0x01	; 1
 486:	f4 de       	rcall	.-536    	; 0x270 <_Z13Write_MFRC522hh>
 488:	d1 2c       	mov	r13, r1
 48a:	c1 14       	cp	r12, r1
 48c:	d1 04       	cpc	r13, r1
 48e:	21 f3       	breq	.-56     	; 0x458 <__LOCK_REGION_LENGTH__+0x58>
 490:	0f 2e       	mov	r0, r31
 492:	f0 e3       	ldi	r31, 0x30	; 48
 494:	7f 2e       	mov	r7, r31
 496:	f0 2d       	mov	r31, r0
 498:	0f 2e       	mov	r0, r31
 49a:	f7 e7       	ldi	r31, 0x77	; 119
 49c:	8f 2e       	mov	r8, r31
 49e:	f0 2d       	mov	r31, r0
 4a0:	6b cf       	rjmp	.-298    	; 0x378 <_Z14MFRC522_ToCardhPhhS_Pj+0x6c>
 4a2:	60 e8       	ldi	r22, 0x80	; 128
 4a4:	8d e0       	ldi	r24, 0x0D	; 13
 4a6:	04 df       	rcall	.-504    	; 0x2b0 <_Z12ClearBitMaskhh>
 4a8:	c2 e0       	ldi	r28, 0x02	; 2
 4aa:	09 c0       	rjmp	.+18     	; 0x4be <__LOCK_REGION_LENGTH__+0xbe>
 4ac:	60 e8       	ldi	r22, 0x80	; 128
 4ae:	8d e0       	ldi	r24, 0x0D	; 13
 4b0:	ff de       	rcall	.-514    	; 0x2b0 <_Z12ClearBitMaskhh>
 4b2:	86 e0       	ldi	r24, 0x06	; 6
 4b4:	e8 de       	rcall	.-560    	; 0x286 <_Z12Read_MFRC522h>
 4b6:	8b 71       	andi	r24, 0x1B	; 27
 4b8:	09 f4       	brne	.+2      	; 0x4bc <__LOCK_REGION_LENGTH__+0xbc>
 4ba:	86 cf       	rjmp	.-244    	; 0x3c8 <_Z14MFRC522_ToCardhPhhS_Pj+0xbc>
 4bc:	c2 e0       	ldi	r28, 0x02	; 2
 4be:	8c 2f       	mov	r24, r28
 4c0:	df 91       	pop	r29
 4c2:	cf 91       	pop	r28
 4c4:	1f 91       	pop	r17
 4c6:	0f 91       	pop	r16
 4c8:	ff 90       	pop	r15
 4ca:	ef 90       	pop	r14
 4cc:	df 90       	pop	r13
 4ce:	cf 90       	pop	r12
 4d0:	bf 90       	pop	r11
 4d2:	af 90       	pop	r10
 4d4:	9f 90       	pop	r9
 4d6:	8f 90       	pop	r8
 4d8:	7f 90       	pop	r7
 4da:	08 95       	ret

000004dc <_Z15MFRC522_RequesthPh>:
 4dc:	ef 92       	push	r14
 4de:	ff 92       	push	r15
 4e0:	0f 93       	push	r16
 4e2:	1f 93       	push	r17
 4e4:	cf 93       	push	r28
 4e6:	df 93       	push	r29
 4e8:	00 d0       	rcall	.+0      	; 0x4ea <_Z15MFRC522_RequesthPh+0xe>
 4ea:	cd b7       	in	r28, 0x3d	; 61
 4ec:	dd 27       	eor	r29, r29
 4ee:	18 2f       	mov	r17, r24
 4f0:	7b 01       	movw	r14, r22
 4f2:	67 e0       	ldi	r22, 0x07	; 7
 4f4:	8d e0       	ldi	r24, 0x0D	; 13
 4f6:	bc de       	rcall	.-648    	; 0x270 <_Z13Write_MFRC522hh>
 4f8:	f7 01       	movw	r30, r14
 4fa:	10 83       	st	Z, r17
 4fc:	8e 01       	movw	r16, r28
 4fe:	0f 5f       	subi	r16, 0xFF	; 255
 500:	1f 4f       	sbci	r17, 0xFF	; 255
 502:	97 01       	movw	r18, r14
 504:	41 e0       	ldi	r20, 0x01	; 1
 506:	b7 01       	movw	r22, r14
 508:	8c e0       	ldi	r24, 0x0C	; 12
 50a:	00 df       	rcall	.-512    	; 0x30c <_Z14MFRC522_ToCardhPhhS_Pj>
 50c:	81 11       	cpse	r24, r1
 50e:	07 c0       	rjmp	.+14     	; 0x51e <_Z15MFRC522_RequesthPh+0x42>
 510:	29 81       	ldd	r18, Y+1	; 0x01
 512:	3a 81       	ldd	r19, Y+2	; 0x02
 514:	20 31       	cpi	r18, 0x10	; 16
 516:	31 05       	cpc	r19, r1
 518:	19 f0       	breq	.+6      	; 0x520 <_Z15MFRC522_RequesthPh+0x44>
 51a:	82 e0       	ldi	r24, 0x02	; 2
 51c:	01 c0       	rjmp	.+2      	; 0x520 <_Z15MFRC522_RequesthPh+0x44>
 51e:	82 e0       	ldi	r24, 0x02	; 2
 520:	ce 5f       	subi	r28, 0xFE	; 254
 522:	cd bf       	out	0x3d, r28	; 61
 524:	df 91       	pop	r29
 526:	cf 91       	pop	r28
 528:	1f 91       	pop	r17
 52a:	0f 91       	pop	r16
 52c:	ff 90       	pop	r15
 52e:	ef 90       	pop	r14
 530:	08 95       	ret

00000532 <_Z16MFRC522_AnticollPh>:
 532:	ef 92       	push	r14
 534:	ff 92       	push	r15
 536:	0f 93       	push	r16
 538:	1f 93       	push	r17
 53a:	cf 93       	push	r28
 53c:	df 93       	push	r29
 53e:	00 d0       	rcall	.+0      	; 0x540 <_Z16MFRC522_AnticollPh+0xe>
 540:	cd b7       	in	r28, 0x3d	; 61
 542:	dd 27       	eor	r29, r29
 544:	7c 01       	movw	r14, r24
 546:	60 e0       	ldi	r22, 0x00	; 0
 548:	8d e0       	ldi	r24, 0x0D	; 13
 54a:	92 de       	rcall	.-732    	; 0x270 <_Z13Write_MFRC522hh>
 54c:	83 e9       	ldi	r24, 0x93	; 147
 54e:	f7 01       	movw	r30, r14
 550:	80 83       	st	Z, r24
 552:	80 e2       	ldi	r24, 0x20	; 32
 554:	81 83       	std	Z+1, r24	; 0x01
 556:	8e 01       	movw	r16, r28
 558:	0f 5f       	subi	r16, 0xFF	; 255
 55a:	1f 4f       	sbci	r17, 0xFF	; 255
 55c:	97 01       	movw	r18, r14
 55e:	42 e0       	ldi	r20, 0x02	; 2
 560:	b7 01       	movw	r22, r14
 562:	8c e0       	ldi	r24, 0x0C	; 12
 564:	d3 de       	rcall	.-602    	; 0x30c <_Z14MFRC522_ToCardhPhhS_Pj>
 566:	81 11       	cpse	r24, r1
 568:	0e c0       	rjmp	.+28     	; 0x586 <_Z16MFRC522_AnticollPh+0x54>
 56a:	f7 01       	movw	r30, r14
 56c:	a7 01       	movw	r20, r14
 56e:	4c 5f       	subi	r20, 0xFC	; 252
 570:	5f 4f       	sbci	r21, 0xFF	; 255
 572:	90 e0       	ldi	r25, 0x00	; 0
 574:	21 91       	ld	r18, Z+
 576:	92 27       	eor	r25, r18
 578:	e4 17       	cp	r30, r20
 57a:	f5 07       	cpc	r31, r21
 57c:	d9 f7       	brne	.-10     	; 0x574 <_Z16MFRC522_AnticollPh+0x42>
 57e:	f7 01       	movw	r30, r14
 580:	24 81       	ldd	r18, Z+4	; 0x04
 582:	92 13       	cpse	r25, r18
 584:	82 e0       	ldi	r24, 0x02	; 2
 586:	ce 5f       	subi	r28, 0xFE	; 254
 588:	cd bf       	out	0x3d, r28	; 61
 58a:	df 91       	pop	r29
 58c:	cf 91       	pop	r28
 58e:	1f 91       	pop	r17
 590:	0f 91       	pop	r16
 592:	ff 90       	pop	r15
 594:	ef 90       	pop	r14
 596:	08 95       	ret

00000598 <_Z7readingv>:
volatile int r=0;
uchar str[16];
uchar status;


void reading(){
 598:	0f 93       	push	r16
 59a:	1f 93       	push	r17
 59c:	cf 93       	push	r28
 59e:	df 93       	push	r29
	
	//Find cards, return card type - Don't remove this sub
	status = MFRC522_Request(PICC_REQIDL, str);
 5a0:	61 e7       	ldi	r22, 0x71	; 113
 5a2:	70 e0       	ldi	r23, 0x00	; 0
 5a4:	86 e2       	ldi	r24, 0x26	; 38
 5a6:	9a df       	rcall	.-204    	; 0x4dc <_Z15MFRC522_RequesthPh>
 5a8:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__data_end>
	//Anti-collision, return card serial number 4 bytes
	status = MFRC522_Anticoll(str);
 5ac:	81 e7       	ldi	r24, 0x71	; 113
 5ae:	90 e0       	ldi	r25, 0x00	; 0
 5b0:	c0 df       	rcall	.-128    	; 0x532 <_Z16MFRC522_AnticollPh>
 5b2:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__data_end>
	memcpy(serNum, str, 5);
 5b6:	95 e0       	ldi	r25, 0x05	; 5
 5b8:	e1 e7       	ldi	r30, 0x71	; 113
 5ba:	f0 e0       	ldi	r31, 0x00	; 0
 5bc:	a3 e9       	ldi	r26, 0x93	; 147
 5be:	b0 e0       	ldi	r27, 0x00	; 0
 5c0:	01 90       	ld	r0, Z+
 5c2:	0d 92       	st	X+, r0
 5c4:	9a 95       	dec	r25
 5c6:	e1 f7       	brne	.-8      	; 0x5c0 <_Z7readingv+0x28>

	if (status == MI_OK)   //if ther is a new card detected
 5c8:	81 11       	cpse	r24, r1
 5ca:	14 c0       	rjmp	.+40     	; 0x5f4 <_Z7readingv+0x5c>
	{
		SetFormatRDM630(); // take serNum and format it and retern read
 5cc:	07 de       	rcall	.-1010   	; 0x1dc <_Z15SetFormatRDM630v>
 5ce:	c1 e8       	ldi	r28, 0x81	; 129
 5d0:	d0 e0       	ldi	r29, 0x00	; 0
 5d2:	09 e8       	ldi	r16, 0x89	; 137
 5d4:	10 e0       	ldi	r17, 0x00	; 0
		for(uint8_t i=0;i<8;i++){
			SoftUSART_TxNumber(read[i]);
 5d6:	69 91       	ld	r22, Y+
 5d8:	70 e0       	ldi	r23, 0x00	; 0
 5da:	80 e0       	ldi	r24, 0x00	; 0
 5dc:	90 e0       	ldi	r25, 0x00	; 0
 5de:	4a e0       	ldi	r20, 0x0A	; 10
 5e0:	ad dd       	rcall	.-1190   	; 0x13c <_Z18SoftUSART_TxNumberlh>
			SoftUSART_tx_str(" ");
 5e2:	80 e6       	ldi	r24, 0x60	; 96
 5e4:	90 e0       	ldi	r25, 0x00	; 0
 5e6:	9c dd       	rcall	.-1224   	; 0x120 <_Z16SoftUSART_tx_strPc>
	memcpy(serNum, str, 5);

	if (status == MI_OK)   //if ther is a new card detected
	{
		SetFormatRDM630(); // take serNum and format it and retern read
		for(uint8_t i=0;i<8;i++){
 5e8:	c0 17       	cp	r28, r16
 5ea:	d1 07       	cpc	r29, r17
 5ec:	a1 f7       	brne	.-24     	; 0x5d6 <_Z7readingv+0x3e>
			SoftUSART_TxNumber(read[i]);
			SoftUSART_tx_str(" ");
		}
		SoftUSART_tx_strln("");
 5ee:	81 e6       	ldi	r24, 0x61	; 97
 5f0:	90 e0       	ldi	r25, 0x00	; 0
 5f2:	ae dd       	rcall	.-1188   	; 0x150 <_Z18SoftUSART_tx_strlnPc>
		}
		USART_TxStringln("");
		MFRC522_Halt();                       // Command card into hibernation
		_delay_ms(50);                       // wait for low consuption
	}*/
}
 5f4:	df 91       	pop	r29
 5f6:	cf 91       	pop	r28
 5f8:	1f 91       	pop	r17
 5fa:	0f 91       	pop	r16
 5fc:	08 95       	ret

000005fe <main>:

int main(void)
{	
	
	SoftUART_Init();
 5fe:	2f dd       	rcall	.-1442   	; 0x5e <_Z13SoftUART_Initv>
	SoftUSART_tx_strln("Started");
 600:	82 e6       	ldi	r24, 0x62	; 98
 602:	90 e0       	ldi	r25, 0x00	; 0
 604:	a5 dd       	rcall	.-1206   	; 0x150 <_Z18SoftUSART_tx_strlnPc>
	DDRD|=(1<<6);
 606:	8e 9a       	sbi	0x11, 6	; 17
	PORTD|=(1<<6);
 608:	96 9a       	sbi	0x12, 6	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 60a:	2f ef       	ldi	r18, 0xFF	; 255
 60c:	84 e3       	ldi	r24, 0x34	; 52
 60e:	9c e0       	ldi	r25, 0x0C	; 12
 610:	21 50       	subi	r18, 0x01	; 1
 612:	80 40       	sbci	r24, 0x00	; 0
 614:	90 40       	sbci	r25, 0x00	; 0
 616:	e1 f7       	brne	.-8      	; 0x610 <main+0x12>
 618:	00 c0       	rjmp	.+0      	; 0x61a <main+0x1c>
 61a:	00 00       	nop
	_delay_ms(1000);
	
   //MFRC522_HardReset();
   SPI_Init(2400);
 61c:	80 e6       	ldi	r24, 0x60	; 96
 61e:	99 e0       	ldi	r25, 0x09	; 9
 620:	a9 dd       	rcall	.-1198   	; 0x174 <_Z8SPI_Initj>
   MFRC522_Init();   // Initialize RC522 module
 622:	5f de       	rcall	.-834    	; 0x2e2 <_Z12MFRC522_Initv>


   
   for (uint8_t i=0;i<5;i++)
 624:	c0 e0       	ldi	r28, 0x00	; 0
   {SoftUSART_TxNumber(Read_MFRC522(i),2);
 626:	8c 2f       	mov	r24, r28
 628:	2e de       	rcall	.-932    	; 0x286 <_Z12Read_MFRC522h>
 62a:	68 2f       	mov	r22, r24
 62c:	70 e0       	ldi	r23, 0x00	; 0
 62e:	80 e0       	ldi	r24, 0x00	; 0
 630:	90 e0       	ldi	r25, 0x00	; 0
 632:	42 e0       	ldi	r20, 0x02	; 2
 634:	83 dd       	rcall	.-1274   	; 0x13c <_Z18SoftUSART_TxNumberlh>
	   SoftUSART_tx_strln("");
 636:	81 e6       	ldi	r24, 0x61	; 97
 638:	90 e0       	ldi	r25, 0x00	; 0
 63a:	8a dd       	rcall	.-1260   	; 0x150 <_Z18SoftUSART_tx_strlnPc>
   SPI_Init(2400);
   MFRC522_Init();   // Initialize RC522 module


   
   for (uint8_t i=0;i<5;i++)
 63c:	cf 5f       	subi	r28, 0xFF	; 255
 63e:	c5 30       	cpi	r28, 0x05	; 5
 640:	91 f7       	brne	.-28     	; 0x626 <main+0x28>
 642:	2f e7       	ldi	r18, 0x7F	; 127
 644:	8a e1       	ldi	r24, 0x1A	; 26
 646:	96 e0       	ldi	r25, 0x06	; 6
 648:	21 50       	subi	r18, 0x01	; 1
 64a:	80 40       	sbci	r24, 0x00	; 0
 64c:	90 40       	sbci	r25, 0x00	; 0
 64e:	e1 f7       	brne	.-8      	; 0x648 <main+0x4a>
 650:	00 c0       	rjmp	.+0      	; 0x652 <main+0x54>
 652:	00 00       	nop
   
    while (1) 
    {
		_delay_ms(500);
		
		reading();
 654:	a1 df       	rcall	.-190    	; 0x598 <_Z7readingv>
		SoftUSART_tx_strln("loop");
 656:	8a e6       	ldi	r24, 0x6A	; 106
 658:	90 e0       	ldi	r25, 0x00	; 0
 65a:	7a dd       	rcall	.-1292   	; 0x150 <_Z18SoftUSART_tx_strlnPc>
 65c:	f2 cf       	rjmp	.-28     	; 0x642 <main+0x44>

0000065e <__udivmodsi4>:
 65e:	a1 e2       	ldi	r26, 0x21	; 33
 660:	1a 2e       	mov	r1, r26
 662:	aa 1b       	sub	r26, r26
 664:	bb 1b       	sub	r27, r27
 666:	fd 01       	movw	r30, r26
 668:	0d c0       	rjmp	.+26     	; 0x684 <__udivmodsi4_ep>

0000066a <__udivmodsi4_loop>:
 66a:	aa 1f       	adc	r26, r26
 66c:	bb 1f       	adc	r27, r27
 66e:	ee 1f       	adc	r30, r30
 670:	ff 1f       	adc	r31, r31
 672:	a2 17       	cp	r26, r18
 674:	b3 07       	cpc	r27, r19
 676:	e4 07       	cpc	r30, r20
 678:	f5 07       	cpc	r31, r21
 67a:	20 f0       	brcs	.+8      	; 0x684 <__udivmodsi4_ep>
 67c:	a2 1b       	sub	r26, r18
 67e:	b3 0b       	sbc	r27, r19
 680:	e4 0b       	sbc	r30, r20
 682:	f5 0b       	sbc	r31, r21

00000684 <__udivmodsi4_ep>:
 684:	66 1f       	adc	r22, r22
 686:	77 1f       	adc	r23, r23
 688:	88 1f       	adc	r24, r24
 68a:	99 1f       	adc	r25, r25
 68c:	1a 94       	dec	r1
 68e:	69 f7       	brne	.-38     	; 0x66a <__udivmodsi4_loop>
 690:	60 95       	com	r22
 692:	70 95       	com	r23
 694:	80 95       	com	r24
 696:	90 95       	com	r25
 698:	9b 01       	movw	r18, r22
 69a:	ac 01       	movw	r20, r24
 69c:	bd 01       	movw	r22, r26
 69e:	cf 01       	movw	r24, r30
 6a0:	08 95       	ret

000006a2 <itoa>:
 6a2:	45 32       	cpi	r20, 0x25	; 37
 6a4:	51 05       	cpc	r21, r1
 6a6:	18 f4       	brcc	.+6      	; 0x6ae <itoa+0xc>
 6a8:	42 30       	cpi	r20, 0x02	; 2
 6aa:	08 f0       	brcs	.+2      	; 0x6ae <itoa+0xc>
 6ac:	04 c0       	rjmp	.+8      	; 0x6b6 <__itoa_ncheck>
 6ae:	fb 01       	movw	r30, r22
 6b0:	10 82       	st	Z, r1
 6b2:	cb 01       	movw	r24, r22
 6b4:	08 95       	ret

000006b6 <__itoa_ncheck>:
 6b6:	bb 27       	eor	r27, r27
 6b8:	4a 30       	cpi	r20, 0x0A	; 10
 6ba:	31 f4       	brne	.+12     	; 0x6c8 <__itoa_ncheck+0x12>
 6bc:	99 23       	and	r25, r25
 6be:	22 f4       	brpl	.+8      	; 0x6c8 <__itoa_ncheck+0x12>
 6c0:	bd e2       	ldi	r27, 0x2D	; 45
 6c2:	90 95       	com	r25
 6c4:	81 95       	neg	r24
 6c6:	9f 4f       	sbci	r25, 0xFF	; 255
 6c8:	01 c0       	rjmp	.+2      	; 0x6cc <__utoa_common>

000006ca <__utoa_ncheck>:
 6ca:	bb 27       	eor	r27, r27

000006cc <__utoa_common>:
 6cc:	fb 01       	movw	r30, r22
 6ce:	55 27       	eor	r21, r21
 6d0:	aa 27       	eor	r26, r26
 6d2:	88 0f       	add	r24, r24
 6d4:	99 1f       	adc	r25, r25
 6d6:	aa 1f       	adc	r26, r26
 6d8:	a4 17       	cp	r26, r20
 6da:	10 f0       	brcs	.+4      	; 0x6e0 <__utoa_common+0x14>
 6dc:	a4 1b       	sub	r26, r20
 6de:	83 95       	inc	r24
 6e0:	50 51       	subi	r21, 0x10	; 16
 6e2:	b9 f7       	brne	.-18     	; 0x6d2 <__utoa_common+0x6>
 6e4:	a0 5d       	subi	r26, 0xD0	; 208
 6e6:	aa 33       	cpi	r26, 0x3A	; 58
 6e8:	08 f0       	brcs	.+2      	; 0x6ec <__utoa_common+0x20>
 6ea:	a9 5d       	subi	r26, 0xD9	; 217
 6ec:	a1 93       	st	Z+, r26
 6ee:	00 97       	sbiw	r24, 0x00	; 0
 6f0:	79 f7       	brne	.-34     	; 0x6d0 <__utoa_common+0x4>
 6f2:	b1 11       	cpse	r27, r1
 6f4:	b1 93       	st	Z+, r27
 6f6:	11 92       	st	Z+, r1
 6f8:	cb 01       	movw	r24, r22
 6fa:	00 c0       	rjmp	.+0      	; 0x6fc <strrev>

000006fc <strrev>:
 6fc:	dc 01       	movw	r26, r24
 6fe:	fc 01       	movw	r30, r24
 700:	67 2f       	mov	r22, r23
 702:	71 91       	ld	r23, Z+
 704:	77 23       	and	r23, r23
 706:	e1 f7       	brne	.-8      	; 0x700 <strrev+0x4>
 708:	32 97       	sbiw	r30, 0x02	; 2
 70a:	04 c0       	rjmp	.+8      	; 0x714 <strrev+0x18>
 70c:	7c 91       	ld	r23, X
 70e:	6d 93       	st	X+, r22
 710:	70 83       	st	Z, r23
 712:	62 91       	ld	r22, -Z
 714:	ae 17       	cp	r26, r30
 716:	bf 07       	cpc	r27, r31
 718:	c8 f3       	brcs	.-14     	; 0x70c <strrev+0x10>
 71a:	08 95       	ret

0000071c <_exit>:
 71c:	f8 94       	cli

0000071e <__stop_program>:
 71e:	ff cf       	rjmp	.-2      	; 0x71e <__stop_program>
