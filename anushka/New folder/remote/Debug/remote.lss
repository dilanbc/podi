
remote.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00800200  000002b6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000242  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000001  00800200  00800200  000002b6  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000002b6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000002e8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000028  00000000  00000000  00000328  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000bae  00000000  00000000  00000350  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000aa9  00000000  00000000  00000efe  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000003a5  00000000  00000000  000019a7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000050  00000000  00000000  00001d4c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000534  00000000  00000000  00001d9c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000000b3  00000000  00000000  000022d0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000018  00000000  00000000  00002383  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	65 c0       	rjmp	.+202    	; 0xcc <__ctors_end>
   2:	00 00       	nop
   4:	73 c0       	rjmp	.+230    	; 0xec <__bad_interrupt>
   6:	00 00       	nop
   8:	71 c0       	rjmp	.+226    	; 0xec <__bad_interrupt>
   a:	00 00       	nop
   c:	6f c0       	rjmp	.+222    	; 0xec <__bad_interrupt>
   e:	00 00       	nop
  10:	6d c0       	rjmp	.+218    	; 0xec <__bad_interrupt>
  12:	00 00       	nop
  14:	6b c0       	rjmp	.+214    	; 0xec <__bad_interrupt>
  16:	00 00       	nop
  18:	69 c0       	rjmp	.+210    	; 0xec <__bad_interrupt>
  1a:	00 00       	nop
  1c:	67 c0       	rjmp	.+206    	; 0xec <__bad_interrupt>
  1e:	00 00       	nop
  20:	65 c0       	rjmp	.+202    	; 0xec <__bad_interrupt>
  22:	00 00       	nop
  24:	63 c0       	rjmp	.+198    	; 0xec <__bad_interrupt>
  26:	00 00       	nop
  28:	61 c0       	rjmp	.+194    	; 0xec <__bad_interrupt>
  2a:	00 00       	nop
  2c:	5f c0       	rjmp	.+190    	; 0xec <__bad_interrupt>
  2e:	00 00       	nop
  30:	5d c0       	rjmp	.+186    	; 0xec <__bad_interrupt>
  32:	00 00       	nop
  34:	5b c0       	rjmp	.+182    	; 0xec <__bad_interrupt>
  36:	00 00       	nop
  38:	59 c0       	rjmp	.+178    	; 0xec <__bad_interrupt>
  3a:	00 00       	nop
  3c:	57 c0       	rjmp	.+174    	; 0xec <__bad_interrupt>
  3e:	00 00       	nop
  40:	55 c0       	rjmp	.+170    	; 0xec <__bad_interrupt>
  42:	00 00       	nop
  44:	53 c0       	rjmp	.+166    	; 0xec <__bad_interrupt>
  46:	00 00       	nop
  48:	51 c0       	rjmp	.+162    	; 0xec <__bad_interrupt>
  4a:	00 00       	nop
  4c:	4f c0       	rjmp	.+158    	; 0xec <__bad_interrupt>
  4e:	00 00       	nop
  50:	4d c0       	rjmp	.+154    	; 0xec <__bad_interrupt>
  52:	00 00       	nop
  54:	4b c0       	rjmp	.+150    	; 0xec <__bad_interrupt>
  56:	00 00       	nop
  58:	49 c0       	rjmp	.+146    	; 0xec <__bad_interrupt>
  5a:	00 00       	nop
  5c:	47 c0       	rjmp	.+142    	; 0xec <__bad_interrupt>
  5e:	00 00       	nop
  60:	45 c0       	rjmp	.+138    	; 0xec <__bad_interrupt>
  62:	00 00       	nop
  64:	cf c0       	rjmp	.+414    	; 0x204 <__vector_25>
  66:	00 00       	nop
  68:	41 c0       	rjmp	.+130    	; 0xec <__bad_interrupt>
  6a:	00 00       	nop
  6c:	3f c0       	rjmp	.+126    	; 0xec <__bad_interrupt>
  6e:	00 00       	nop
  70:	3d c0       	rjmp	.+122    	; 0xec <__bad_interrupt>
  72:	00 00       	nop
  74:	3b c0       	rjmp	.+118    	; 0xec <__bad_interrupt>
  76:	00 00       	nop
  78:	39 c0       	rjmp	.+114    	; 0xec <__bad_interrupt>
  7a:	00 00       	nop
  7c:	37 c0       	rjmp	.+110    	; 0xec <__bad_interrupt>
  7e:	00 00       	nop
  80:	35 c0       	rjmp	.+106    	; 0xec <__bad_interrupt>
  82:	00 00       	nop
  84:	33 c0       	rjmp	.+102    	; 0xec <__bad_interrupt>
  86:	00 00       	nop
  88:	31 c0       	rjmp	.+98     	; 0xec <__bad_interrupt>
  8a:	00 00       	nop
  8c:	2f c0       	rjmp	.+94     	; 0xec <__bad_interrupt>
  8e:	00 00       	nop
  90:	2d c0       	rjmp	.+90     	; 0xec <__bad_interrupt>
  92:	00 00       	nop
  94:	2b c0       	rjmp	.+86     	; 0xec <__bad_interrupt>
  96:	00 00       	nop
  98:	29 c0       	rjmp	.+82     	; 0xec <__bad_interrupt>
  9a:	00 00       	nop
  9c:	27 c0       	rjmp	.+78     	; 0xec <__bad_interrupt>
  9e:	00 00       	nop
  a0:	25 c0       	rjmp	.+74     	; 0xec <__bad_interrupt>
  a2:	00 00       	nop
  a4:	23 c0       	rjmp	.+70     	; 0xec <__bad_interrupt>
  a6:	00 00       	nop
  a8:	21 c0       	rjmp	.+66     	; 0xec <__bad_interrupt>
  aa:	00 00       	nop
  ac:	1f c0       	rjmp	.+62     	; 0xec <__bad_interrupt>
  ae:	00 00       	nop
  b0:	1d c0       	rjmp	.+58     	; 0xec <__bad_interrupt>
  b2:	00 00       	nop
  b4:	1b c0       	rjmp	.+54     	; 0xec <__bad_interrupt>
  b6:	00 00       	nop
  b8:	19 c0       	rjmp	.+50     	; 0xec <__bad_interrupt>
  ba:	00 00       	nop
  bc:	17 c0       	rjmp	.+46     	; 0xec <__bad_interrupt>
  be:	00 00       	nop
  c0:	15 c0       	rjmp	.+42     	; 0xec <__bad_interrupt>
  c2:	00 00       	nop
  c4:	13 c0       	rjmp	.+38     	; 0xec <__bad_interrupt>
  c6:	00 00       	nop
  c8:	11 c0       	rjmp	.+34     	; 0xec <__bad_interrupt>
	...

000000cc <__ctors_end>:
  cc:	11 24       	eor	r1, r1
  ce:	1f be       	out	0x3f, r1	; 63
  d0:	cf ef       	ldi	r28, 0xFF	; 255
  d2:	d1 e2       	ldi	r29, 0x21	; 33
  d4:	de bf       	out	0x3e, r29	; 62
  d6:	cd bf       	out	0x3d, r28	; 61

000000d8 <__do_clear_bss>:
  d8:	22 e0       	ldi	r18, 0x02	; 2
  da:	a0 e0       	ldi	r26, 0x00	; 0
  dc:	b2 e0       	ldi	r27, 0x02	; 2
  de:	01 c0       	rjmp	.+2      	; 0xe2 <.do_clear_bss_start>

000000e0 <.do_clear_bss_loop>:
  e0:	1d 92       	st	X+, r1

000000e2 <.do_clear_bss_start>:
  e2:	a1 30       	cpi	r26, 0x01	; 1
  e4:	b2 07       	cpc	r27, r18
  e6:	e1 f7       	brne	.-8      	; 0xe0 <.do_clear_bss_loop>
  e8:	02 d0       	rcall	.+4      	; 0xee <main>
  ea:	a9 c0       	rjmp	.+338    	; 0x23e <_exit>

000000ec <__bad_interrupt>:
  ec:	89 cf       	rjmp	.-238    	; 0x0 <__vectors>

000000ee <main>:

volatile char letter=0;  //for  saving incoming character

int main(void)
{	
	DDRF|=(1<<2)|(1<<1)|(1<<0);  // define led as output (PF0,PF1,PF2)
  ee:	80 b3       	in	r24, 0x10	; 16
  f0:	87 60       	ori	r24, 0x07	; 7
  f2:	80 bb       	out	0x10, r24	; 16
	UCSR0B|=(1<<RXCIE0)|(1<<RXEN0)|(1<<RXB80);//setup rx port
  f4:	e1 ec       	ldi	r30, 0xC1	; 193
  f6:	f0 e0       	ldi	r31, 0x00	; 0
  f8:	80 81       	ld	r24, Z
  fa:	82 69       	ori	r24, 0x92	; 146
  fc:	80 83       	st	Z, r24
	/*RXCIE0=RX Complete Interrupt Enable 0*/
	/*RXEN0=Receiver Enable 0*/
	/*RXB80=Receive Data Bit 8 */
	
	UCSR0C|=(1<<UCSZ01)|(1<<UCSZ00);// character size 8 bit
  fe:	e2 ec       	ldi	r30, 0xC2	; 194
 100:	f0 e0       	ldi	r31, 0x00	; 0
 102:	80 81       	ld	r24, Z
 104:	86 60       	ori	r24, 0x06	; 6
 106:	80 83       	st	Z, r24
	UBRR0=207;// from table oscillator speed 8Mhz baud rate 2400 -207
 108:	8f ec       	ldi	r24, 0xCF	; 207
 10a:	90 e0       	ldi	r25, 0x00	; 0
 10c:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
 110:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	
	DDRE|=(1<<3);// define  output (PE3) lamp
 114:	8d b1       	in	r24, 0x0d	; 13
 116:	88 60       	ori	r24, 0x08	; 8
 118:	8d b9       	out	0x0d, r24	; 13
	
	TCCR3A|=(1<<COM3A1)|(1<<WGM30);
 11a:	e0 e9       	ldi	r30, 0x90	; 144
 11c:	f0 e0       	ldi	r31, 0x00	; 0
 11e:	80 81       	ld	r24, Z
 120:	81 68       	ori	r24, 0x81	; 129
 122:	80 83       	st	Z, r24
	/*COM3A1= setup pwm (from fast pwm table )*/
	/*WGM30= 8bit pwm*/
	
	TCCR3B|=(1<<CS30);//prescaler =1
 124:	e1 e9       	ldi	r30, 0x91	; 145
 126:	f0 e0       	ldi	r31, 0x00	; 0
 128:	80 81       	ld	r24, Z
 12a:	81 60       	ori	r24, 0x01	; 1
 12c:	80 83       	st	Z, r24
	TCCR3C|=(1<<FOC3A);//force pwm
 12e:	e2 e9       	ldi	r30, 0x92	; 146
 130:	f0 e0       	ldi	r31, 0x00	; 0
 132:	80 81       	ld	r24, Z
 134:	80 68       	ori	r24, 0x80	; 128
 136:	80 83       	st	Z, r24
	OCR3A=0;//pwm size(brighness control)
 138:	10 92 99 00 	sts	0x0099, r1	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
 13c:	10 92 98 00 	sts	0x0098, r1	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
	sei();//enable globle inturrept
 140:	78 94       	sei
	
	
    while (1) 
    {
	if (letter)// check whether a letter received??
 142:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
 146:	88 23       	and	r24, r24
 148:	09 f4       	brne	.+2      	; 0x14c <main+0x5e>
 14a:	51 c0       	rjmp	.+162    	; 0x1ee <main+0x100>
	{	uint8_t pwm=50;//pwm range control
		if(letter=='A'){//
 14c:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
 150:	81 34       	cpi	r24, 0x41	; 65
 152:	a1 f4       	brne	.+40     	; 0x17c <main+0x8e>
		PORTF=0b001;//indicator for on/off - 'A' led
 154:	81 e0       	ldi	r24, 0x01	; 1
 156:	81 bb       	out	0x11, r24	; 17
			if (OCR3A)//check bulb status?
 158:	80 91 98 00 	lds	r24, 0x0098	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
 15c:	90 91 99 00 	lds	r25, 0x0099	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
 160:	89 2b       	or	r24, r25
 162:	29 f0       	breq	.+10     	; 0x16e <main+0x80>
			{OCR3A=0; //off bulb
 164:	10 92 99 00 	sts	0x0099, r1	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
 168:	10 92 98 00 	sts	0x0098, r1	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
 16c:	2f c0       	rjmp	.+94     	; 0x1cc <main+0xde>
			} 
			else
			{OCR3A=255;// on bulb
 16e:	8f ef       	ldi	r24, 0xFF	; 255
 170:	90 e0       	ldi	r25, 0x00	; 0
 172:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
 176:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
 17a:	28 c0       	rjmp	.+80     	; 0x1cc <main+0xde>
			}
		
		}
		
		else if(letter=='B'){
 17c:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
 180:	82 34       	cpi	r24, 0x42	; 66
 182:	89 f4       	brne	.+34     	; 0x1a6 <main+0xb8>
			PORTF=0b010;//indicator for increase brightness - 'B' led
 184:	82 e0       	ldi	r24, 0x02	; 2
 186:	81 bb       	out	0x11, r24	; 17
			if (OCR3A<=(255-pwm))//check increasing ability
 188:	80 91 98 00 	lds	r24, 0x0098	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
 18c:	90 91 99 00 	lds	r25, 0x0099	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
 190:	8e 3c       	cpi	r24, 0xCE	; 206
 192:	91 05       	cpc	r25, r1
 194:	d8 f4       	brcc	.+54     	; 0x1cc <main+0xde>
			{OCR3A+=pwm;//increasing brightness 
 196:	e8 e9       	ldi	r30, 0x98	; 152
 198:	f0 e0       	ldi	r31, 0x00	; 0
 19a:	80 81       	ld	r24, Z
 19c:	91 81       	ldd	r25, Z+1	; 0x01
 19e:	c2 96       	adiw	r24, 0x32	; 50
 1a0:	91 83       	std	Z+1, r25	; 0x01
 1a2:	80 83       	st	Z, r24
 1a4:	13 c0       	rjmp	.+38     	; 0x1cc <main+0xde>
			}
		}
		
		else if(letter=='C'){
 1a6:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
 1aa:	83 34       	cpi	r24, 0x43	; 67
 1ac:	79 f4       	brne	.+30     	; 0x1cc <main+0xde>
			PORTF=0b100;//indicator for decrease  brightness - 'C' led
 1ae:	84 e0       	ldi	r24, 0x04	; 4
 1b0:	81 bb       	out	0x11, r24	; 17
			if (OCR3A>=pwm)//check decreasing ability
 1b2:	80 91 98 00 	lds	r24, 0x0098	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
 1b6:	90 91 99 00 	lds	r25, 0x0099	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
 1ba:	c2 97       	sbiw	r24, 0x32	; 50
 1bc:	38 f0       	brcs	.+14     	; 0x1cc <main+0xde>
			{OCR3A-=pwm;//decreasing brightness 
 1be:	e8 e9       	ldi	r30, 0x98	; 152
 1c0:	f0 e0       	ldi	r31, 0x00	; 0
 1c2:	80 81       	ld	r24, Z
 1c4:	91 81       	ldd	r25, Z+1	; 0x01
 1c6:	c2 97       	sbiw	r24, 0x32	; 50
 1c8:	91 83       	std	Z+1, r25	; 0x01
 1ca:	80 83       	st	Z, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1cc:	2f e7       	ldi	r18, 0x7F	; 127
 1ce:	88 e3       	ldi	r24, 0x38	; 56
 1d0:	91 e0       	ldi	r25, 0x01	; 1
 1d2:	21 50       	subi	r18, 0x01	; 1
 1d4:	80 40       	sbci	r24, 0x00	; 0
 1d6:	90 40       	sbci	r25, 0x00	; 0
 1d8:	e1 f7       	brne	.-8      	; 0x1d2 <main+0xe4>
 1da:	00 c0       	rjmp	.+0      	; 0x1dc <main+0xee>
 1dc:	00 00       	nop
			}
		}
		_delay_ms(50);	//delay for indicate
		letter=0;//clearing previous letter 
 1de:	10 92 00 02 	sts	0x0200, r1	; 0x800200 <__DATA_REGION_ORIGIN__>
		UCSR0B|=(1<<RXEN0);//enable character reading
 1e2:	e1 ec       	ldi	r30, 0xC1	; 193
 1e4:	f0 e0       	ldi	r31, 0x00	; 0
 1e6:	80 81       	ld	r24, Z
 1e8:	80 61       	ori	r24, 0x10	; 16
 1ea:	80 83       	st	Z, r24
 1ec:	01 c0       	rjmp	.+2      	; 0x1f0 <main+0x102>
	}
	
	else{
	PORTF=0b000;	
 1ee:	11 ba       	out	0x11, r1	; 17
 1f0:	2f ef       	ldi	r18, 0xFF	; 255
 1f2:	80 e7       	ldi	r24, 0x70	; 112
 1f4:	92 e0       	ldi	r25, 0x02	; 2
 1f6:	21 50       	subi	r18, 0x01	; 1
 1f8:	80 40       	sbci	r24, 0x00	; 0
 1fa:	90 40       	sbci	r25, 0x00	; 0
 1fc:	e1 f7       	brne	.-8      	; 0x1f6 <main+0x108>
 1fe:	00 c0       	rjmp	.+0      	; 0x200 <main+0x112>
 200:	00 00       	nop
 202:	9f cf       	rjmp	.-194    	; 0x142 <main+0x54>

00000204 <__vector_25>:
	}
		_delay_ms(100);
    }
}

ISR(USART0_RX_vect){
 204:	1f 92       	push	r1
 206:	0f 92       	push	r0
 208:	0f b6       	in	r0, 0x3f	; 63
 20a:	0f 92       	push	r0
 20c:	11 24       	eor	r1, r1
 20e:	0b b6       	in	r0, 0x3b	; 59
 210:	0f 92       	push	r0
 212:	8f 93       	push	r24
 214:	ef 93       	push	r30
 216:	ff 93       	push	r31
	
	letter=UDR0;// assign letter which received
 218:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 21c:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <__DATA_REGION_ORIGIN__>
	UCSR0B&=~(1<<RXEN0);//disable character reading
 220:	e1 ec       	ldi	r30, 0xC1	; 193
 222:	f0 e0       	ldi	r31, 0x00	; 0
 224:	80 81       	ld	r24, Z
 226:	8f 7e       	andi	r24, 0xEF	; 239
 228:	80 83       	st	Z, r24
}
 22a:	ff 91       	pop	r31
 22c:	ef 91       	pop	r30
 22e:	8f 91       	pop	r24
 230:	0f 90       	pop	r0
 232:	0b be       	out	0x3b, r0	; 59
 234:	0f 90       	pop	r0
 236:	0f be       	out	0x3f, r0	; 63
 238:	0f 90       	pop	r0
 23a:	1f 90       	pop	r1
 23c:	18 95       	reti

0000023e <_exit>:
 23e:	f8 94       	cli

00000240 <__stop_program>:
 240:	ff cf       	rjmp	.-2      	; 0x240 <__stop_program>
