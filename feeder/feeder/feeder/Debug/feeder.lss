
feeder.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000084  00800100  00002b68  00002bfc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002b68  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000005a  00800184  00800184  00002c80  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00002c80  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002cdc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000138  00000000  00000000  00002d1c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000021e5  00000000  00000000  00002e54  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009f4  00000000  00000000  00005039  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000ffd  00000000  00000000  00005a2d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000004ac  00000000  00000000  00006a2c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000952  00000000  00000000  00006ed8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001823  00000000  00000000  0000782a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000170  00000000  00000000  0000904d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__ctors_end>
       4:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
       8:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
       c:	0c 94 4a 03 	jmp	0x694	; 0x694 <__vector_3>
      10:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      14:	0c 94 79 02 	jmp	0x4f2	; 0x4f2 <__vector_5>
      18:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      1c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      20:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      24:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      28:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      2c:	0c 94 8b 04 	jmp	0x916	; 0x916 <__vector_11>
      30:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      34:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      38:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      3c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      40:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      44:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      48:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      4c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      50:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      54:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      58:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      5c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      60:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      64:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	6e 61       	ori	r22, 0x1E	; 30
      6a:	6e 00       	.word	0x006e	; ????

0000006c <__c.2332>:
      6c:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      7c:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      8c:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      9c:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      ac:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      bc:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      cc:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      dc:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      ec:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      fc:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     10c:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     11c:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     12c:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     13c:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     14c:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     15c:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000016a <__ctors_end>:
     16a:	11 24       	eor	r1, r1
     16c:	1f be       	out	0x3f, r1	; 63
     16e:	cf ef       	ldi	r28, 0xFF	; 255
     170:	d8 e0       	ldi	r29, 0x08	; 8
     172:	de bf       	out	0x3e, r29	; 62
     174:	cd bf       	out	0x3d, r28	; 61

00000176 <__do_copy_data>:
     176:	11 e0       	ldi	r17, 0x01	; 1
     178:	a0 e0       	ldi	r26, 0x00	; 0
     17a:	b1 e0       	ldi	r27, 0x01	; 1
     17c:	e8 e6       	ldi	r30, 0x68	; 104
     17e:	fb e2       	ldi	r31, 0x2B	; 43
     180:	02 c0       	rjmp	.+4      	; 0x186 <__do_copy_data+0x10>
     182:	05 90       	lpm	r0, Z+
     184:	0d 92       	st	X+, r0
     186:	a4 38       	cpi	r26, 0x84	; 132
     188:	b1 07       	cpc	r27, r17
     18a:	d9 f7       	brne	.-10     	; 0x182 <__do_copy_data+0xc>

0000018c <__do_clear_bss>:
     18c:	21 e0       	ldi	r18, 0x01	; 1
     18e:	a4 e8       	ldi	r26, 0x84	; 132
     190:	b1 e0       	ldi	r27, 0x01	; 1
     192:	01 c0       	rjmp	.+2      	; 0x196 <.do_clear_bss_start>

00000194 <.do_clear_bss_loop>:
     194:	1d 92       	st	X+, r1

00000196 <.do_clear_bss_start>:
     196:	ae 3d       	cpi	r26, 0xDE	; 222
     198:	b2 07       	cpc	r27, r18
     19a:	e1 f7       	brne	.-8      	; 0x194 <.do_clear_bss_loop>
     19c:	0e 94 17 0c 	call	0x182e	; 0x182e <main>
     1a0:	0c 94 b2 15 	jmp	0x2b64	; 0x2b64 <_exit>

000001a4 <__bad_interrupt>:
     1a4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001a8 <_Z10USART_Initj>:
		LcdChar(str[i]);
	}
}
void LcdCursor(bool Cursor=0){
	if (Cursor==0)
	{LcdCommand(0xC);
     1a8:	9c 01       	movw	r18, r24
     1aa:	40 e0       	ldi	r20, 0x00	; 0
     1ac:	50 e0       	ldi	r21, 0x00	; 0
     1ae:	60 e2       	ldi	r22, 0x20	; 32
     1b0:	71 ea       	ldi	r23, 0xA1	; 161
     1b2:	87 e0       	ldi	r24, 0x07	; 7
     1b4:	90 e0       	ldi	r25, 0x00	; 0
     1b6:	0e 94 0b 13 	call	0x2616	; 0x2616 <__udivmodsi4>
     1ba:	21 50       	subi	r18, 0x01	; 1
     1bc:	31 09       	sbc	r19, r1
     1be:	30 93 c5 00 	sts	0x00C5, r19	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
     1c2:	20 93 c4 00 	sts	0x00C4, r18	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
     1c6:	e1 ec       	ldi	r30, 0xC1	; 193
     1c8:	f0 e0       	ldi	r31, 0x00	; 0
     1ca:	80 81       	ld	r24, Z
     1cc:	88 60       	ori	r24, 0x08	; 8
     1ce:	80 83       	st	Z, r24
     1d0:	86 e0       	ldi	r24, 0x06	; 6
     1d2:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__DATA_REGION_ORIGIN__+0x62>
     1d6:	78 94       	sei
     1d8:	08 95       	ret

000001da <_Z7TWIInitv>:
     1da:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
     1de:	88 e4       	ldi	r24, 0x48	; 72
     1e0:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__DATA_REGION_ORIGIN__+0x58>
     1e4:	84 e0       	ldi	r24, 0x04	; 4
     1e6:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
     1ea:	08 95       	ret

000001ec <_Z8TWIStartv>:
     1ec:	84 ea       	ldi	r24, 0xA4	; 164
     1ee:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
     1f2:	ec eb       	ldi	r30, 0xBC	; 188
     1f4:	f0 e0       	ldi	r31, 0x00	; 0
     1f6:	80 81       	ld	r24, Z
     1f8:	88 23       	and	r24, r24
     1fa:	ec f7       	brge	.-6      	; 0x1f6 <_Z8TWIStartv+0xa>
     1fc:	08 95       	ret

000001fe <_Z7TWIStopv>:
     1fe:	84 e9       	ldi	r24, 0x94	; 148
     200:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
     204:	ec eb       	ldi	r30, 0xBC	; 188
     206:	f0 e0       	ldi	r31, 0x00	; 0
     208:	80 81       	ld	r24, Z
     20a:	84 fd       	sbrc	r24, 4
     20c:	fd cf       	rjmp	.-6      	; 0x208 <_Z7TWIStopv+0xa>
     20e:	08 95       	ret

00000210 <_Z13TWIWriteAddrshh>:
     210:	88 0f       	add	r24, r24
     212:	68 2b       	or	r22, r24
     214:	60 93 bb 00 	sts	0x00BB, r22	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
     218:	84 e8       	ldi	r24, 0x84	; 132
     21a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
     21e:	ec eb       	ldi	r30, 0xBC	; 188
     220:	f0 e0       	ldi	r31, 0x00	; 0
     222:	80 81       	ld	r24, Z
     224:	88 23       	and	r24, r24
     226:	ec f7       	brge	.-6      	; 0x222 <_Z13TWIWriteAddrshh+0x12>
     228:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
     22c:	88 7f       	andi	r24, 0xF8	; 248
     22e:	08 95       	ret

00000230 <_Z12TWIWriteDatah>:
     230:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
     234:	84 e8       	ldi	r24, 0x84	; 132
     236:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
     23a:	ec eb       	ldi	r30, 0xBC	; 188
     23c:	f0 e0       	ldi	r31, 0x00	; 0
     23e:	80 81       	ld	r24, Z
     240:	88 23       	and	r24, r24
     242:	ec f7       	brge	.-6      	; 0x23e <_Z12TWIWriteDatah+0xe>
     244:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
     248:	88 7f       	andi	r24, 0xF8	; 248
     24a:	08 95       	ret

0000024c <_Z11Lcd4bitdatahb>:
     24c:	1f 93       	push	r17
     24e:	cf 93       	push	r28
     250:	df 93       	push	r29
     252:	d8 2f       	mov	r29, r24
     254:	c6 2f       	mov	r28, r22
     256:	0e 94 f6 00 	call	0x1ec	; 0x1ec <_Z8TWIStartv>
     25a:	60 e0       	ldi	r22, 0x00	; 0
     25c:	80 91 dd 01 	lds	r24, 0x01DD	; 0x8001dd <deviceAdress>
     260:	0e 94 08 01 	call	0x210	; 0x210 <_Z13TWIWriteAddrshh>
     264:	1c 2f       	mov	r17, r28
     266:	1d 2b       	or	r17, r29
     268:	80 91 dc 01 	lds	r24, 0x01DC	; 0x8001dc <Backlight>
     26c:	81 2b       	or	r24, r17
     26e:	0e 94 18 01 	call	0x230	; 0x230 <_Z12TWIWriteDatah>
     272:	0e 94 ff 00 	call	0x1fe	; 0x1fe <_Z7TWIStopv>
     276:	0e 94 f6 00 	call	0x1ec	; 0x1ec <_Z8TWIStartv>
     27a:	60 e0       	ldi	r22, 0x00	; 0
     27c:	80 91 dd 01 	lds	r24, 0x01DD	; 0x8001dd <deviceAdress>
     280:	0e 94 08 01 	call	0x210	; 0x210 <_Z13TWIWriteAddrshh>
     284:	80 91 dc 01 	lds	r24, 0x01DC	; 0x8001dc <Backlight>
     288:	84 60       	ori	r24, 0x04	; 4
     28a:	81 2b       	or	r24, r17
     28c:	0e 94 18 01 	call	0x230	; 0x230 <_Z12TWIWriteDatah>
     290:	0e 94 ff 00 	call	0x1fe	; 0x1fe <_Z7TWIStopv>
     294:	8f e8       	ldi	r24, 0x8F	; 143
     296:	91 e0       	ldi	r25, 0x01	; 1
     298:	01 97       	sbiw	r24, 0x01	; 1
     29a:	f1 f7       	brne	.-4      	; 0x298 <_Z11Lcd4bitdatahb+0x4c>
     29c:	00 c0       	rjmp	.+0      	; 0x29e <_Z11Lcd4bitdatahb+0x52>
     29e:	00 00       	nop
     2a0:	0e 94 f6 00 	call	0x1ec	; 0x1ec <_Z8TWIStartv>
     2a4:	60 e0       	ldi	r22, 0x00	; 0
     2a6:	80 91 dd 01 	lds	r24, 0x01DD	; 0x8001dd <deviceAdress>
     2aa:	0e 94 08 01 	call	0x210	; 0x210 <_Z13TWIWriteAddrshh>
     2ae:	db 7f       	andi	r29, 0xFB	; 251
     2b0:	cd 2b       	or	r28, r29
     2b2:	80 91 dc 01 	lds	r24, 0x01DC	; 0x8001dc <Backlight>
     2b6:	8c 2b       	or	r24, r28
     2b8:	0e 94 18 01 	call	0x230	; 0x230 <_Z12TWIWriteDatah>
     2bc:	0e 94 ff 00 	call	0x1fe	; 0x1fe <_Z7TWIStopv>
     2c0:	8f e9       	ldi	r24, 0x9F	; 159
     2c2:	9f e0       	ldi	r25, 0x0F	; 15
     2c4:	01 97       	sbiw	r24, 0x01	; 1
     2c6:	f1 f7       	brne	.-4      	; 0x2c4 <_Z11Lcd4bitdatahb+0x78>
     2c8:	00 c0       	rjmp	.+0      	; 0x2ca <_Z11Lcd4bitdatahb+0x7e>
     2ca:	00 00       	nop
     2cc:	df 91       	pop	r29
     2ce:	cf 91       	pop	r28
     2d0:	1f 91       	pop	r17
     2d2:	08 95       	ret

000002d4 <_Z10LcdCommandh>:
     2d4:	cf 93       	push	r28
     2d6:	c8 2f       	mov	r28, r24
     2d8:	60 e0       	ldi	r22, 0x00	; 0
     2da:	80 7f       	andi	r24, 0xF0	; 240
     2dc:	0e 94 26 01 	call	0x24c	; 0x24c <_Z11Lcd4bitdatahb>
     2e0:	60 e0       	ldi	r22, 0x00	; 0
     2e2:	8c 2f       	mov	r24, r28
     2e4:	82 95       	swap	r24
     2e6:	80 7f       	andi	r24, 0xF0	; 240
     2e8:	0e 94 26 01 	call	0x24c	; 0x24c <_Z11Lcd4bitdatahb>
     2ec:	cf 91       	pop	r28
     2ee:	08 95       	ret

000002f0 <_Z7LcdInith>:
     2f0:	cf 93       	push	r28
     2f2:	c8 2f       	mov	r28, r24
     2f4:	0e 94 ed 00 	call	0x1da	; 0x1da <_Z7TWIInitv>
     2f8:	88 e0       	ldi	r24, 0x08	; 8
     2fa:	80 93 dc 01 	sts	0x01DC, r24	; 0x8001dc <Backlight>
     2fe:	8f e3       	ldi	r24, 0x3F	; 63
     300:	9c e9       	ldi	r25, 0x9C	; 156
     302:	01 97       	sbiw	r24, 0x01	; 1
     304:	f1 f7       	brne	.-4      	; 0x302 <_Z7LcdInith+0x12>
     306:	00 c0       	rjmp	.+0      	; 0x308 <_Z7LcdInith+0x18>
     308:	00 00       	nop
     30a:	c0 93 dd 01 	sts	0x01DD, r28	; 0x8001dd <deviceAdress>
     30e:	82 e0       	ldi	r24, 0x02	; 2
     310:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <_Z10LcdCommandh>
     314:	88 e2       	ldi	r24, 0x28	; 40
     316:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <_Z10LcdCommandh>
     31a:	8c e0       	ldi	r24, 0x0C	; 12
     31c:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <_Z10LcdCommandh>
     320:	86 e0       	ldi	r24, 0x06	; 6
     322:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <_Z10LcdCommandh>
     326:	81 e0       	ldi	r24, 0x01	; 1
     328:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <_Z10LcdCommandh>
     32c:	cf 91       	pop	r28
     32e:	08 95       	ret

00000330 <_Z7LcdCharh>:
	Lcd4bitdata(command&0xF0,0);
	Lcd4bitdata((command<<4)&0xF0,0);
	
}

void LcdChar(uint8_t Lcdcharval){
     330:	cf 93       	push	r28
     332:	c8 2f       	mov	r28, r24
	Lcd4bitdata(Lcdcharval&0xF0,1);
     334:	61 e0       	ldi	r22, 0x01	; 1
     336:	80 7f       	andi	r24, 0xF0	; 240
     338:	0e 94 26 01 	call	0x24c	; 0x24c <_Z11Lcd4bitdatahb>
	Lcd4bitdata((Lcdcharval<<4)&0xF0,1);
     33c:	61 e0       	ldi	r22, 0x01	; 1
     33e:	8c 2f       	mov	r24, r28
     340:	82 95       	swap	r24
     342:	80 7f       	andi	r24, 0xF0	; 240
     344:	0e 94 26 01 	call	0x24c	; 0x24c <_Z11Lcd4bitdatahb>
	
}
     348:	cf 91       	pop	r28
     34a:	08 95       	ret

0000034c <_Z9LcdStringPc>:
	LcdString(str);
	
}

void LcdString (char *str)		/* Send string to LCD function */
{
     34c:	cf 93       	push	r28
     34e:	df 93       	push	r29
     350:	ec 01       	movw	r28, r24
	int i;
	for(i=0;str[i]!=0;i++)		/* Send each char of string till the NULL */
     352:	88 81       	ld	r24, Y
     354:	88 23       	and	r24, r24
     356:	31 f0       	breq	.+12     	; 0x364 <_Z9LcdStringPc+0x18>
     358:	21 96       	adiw	r28, 0x01	; 1
	{
		LcdChar(str[i]);
     35a:	0e 94 98 01 	call	0x330	; 0x330 <_Z7LcdCharh>
}

void LcdString (char *str)		/* Send string to LCD function */
{
	int i;
	for(i=0;str[i]!=0;i++)		/* Send each char of string till the NULL */
     35e:	89 91       	ld	r24, Y+
     360:	81 11       	cpse	r24, r1
     362:	fb cf       	rjmp	.-10     	; 0x35a <_Z9LcdStringPc+0xe>
	{
		LcdChar(str[i]);
	}
}
     364:	df 91       	pop	r29
     366:	cf 91       	pop	r28
     368:	08 95       	ret

0000036a <_Z12LcdSetCursorhhPc>:
	Lcd4bitdata(Lcdcharval&0xF0,1);
	Lcd4bitdata((Lcdcharval<<4)&0xF0,1);
	
}

void LcdSetCursor(uint8_t xaxis, uint8_t yaxis,char*str){
     36a:	cf 93       	push	r28
     36c:	df 93       	push	r29
     36e:	ea 01       	movw	r28, r20
	uint8_t tempcommand;
	switch(yaxis){
     370:	61 30       	cpi	r22, 0x01	; 1
     372:	41 f0       	breq	.+16     	; 0x384 <_Z12LcdSetCursorhhPc+0x1a>
     374:	28 f0       	brcs	.+10     	; 0x380 <_Z12LcdSetCursorhhPc+0x16>
     376:	62 30       	cpi	r22, 0x02	; 2
     378:	39 f0       	breq	.+14     	; 0x388 <_Z12LcdSetCursorhhPc+0x1e>
     37a:	63 30       	cpi	r22, 0x03	; 3
     37c:	39 f0       	breq	.+14     	; 0x38c <_Z12LcdSetCursorhhPc+0x22>
     37e:	07 c0       	rjmp	.+14     	; 0x38e <_Z12LcdSetCursorhhPc+0x24>
		case 0:tempcommand=0x80;break;  //yaxis =0
     380:	90 e8       	ldi	r25, 0x80	; 128
     382:	05 c0       	rjmp	.+10     	; 0x38e <_Z12LcdSetCursorhhPc+0x24>
		case 1:tempcommand=0xC0;break;
     384:	90 ec       	ldi	r25, 0xC0	; 192
     386:	03 c0       	rjmp	.+6      	; 0x38e <_Z12LcdSetCursorhhPc+0x24>
		case 2:tempcommand=0x94;break;
     388:	94 e9       	ldi	r25, 0x94	; 148
     38a:	01 c0       	rjmp	.+2      	; 0x38e <_Z12LcdSetCursorhhPc+0x24>
		case 3:tempcommand=0xd4;break;		
     38c:	94 ed       	ldi	r25, 0xD4	; 212
	}
	LcdCommand(tempcommand|(0x0F&xaxis));
     38e:	8f 70       	andi	r24, 0x0F	; 15
     390:	89 2b       	or	r24, r25
     392:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <_Z10LcdCommandh>
	LcdString(str);
     396:	ce 01       	movw	r24, r28
     398:	0e 94 a6 01 	call	0x34c	; 0x34c <_Z9LcdStringPc>
	
}
     39c:	df 91       	pop	r29
     39e:	cf 91       	pop	r28
     3a0:	08 95       	ret

000003a2 <_Z7InitADCv>:
void go_x(uint8_t max_speed,int32_t limit);

void InitADC()
{
	// Select Vref=AVcc
	ADMUX |= (1<<REFS0);
     3a2:	ec e7       	ldi	r30, 0x7C	; 124
     3a4:	f0 e0       	ldi	r31, 0x00	; 0
     3a6:	80 81       	ld	r24, Z
     3a8:	80 64       	ori	r24, 0x40	; 64
     3aa:	80 83       	st	Z, r24
	//set prescaller to 128 and enable ADC
	ADCSRA |= (1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0)|(1<<ADEN);
     3ac:	ea e7       	ldi	r30, 0x7A	; 122
     3ae:	f0 e0       	ldi	r31, 0x00	; 0
     3b0:	80 81       	ld	r24, Z
     3b2:	87 68       	ori	r24, 0x87	; 135
     3b4:	80 83       	st	Z, r24
	DDRC|=(1<<0);
     3b6:	38 9a       	sbi	0x07, 0	; 7
	PORTC|=(1<<0);
     3b8:	40 9a       	sbi	0x08, 0	; 8
	
	DDRD&=~(1<<0);
     3ba:	50 98       	cbi	0x0a, 0	; 10
	PORTD|=(1<<0);
     3bc:	58 9a       	sbi	0x0b, 0	; 11
	DDRB|=(1<<3);  // rely
     3be:	23 9a       	sbi	0x04, 3	; 4
     3c0:	08 95       	ret

000003c2 <_Z7ReadADCh>:
	//pd0 main push button
}
uint16_t ReadADC(uint8_t ADCchannel)
{
	//select ADC channel with safety mask
	ADMUX = (ADMUX & 0xF0) | (ADCchannel & 0x0F);
     3c2:	ec e7       	ldi	r30, 0x7C	; 124
     3c4:	f0 e0       	ldi	r31, 0x00	; 0
     3c6:	90 81       	ld	r25, Z
     3c8:	90 7f       	andi	r25, 0xF0	; 240
     3ca:	8f 70       	andi	r24, 0x0F	; 15
     3cc:	89 2b       	or	r24, r25
     3ce:	80 83       	st	Z, r24
	//single conversion mode
	ADCSRA |= (1<<ADSC);
     3d0:	ea e7       	ldi	r30, 0x7A	; 122
     3d2:	f0 e0       	ldi	r31, 0x00	; 0
     3d4:	80 81       	ld	r24, Z
     3d6:	80 64       	ori	r24, 0x40	; 64
     3d8:	80 83       	st	Z, r24
	// wait until ADC conversion is complete
	while( ADCSRA & (1<<ADSC) );
     3da:	80 81       	ld	r24, Z
     3dc:	86 fd       	sbrc	r24, 6
     3de:	fd cf       	rjmp	.-6      	; 0x3da <_Z7ReadADCh+0x18>
	return ADC;
     3e0:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__DATA_REGION_ORIGIN__+0x18>
     3e4:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__DATA_REGION_ORIGIN__+0x19>
}
     3e8:	08 95       	ret

000003ea <_Z9xaxisInitv>:

void xaxisInit(){
	
	/*PD2 and PD3*/
	DDRD&=~(1<<2);
     3ea:	52 98       	cbi	0x0a, 2	; 10
	DDRD&=~(1<<3);
     3ec:	53 98       	cbi	0x0a, 3	; 10
	
	/*pullup*/
	PORTD|=(1<<2);
     3ee:	5a 9a       	sbi	0x0b, 2	; 11
	PORTD|=(1<<3);
     3f0:	5b 9a       	sbi	0x0b, 3	; 11
	PORTD|=(1<<4);// limit switch pul up
     3f2:	5c 9a       	sbi	0x0b, 4	; 11
	
	/*interrupt enable process-PCINT18,PCINT19*/
	PCICR|=(1<<PCIE2); //Pin Change Interrupt Enable 2
     3f4:	e8 e6       	ldi	r30, 0x68	; 104
     3f6:	f0 e0       	ldi	r31, 0x00	; 0
     3f8:	80 81       	ld	r24, Z
     3fa:	84 60       	ori	r24, 0x04	; 4
     3fc:	80 83       	st	Z, r24
	PCMSK2|=(1<<PCINT18);
     3fe:	ed e6       	ldi	r30, 0x6D	; 109
     400:	f0 e0       	ldi	r31, 0x00	; 0
     402:	80 81       	ld	r24, Z
     404:	84 60       	ori	r24, 0x04	; 4
     406:	80 83       	st	Z, r24
	PCMSK2|=(1<<PCINT19);
     408:	80 81       	ld	r24, Z
     40a:	88 60       	ori	r24, 0x08	; 8
     40c:	80 83       	st	Z, r24
	PCMSK2|=(1<<PCINT20);// for limit switch
     40e:	80 81       	ld	r24, Z
     410:	80 61       	ori	r24, 0x10	; 16
     412:	80 83       	st	Z, r24
     414:	08 95       	ret

00000416 <_Z9timerInitv>:
	

}

void timerInit(){
	TCCR1B|=(1<<WGM12);
     416:	e1 e8       	ldi	r30, 0x81	; 129
     418:	f0 e0       	ldi	r31, 0x00	; 0
     41a:	80 81       	ld	r24, Z
     41c:	88 60       	ori	r24, 0x08	; 8
     41e:	80 83       	st	Z, r24
	TCCR1B|=(1<<CS11)|(1<<CS10); //prescaler =8
     420:	80 81       	ld	r24, Z
     422:	83 60       	ori	r24, 0x03	; 3
     424:	80 83       	st	Z, r24
	OCR1A=1250;
     426:	82 ee       	ldi	r24, 0xE2	; 226
     428:	94 e0       	ldi	r25, 0x04	; 4
     42a:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
     42e:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__DATA_REGION_ORIGIN__+0x28>
	TIMSK1|=(1<<OCIE1A);
     432:	ef e6       	ldi	r30, 0x6F	; 111
     434:	f0 e0       	ldi	r31, 0x00	; 0
     436:	80 81       	ld	r24, Z
     438:	82 60       	ori	r24, 0x02	; 2
     43a:	80 83       	st	Z, r24
     43c:	08 95       	ret

0000043e <_Z4go_xhl>:
}

void go_x(uint8_t max_speed,int32_t limit){
     43e:	8f 92       	push	r8
     440:	9f 92       	push	r9
     442:	af 92       	push	r10
     444:	bf 92       	push	r11
     446:	cf 92       	push	r12
     448:	df 92       	push	r13
     44a:	ef 92       	push	r14
     44c:	ff 92       	push	r15
     44e:	c8 2e       	mov	r12, r24
     450:	4a 01       	movw	r8, r20
     452:	5b 01       	movw	r10, r22
	if (limit<0)
     454:	77 23       	and	r23, r23
     456:	1c f4       	brge	.+6      	; 0x45e <_Z4go_xhl+0x20>
	{PORTB|=(1<<7);
     458:	2f 9a       	sbi	0x05, 7	; 5
		PORTB&=~(1<<6);
     45a:	2e 98       	cbi	0x05, 6	; 5
     45c:	02 c0       	rjmp	.+4      	; 0x462 <_Z4go_xhl+0x24>
	}
	else
	{PORTB|=(1<<6);PORTB&=~(1<<7);
     45e:	2e 9a       	sbi	0x05, 6	; 5
     460:	2f 98       	cbi	0x05, 7	; 5
	}
	
	timerInit();
     462:	0e 94 0b 02 	call	0x416	; 0x416 <_Z9timerInitv>
	TimerCount=0;
     466:	10 92 a0 01 	sts	0x01A0, r1	; 0x8001a0 <TimerCount>
     46a:	10 92 a1 01 	sts	0x01A1, r1	; 0x8001a1 <TimerCount+0x1>
     46e:	10 92 a2 01 	sts	0x01A2, r1	; 0x8001a2 <TimerCount+0x2>
     472:	10 92 a3 01 	sts	0x01A3, r1	; 0x8001a3 <TimerCount+0x3>
	xposition=0;
     476:	10 92 c4 01 	sts	0x01C4, r1	; 0x8001c4 <xposition+0x1>
     47a:	10 92 c3 01 	sts	0x01C3, r1	; 0x8001c3 <xposition>
	errorI=0;
     47e:	10 92 96 01 	sts	0x0196, r1	; 0x800196 <errorI>
     482:	10 92 97 01 	sts	0x0197, r1	; 0x800197 <errorI+0x1>
     486:	10 92 98 01 	sts	0x0198, r1	; 0x800198 <errorI+0x2>
     48a:	10 92 99 01 	sts	0x0199, r1	; 0x800199 <errorI+0x3>
	xMotor=0;
     48e:	10 92 0f 01 	sts	0x010F, r1	; 0x80010f <xMotor+0x1>
     492:	10 92 0e 01 	sts	0x010E, r1	; 0x80010e <xMotor>
	
	x_max_speed=max_speed;
     496:	d1 2c       	mov	r13, r1
     498:	e1 2c       	mov	r14, r1
     49a:	f1 2c       	mov	r15, r1
     49c:	c7 01       	movw	r24, r14
     49e:	b6 01       	movw	r22, r12
     4a0:	0e 94 24 0e 	call	0x1c48	; 0x1c48 <__floatunsisf>
     4a4:	60 93 bd 01 	sts	0x01BD, r22	; 0x8001bd <x_max_speed>
     4a8:	70 93 be 01 	sts	0x01BE, r23	; 0x8001be <x_max_speed+0x1>
     4ac:	80 93 bf 01 	sts	0x01BF, r24	; 0x8001bf <x_max_speed+0x2>
     4b0:	90 93 c0 01 	sts	0x01C0, r25	; 0x8001c0 <x_max_speed+0x3>
	XT=limit/max_speed;
     4b4:	c5 01       	movw	r24, r10
     4b6:	b4 01       	movw	r22, r8
     4b8:	a7 01       	movw	r20, r14
     4ba:	96 01       	movw	r18, r12
     4bc:	0e 94 2d 13 	call	0x265a	; 0x265a <__divmodsi4>
     4c0:	30 93 bc 01 	sts	0x01BC, r19	; 0x8001bc <XT+0x1>
     4c4:	20 93 bb 01 	sts	0x01BB, r18	; 0x8001bb <XT>

	OCR0B = 0;
     4c8:	18 bc       	out	0x28, r1	; 40
	
	
	TimerCount=0;
     4ca:	10 92 a0 01 	sts	0x01A0, r1	; 0x8001a0 <TimerCount>
     4ce:	10 92 a1 01 	sts	0x01A1, r1	; 0x8001a1 <TimerCount+0x1>
     4d2:	10 92 a2 01 	sts	0x01A2, r1	; 0x8001a2 <TimerCount+0x2>
     4d6:	10 92 a3 01 	sts	0x01A3, r1	; 0x8001a3 <TimerCount+0x3>
	xEnable=1;
     4da:	81 e0       	ldi	r24, 0x01	; 1
     4dc:	80 93 b8 01 	sts	0x01B8, r24	; 0x8001b8 <xEnable>
	
	
	
	
	
}
     4e0:	ff 90       	pop	r15
     4e2:	ef 90       	pop	r14
     4e4:	df 90       	pop	r13
     4e6:	cf 90       	pop	r12
     4e8:	bf 90       	pop	r11
     4ea:	af 90       	pop	r10
     4ec:	9f 90       	pop	r9
     4ee:	8f 90       	pop	r8
     4f0:	08 95       	ret

000004f2 <__vector_5>:
	
	
	
}

ISR(PCINT2_vect){  //xaxis
     4f2:	1f 92       	push	r1
     4f4:	0f 92       	push	r0
     4f6:	0f b6       	in	r0, 0x3f	; 63
     4f8:	0f 92       	push	r0
     4fa:	11 24       	eor	r1, r1
     4fc:	2f 93       	push	r18
     4fe:	3f 93       	push	r19
     500:	4f 93       	push	r20
     502:	5f 93       	push	r21
     504:	6f 93       	push	r22
     506:	7f 93       	push	r23
     508:	8f 93       	push	r24
     50a:	9f 93       	push	r25
     50c:	af 93       	push	r26
     50e:	bf 93       	push	r27
     510:	ef 93       	push	r30
     512:	ff 93       	push	r31
	/*0 2 3 1 0 2 3 1*/
	uint8_t in_x=(PIND&0b00001100)>>2;
     514:	89 b1       	in	r24, 0x09	; 9
     516:	8c 70       	andi	r24, 0x0C	; 12
     518:	90 e0       	ldi	r25, 0x00	; 0
     51a:	95 95       	asr	r25
     51c:	87 95       	ror	r24
     51e:	95 95       	asr	r25
     520:	87 95       	ror	r24
	if (first_x==0)
     522:	20 91 c1 01 	lds	r18, 0x01C1	; 0x8001c1 <first_x>
     526:	21 11       	cpse	r18, r1
     528:	06 c0       	rjmp	.+12     	; 0x536 <__vector_5+0x44>
	{prevx=in_x;
     52a:	80 93 c2 01 	sts	0x01C2, r24	; 0x8001c2 <prevx>
		first_x=1;
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	80 93 c1 01 	sts	0x01C1, r24	; 0x8001c1 <first_x>
     534:	46 c0       	rjmp	.+140    	; 0x5c2 <__vector_5+0xd0>
	{
		
		bool dir_x=0;
		
		
		switch(in_x){
     536:	9c 01       	movw	r18, r24
     538:	33 27       	eor	r19, r19
     53a:	21 30       	cpi	r18, 0x01	; 1
     53c:	31 05       	cpc	r19, r1
     53e:	01 f1       	breq	.+64     	; 0x580 <__vector_5+0x8e>
     540:	1c f4       	brge	.+6      	; 0x548 <__vector_5+0x56>
     542:	23 2b       	or	r18, r19
     544:	41 f0       	breq	.+16     	; 0x556 <__vector_5+0x64>
     546:	23 c0       	rjmp	.+70     	; 0x58e <__vector_5+0x9c>
     548:	22 30       	cpi	r18, 0x02	; 2
     54a:	31 05       	cpc	r19, r1
     54c:	59 f0       	breq	.+22     	; 0x564 <__vector_5+0x72>
     54e:	23 30       	cpi	r18, 0x03	; 3
     550:	31 05       	cpc	r19, r1
     552:	79 f0       	breq	.+30     	; 0x572 <__vector_5+0x80>
     554:	1c c0       	rjmp	.+56     	; 0x58e <__vector_5+0x9c>
			case 0 : if (prevx==1){dir_x=1;} break;
     556:	30 91 c2 01 	lds	r19, 0x01C2	; 0x8001c2 <prevx>
     55a:	21 e0       	ldi	r18, 0x01	; 1
     55c:	31 30       	cpi	r19, 0x01	; 1
     55e:	c1 f0       	breq	.+48     	; 0x590 <__vector_5+0x9e>
     560:	20 e0       	ldi	r18, 0x00	; 0
     562:	16 c0       	rjmp	.+44     	; 0x590 <__vector_5+0x9e>
			case 2 : if (prevx==0){dir_x=1;} break;
     564:	30 91 c2 01 	lds	r19, 0x01C2	; 0x8001c2 <prevx>
     568:	21 e0       	ldi	r18, 0x01	; 1
     56a:	33 23       	and	r19, r19
     56c:	89 f0       	breq	.+34     	; 0x590 <__vector_5+0x9e>
     56e:	20 e0       	ldi	r18, 0x00	; 0
     570:	0f c0       	rjmp	.+30     	; 0x590 <__vector_5+0x9e>
			case 3 : if (prevx==2){dir_x=1;} break;
     572:	30 91 c2 01 	lds	r19, 0x01C2	; 0x8001c2 <prevx>
     576:	21 e0       	ldi	r18, 0x01	; 1
     578:	32 30       	cpi	r19, 0x02	; 2
     57a:	51 f0       	breq	.+20     	; 0x590 <__vector_5+0x9e>
     57c:	20 e0       	ldi	r18, 0x00	; 0
     57e:	08 c0       	rjmp	.+16     	; 0x590 <__vector_5+0x9e>
			case 1 : if (prevx==3){dir_x=1;} break;
     580:	30 91 c2 01 	lds	r19, 0x01C2	; 0x8001c2 <prevx>
     584:	21 e0       	ldi	r18, 0x01	; 1
     586:	33 30       	cpi	r19, 0x03	; 3
     588:	19 f0       	breq	.+6      	; 0x590 <__vector_5+0x9e>
     58a:	20 e0       	ldi	r18, 0x00	; 0
     58c:	01 c0       	rjmp	.+2      	; 0x590 <__vector_5+0x9e>
		first_x=1;
	} 
	else
	{
		
		bool dir_x=0;
     58e:	20 e0       	ldi	r18, 0x00	; 0
			case 2 : if (prevx==0){dir_x=1;} break;
			case 3 : if (prevx==2){dir_x=1;} break;
			case 1 : if (prevx==3){dir_x=1;} break;
			
		}
		if (dir_x==1)///////////////    direction change
     590:	22 23       	and	r18, r18
     592:	59 f0       	breq	.+22     	; 0x5aa <__vector_5+0xb8>
		{ xposition++;
     594:	20 91 c3 01 	lds	r18, 0x01C3	; 0x8001c3 <xposition>
     598:	30 91 c4 01 	lds	r19, 0x01C4	; 0x8001c4 <xposition+0x1>
     59c:	2f 5f       	subi	r18, 0xFF	; 255
     59e:	3f 4f       	sbci	r19, 0xFF	; 255
     5a0:	30 93 c4 01 	sts	0x01C4, r19	; 0x8001c4 <xposition+0x1>
     5a4:	20 93 c3 01 	sts	0x01C3, r18	; 0x8001c3 <xposition>
     5a8:	0a c0       	rjmp	.+20     	; 0x5be <__vector_5+0xcc>
		}
		else
		{xposition--;
     5aa:	20 91 c3 01 	lds	r18, 0x01C3	; 0x8001c3 <xposition>
     5ae:	30 91 c4 01 	lds	r19, 0x01C4	; 0x8001c4 <xposition+0x1>
     5b2:	21 50       	subi	r18, 0x01	; 1
     5b4:	31 09       	sbc	r19, r1
     5b6:	30 93 c4 01 	sts	0x01C4, r19	; 0x8001c4 <xposition+0x1>
     5ba:	20 93 c3 01 	sts	0x01C3, r18	; 0x8001c3 <xposition>
		}
		prevx=in_x;
     5be:	80 93 c2 01 	sts	0x01C2, r24	; 0x8001c2 <prevx>
		
		
	}
	
	if (((PIND&0b00010000)>>4)==0)
     5c2:	4c 99       	sbic	0x09, 4	; 9
     5c4:	1c c0       	rjmp	.+56     	; 0x5fe <__vector_5+0x10c>
	{
	
	TimerCount=0;
     5c6:	10 92 a0 01 	sts	0x01A0, r1	; 0x8001a0 <TimerCount>
     5ca:	10 92 a1 01 	sts	0x01A1, r1	; 0x8001a1 <TimerCount+0x1>
     5ce:	10 92 a2 01 	sts	0x01A2, r1	; 0x8001a2 <TimerCount+0x2>
     5d2:	10 92 a3 01 	sts	0x01A3, r1	; 0x8001a3 <TimerCount+0x3>
	XT=0;
     5d6:	10 92 bc 01 	sts	0x01BC, r1	; 0x8001bc <XT+0x1>
     5da:	10 92 bb 01 	sts	0x01BB, r1	; 0x8001bb <XT>
	OCR0B=0;
     5de:	18 bc       	out	0x28, r1	; 40
	TCCR1B=0;
     5e0:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__DATA_REGION_ORIGIN__+0x21>
	xEnable=0;
     5e4:	10 92 b8 01 	sts	0x01B8, r1	; 0x8001b8 <xEnable>
	
	go_x(10,500);
     5e8:	44 ef       	ldi	r20, 0xF4	; 244
     5ea:	51 e0       	ldi	r21, 0x01	; 1
     5ec:	60 e0       	ldi	r22, 0x00	; 0
     5ee:	70 e0       	ldi	r23, 0x00	; 0
     5f0:	8a e0       	ldi	r24, 0x0A	; 10
     5f2:	0e 94 1f 02 	call	0x43e	; 0x43e <_Z4go_xhl>
	
	xposition=0;
     5f6:	10 92 c4 01 	sts	0x01C4, r1	; 0x8001c4 <xposition+0x1>
     5fa:	10 92 c3 01 	sts	0x01C3, r1	; 0x8001c3 <xposition>
	}
	
	if (xposition>6000)
     5fe:	80 91 c3 01 	lds	r24, 0x01C3	; 0x8001c3 <xposition>
     602:	90 91 c4 01 	lds	r25, 0x01C4	; 0x8001c4 <xposition+0x1>
     606:	81 37       	cpi	r24, 0x71	; 113
     608:	97 41       	sbci	r25, 0x17	; 23
     60a:	04 f1       	brlt	.+64     	; 0x64c <__vector_5+0x15a>
	{
		
		TimerCount=0;
     60c:	10 92 a0 01 	sts	0x01A0, r1	; 0x8001a0 <TimerCount>
     610:	10 92 a1 01 	sts	0x01A1, r1	; 0x8001a1 <TimerCount+0x1>
     614:	10 92 a2 01 	sts	0x01A2, r1	; 0x8001a2 <TimerCount+0x2>
     618:	10 92 a3 01 	sts	0x01A3, r1	; 0x8001a3 <TimerCount+0x3>
		XT=0;
     61c:	10 92 bc 01 	sts	0x01BC, r1	; 0x8001bc <XT+0x1>
     620:	10 92 bb 01 	sts	0x01BB, r1	; 0x8001bb <XT>
		OCR0B=0;
     624:	18 bc       	out	0x28, r1	; 40
		TCCR1B=0;
     626:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__DATA_REGION_ORIGIN__+0x21>
		xEnable=0;
     62a:	10 92 b8 01 	sts	0x01B8, r1	; 0x8001b8 <xEnable>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     62e:	8f ef       	ldi	r24, 0xFF	; 255
     630:	99 e6       	ldi	r25, 0x69	; 105
     632:	28 e1       	ldi	r18, 0x18	; 24
     634:	81 50       	subi	r24, 0x01	; 1
     636:	90 40       	sbci	r25, 0x00	; 0
     638:	20 40       	sbci	r18, 0x00	; 0
     63a:	e1 f7       	brne	.-8      	; 0x634 <__vector_5+0x142>
     63c:	00 c0       	rjmp	.+0      	; 0x63e <__vector_5+0x14c>
     63e:	00 00       	nop
		_delay_ms(1000);
		xposition=6000;
     640:	80 e7       	ldi	r24, 0x70	; 112
     642:	97 e1       	ldi	r25, 0x17	; 23
     644:	90 93 c4 01 	sts	0x01C4, r25	; 0x8001c4 <xposition+0x1>
     648:	80 93 c3 01 	sts	0x01C3, r24	; 0x8001c3 <xposition>
	}
	

}
     64c:	ff 91       	pop	r31
     64e:	ef 91       	pop	r30
     650:	bf 91       	pop	r27
     652:	af 91       	pop	r26
     654:	9f 91       	pop	r25
     656:	8f 91       	pop	r24
     658:	7f 91       	pop	r23
     65a:	6f 91       	pop	r22
     65c:	5f 91       	pop	r21
     65e:	4f 91       	pop	r20
     660:	3f 91       	pop	r19
     662:	2f 91       	pop	r18
     664:	0f 90       	pop	r0
     666:	0f be       	out	0x3f, r0	; 63
     668:	0f 90       	pop	r0
     66a:	1f 90       	pop	r1
     66c:	18 95       	reti

0000066e <_Z9yaxisInitv>:
}


void yaxisInit(){
	/*PB1 and PB2*/
	DDRB&=~(1<<1);
     66e:	21 98       	cbi	0x04, 1	; 4
	DDRB&=~(1<<2);
     670:	22 98       	cbi	0x04, 2	; 4
	
	/*pullup*/
	PORTB|=(1<<1);
     672:	29 9a       	sbi	0x05, 1	; 5
	PORTB|=(1<<2);
     674:	2a 9a       	sbi	0x05, 2	; 5
	
	/*interrupt enable process-PCINT1,PCINT2*/
	PCICR|=(1<<PCIE0); //Pin Change Interrupt Enable 0
     676:	e8 e6       	ldi	r30, 0x68	; 104
     678:	f0 e0       	ldi	r31, 0x00	; 0
     67a:	80 81       	ld	r24, Z
     67c:	81 60       	ori	r24, 0x01	; 1
     67e:	80 83       	st	Z, r24
	PCMSK0|=(1<<PCINT1);
     680:	eb e6       	ldi	r30, 0x6B	; 107
     682:	f0 e0       	ldi	r31, 0x00	; 0
     684:	80 81       	ld	r24, Z
     686:	82 60       	ori	r24, 0x02	; 2
     688:	80 83       	st	Z, r24
	PCMSK0|=(1<<PCINT2);
     68a:	80 81       	ld	r24, Z
     68c:	84 60       	ori	r24, 0x04	; 4
     68e:	80 83       	st	Z, r24
	
	DDRB|=(1<<0);
     690:	20 9a       	sbi	0x04, 0	; 4
     692:	08 95       	ret

00000694 <__vector_3>:
	
}

ISR(PCINT0_vect){
     694:	1f 92       	push	r1
     696:	0f 92       	push	r0
     698:	0f b6       	in	r0, 0x3f	; 63
     69a:	0f 92       	push	r0
     69c:	11 24       	eor	r1, r1
     69e:	8f 93       	push	r24
     6a0:	9f 93       	push	r25
     6a2:	af 93       	push	r26
     6a4:	bf 93       	push	r27
	
	
	if (((PINB&0b00000110)>>1)==0)
     6a6:	83 b1       	in	r24, 0x03	; 3
     6a8:	86 70       	andi	r24, 0x06	; 6
     6aa:	99 f4       	brne	.+38     	; 0x6d2 <__vector_3+0x3e>
	{yposition++;
     6ac:	80 91 b4 01 	lds	r24, 0x01B4	; 0x8001b4 <yposition>
     6b0:	90 91 b5 01 	lds	r25, 0x01B5	; 0x8001b5 <yposition+0x1>
     6b4:	a0 91 b6 01 	lds	r26, 0x01B6	; 0x8001b6 <yposition+0x2>
     6b8:	b0 91 b7 01 	lds	r27, 0x01B7	; 0x8001b7 <yposition+0x3>
     6bc:	01 96       	adiw	r24, 0x01	; 1
     6be:	a1 1d       	adc	r26, r1
     6c0:	b1 1d       	adc	r27, r1
     6c2:	80 93 b4 01 	sts	0x01B4, r24	; 0x8001b4 <yposition>
     6c6:	90 93 b5 01 	sts	0x01B5, r25	; 0x8001b5 <yposition+0x1>
     6ca:	a0 93 b6 01 	sts	0x01B6, r26	; 0x8001b6 <yposition+0x2>
     6ce:	b0 93 b7 01 	sts	0x01B7, r27	; 0x8001b7 <yposition+0x3>
	}
	
	

}
     6d2:	bf 91       	pop	r27
     6d4:	af 91       	pop	r26
     6d6:	9f 91       	pop	r25
     6d8:	8f 91       	pop	r24
     6da:	0f 90       	pop	r0
     6dc:	0f be       	out	0x3f, r0	; 63
     6de:	0f 90       	pop	r0
     6e0:	1f 90       	pop	r1
     6e2:	18 95       	reti

000006e4 <_Z15axisControlInitv>:

void axisControlInit(){
	 DDRD |= (1 << 6);
     6e4:	56 9a       	sbi	0x0a, 6	; 10
	 DDRD |= (1 << 5);
     6e6:	55 9a       	sbi	0x0a, 5	; 10
	 // PD6 and PD5 is now an output

	 OCR0A = 0;
     6e8:	17 bc       	out	0x27, r1	; 39
	 OCR0B=0;
     6ea:	18 bc       	out	0x28, r1	; 40
	 // set PWM for 50% duty cycle


	 TCCR0A |= (1 << COM0A1)|(1<<COM0B1);
     6ec:	84 b5       	in	r24, 0x24	; 36
     6ee:	80 6a       	ori	r24, 0xA0	; 160
     6f0:	84 bd       	out	0x24, r24	; 36
	 // set none-inverting mode

	 TCCR0A |= (1 << WGM01) | (1 << WGM00);
     6f2:	84 b5       	in	r24, 0x24	; 36
     6f4:	83 60       	ori	r24, 0x03	; 3
     6f6:	84 bd       	out	0x24, r24	; 36
	 // set fast PWM Mode

	 TCCR0B |= (1 << CS01);
     6f8:	85 b5       	in	r24, 0x25	; 37
     6fa:	82 60       	ori	r24, 0x02	; 2
     6fc:	85 bd       	out	0x25, r24	; 37
	 // set prescaller to 8 and starts PWM
	 
	 DDRB |= (1 << 6); // x dir control
     6fe:	26 9a       	sbi	0x04, 6	; 4
	 DDRB |= (1 << 7);
     700:	27 9a       	sbi	0x04, 7	; 4
	 
	 DDRD|=(1<<7);  //y dir control
     702:	57 9a       	sbi	0x0a, 7	; 10
	 DDRB|=(1<<0);
     704:	20 9a       	sbi	0x04, 0	; 4
     706:	08 95       	ret

00000708 <_Z4go_ybfhm>:
	 
}

void go_y(bool dir,float acc,uint8_t max_speed,uint32_t limit){
     708:	4f 92       	push	r4
     70a:	5f 92       	push	r5
     70c:	6f 92       	push	r6
     70e:	7f 92       	push	r7
     710:	8f 92       	push	r8
     712:	9f 92       	push	r9
     714:	af 92       	push	r10
     716:	bf 92       	push	r11
     718:	cf 92       	push	r12
     71a:	df 92       	push	r13
     71c:	ef 92       	push	r14
     71e:	ff 92       	push	r15
     720:	0f 93       	push	r16
     722:	1f 93       	push	r17
     724:	cf 93       	push	r28
     726:	df 93       	push	r29
     728:	00 d0       	rcall	.+0      	; 0x72a <_Z4go_ybfhm+0x22>
     72a:	00 d0       	rcall	.+0      	; 0x72c <_Z4go_ybfhm+0x24>
     72c:	1f 92       	push	r1
     72e:	cd b7       	in	r28, 0x3d	; 61
     730:	de b7       	in	r29, 0x3e	; 62
     732:	78 2e       	mov	r7, r24
     734:	4a 01       	movw	r8, r20
     736:	5b 01       	movw	r10, r22
     738:	2d 83       	std	Y+5, r18	; 0x05
     73a:	67 01       	movw	r12, r14
     73c:	78 01       	movw	r14, r16
	timerInit();
     73e:	0e 94 0b 02 	call	0x416	; 0x416 <_Z9timerInitv>
	yposition=0;
     742:	10 92 b4 01 	sts	0x01B4, r1	; 0x8001b4 <yposition>
     746:	10 92 b5 01 	sts	0x01B5, r1	; 0x8001b5 <yposition+0x1>
     74a:	10 92 b6 01 	sts	0x01B6, r1	; 0x8001b6 <yposition+0x2>
     74e:	10 92 b7 01 	sts	0x01B7, r1	; 0x8001b7 <yposition+0x3>
	errorI=0;
     752:	10 92 96 01 	sts	0x0196, r1	; 0x800196 <errorI>
     756:	10 92 97 01 	sts	0x0197, r1	; 0x800197 <errorI+0x1>
     75a:	10 92 98 01 	sts	0x0198, r1	; 0x800198 <errorI+0x2>
     75e:	10 92 99 01 	sts	0x0199, r1	; 0x800199 <errorI+0x3>
	yMotor=0;
     762:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <__data_start+0x1>
     766:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__data_start>
	if (dir)
     76a:	71 10       	cpse	r7, r1
	{PORTB|=(1<<0);
     76c:	28 9a       	sbi	0x05, 0	; 5
	}
	else
	{}
	A1=0.5*((pow(max_speed,2))/acc);
     76e:	2d 81       	ldd	r18, Y+5	; 0x05
     770:	62 2f       	mov	r22, r18
     772:	70 e0       	ldi	r23, 0x00	; 0
     774:	80 e0       	ldi	r24, 0x00	; 0
     776:	90 e0       	ldi	r25, 0x00	; 0
     778:	0e 94 24 0e 	call	0x1c48	; 0x1c48 <__floatunsisf>
     77c:	69 83       	std	Y+1, r22	; 0x01
     77e:	7a 83       	std	Y+2, r23	; 0x02
     780:	8b 83       	std	Y+3, r24	; 0x03
     782:	9c 83       	std	Y+4, r25	; 0x04
     784:	9b 01       	movw	r18, r22
     786:	ac 01       	movw	r20, r24
     788:	0e 94 b2 0e 	call	0x1d64	; 0x1d64 <__mulsf3>
     78c:	a5 01       	movw	r20, r10
     78e:	94 01       	movw	r18, r8
     790:	0e 94 7c 0d 	call	0x1af8	; 0x1af8 <__divsf3>
     794:	20 e0       	ldi	r18, 0x00	; 0
     796:	30 e0       	ldi	r19, 0x00	; 0
     798:	40 e0       	ldi	r20, 0x00	; 0
     79a:	5f e3       	ldi	r21, 0x3F	; 63
     79c:	0e 94 b2 0e 	call	0x1d64	; 0x1d64 <__mulsf3>
     7a0:	0e 94 f5 0d 	call	0x1bea	; 0x1bea <__fixunssfsi>
     7a4:	60 93 a8 01 	sts	0x01A8, r22	; 0x8001a8 <A1>
     7a8:	70 93 a9 01 	sts	0x01A9, r23	; 0x8001a9 <A1+0x1>
     7ac:	80 93 aa 01 	sts	0x01AA, r24	; 0x8001aa <A1+0x2>
     7b0:	90 93 ab 01 	sts	0x01AB, r25	; 0x8001ab <A1+0x3>
	
	if ((limit)>(2*A1))
     7b4:	2b 01       	movw	r4, r22
     7b6:	3c 01       	movw	r6, r24
     7b8:	44 0c       	add	r4, r4
     7ba:	55 1c       	adc	r5, r5
     7bc:	66 1c       	adc	r6, r6
     7be:	77 1c       	adc	r7, r7
     7c0:	4c 14       	cp	r4, r12
     7c2:	5d 04       	cpc	r5, r13
     7c4:	6e 04       	cpc	r6, r14
     7c6:	7f 04       	cpc	r7, r15
     7c8:	08 f0       	brcs	.+2      	; 0x7cc <_Z4go_ybfhm+0xc4>
     7ca:	3f c0       	rjmp	.+126    	; 0x84a <_Z4go_ybfhm+0x142>
	{	A2=limit-(2*A1);
     7cc:	c4 18       	sub	r12, r4
     7ce:	d5 08       	sbc	r13, r5
     7d0:	e6 08       	sbc	r14, r6
     7d2:	f7 08       	sbc	r15, r7
     7d4:	c0 92 a4 01 	sts	0x01A4, r12	; 0x8001a4 <A2>
     7d8:	d0 92 a5 01 	sts	0x01A5, r13	; 0x8001a5 <A2+0x1>
     7dc:	e0 92 a6 01 	sts	0x01A6, r14	; 0x8001a6 <A2+0x2>
     7e0:	f0 92 a7 01 	sts	0x01A7, r15	; 0x8001a7 <A2+0x3>
		T1=sqrt((2*A1)/acc);
     7e4:	c3 01       	movw	r24, r6
     7e6:	b2 01       	movw	r22, r4
     7e8:	0e 94 24 0e 	call	0x1c48	; 0x1c48 <__floatunsisf>
     7ec:	a5 01       	movw	r20, r10
     7ee:	94 01       	movw	r18, r8
     7f0:	0e 94 7c 0d 	call	0x1af8	; 0x1af8 <__divsf3>
     7f4:	0e 94 25 0f 	call	0x1e4a	; 0x1e4a <sqrt>
     7f8:	0e 94 f5 0d 	call	0x1bea	; 0x1bea <__fixunssfsi>
     7fc:	70 93 9f 01 	sts	0x019F, r23	; 0x80019f <T1+0x1>
     800:	60 93 9e 01 	sts	0x019E, r22	; 0x80019e <T1>
		T2=A2/max_speed;
     804:	8d 81       	ldd	r24, Y+5	; 0x05
     806:	28 2f       	mov	r18, r24
     808:	30 e0       	ldi	r19, 0x00	; 0
     80a:	40 e0       	ldi	r20, 0x00	; 0
     80c:	50 e0       	ldi	r21, 0x00	; 0
     80e:	c7 01       	movw	r24, r14
     810:	b6 01       	movw	r22, r12
     812:	0e 94 0b 13 	call	0x2616	; 0x2616 <__udivmodsi4>
     816:	30 93 9d 01 	sts	0x019D, r19	; 0x80019d <T2+0x1>
     81a:	20 93 9c 01 	sts	0x019C, r18	; 0x80019c <T2>
		y_acc=acc;
     81e:	80 92 b0 01 	sts	0x01B0, r8	; 0x8001b0 <y_acc>
     822:	90 92 b1 01 	sts	0x01B1, r9	; 0x8001b1 <y_acc+0x1>
     826:	a0 92 b2 01 	sts	0x01B2, r10	; 0x8001b2 <y_acc+0x2>
     82a:	b0 92 b3 01 	sts	0x01B3, r11	; 0x8001b3 <y_acc+0x3>
		y_max_speed=max_speed;
     82e:	89 81       	ldd	r24, Y+1	; 0x01
     830:	9a 81       	ldd	r25, Y+2	; 0x02
     832:	ab 81       	ldd	r26, Y+3	; 0x03
     834:	bc 81       	ldd	r27, Y+4	; 0x04
     836:	80 93 ac 01 	sts	0x01AC, r24	; 0x8001ac <y_max_speed>
     83a:	90 93 ad 01 	sts	0x01AD, r25	; 0x8001ad <y_max_speed+0x1>
     83e:	a0 93 ae 01 	sts	0x01AE, r26	; 0x8001ae <y_max_speed+0x2>
     842:	b0 93 af 01 	sts	0x01AF, r27	; 0x8001af <y_max_speed+0x3>
		OCR0A = 0;
     846:	17 bc       	out	0x27, r1	; 39
     848:	45 c0       	rjmp	.+138    	; 0x8d4 <_Z4go_ybfhm+0x1cc>
	} 
	else
	{
		T1=sqrt(limit/acc);
     84a:	c7 01       	movw	r24, r14
     84c:	b6 01       	movw	r22, r12
     84e:	0e 94 24 0e 	call	0x1c48	; 0x1c48 <__floatunsisf>
     852:	2b 01       	movw	r4, r22
     854:	3c 01       	movw	r6, r24
     856:	a5 01       	movw	r20, r10
     858:	94 01       	movw	r18, r8
     85a:	c3 01       	movw	r24, r6
     85c:	b2 01       	movw	r22, r4
     85e:	0e 94 7c 0d 	call	0x1af8	; 0x1af8 <__divsf3>
     862:	0e 94 25 0f 	call	0x1e4a	; 0x1e4a <sqrt>
     866:	0e 94 f5 0d 	call	0x1bea	; 0x1bea <__fixunssfsi>
     86a:	70 93 9f 01 	sts	0x019F, r23	; 0x80019f <T1+0x1>
     86e:	60 93 9e 01 	sts	0x019E, r22	; 0x80019e <T1>
		T2=0;
     872:	10 92 9d 01 	sts	0x019D, r1	; 0x80019d <T2+0x1>
     876:	10 92 9c 01 	sts	0x019C, r1	; 0x80019c <T2>
		A1=limit/2;
     87a:	f6 94       	lsr	r15
     87c:	e7 94       	ror	r14
     87e:	d7 94       	ror	r13
     880:	c7 94       	ror	r12
     882:	c0 92 a8 01 	sts	0x01A8, r12	; 0x8001a8 <A1>
     886:	d0 92 a9 01 	sts	0x01A9, r13	; 0x8001a9 <A1+0x1>
     88a:	e0 92 aa 01 	sts	0x01AA, r14	; 0x8001aa <A1+0x2>
     88e:	f0 92 ab 01 	sts	0x01AB, r15	; 0x8001ab <A1+0x3>
		A2=0;
     892:	10 92 a4 01 	sts	0x01A4, r1	; 0x8001a4 <A2>
     896:	10 92 a5 01 	sts	0x01A5, r1	; 0x8001a5 <A2+0x1>
     89a:	10 92 a6 01 	sts	0x01A6, r1	; 0x8001a6 <A2+0x2>
     89e:	10 92 a7 01 	sts	0x01A7, r1	; 0x8001a7 <A2+0x3>
		y_acc=acc;
     8a2:	80 92 b0 01 	sts	0x01B0, r8	; 0x8001b0 <y_acc>
     8a6:	90 92 b1 01 	sts	0x01B1, r9	; 0x8001b1 <y_acc+0x1>
     8aa:	a0 92 b2 01 	sts	0x01B2, r10	; 0x8001b2 <y_acc+0x2>
     8ae:	b0 92 b3 01 	sts	0x01B3, r11	; 0x8001b3 <y_acc+0x3>
		y_max_speed=y_acc*T1;
     8b2:	80 e0       	ldi	r24, 0x00	; 0
     8b4:	90 e0       	ldi	r25, 0x00	; 0
     8b6:	0e 94 24 0e 	call	0x1c48	; 0x1c48 <__floatunsisf>
     8ba:	a5 01       	movw	r20, r10
     8bc:	94 01       	movw	r18, r8
     8be:	0e 94 b2 0e 	call	0x1d64	; 0x1d64 <__mulsf3>
     8c2:	60 93 ac 01 	sts	0x01AC, r22	; 0x8001ac <y_max_speed>
     8c6:	70 93 ad 01 	sts	0x01AD, r23	; 0x8001ad <y_max_speed+0x1>
     8ca:	80 93 ae 01 	sts	0x01AE, r24	; 0x8001ae <y_max_speed+0x2>
     8ce:	90 93 af 01 	sts	0x01AF, r25	; 0x8001af <y_max_speed+0x3>
		OCR0A = 0;
     8d2:	17 bc       	out	0x27, r1	; 39
	}
	TimerCount=0;
     8d4:	10 92 a0 01 	sts	0x01A0, r1	; 0x8001a0 <TimerCount>
     8d8:	10 92 a1 01 	sts	0x01A1, r1	; 0x8001a1 <TimerCount+0x1>
     8dc:	10 92 a2 01 	sts	0x01A2, r1	; 0x8001a2 <TimerCount+0x2>
     8e0:	10 92 a3 01 	sts	0x01A3, r1	; 0x8001a3 <TimerCount+0x3>
	yEnable=1;
     8e4:	81 e0       	ldi	r24, 0x01	; 1
     8e6:	80 93 95 01 	sts	0x0195, r24	; 0x800195 <yEnable>
	
}
     8ea:	0f 90       	pop	r0
     8ec:	0f 90       	pop	r0
     8ee:	0f 90       	pop	r0
     8f0:	0f 90       	pop	r0
     8f2:	0f 90       	pop	r0
     8f4:	df 91       	pop	r29
     8f6:	cf 91       	pop	r28
     8f8:	1f 91       	pop	r17
     8fa:	0f 91       	pop	r16
     8fc:	ff 90       	pop	r15
     8fe:	ef 90       	pop	r14
     900:	df 90       	pop	r13
     902:	cf 90       	pop	r12
     904:	bf 90       	pop	r11
     906:	af 90       	pop	r10
     908:	9f 90       	pop	r9
     90a:	8f 90       	pop	r8
     90c:	7f 90       	pop	r7
     90e:	6f 90       	pop	r6
     910:	5f 90       	pop	r5
     912:	4f 90       	pop	r4
     914:	08 95       	ret

00000916 <__vector_11>:




ISR(TIMER1_COMPA_vect){
     916:	1f 92       	push	r1
     918:	0f 92       	push	r0
     91a:	0f b6       	in	r0, 0x3f	; 63
     91c:	0f 92       	push	r0
     91e:	11 24       	eor	r1, r1
     920:	4f 92       	push	r4
     922:	5f 92       	push	r5
     924:	6f 92       	push	r6
     926:	7f 92       	push	r7
     928:	8f 92       	push	r8
     92a:	9f 92       	push	r9
     92c:	af 92       	push	r10
     92e:	bf 92       	push	r11
     930:	cf 92       	push	r12
     932:	df 92       	push	r13
     934:	ef 92       	push	r14
     936:	ff 92       	push	r15
     938:	0f 93       	push	r16
     93a:	1f 93       	push	r17
     93c:	2f 93       	push	r18
     93e:	3f 93       	push	r19
     940:	4f 93       	push	r20
     942:	5f 93       	push	r21
     944:	6f 93       	push	r22
     946:	7f 93       	push	r23
     948:	8f 93       	push	r24
     94a:	9f 93       	push	r25
     94c:	af 93       	push	r26
     94e:	bf 93       	push	r27
     950:	ef 93       	push	r30
     952:	ff 93       	push	r31
     954:	cf 93       	push	r28
     956:	df 93       	push	r29
     958:	cd b7       	in	r28, 0x3d	; 61
     95a:	de b7       	in	r29, 0x3e	; 62
     95c:	28 97       	sbiw	r28, 0x08	; 8
     95e:	de bf       	out	0x3e, r29	; 62
     960:	cd bf       	out	0x3d, r28	; 61
	/*y axis part start*/
	if (yEnable)
     962:	80 91 95 01 	lds	r24, 0x0195	; 0x800195 <yEnable>
     966:	88 23       	and	r24, r24
     968:	09 f4       	brne	.+2      	; 0x96c <__vector_11+0x56>
     96a:	0c c1       	rjmp	.+536    	; 0xb84 <__vector_11+0x26e>
	{
		TimerCount++;
     96c:	80 91 a0 01 	lds	r24, 0x01A0	; 0x8001a0 <TimerCount>
     970:	90 91 a1 01 	lds	r25, 0x01A1	; 0x8001a1 <TimerCount+0x1>
     974:	a0 91 a2 01 	lds	r26, 0x01A2	; 0x8001a2 <TimerCount+0x2>
     978:	b0 91 a3 01 	lds	r27, 0x01A3	; 0x8001a3 <TimerCount+0x3>
     97c:	01 96       	adiw	r24, 0x01	; 1
     97e:	a1 1d       	adc	r26, r1
     980:	b1 1d       	adc	r27, r1
     982:	80 93 a0 01 	sts	0x01A0, r24	; 0x8001a0 <TimerCount>
     986:	90 93 a1 01 	sts	0x01A1, r25	; 0x8001a1 <TimerCount+0x1>
     98a:	a0 93 a2 01 	sts	0x01A2, r26	; 0x8001a2 <TimerCount+0x2>
     98e:	b0 93 a3 01 	sts	0x01A3, r27	; 0x8001a3 <TimerCount+0x3>
	if (TimerCount<T1)
     992:	20 91 9e 01 	lds	r18, 0x019E	; 0x80019e <T1>
     996:	30 91 9f 01 	lds	r19, 0x019F	; 0x80019f <T1+0x1>
     99a:	c9 01       	movw	r24, r18
     99c:	a0 e0       	ldi	r26, 0x00	; 0
     99e:	b0 e0       	ldi	r27, 0x00	; 0
     9a0:	40 91 a0 01 	lds	r20, 0x01A0	; 0x8001a0 <TimerCount>
     9a4:	50 91 a1 01 	lds	r21, 0x01A1	; 0x8001a1 <TimerCount+0x1>
     9a8:	60 91 a2 01 	lds	r22, 0x01A2	; 0x8001a2 <TimerCount+0x2>
     9ac:	70 91 a3 01 	lds	r23, 0x01A3	; 0x8001a3 <TimerCount+0x3>
     9b0:	48 17       	cp	r20, r24
     9b2:	59 07       	cpc	r21, r25
     9b4:	6a 07       	cpc	r22, r26
     9b6:	7b 07       	cpc	r23, r27
     9b8:	0c f0       	brlt	.+2      	; 0x9bc <__vector_11+0xa6>
     9ba:	a3 c0       	rjmp	.+326    	; 0xb02 <__vector_11+0x1ec>
	{
		uint16_t predictA=0.5*y_acc*(pow(TimerCount,2));
     9bc:	60 91 a0 01 	lds	r22, 0x01A0	; 0x8001a0 <TimerCount>
     9c0:	70 91 a1 01 	lds	r23, 0x01A1	; 0x8001a1 <TimerCount+0x1>
     9c4:	80 91 a2 01 	lds	r24, 0x01A2	; 0x8001a2 <TimerCount+0x2>
     9c8:	90 91 a3 01 	lds	r25, 0x01A3	; 0x8001a3 <TimerCount+0x3>
     9cc:	0e 94 26 0e 	call	0x1c4c	; 0x1c4c <__floatsisf>
     9d0:	6b 01       	movw	r12, r22
     9d2:	7c 01       	movw	r14, r24
		int16_t error=predictA-yposition;
     9d4:	80 90 b4 01 	lds	r8, 0x01B4	; 0x8001b4 <yposition>
     9d8:	90 90 b5 01 	lds	r9, 0x01B5	; 0x8001b5 <yposition+0x1>
     9dc:	a0 90 b6 01 	lds	r10, 0x01B6	; 0x8001b6 <yposition+0x2>
     9e0:	b0 90 b7 01 	lds	r11, 0x01B7	; 0x8001b7 <yposition+0x3>
     9e4:	20 e0       	ldi	r18, 0x00	; 0
     9e6:	30 e0       	ldi	r19, 0x00	; 0
     9e8:	40 e0       	ldi	r20, 0x00	; 0
     9ea:	5f e3       	ldi	r21, 0x3F	; 63
     9ec:	60 91 b0 01 	lds	r22, 0x01B0	; 0x8001b0 <y_acc>
     9f0:	70 91 b1 01 	lds	r23, 0x01B1	; 0x8001b1 <y_acc+0x1>
     9f4:	80 91 b2 01 	lds	r24, 0x01B2	; 0x8001b2 <y_acc+0x2>
     9f8:	90 91 b3 01 	lds	r25, 0x01B3	; 0x8001b3 <y_acc+0x3>
     9fc:	0e 94 b2 0e 	call	0x1d64	; 0x1d64 <__mulsf3>
     a00:	2b 01       	movw	r4, r22
     a02:	3c 01       	movw	r6, r24
     a04:	a7 01       	movw	r20, r14
     a06:	96 01       	movw	r18, r12
     a08:	c7 01       	movw	r24, r14
     a0a:	b6 01       	movw	r22, r12
     a0c:	0e 94 b2 0e 	call	0x1d64	; 0x1d64 <__mulsf3>
     a10:	9b 01       	movw	r18, r22
     a12:	ac 01       	movw	r20, r24
     a14:	c3 01       	movw	r24, r6
     a16:	b2 01       	movw	r22, r4
     a18:	0e 94 b2 0e 	call	0x1d64	; 0x1d64 <__mulsf3>
     a1c:	0e 94 f5 0d 	call	0x1bea	; 0x1bea <__fixunssfsi>
     a20:	7b 01       	movw	r14, r22
     a22:	e8 18       	sub	r14, r8
     a24:	f9 08       	sbc	r15, r9
		errorI+=error;
     a26:	47 01       	movw	r8, r14
     a28:	0f 2c       	mov	r0, r15
     a2a:	00 0c       	add	r0, r0
     a2c:	aa 08       	sbc	r10, r10
     a2e:	bb 08       	sbc	r11, r11
     a30:	80 91 96 01 	lds	r24, 0x0196	; 0x800196 <errorI>
     a34:	90 91 97 01 	lds	r25, 0x0197	; 0x800197 <errorI+0x1>
     a38:	a0 91 98 01 	lds	r26, 0x0198	; 0x800198 <errorI+0x2>
     a3c:	b0 91 99 01 	lds	r27, 0x0199	; 0x800199 <errorI+0x3>
     a40:	bc 01       	movw	r22, r24
     a42:	cd 01       	movw	r24, r26
     a44:	68 0d       	add	r22, r8
     a46:	79 1d       	adc	r23, r9
     a48:	8a 1d       	adc	r24, r10
     a4a:	9b 1d       	adc	r25, r11
     a4c:	60 93 96 01 	sts	0x0196, r22	; 0x800196 <errorI>
     a50:	70 93 97 01 	sts	0x0197, r23	; 0x800197 <errorI+0x1>
     a54:	80 93 98 01 	sts	0x0198, r24	; 0x800198 <errorI+0x2>
     a58:	90 93 99 01 	sts	0x0199, r25	; 0x800199 <errorI+0x3>
		yMotor=(errorI*yI)+(error*yP)+(yD*(error-prevYerror));
     a5c:	0e 94 26 0e 	call	0x1c4c	; 0x1c4c <__floatsisf>
     a60:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <yI>
     a64:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <yI+0x1>
     a68:	40 91 08 01 	lds	r20, 0x0108	; 0x800108 <yI+0x2>
     a6c:	50 91 09 01 	lds	r21, 0x0109	; 0x800109 <yI+0x3>
     a70:	0e 94 b2 0e 	call	0x1d64	; 0x1d64 <__mulsf3>
     a74:	2b 01       	movw	r4, r22
     a76:	3c 01       	movw	r6, r24
     a78:	c5 01       	movw	r24, r10
     a7a:	b4 01       	movw	r22, r8
     a7c:	0e 94 26 0e 	call	0x1c4c	; 0x1c4c <__floatsisf>
     a80:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <yP>
     a84:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <yP+0x1>
     a88:	40 91 0c 01 	lds	r20, 0x010C	; 0x80010c <yP+0x2>
     a8c:	50 91 0d 01 	lds	r21, 0x010D	; 0x80010d <yP+0x3>
     a90:	0e 94 b2 0e 	call	0x1d64	; 0x1d64 <__mulsf3>
     a94:	9b 01       	movw	r18, r22
     a96:	ac 01       	movw	r20, r24
     a98:	c3 01       	movw	r24, r6
     a9a:	b2 01       	movw	r22, r4
     a9c:	0e 94 10 0d 	call	0x1a20	; 0x1a20 <__addsf3>
     aa0:	4b 01       	movw	r8, r22
     aa2:	5c 01       	movw	r10, r24
     aa4:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <prevYerror>
     aa8:	90 91 9b 01 	lds	r25, 0x019B	; 0x80019b <prevYerror+0x1>
     aac:	b7 01       	movw	r22, r14
     aae:	68 1b       	sub	r22, r24
     ab0:	79 0b       	sbc	r23, r25
     ab2:	07 2e       	mov	r0, r23
     ab4:	00 0c       	add	r0, r0
     ab6:	88 0b       	sbc	r24, r24
     ab8:	99 0b       	sbc	r25, r25
     aba:	0e 94 26 0e 	call	0x1c4c	; 0x1c4c <__floatsisf>
     abe:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <yD>
     ac2:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <yD+0x1>
     ac6:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <yD+0x2>
     aca:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <yD+0x3>
     ace:	0e 94 b2 0e 	call	0x1d64	; 0x1d64 <__mulsf3>
     ad2:	9b 01       	movw	r18, r22
     ad4:	ac 01       	movw	r20, r24
     ad6:	c5 01       	movw	r24, r10
     ad8:	b4 01       	movw	r22, r8
     ada:	0e 94 10 0d 	call	0x1a20	; 0x1a20 <__addsf3>
     ade:	0e 94 ee 0d 	call	0x1bdc	; 0x1bdc <__fixsfsi>
     ae2:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <__data_start+0x1>
     ae6:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <__data_start>
		prevYerror=error;
     aea:	f0 92 9b 01 	sts	0x019B, r15	; 0x80019b <prevYerror+0x1>
     aee:	e0 92 9a 01 	sts	0x019A, r14	; 0x80019a <prevYerror>
		if (yMotor>=255)
     af2:	6f 3f       	cpi	r22, 0xFF	; 255
     af4:	71 05       	cpc	r23, r1
     af6:	1c f0       	brlt	.+6      	; 0xafe <__vector_11+0x1e8>
		{OCR0A=255;
     af8:	8f ef       	ldi	r24, 0xFF	; 255
     afa:	87 bd       	out	0x27, r24	; 39
     afc:	43 c0       	rjmp	.+134    	; 0xb84 <__vector_11+0x26e>
		}
		else{
			OCR0A=yMotor;
     afe:	67 bd       	out	0x27, r22	; 39
     b00:	41 c0       	rjmp	.+130    	; 0xb84 <__vector_11+0x26e>
		}
				
	} 
	
	else if((TimerCount>=T1)&&(TimerCount<(T1+T2)))
     b02:	40 91 a0 01 	lds	r20, 0x01A0	; 0x8001a0 <TimerCount>
     b06:	50 91 a1 01 	lds	r21, 0x01A1	; 0x8001a1 <TimerCount+0x1>
     b0a:	60 91 a2 01 	lds	r22, 0x01A2	; 0x8001a2 <TimerCount+0x2>
     b0e:	70 91 a3 01 	lds	r23, 0x01A3	; 0x8001a3 <TimerCount+0x3>
     b12:	48 17       	cp	r20, r24
     b14:	59 07       	cpc	r21, r25
     b16:	6a 07       	cpc	r22, r26
     b18:	7b 07       	cpc	r23, r27
     b1a:	0c f4       	brge	.+2      	; 0xb1e <__vector_11+0x208>
     b1c:	9f c1       	rjmp	.+830    	; 0xe5c <__vector_11+0x546>
     b1e:	c0 90 a0 01 	lds	r12, 0x01A0	; 0x8001a0 <TimerCount>
     b22:	d0 90 a1 01 	lds	r13, 0x01A1	; 0x8001a1 <TimerCount+0x1>
     b26:	e0 90 a2 01 	lds	r14, 0x01A2	; 0x8001a2 <TimerCount+0x2>
     b2a:	f0 90 a3 01 	lds	r15, 0x01A3	; 0x8001a3 <TimerCount+0x3>
     b2e:	40 91 9c 01 	lds	r20, 0x019C	; 0x80019c <T2>
     b32:	50 91 9d 01 	lds	r21, 0x019D	; 0x80019d <T2+0x1>
     b36:	42 0f       	add	r20, r18
     b38:	53 1f       	adc	r21, r19
     b3a:	60 e0       	ldi	r22, 0x00	; 0
     b3c:	70 e0       	ldi	r23, 0x00	; 0
     b3e:	c4 16       	cp	r12, r20
     b40:	d5 06       	cpc	r13, r21
     b42:	e6 06       	cpc	r14, r22
     b44:	f7 06       	cpc	r15, r23
     b46:	0c f4       	brge	.+2      	; 0xb4a <__vector_11+0x234>
     b48:	a1 c1       	rjmp	.+834    	; 0xe8c <__vector_11+0x576>
     b4a:	88 c1       	rjmp	.+784    	; 0xe5c <__vector_11+0x546>
	errorI+=error;
	yMotor=(errorI*yI)+(error*yP)+(yD*(error-prevYerror));
	prevYerror=error;
	
	if (yMotor>=255)
	{OCR0A=255;
     b4c:	8f ef       	ldi	r24, 0xFF	; 255
     b4e:	87 bd       	out	0x27, r24	; 39
     b50:	19 c0       	rjmp	.+50     	; 0xb84 <__vector_11+0x26e>
	}
	else{
		OCR0A=yMotor;
     b52:	67 bd       	out	0x27, r22	; 39
     b54:	17 c0       	rjmp	.+46     	; 0xb84 <__vector_11+0x26e>
	
	}
	
	
	
	else if ((TimerCount>=(T1+T2))&&(TimerCount<((2*T1)+T2))){
     b56:	40 91 a0 01 	lds	r20, 0x01A0	; 0x8001a0 <TimerCount>
     b5a:	50 91 a1 01 	lds	r21, 0x01A1	; 0x8001a1 <TimerCount+0x1>
     b5e:	60 91 a2 01 	lds	r22, 0x01A2	; 0x8001a2 <TimerCount+0x2>
     b62:	70 91 a3 01 	lds	r23, 0x01A3	; 0x8001a3 <TimerCount+0x3>
     b66:	82 0f       	add	r24, r18
     b68:	93 1f       	adc	r25, r19
     b6a:	a0 e0       	ldi	r26, 0x00	; 0
     b6c:	b0 e0       	ldi	r27, 0x00	; 0
     b6e:	48 17       	cp	r20, r24
     b70:	59 07       	cpc	r21, r25
     b72:	6a 07       	cpc	r22, r26
     b74:	7b 07       	cpc	r23, r27
     b76:	0c f4       	brge	.+2      	; 0xb7a <__vector_11+0x264>
     b78:	3d c2       	rjmp	.+1146   	; 0xff4 <__vector_11+0x6de>
     b7a:	2e c2       	rjmp	.+1116   	; 0xfd8 <__vector_11+0x6c2>
		errorI+=error;
		yMotor=(errorI*yI)+(error*yP)+(yD*(error-prevYerror));
		prevYerror=error;
		
		if (yMotor>=255)
		{OCR0A=255;
     b7c:	8f ef       	ldi	r24, 0xFF	; 255
     b7e:	87 bd       	out	0x27, r24	; 39
     b80:	01 c0       	rjmp	.+2      	; 0xb84 <__vector_11+0x26e>
		}
		else{
			OCR0A=yMotor;
     b82:	67 bd       	out	0x27, r22	; 39


/*X enable*////////////////////////////////////////////////////////////////////////////////////


if (xEnable)
     b84:	80 91 b8 01 	lds	r24, 0x01B8	; 0x8001b8 <xEnable>
     b88:	88 23       	and	r24, r24
     b8a:	09 f4       	brne	.+2      	; 0xb8e <__vector_11+0x278>
     b8c:	23 c3       	rjmp	.+1606   	; 0x11d4 <__vector_11+0x8be>
{
	TimerCount++;
     b8e:	80 91 a0 01 	lds	r24, 0x01A0	; 0x8001a0 <TimerCount>
     b92:	90 91 a1 01 	lds	r25, 0x01A1	; 0x8001a1 <TimerCount+0x1>
     b96:	a0 91 a2 01 	lds	r26, 0x01A2	; 0x8001a2 <TimerCount+0x2>
     b9a:	b0 91 a3 01 	lds	r27, 0x01A3	; 0x8001a3 <TimerCount+0x3>
     b9e:	01 96       	adiw	r24, 0x01	; 1
     ba0:	a1 1d       	adc	r26, r1
     ba2:	b1 1d       	adc	r27, r1
     ba4:	80 93 a0 01 	sts	0x01A0, r24	; 0x8001a0 <TimerCount>
     ba8:	90 93 a1 01 	sts	0x01A1, r25	; 0x8001a1 <TimerCount+0x1>
     bac:	a0 93 a2 01 	sts	0x01A2, r26	; 0x8001a2 <TimerCount+0x2>
     bb0:	b0 93 a3 01 	sts	0x01A3, r27	; 0x8001a3 <TimerCount+0x3>
	
	if (XT>0)
     bb4:	80 91 bb 01 	lds	r24, 0x01BB	; 0x8001bb <XT>
     bb8:	90 91 bc 01 	lds	r25, 0x01BC	; 0x8001bc <XT+0x1>
     bbc:	18 16       	cp	r1, r24
     bbe:	19 06       	cpc	r1, r25
     bc0:	0c f0       	brlt	.+2      	; 0xbc4 <__vector_11+0x2ae>
     bc2:	a3 c0       	rjmp	.+326    	; 0xd0a <__vector_11+0x3f4>
	{
		
		if (TimerCount<XT)
     bc4:	40 91 a0 01 	lds	r20, 0x01A0	; 0x8001a0 <TimerCount>
     bc8:	50 91 a1 01 	lds	r21, 0x01A1	; 0x8001a1 <TimerCount+0x1>
     bcc:	60 91 a2 01 	lds	r22, 0x01A2	; 0x8001a2 <TimerCount+0x2>
     bd0:	70 91 a3 01 	lds	r23, 0x01A3	; 0x8001a3 <TimerCount+0x3>
     bd4:	09 2e       	mov	r0, r25
     bd6:	00 0c       	add	r0, r0
     bd8:	aa 0b       	sbc	r26, r26
     bda:	bb 0b       	sbc	r27, r27
     bdc:	48 17       	cp	r20, r24
     bde:	59 07       	cpc	r21, r25
     be0:	6a 07       	cpc	r22, r26
     be2:	7b 07       	cpc	r23, r27
     be4:	0c f0       	brlt	.+2      	; 0xbe8 <__vector_11+0x2d2>
     be6:	8b c0       	rjmp	.+278    	; 0xcfe <__vector_11+0x3e8>
	{
		
		int32_t predictA=x_max_speed*TimerCount;
     be8:	60 91 a0 01 	lds	r22, 0x01A0	; 0x8001a0 <TimerCount>
     bec:	70 91 a1 01 	lds	r23, 0x01A1	; 0x8001a1 <TimerCount+0x1>
     bf0:	80 91 a2 01 	lds	r24, 0x01A2	; 0x8001a2 <TimerCount+0x2>
     bf4:	90 91 a3 01 	lds	r25, 0x01A3	; 0x8001a3 <TimerCount+0x3>
		int16_t error=predictA-xposition;
     bf8:	c0 90 c3 01 	lds	r12, 0x01C3	; 0x8001c3 <xposition>
     bfc:	d0 90 c4 01 	lds	r13, 0x01C4	; 0x8001c4 <xposition+0x1>
     c00:	0e 94 26 0e 	call	0x1c4c	; 0x1c4c <__floatsisf>
     c04:	20 91 bd 01 	lds	r18, 0x01BD	; 0x8001bd <x_max_speed>
     c08:	30 91 be 01 	lds	r19, 0x01BE	; 0x8001be <x_max_speed+0x1>
     c0c:	40 91 bf 01 	lds	r20, 0x01BF	; 0x8001bf <x_max_speed+0x2>
     c10:	50 91 c0 01 	lds	r21, 0x01C0	; 0x8001c0 <x_max_speed+0x3>
     c14:	0e 94 b2 0e 	call	0x1d64	; 0x1d64 <__mulsf3>
     c18:	0e 94 ee 0d 	call	0x1bdc	; 0x1bdc <__fixsfsi>
     c1c:	7b 01       	movw	r14, r22
     c1e:	ec 18       	sub	r14, r12
     c20:	fd 08       	sbc	r15, r13
		errorI+=error;
     c22:	47 01       	movw	r8, r14
     c24:	0f 2c       	mov	r0, r15
     c26:	00 0c       	add	r0, r0
     c28:	aa 08       	sbc	r10, r10
     c2a:	bb 08       	sbc	r11, r11
     c2c:	80 91 96 01 	lds	r24, 0x0196	; 0x800196 <errorI>
     c30:	90 91 97 01 	lds	r25, 0x0197	; 0x800197 <errorI+0x1>
     c34:	a0 91 98 01 	lds	r26, 0x0198	; 0x800198 <errorI+0x2>
     c38:	b0 91 99 01 	lds	r27, 0x0199	; 0x800199 <errorI+0x3>
     c3c:	bc 01       	movw	r22, r24
     c3e:	cd 01       	movw	r24, r26
     c40:	68 0d       	add	r22, r8
     c42:	79 1d       	adc	r23, r9
     c44:	8a 1d       	adc	r24, r10
     c46:	9b 1d       	adc	r25, r11
     c48:	60 93 96 01 	sts	0x0196, r22	; 0x800196 <errorI>
     c4c:	70 93 97 01 	sts	0x0197, r23	; 0x800197 <errorI+0x1>
     c50:	80 93 98 01 	sts	0x0198, r24	; 0x800198 <errorI+0x2>
     c54:	90 93 99 01 	sts	0x0199, r25	; 0x800199 <errorI+0x3>
		xMotor=(errorI*xI)+(error*xP)+(xD*(error-prevXerror));
     c58:	0e 94 26 0e 	call	0x1c4c	; 0x1c4c <__floatsisf>
     c5c:	20 91 14 01 	lds	r18, 0x0114	; 0x800114 <xI>
     c60:	30 91 15 01 	lds	r19, 0x0115	; 0x800115 <xI+0x1>
     c64:	40 91 16 01 	lds	r20, 0x0116	; 0x800116 <xI+0x2>
     c68:	50 91 17 01 	lds	r21, 0x0117	; 0x800117 <xI+0x3>
     c6c:	0e 94 b2 0e 	call	0x1d64	; 0x1d64 <__mulsf3>
     c70:	2b 01       	movw	r4, r22
     c72:	3c 01       	movw	r6, r24
     c74:	c5 01       	movw	r24, r10
     c76:	b4 01       	movw	r22, r8
     c78:	0e 94 26 0e 	call	0x1c4c	; 0x1c4c <__floatsisf>
     c7c:	20 91 18 01 	lds	r18, 0x0118	; 0x800118 <xP>
     c80:	30 91 19 01 	lds	r19, 0x0119	; 0x800119 <xP+0x1>
     c84:	40 91 1a 01 	lds	r20, 0x011A	; 0x80011a <xP+0x2>
     c88:	50 91 1b 01 	lds	r21, 0x011B	; 0x80011b <xP+0x3>
     c8c:	0e 94 b2 0e 	call	0x1d64	; 0x1d64 <__mulsf3>
     c90:	9b 01       	movw	r18, r22
     c92:	ac 01       	movw	r20, r24
     c94:	c3 01       	movw	r24, r6
     c96:	b2 01       	movw	r22, r4
     c98:	0e 94 10 0d 	call	0x1a20	; 0x1a20 <__addsf3>
     c9c:	4b 01       	movw	r8, r22
     c9e:	5c 01       	movw	r10, r24
     ca0:	80 91 b9 01 	lds	r24, 0x01B9	; 0x8001b9 <prevXerror>
     ca4:	90 91 ba 01 	lds	r25, 0x01BA	; 0x8001ba <prevXerror+0x1>
     ca8:	b7 01       	movw	r22, r14
     caa:	68 1b       	sub	r22, r24
     cac:	79 0b       	sbc	r23, r25
     cae:	07 2e       	mov	r0, r23
     cb0:	00 0c       	add	r0, r0
     cb2:	88 0b       	sbc	r24, r24
     cb4:	99 0b       	sbc	r25, r25
     cb6:	0e 94 26 0e 	call	0x1c4c	; 0x1c4c <__floatsisf>
     cba:	20 91 10 01 	lds	r18, 0x0110	; 0x800110 <xD>
     cbe:	30 91 11 01 	lds	r19, 0x0111	; 0x800111 <xD+0x1>
     cc2:	40 91 12 01 	lds	r20, 0x0112	; 0x800112 <xD+0x2>
     cc6:	50 91 13 01 	lds	r21, 0x0113	; 0x800113 <xD+0x3>
     cca:	0e 94 b2 0e 	call	0x1d64	; 0x1d64 <__mulsf3>
     cce:	9b 01       	movw	r18, r22
     cd0:	ac 01       	movw	r20, r24
     cd2:	c5 01       	movw	r24, r10
     cd4:	b4 01       	movw	r22, r8
     cd6:	0e 94 10 0d 	call	0x1a20	; 0x1a20 <__addsf3>
     cda:	0e 94 ee 0d 	call	0x1bdc	; 0x1bdc <__fixsfsi>
     cde:	70 93 0f 01 	sts	0x010F, r23	; 0x80010f <xMotor+0x1>
     ce2:	60 93 0e 01 	sts	0x010E, r22	; 0x80010e <xMotor>
		prevXerror=error;
     ce6:	f0 92 ba 01 	sts	0x01BA, r15	; 0x8001ba <prevXerror+0x1>
     cea:	e0 92 b9 01 	sts	0x01B9, r14	; 0x8001b9 <prevXerror>
		if (xMotor>=255)
     cee:	6f 3f       	cpi	r22, 0xFF	; 255
     cf0:	71 05       	cpc	r23, r1
     cf2:	1c f0       	brlt	.+6      	; 0xcfa <__vector_11+0x3e4>
		{OCR0B=255;
     cf4:	8f ef       	ldi	r24, 0xFF	; 255
     cf6:	88 bd       	out	0x28, r24	; 40
     cf8:	6d c2       	rjmp	.+1242   	; 0x11d4 <__vector_11+0x8be>
		}
		else{
			OCR0B=xMotor;
     cfa:	68 bd       	out	0x28, r22	; 40
     cfc:	6b c2       	rjmp	.+1238   	; 0x11d4 <__vector_11+0x8be>
		}
	
	} 
	else
	{xEnable=0;
     cfe:	10 92 b8 01 	sts	0x01B8, r1	; 0x8001b8 <xEnable>
		OCR0B=0;
     d02:	18 bc       	out	0x28, r1	; 40
		TCCR1B=0;
     d04:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__DATA_REGION_ORIGIN__+0x21>
     d08:	65 c2       	rjmp	.+1226   	; 0x11d4 <__vector_11+0x8be>
		
	}
	} 
	else// for - axis
	{
		if (TimerCount<abs(XT))
     d0a:	40 91 a0 01 	lds	r20, 0x01A0	; 0x8001a0 <TimerCount>
     d0e:	50 91 a1 01 	lds	r21, 0x01A1	; 0x8001a1 <TimerCount+0x1>
     d12:	60 91 a2 01 	lds	r22, 0x01A2	; 0x8001a2 <TimerCount+0x2>
     d16:	70 91 a3 01 	lds	r23, 0x01A3	; 0x8001a3 <TimerCount+0x3>
     d1a:	9c 01       	movw	r18, r24
     d1c:	99 23       	and	r25, r25
     d1e:	24 f4       	brge	.+8      	; 0xd28 <__vector_11+0x412>
     d20:	22 27       	eor	r18, r18
     d22:	33 27       	eor	r19, r19
     d24:	28 1b       	sub	r18, r24
     d26:	39 0b       	sbc	r19, r25
     d28:	c9 01       	movw	r24, r18
     d2a:	33 0f       	add	r19, r19
     d2c:	aa 0b       	sbc	r26, r26
     d2e:	bb 0b       	sbc	r27, r27
     d30:	48 17       	cp	r20, r24
     d32:	59 07       	cpc	r21, r25
     d34:	6a 07       	cpc	r22, r26
     d36:	7b 07       	cpc	r23, r27
     d38:	0c f0       	brlt	.+2      	; 0xd3c <__vector_11+0x426>
     d3a:	8a c0       	rjmp	.+276    	; 0xe50 <__vector_11+0x53a>
		{
			int32_t predictA=x_max_speed*TimerCount;
     d3c:	60 91 a0 01 	lds	r22, 0x01A0	; 0x8001a0 <TimerCount>
     d40:	70 91 a1 01 	lds	r23, 0x01A1	; 0x8001a1 <TimerCount+0x1>
     d44:	80 91 a2 01 	lds	r24, 0x01A2	; 0x8001a2 <TimerCount+0x2>
     d48:	90 91 a3 01 	lds	r25, 0x01A3	; 0x8001a3 <TimerCount+0x3>
			int16_t error=predictA+xposition;
     d4c:	e0 90 c3 01 	lds	r14, 0x01C3	; 0x8001c3 <xposition>
     d50:	f0 90 c4 01 	lds	r15, 0x01C4	; 0x8001c4 <xposition+0x1>
     d54:	0e 94 26 0e 	call	0x1c4c	; 0x1c4c <__floatsisf>
     d58:	20 91 bd 01 	lds	r18, 0x01BD	; 0x8001bd <x_max_speed>
     d5c:	30 91 be 01 	lds	r19, 0x01BE	; 0x8001be <x_max_speed+0x1>
     d60:	40 91 bf 01 	lds	r20, 0x01BF	; 0x8001bf <x_max_speed+0x2>
     d64:	50 91 c0 01 	lds	r21, 0x01C0	; 0x8001c0 <x_max_speed+0x3>
     d68:	0e 94 b2 0e 	call	0x1d64	; 0x1d64 <__mulsf3>
     d6c:	0e 94 ee 0d 	call	0x1bdc	; 0x1bdc <__fixsfsi>
     d70:	e6 0e       	add	r14, r22
     d72:	f7 1e       	adc	r15, r23
			errorI+=error;
     d74:	47 01       	movw	r8, r14
     d76:	0f 2c       	mov	r0, r15
     d78:	00 0c       	add	r0, r0
     d7a:	aa 08       	sbc	r10, r10
     d7c:	bb 08       	sbc	r11, r11
     d7e:	80 91 96 01 	lds	r24, 0x0196	; 0x800196 <errorI>
     d82:	90 91 97 01 	lds	r25, 0x0197	; 0x800197 <errorI+0x1>
     d86:	a0 91 98 01 	lds	r26, 0x0198	; 0x800198 <errorI+0x2>
     d8a:	b0 91 99 01 	lds	r27, 0x0199	; 0x800199 <errorI+0x3>
     d8e:	bc 01       	movw	r22, r24
     d90:	cd 01       	movw	r24, r26
     d92:	68 0d       	add	r22, r8
     d94:	79 1d       	adc	r23, r9
     d96:	8a 1d       	adc	r24, r10
     d98:	9b 1d       	adc	r25, r11
     d9a:	60 93 96 01 	sts	0x0196, r22	; 0x800196 <errorI>
     d9e:	70 93 97 01 	sts	0x0197, r23	; 0x800197 <errorI+0x1>
     da2:	80 93 98 01 	sts	0x0198, r24	; 0x800198 <errorI+0x2>
     da6:	90 93 99 01 	sts	0x0199, r25	; 0x800199 <errorI+0x3>
			xMotor=(errorI*xI)+(error*xP)+(xD*(error-prevXerror));
     daa:	0e 94 26 0e 	call	0x1c4c	; 0x1c4c <__floatsisf>
     dae:	20 91 14 01 	lds	r18, 0x0114	; 0x800114 <xI>
     db2:	30 91 15 01 	lds	r19, 0x0115	; 0x800115 <xI+0x1>
     db6:	40 91 16 01 	lds	r20, 0x0116	; 0x800116 <xI+0x2>
     dba:	50 91 17 01 	lds	r21, 0x0117	; 0x800117 <xI+0x3>
     dbe:	0e 94 b2 0e 	call	0x1d64	; 0x1d64 <__mulsf3>
     dc2:	2b 01       	movw	r4, r22
     dc4:	3c 01       	movw	r6, r24
     dc6:	c5 01       	movw	r24, r10
     dc8:	b4 01       	movw	r22, r8
     dca:	0e 94 26 0e 	call	0x1c4c	; 0x1c4c <__floatsisf>
     dce:	20 91 18 01 	lds	r18, 0x0118	; 0x800118 <xP>
     dd2:	30 91 19 01 	lds	r19, 0x0119	; 0x800119 <xP+0x1>
     dd6:	40 91 1a 01 	lds	r20, 0x011A	; 0x80011a <xP+0x2>
     dda:	50 91 1b 01 	lds	r21, 0x011B	; 0x80011b <xP+0x3>
     dde:	0e 94 b2 0e 	call	0x1d64	; 0x1d64 <__mulsf3>
     de2:	9b 01       	movw	r18, r22
     de4:	ac 01       	movw	r20, r24
     de6:	c3 01       	movw	r24, r6
     de8:	b2 01       	movw	r22, r4
     dea:	0e 94 10 0d 	call	0x1a20	; 0x1a20 <__addsf3>
     dee:	4b 01       	movw	r8, r22
     df0:	5c 01       	movw	r10, r24
     df2:	80 91 b9 01 	lds	r24, 0x01B9	; 0x8001b9 <prevXerror>
     df6:	90 91 ba 01 	lds	r25, 0x01BA	; 0x8001ba <prevXerror+0x1>
     dfa:	b7 01       	movw	r22, r14
     dfc:	68 1b       	sub	r22, r24
     dfe:	79 0b       	sbc	r23, r25
     e00:	07 2e       	mov	r0, r23
     e02:	00 0c       	add	r0, r0
     e04:	88 0b       	sbc	r24, r24
     e06:	99 0b       	sbc	r25, r25
     e08:	0e 94 26 0e 	call	0x1c4c	; 0x1c4c <__floatsisf>
     e0c:	20 91 10 01 	lds	r18, 0x0110	; 0x800110 <xD>
     e10:	30 91 11 01 	lds	r19, 0x0111	; 0x800111 <xD+0x1>
     e14:	40 91 12 01 	lds	r20, 0x0112	; 0x800112 <xD+0x2>
     e18:	50 91 13 01 	lds	r21, 0x0113	; 0x800113 <xD+0x3>
     e1c:	0e 94 b2 0e 	call	0x1d64	; 0x1d64 <__mulsf3>
     e20:	9b 01       	movw	r18, r22
     e22:	ac 01       	movw	r20, r24
     e24:	c5 01       	movw	r24, r10
     e26:	b4 01       	movw	r22, r8
     e28:	0e 94 10 0d 	call	0x1a20	; 0x1a20 <__addsf3>
     e2c:	0e 94 ee 0d 	call	0x1bdc	; 0x1bdc <__fixsfsi>
     e30:	70 93 0f 01 	sts	0x010F, r23	; 0x80010f <xMotor+0x1>
     e34:	60 93 0e 01 	sts	0x010E, r22	; 0x80010e <xMotor>
			prevXerror=error;
     e38:	f0 92 ba 01 	sts	0x01BA, r15	; 0x8001ba <prevXerror+0x1>
     e3c:	e0 92 b9 01 	sts	0x01B9, r14	; 0x8001b9 <prevXerror>
			if (xMotor>=255)
     e40:	6f 3f       	cpi	r22, 0xFF	; 255
     e42:	71 05       	cpc	r23, r1
     e44:	1c f0       	brlt	.+6      	; 0xe4c <__vector_11+0x536>
			{OCR0B=255;
     e46:	8f ef       	ldi	r24, 0xFF	; 255
     e48:	88 bd       	out	0x28, r24	; 40
     e4a:	c4 c1       	rjmp	.+904    	; 0x11d4 <__vector_11+0x8be>
			}
			else{
				OCR0B=xMotor;
     e4c:	68 bd       	out	0x28, r22	; 40
     e4e:	c2 c1       	rjmp	.+900    	; 0x11d4 <__vector_11+0x8be>
			}
		} 
		else
		{xEnable=0;
     e50:	10 92 b8 01 	sts	0x01B8, r1	; 0x8001b8 <xEnable>
		OCR0B=0;
     e54:	18 bc       	out	0x28, r1	; 40
		TCCR1B=0;
     e56:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__DATA_REGION_ORIGIN__+0x21>
 	
	
	
	

}
     e5a:	bc c1       	rjmp	.+888    	; 0x11d4 <__vector_11+0x8be>
	
	}
	
	
	
	else if ((TimerCount>=(T1+T2))&&(TimerCount<((2*T1)+T2))){
     e5c:	80 91 9c 01 	lds	r24, 0x019C	; 0x80019c <T2>
     e60:	90 91 9d 01 	lds	r25, 0x019D	; 0x80019d <T2+0x1>
     e64:	82 0f       	add	r24, r18
     e66:	93 1f       	adc	r25, r19
     e68:	6c 01       	movw	r12, r24
     e6a:	e1 2c       	mov	r14, r1
     e6c:	f1 2c       	mov	r15, r1
     e6e:	40 91 a0 01 	lds	r20, 0x01A0	; 0x8001a0 <TimerCount>
     e72:	50 91 a1 01 	lds	r21, 0x01A1	; 0x8001a1 <TimerCount+0x1>
     e76:	60 91 a2 01 	lds	r22, 0x01A2	; 0x8001a2 <TimerCount+0x2>
     e7a:	70 91 a3 01 	lds	r23, 0x01A3	; 0x8001a3 <TimerCount+0x3>
     e7e:	4c 15       	cp	r20, r12
     e80:	5d 05       	cpc	r21, r13
     e82:	6e 05       	cpc	r22, r14
     e84:	7f 05       	cpc	r23, r15
     e86:	0c f0       	brlt	.+2      	; 0xe8a <__vector_11+0x574>
     e88:	66 ce       	rjmp	.-820    	; 0xb56 <__vector_11+0x240>
     e8a:	a6 c0       	rjmp	.+332    	; 0xfd8 <__vector_11+0x6c2>
				
	} 
	
	else if((TimerCount>=T1)&&(TimerCount<(T1+T2)))
	{
	uint16_t predictA=A1+((TimerCount-T1)*y_max_speed);
     e8c:	40 91 a0 01 	lds	r20, 0x01A0	; 0x8001a0 <TimerCount>
     e90:	50 91 a1 01 	lds	r21, 0x01A1	; 0x8001a1 <TimerCount+0x1>
     e94:	60 91 a2 01 	lds	r22, 0x01A2	; 0x8001a2 <TimerCount+0x2>
     e98:	70 91 a3 01 	lds	r23, 0x01A3	; 0x8001a3 <TimerCount+0x3>
	int16_t error=predictA-yposition;
     e9c:	c0 90 b4 01 	lds	r12, 0x01B4	; 0x8001b4 <yposition>
     ea0:	d0 90 b5 01 	lds	r13, 0x01B5	; 0x8001b5 <yposition+0x1>
     ea4:	e0 90 b6 01 	lds	r14, 0x01B6	; 0x8001b6 <yposition+0x2>
     ea8:	f0 90 b7 01 	lds	r15, 0x01B7	; 0x8001b7 <yposition+0x3>
     eac:	8a 01       	movw	r16, r20
     eae:	9b 01       	movw	r18, r22
     eb0:	08 1b       	sub	r16, r24
     eb2:	19 0b       	sbc	r17, r25
     eb4:	2a 0b       	sbc	r18, r26
     eb6:	3b 0b       	sbc	r19, r27
     eb8:	c9 01       	movw	r24, r18
     eba:	b8 01       	movw	r22, r16
     ebc:	0e 94 26 0e 	call	0x1c4c	; 0x1c4c <__floatsisf>
     ec0:	20 91 ac 01 	lds	r18, 0x01AC	; 0x8001ac <y_max_speed>
     ec4:	30 91 ad 01 	lds	r19, 0x01AD	; 0x8001ad <y_max_speed+0x1>
     ec8:	40 91 ae 01 	lds	r20, 0x01AE	; 0x8001ae <y_max_speed+0x2>
     ecc:	50 91 af 01 	lds	r21, 0x01AF	; 0x8001af <y_max_speed+0x3>
     ed0:	0e 94 b2 0e 	call	0x1d64	; 0x1d64 <__mulsf3>
     ed4:	4b 01       	movw	r8, r22
     ed6:	5c 01       	movw	r10, r24
     ed8:	60 91 a8 01 	lds	r22, 0x01A8	; 0x8001a8 <A1>
     edc:	70 91 a9 01 	lds	r23, 0x01A9	; 0x8001a9 <A1+0x1>
     ee0:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <A1+0x2>
     ee4:	90 91 ab 01 	lds	r25, 0x01AB	; 0x8001ab <A1+0x3>
     ee8:	0e 94 24 0e 	call	0x1c48	; 0x1c48 <__floatunsisf>
     eec:	9b 01       	movw	r18, r22
     eee:	ac 01       	movw	r20, r24
     ef0:	c5 01       	movw	r24, r10
     ef2:	b4 01       	movw	r22, r8
     ef4:	0e 94 10 0d 	call	0x1a20	; 0x1a20 <__addsf3>
     ef8:	0e 94 f5 0d 	call	0x1bea	; 0x1bea <__fixunssfsi>
     efc:	7b 01       	movw	r14, r22
     efe:	ec 18       	sub	r14, r12
     f00:	fd 08       	sbc	r15, r13
	errorI+=error;
     f02:	47 01       	movw	r8, r14
     f04:	0f 2c       	mov	r0, r15
     f06:	00 0c       	add	r0, r0
     f08:	aa 08       	sbc	r10, r10
     f0a:	bb 08       	sbc	r11, r11
     f0c:	80 91 96 01 	lds	r24, 0x0196	; 0x800196 <errorI>
     f10:	90 91 97 01 	lds	r25, 0x0197	; 0x800197 <errorI+0x1>
     f14:	a0 91 98 01 	lds	r26, 0x0198	; 0x800198 <errorI+0x2>
     f18:	b0 91 99 01 	lds	r27, 0x0199	; 0x800199 <errorI+0x3>
     f1c:	bc 01       	movw	r22, r24
     f1e:	cd 01       	movw	r24, r26
     f20:	68 0d       	add	r22, r8
     f22:	79 1d       	adc	r23, r9
     f24:	8a 1d       	adc	r24, r10
     f26:	9b 1d       	adc	r25, r11
     f28:	60 93 96 01 	sts	0x0196, r22	; 0x800196 <errorI>
     f2c:	70 93 97 01 	sts	0x0197, r23	; 0x800197 <errorI+0x1>
     f30:	80 93 98 01 	sts	0x0198, r24	; 0x800198 <errorI+0x2>
     f34:	90 93 99 01 	sts	0x0199, r25	; 0x800199 <errorI+0x3>
	yMotor=(errorI*yI)+(error*yP)+(yD*(error-prevYerror));
     f38:	0e 94 26 0e 	call	0x1c4c	; 0x1c4c <__floatsisf>
     f3c:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <yI>
     f40:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <yI+0x1>
     f44:	40 91 08 01 	lds	r20, 0x0108	; 0x800108 <yI+0x2>
     f48:	50 91 09 01 	lds	r21, 0x0109	; 0x800109 <yI+0x3>
     f4c:	0e 94 b2 0e 	call	0x1d64	; 0x1d64 <__mulsf3>
     f50:	2b 01       	movw	r4, r22
     f52:	3c 01       	movw	r6, r24
     f54:	c5 01       	movw	r24, r10
     f56:	b4 01       	movw	r22, r8
     f58:	0e 94 26 0e 	call	0x1c4c	; 0x1c4c <__floatsisf>
     f5c:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <yP>
     f60:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <yP+0x1>
     f64:	40 91 0c 01 	lds	r20, 0x010C	; 0x80010c <yP+0x2>
     f68:	50 91 0d 01 	lds	r21, 0x010D	; 0x80010d <yP+0x3>
     f6c:	0e 94 b2 0e 	call	0x1d64	; 0x1d64 <__mulsf3>
     f70:	9b 01       	movw	r18, r22
     f72:	ac 01       	movw	r20, r24
     f74:	c3 01       	movw	r24, r6
     f76:	b2 01       	movw	r22, r4
     f78:	0e 94 10 0d 	call	0x1a20	; 0x1a20 <__addsf3>
     f7c:	4b 01       	movw	r8, r22
     f7e:	5c 01       	movw	r10, r24
     f80:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <prevYerror>
     f84:	90 91 9b 01 	lds	r25, 0x019B	; 0x80019b <prevYerror+0x1>
     f88:	b7 01       	movw	r22, r14
     f8a:	68 1b       	sub	r22, r24
     f8c:	79 0b       	sbc	r23, r25
     f8e:	07 2e       	mov	r0, r23
     f90:	00 0c       	add	r0, r0
     f92:	88 0b       	sbc	r24, r24
     f94:	99 0b       	sbc	r25, r25
     f96:	0e 94 26 0e 	call	0x1c4c	; 0x1c4c <__floatsisf>
     f9a:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <yD>
     f9e:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <yD+0x1>
     fa2:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <yD+0x2>
     fa6:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <yD+0x3>
     faa:	0e 94 b2 0e 	call	0x1d64	; 0x1d64 <__mulsf3>
     fae:	9b 01       	movw	r18, r22
     fb0:	ac 01       	movw	r20, r24
     fb2:	c5 01       	movw	r24, r10
     fb4:	b4 01       	movw	r22, r8
     fb6:	0e 94 10 0d 	call	0x1a20	; 0x1a20 <__addsf3>
     fba:	0e 94 ee 0d 	call	0x1bdc	; 0x1bdc <__fixsfsi>
     fbe:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <__data_start+0x1>
     fc2:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <__data_start>
	prevYerror=error;
     fc6:	f0 92 9b 01 	sts	0x019B, r15	; 0x80019b <prevYerror+0x1>
     fca:	e0 92 9a 01 	sts	0x019A, r14	; 0x80019a <prevYerror>
	
	if (yMotor>=255)
     fce:	6f 3f       	cpi	r22, 0xFF	; 255
     fd0:	71 05       	cpc	r23, r1
     fd2:	0c f0       	brlt	.+2      	; 0xfd6 <__vector_11+0x6c0>
     fd4:	bb cd       	rjmp	.-1162   	; 0xb4c <__vector_11+0x236>
     fd6:	bd cd       	rjmp	.-1158   	; 0xb52 <__vector_11+0x23c>
		sprintf(tempchrt,"%d\r\n",temp1[i]);
		USART_TxString(tempchrt);
	}*/
	/*sprintf(tempchrt,"%u\r\n",yposition);
	USART_TxString(tempchrt);*/
	yEnable=0;
     fd8:	10 92 95 01 	sts	0x0195, r1	; 0x800195 <yEnable>
	OCR0A = 0;
     fdc:	17 bc       	out	0x27, r1	; 39
	
	TCCR1B=0;
     fde:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__DATA_REGION_ORIGIN__+0x21>
	
	yposition=0;
     fe2:	10 92 b4 01 	sts	0x01B4, r1	; 0x8001b4 <yposition>
     fe6:	10 92 b5 01 	sts	0x01B5, r1	; 0x8001b5 <yposition+0x1>
     fea:	10 92 b6 01 	sts	0x01B6, r1	; 0x8001b6 <yposition+0x2>
     fee:	10 92 b7 01 	sts	0x01B7, r1	; 0x8001b7 <yposition+0x3>
     ff2:	c8 cd       	rjmp	.-1136   	; 0xb84 <__vector_11+0x26e>
	
	
	
	else if ((TimerCount>=(T1+T2))&&(TimerCount<((2*T1)+T2))){
			
		uint16_t predictA=A1+A2+(0.5*((2*y_max_speed)-(y_acc*(TimerCount-(T1+T2)))))*(TimerCount-(T1+T2));
     ff4:	80 90 a0 01 	lds	r8, 0x01A0	; 0x8001a0 <TimerCount>
     ff8:	90 90 a1 01 	lds	r9, 0x01A1	; 0x8001a1 <TimerCount+0x1>
     ffc:	a0 90 a2 01 	lds	r10, 0x01A2	; 0x8001a2 <TimerCount+0x2>
    1000:	b0 90 a3 01 	lds	r11, 0x01A3	; 0x8001a3 <TimerCount+0x3>
    1004:	40 90 a0 01 	lds	r4, 0x01A0	; 0x8001a0 <TimerCount>
    1008:	50 90 a1 01 	lds	r5, 0x01A1	; 0x8001a1 <TimerCount+0x1>
    100c:	60 90 a2 01 	lds	r6, 0x01A2	; 0x8001a2 <TimerCount+0x2>
    1010:	70 90 a3 01 	lds	r7, 0x01A3	; 0x8001a3 <TimerCount+0x3>
		int16_t error=predictA-yposition;
    1014:	80 91 b4 01 	lds	r24, 0x01B4	; 0x8001b4 <yposition>
    1018:	90 91 b5 01 	lds	r25, 0x01B5	; 0x8001b5 <yposition+0x1>
    101c:	a0 91 b6 01 	lds	r26, 0x01B6	; 0x8001b6 <yposition+0x2>
    1020:	b0 91 b7 01 	lds	r27, 0x01B7	; 0x8001b7 <yposition+0x3>
    1024:	89 83       	std	Y+1, r24	; 0x01
    1026:	9a 83       	std	Y+2, r25	; 0x02
    1028:	ab 83       	std	Y+3, r26	; 0x03
    102a:	bc 83       	std	Y+4, r27	; 0x04
    102c:	60 91 ac 01 	lds	r22, 0x01AC	; 0x8001ac <y_max_speed>
    1030:	70 91 ad 01 	lds	r23, 0x01AD	; 0x8001ad <y_max_speed+0x1>
    1034:	80 91 ae 01 	lds	r24, 0x01AE	; 0x8001ae <y_max_speed+0x2>
    1038:	90 91 af 01 	lds	r25, 0x01AF	; 0x8001af <y_max_speed+0x3>
    103c:	9b 01       	movw	r18, r22
    103e:	ac 01       	movw	r20, r24
    1040:	0e 94 10 0d 	call	0x1a20	; 0x1a20 <__addsf3>
    1044:	6d 83       	std	Y+5, r22	; 0x05
    1046:	7e 83       	std	Y+6, r23	; 0x06
    1048:	8f 83       	std	Y+7, r24	; 0x07
    104a:	98 87       	std	Y+8, r25	; 0x08
    104c:	c5 01       	movw	r24, r10
    104e:	b4 01       	movw	r22, r8
    1050:	6c 19       	sub	r22, r12
    1052:	7d 09       	sbc	r23, r13
    1054:	8e 09       	sbc	r24, r14
    1056:	9f 09       	sbc	r25, r15
    1058:	0e 94 26 0e 	call	0x1c4c	; 0x1c4c <__floatsisf>
    105c:	20 91 b0 01 	lds	r18, 0x01B0	; 0x8001b0 <y_acc>
    1060:	30 91 b1 01 	lds	r19, 0x01B1	; 0x8001b1 <y_acc+0x1>
    1064:	40 91 b2 01 	lds	r20, 0x01B2	; 0x8001b2 <y_acc+0x2>
    1068:	50 91 b3 01 	lds	r21, 0x01B3	; 0x8001b3 <y_acc+0x3>
    106c:	0e 94 b2 0e 	call	0x1d64	; 0x1d64 <__mulsf3>
    1070:	9b 01       	movw	r18, r22
    1072:	ac 01       	movw	r20, r24
    1074:	6d 81       	ldd	r22, Y+5	; 0x05
    1076:	7e 81       	ldd	r23, Y+6	; 0x06
    1078:	8f 81       	ldd	r24, Y+7	; 0x07
    107a:	98 85       	ldd	r25, Y+8	; 0x08
    107c:	0e 94 0f 0d 	call	0x1a1e	; 0x1a1e <__subsf3>
    1080:	20 e0       	ldi	r18, 0x00	; 0
    1082:	30 e0       	ldi	r19, 0x00	; 0
    1084:	40 e0       	ldi	r20, 0x00	; 0
    1086:	5f e3       	ldi	r21, 0x3F	; 63
    1088:	0e 94 b2 0e 	call	0x1d64	; 0x1d64 <__mulsf3>
    108c:	4b 01       	movw	r8, r22
    108e:	5c 01       	movw	r10, r24
    1090:	c3 01       	movw	r24, r6
    1092:	b2 01       	movw	r22, r4
    1094:	6c 19       	sub	r22, r12
    1096:	7d 09       	sbc	r23, r13
    1098:	8e 09       	sbc	r24, r14
    109a:	9f 09       	sbc	r25, r15
    109c:	0e 94 26 0e 	call	0x1c4c	; 0x1c4c <__floatsisf>
    10a0:	9b 01       	movw	r18, r22
    10a2:	ac 01       	movw	r20, r24
    10a4:	c5 01       	movw	r24, r10
    10a6:	b4 01       	movw	r22, r8
    10a8:	0e 94 b2 0e 	call	0x1d64	; 0x1d64 <__mulsf3>
    10ac:	6b 01       	movw	r12, r22
    10ae:	7c 01       	movw	r14, r24
    10b0:	40 91 a8 01 	lds	r20, 0x01A8	; 0x8001a8 <A1>
    10b4:	50 91 a9 01 	lds	r21, 0x01A9	; 0x8001a9 <A1+0x1>
    10b8:	60 91 aa 01 	lds	r22, 0x01AA	; 0x8001aa <A1+0x2>
    10bc:	70 91 ab 01 	lds	r23, 0x01AB	; 0x8001ab <A1+0x3>
    10c0:	80 91 a4 01 	lds	r24, 0x01A4	; 0x8001a4 <A2>
    10c4:	90 91 a5 01 	lds	r25, 0x01A5	; 0x8001a5 <A2+0x1>
    10c8:	a0 91 a6 01 	lds	r26, 0x01A6	; 0x8001a6 <A2+0x2>
    10cc:	b0 91 a7 01 	lds	r27, 0x01A7	; 0x8001a7 <A2+0x3>
    10d0:	8a 01       	movw	r16, r20
    10d2:	9b 01       	movw	r18, r22
    10d4:	08 0f       	add	r16, r24
    10d6:	19 1f       	adc	r17, r25
    10d8:	2a 1f       	adc	r18, r26
    10da:	3b 1f       	adc	r19, r27
    10dc:	c9 01       	movw	r24, r18
    10de:	b8 01       	movw	r22, r16
    10e0:	0e 94 24 0e 	call	0x1c48	; 0x1c48 <__floatunsisf>
    10e4:	9b 01       	movw	r18, r22
    10e6:	ac 01       	movw	r20, r24
    10e8:	c7 01       	movw	r24, r14
    10ea:	b6 01       	movw	r22, r12
    10ec:	0e 94 10 0d 	call	0x1a20	; 0x1a20 <__addsf3>
    10f0:	0e 94 f5 0d 	call	0x1bea	; 0x1bea <__fixunssfsi>
    10f4:	7b 01       	movw	r14, r22
    10f6:	29 81       	ldd	r18, Y+1	; 0x01
    10f8:	3a 81       	ldd	r19, Y+2	; 0x02
    10fa:	e2 1a       	sub	r14, r18
    10fc:	f3 0a       	sbc	r15, r19
		errorI+=error;
    10fe:	47 01       	movw	r8, r14
    1100:	0f 2c       	mov	r0, r15
    1102:	00 0c       	add	r0, r0
    1104:	aa 08       	sbc	r10, r10
    1106:	bb 08       	sbc	r11, r11
    1108:	80 91 96 01 	lds	r24, 0x0196	; 0x800196 <errorI>
    110c:	90 91 97 01 	lds	r25, 0x0197	; 0x800197 <errorI+0x1>
    1110:	a0 91 98 01 	lds	r26, 0x0198	; 0x800198 <errorI+0x2>
    1114:	b0 91 99 01 	lds	r27, 0x0199	; 0x800199 <errorI+0x3>
    1118:	bc 01       	movw	r22, r24
    111a:	cd 01       	movw	r24, r26
    111c:	68 0d       	add	r22, r8
    111e:	79 1d       	adc	r23, r9
    1120:	8a 1d       	adc	r24, r10
    1122:	9b 1d       	adc	r25, r11
    1124:	60 93 96 01 	sts	0x0196, r22	; 0x800196 <errorI>
    1128:	70 93 97 01 	sts	0x0197, r23	; 0x800197 <errorI+0x1>
    112c:	80 93 98 01 	sts	0x0198, r24	; 0x800198 <errorI+0x2>
    1130:	90 93 99 01 	sts	0x0199, r25	; 0x800199 <errorI+0x3>
		yMotor=(errorI*yI)+(error*yP)+(yD*(error-prevYerror));
    1134:	0e 94 26 0e 	call	0x1c4c	; 0x1c4c <__floatsisf>
    1138:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <yI>
    113c:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <yI+0x1>
    1140:	40 91 08 01 	lds	r20, 0x0108	; 0x800108 <yI+0x2>
    1144:	50 91 09 01 	lds	r21, 0x0109	; 0x800109 <yI+0x3>
    1148:	0e 94 b2 0e 	call	0x1d64	; 0x1d64 <__mulsf3>
    114c:	2b 01       	movw	r4, r22
    114e:	3c 01       	movw	r6, r24
    1150:	c5 01       	movw	r24, r10
    1152:	b4 01       	movw	r22, r8
    1154:	0e 94 26 0e 	call	0x1c4c	; 0x1c4c <__floatsisf>
    1158:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <yP>
    115c:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <yP+0x1>
    1160:	40 91 0c 01 	lds	r20, 0x010C	; 0x80010c <yP+0x2>
    1164:	50 91 0d 01 	lds	r21, 0x010D	; 0x80010d <yP+0x3>
    1168:	0e 94 b2 0e 	call	0x1d64	; 0x1d64 <__mulsf3>
    116c:	9b 01       	movw	r18, r22
    116e:	ac 01       	movw	r20, r24
    1170:	c3 01       	movw	r24, r6
    1172:	b2 01       	movw	r22, r4
    1174:	0e 94 10 0d 	call	0x1a20	; 0x1a20 <__addsf3>
    1178:	4b 01       	movw	r8, r22
    117a:	5c 01       	movw	r10, r24
    117c:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <prevYerror>
    1180:	90 91 9b 01 	lds	r25, 0x019B	; 0x80019b <prevYerror+0x1>
    1184:	b7 01       	movw	r22, r14
    1186:	68 1b       	sub	r22, r24
    1188:	79 0b       	sbc	r23, r25
    118a:	07 2e       	mov	r0, r23
    118c:	00 0c       	add	r0, r0
    118e:	88 0b       	sbc	r24, r24
    1190:	99 0b       	sbc	r25, r25
    1192:	0e 94 26 0e 	call	0x1c4c	; 0x1c4c <__floatsisf>
    1196:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <yD>
    119a:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <yD+0x1>
    119e:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <yD+0x2>
    11a2:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <yD+0x3>
    11a6:	0e 94 b2 0e 	call	0x1d64	; 0x1d64 <__mulsf3>
    11aa:	9b 01       	movw	r18, r22
    11ac:	ac 01       	movw	r20, r24
    11ae:	c5 01       	movw	r24, r10
    11b0:	b4 01       	movw	r22, r8
    11b2:	0e 94 10 0d 	call	0x1a20	; 0x1a20 <__addsf3>
    11b6:	0e 94 ee 0d 	call	0x1bdc	; 0x1bdc <__fixsfsi>
    11ba:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <__data_start+0x1>
    11be:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <__data_start>
		prevYerror=error;
    11c2:	f0 92 9b 01 	sts	0x019B, r15	; 0x80019b <prevYerror+0x1>
    11c6:	e0 92 9a 01 	sts	0x019A, r14	; 0x80019a <prevYerror>
		
		if (yMotor>=255)
    11ca:	6f 3f       	cpi	r22, 0xFF	; 255
    11cc:	71 05       	cpc	r23, r1
    11ce:	0c f0       	brlt	.+2      	; 0x11d2 <__vector_11+0x8bc>
    11d0:	d5 cc       	rjmp	.-1622   	; 0xb7c <__vector_11+0x266>
    11d2:	d7 cc       	rjmp	.-1618   	; 0xb82 <__vector_11+0x26c>
 	
	
	
	

}
    11d4:	28 96       	adiw	r28, 0x08	; 8
    11d6:	0f b6       	in	r0, 0x3f	; 63
    11d8:	f8 94       	cli
    11da:	de bf       	out	0x3e, r29	; 62
    11dc:	0f be       	out	0x3f, r0	; 63
    11de:	cd bf       	out	0x3d, r28	; 61
    11e0:	df 91       	pop	r29
    11e2:	cf 91       	pop	r28
    11e4:	ff 91       	pop	r31
    11e6:	ef 91       	pop	r30
    11e8:	bf 91       	pop	r27
    11ea:	af 91       	pop	r26
    11ec:	9f 91       	pop	r25
    11ee:	8f 91       	pop	r24
    11f0:	7f 91       	pop	r23
    11f2:	6f 91       	pop	r22
    11f4:	5f 91       	pop	r21
    11f6:	4f 91       	pop	r20
    11f8:	3f 91       	pop	r19
    11fa:	2f 91       	pop	r18
    11fc:	1f 91       	pop	r17
    11fe:	0f 91       	pop	r16
    1200:	ff 90       	pop	r15
    1202:	ef 90       	pop	r14
    1204:	df 90       	pop	r13
    1206:	cf 90       	pop	r12
    1208:	bf 90       	pop	r11
    120a:	af 90       	pop	r10
    120c:	9f 90       	pop	r9
    120e:	8f 90       	pop	r8
    1210:	7f 90       	pop	r7
    1212:	6f 90       	pop	r6
    1214:	5f 90       	pop	r5
    1216:	4f 90       	pop	r4
    1218:	0f 90       	pop	r0
    121a:	0f be       	out	0x3f, r0	; 63
    121c:	0f 90       	pop	r0
    121e:	1f 90       	pop	r1
    1220:	18 95       	reti

00001222 <_Z10Modeselectv>:

bool Modeselect(){
    1222:	cf 93       	push	r28
    1224:	df 93       	push	r29
	bool logic=0;
	LcdSetCursor(3,0,"Select Mode");
    1226:	4c e1       	ldi	r20, 0x1C	; 28
    1228:	51 e0       	ldi	r21, 0x01	; 1
    122a:	60 e0       	ldi	r22, 0x00	; 0
    122c:	83 e0       	ldi	r24, 0x03	; 3
    122e:	0e 94 b5 01 	call	0x36a	; 0x36a <_Z12LcdSetCursorhhPc>
	LcdSetCursor(0,1," >Auto   Manual");
    1232:	48 e2       	ldi	r20, 0x28	; 40
    1234:	51 e0       	ldi	r21, 0x01	; 1
    1236:	61 e0       	ldi	r22, 0x01	; 1
    1238:	80 e0       	ldi	r24, 0x00	; 0
    123a:	0e 94 b5 01 	call	0x36a	; 0x36a <_Z12LcdSetCursorhhPc>
	

}

bool Modeselect(){
	bool logic=0;
    123e:	c0 e0       	ldi	r28, 0x00	; 0
	LcdSetCursor(0,1," >Auto   Manual");
	while(((PINC&0b1)>>0)!=0){
		if (ReadADC(1)<50)
		{LcdSetCursor(1,1,">");
			LcdSetCursor(8,1," ");
			logic=0;
    1240:	d0 e0       	ldi	r29, 0x00	; 0

bool Modeselect(){
	bool logic=0;
	LcdSetCursor(3,0,"Select Mode");
	LcdSetCursor(0,1," >Auto   Manual");
	while(((PINC&0b1)>>0)!=0){
    1242:	30 9b       	sbis	0x06, 0	; 6
    1244:	26 c0       	rjmp	.+76     	; 0x1292 <_Z10Modeselectv+0x70>
		if (ReadADC(1)<50)
    1246:	81 e0       	ldi	r24, 0x01	; 1
    1248:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <_Z7ReadADCh>
    124c:	c2 97       	sbiw	r24, 0x32	; 50
    124e:	68 f4       	brcc	.+26     	; 0x126a <_Z10Modeselectv+0x48>
		{LcdSetCursor(1,1,">");
    1250:	48 e3       	ldi	r20, 0x38	; 56
    1252:	51 e0       	ldi	r21, 0x01	; 1
    1254:	61 e0       	ldi	r22, 0x01	; 1
    1256:	81 e0       	ldi	r24, 0x01	; 1
    1258:	0e 94 b5 01 	call	0x36a	; 0x36a <_Z12LcdSetCursorhhPc>
			LcdSetCursor(8,1," ");
    125c:	4f e6       	ldi	r20, 0x6F	; 111
    125e:	51 e0       	ldi	r21, 0x01	; 1
    1260:	61 e0       	ldi	r22, 0x01	; 1
    1262:	88 e0       	ldi	r24, 0x08	; 8
    1264:	0e 94 b5 01 	call	0x36a	; 0x36a <_Z12LcdSetCursorhhPc>
			logic=0;
    1268:	cd 2f       	mov	r28, r29
		}
		if (ReadADC(1)>1000)
    126a:	81 e0       	ldi	r24, 0x01	; 1
    126c:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <_Z7ReadADCh>
    1270:	89 3e       	cpi	r24, 0xE9	; 233
    1272:	93 40       	sbci	r25, 0x03	; 3
    1274:	30 f3       	brcs	.-52     	; 0x1242 <_Z10Modeselectv+0x20>
		{LcdSetCursor(1,1," ");
    1276:	4f e6       	ldi	r20, 0x6F	; 111
    1278:	51 e0       	ldi	r21, 0x01	; 1
    127a:	61 e0       	ldi	r22, 0x01	; 1
    127c:	81 e0       	ldi	r24, 0x01	; 1
    127e:	0e 94 b5 01 	call	0x36a	; 0x36a <_Z12LcdSetCursorhhPc>
			LcdSetCursor(8,1,">");
    1282:	48 e3       	ldi	r20, 0x38	; 56
    1284:	51 e0       	ldi	r21, 0x01	; 1
    1286:	61 e0       	ldi	r22, 0x01	; 1
    1288:	88 e0       	ldi	r24, 0x08	; 8
    128a:	0e 94 b5 01 	call	0x36a	; 0x36a <_Z12LcdSetCursorhhPc>
			logic=1;
    128e:	c1 e0       	ldi	r28, 0x01	; 1
    1290:	d8 cf       	rjmp	.-80     	; 0x1242 <_Z10Modeselectv+0x20>
		}
	}
	return logic;
	
}
    1292:	8c 2f       	mov	r24, r28
    1294:	df 91       	pop	r29
    1296:	cf 91       	pop	r28
    1298:	08 95       	ret

0000129a <_Z10ManualModev>:

void ManualMode(){
	LcdCommand(LCD_CLEARDISPLAY);
    129a:	81 e0       	ldi	r24, 0x01	; 1
    129c:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <_Z10LcdCommandh>
	LcdSetCursor(3,0,"Manual mode");
    12a0:	4a e3       	ldi	r20, 0x3A	; 58
    12a2:	51 e0       	ldi	r21, 0x01	; 1
    12a4:	60 e0       	ldi	r22, 0x00	; 0
    12a6:	83 e0       	ldi	r24, 0x03	; 3
    12a8:	0e 94 b5 01 	call	0x36a	; 0x36a <_Z12LcdSetCursorhhPc>
    12ac:	2f ef       	ldi	r18, 0xFF	; 255
    12ae:	44 e3       	ldi	r20, 0x34	; 52
    12b0:	5c e0       	ldi	r21, 0x0C	; 12
    12b2:	21 50       	subi	r18, 0x01	; 1
    12b4:	40 40       	sbci	r20, 0x00	; 0
    12b6:	50 40       	sbci	r21, 0x00	; 0
    12b8:	e1 f7       	brne	.-8      	; 0x12b2 <_Z10ManualModev+0x18>
    12ba:	00 c0       	rjmp	.+0      	; 0x12bc <_Z10ManualModev+0x22>
    12bc:	00 00       	nop
		if (ReadADC(1)>530)
		{
			PORTB|=(1<<7);
			PORTB&=~(1<<6);
			tempi=ReadADC(1);
			tempu8=(((tempi-530)*85)/(1023-530))+150;
    12be:	0f 2e       	mov	r0, r31
    12c0:	f5 e5       	ldi	r31, 0x55	; 85
    12c2:	ff 2e       	mov	r15, r31
    12c4:	f0 2d       	mov	r31, r0
    12c6:	0d ee       	ldi	r16, 0xED	; 237
    12c8:	11 e0       	ldi	r17, 0x01	; 1
	LcdCommand(LCD_CLEARDISPLAY);
	LcdSetCursor(3,0,"Manual mode");
	_delay_ms(500);
	
	while(1){
		if (ReadADC(1)>530)
    12ca:	81 e0       	ldi	r24, 0x01	; 1
    12cc:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <_Z7ReadADCh>
    12d0:	83 31       	cpi	r24, 0x13	; 19
    12d2:	92 40       	sbci	r25, 0x02	; 2
    12d4:	30 f1       	brcs	.+76     	; 0x1322 <_Z10ManualModev+0x88>
		{
			PORTB|=(1<<7);
    12d6:	2f 9a       	sbi	0x05, 7	; 5
			PORTB&=~(1<<6);
    12d8:	2e 98       	cbi	0x05, 6	; 5
			tempi=ReadADC(1);
    12da:	81 e0       	ldi	r24, 0x01	; 1
    12dc:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <_Z7ReadADCh>
    12e0:	90 93 89 01 	sts	0x0189, r25	; 0x800189 <tempi+0x1>
    12e4:	80 93 88 01 	sts	0x0188, r24	; 0x800188 <tempi>
			tempu8=(((tempi-530)*85)/(1023-530))+150;
    12e8:	f8 9e       	mul	r15, r24
    12ea:	90 01       	movw	r18, r0
    12ec:	f9 9e       	mul	r15, r25
    12ee:	30 0d       	add	r19, r0
    12f0:	11 24       	eor	r1, r1
    12f2:	c9 01       	movw	r24, r18
    12f4:	8a 5f       	subi	r24, 0xFA	; 250
    12f6:	9f 4a       	sbci	r25, 0xAF	; 175
    12f8:	b8 01       	movw	r22, r16
    12fa:	0e 94 f7 12 	call	0x25ee	; 0x25ee <__udivmodhi4>
    12fe:	eb 01       	movw	r28, r22
    1300:	ca 56       	subi	r28, 0x6A	; 106
    1302:	df 4f       	sbci	r29, 0xFF	; 255
    1304:	be 01       	movw	r22, r28
    1306:	80 e0       	ldi	r24, 0x00	; 0
    1308:	90 e0       	ldi	r25, 0x00	; 0
    130a:	0e 94 24 0e 	call	0x1c48	; 0x1c48 <__floatunsisf>
    130e:	60 93 84 01 	sts	0x0184, r22	; 0x800184 <__data_end>
    1312:	70 93 85 01 	sts	0x0185, r23	; 0x800185 <__data_end+0x1>
    1316:	80 93 86 01 	sts	0x0186, r24	; 0x800186 <__data_end+0x2>
    131a:	90 93 87 01 	sts	0x0187, r25	; 0x800187 <__data_end+0x3>
			OCR0B= tempu8;
    131e:	c8 bd       	out	0x28, r28	; 40
    1320:	37 c0       	rjmp	.+110    	; 0x1390 <_Z10ManualModev+0xf6>
			
		}
		else if (ReadADC(1)<520)
    1322:	81 e0       	ldi	r24, 0x01	; 1
    1324:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <_Z7ReadADCh>
    1328:	88 30       	cpi	r24, 0x08	; 8
    132a:	92 40       	sbci	r25, 0x02	; 2
    132c:	80 f5       	brcc	.+96     	; 0x138e <_Z10ManualModev+0xf4>
		{
			PORTB|=(1<<6);
    132e:	2e 9a       	sbi	0x05, 6	; 5
			PORTB&=~(1<<7);
    1330:	2f 98       	cbi	0x05, 7	; 5
			tempi=ReadADC(1);
    1332:	81 e0       	ldi	r24, 0x01	; 1
    1334:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <_Z7ReadADCh>
    1338:	90 93 89 01 	sts	0x0189, r25	; 0x800189 <tempi+0x1>
    133c:	80 93 88 01 	sts	0x0188, r24	; 0x800188 <tempi>
			tempu8=(((520-tempi)*85)/(520))+150;
    1340:	6b ea       	ldi	r22, 0xAB	; 171
    1342:	ac 01       	movw	r20, r24
    1344:	64 03       	mulsu	r22, r20
    1346:	90 01       	movw	r18, r0
    1348:	65 9f       	mul	r22, r21
    134a:	30 0d       	add	r19, r0
    134c:	11 24       	eor	r1, r1
    134e:	28 55       	subi	r18, 0x58	; 88
    1350:	33 45       	sbci	r19, 0x53	; 83
    1352:	a1 ec       	ldi	r26, 0xC1	; 193
    1354:	bf e0       	ldi	r27, 0x0F	; 15
    1356:	0e 94 4c 13 	call	0x2698	; 0x2698 <__umulhisi3>
    135a:	96 95       	lsr	r25
    135c:	87 95       	ror	r24
    135e:	92 95       	swap	r25
    1360:	82 95       	swap	r24
    1362:	8f 70       	andi	r24, 0x0F	; 15
    1364:	89 27       	eor	r24, r25
    1366:	9f 70       	andi	r25, 0x0F	; 15
    1368:	89 27       	eor	r24, r25
    136a:	ec 01       	movw	r28, r24
    136c:	ca 56       	subi	r28, 0x6A	; 106
    136e:	df 4f       	sbci	r29, 0xFF	; 255
    1370:	be 01       	movw	r22, r28
    1372:	80 e0       	ldi	r24, 0x00	; 0
    1374:	90 e0       	ldi	r25, 0x00	; 0
    1376:	0e 94 24 0e 	call	0x1c48	; 0x1c48 <__floatunsisf>
    137a:	60 93 84 01 	sts	0x0184, r22	; 0x800184 <__data_end>
    137e:	70 93 85 01 	sts	0x0185, r23	; 0x800185 <__data_end+0x1>
    1382:	80 93 86 01 	sts	0x0186, r24	; 0x800186 <__data_end+0x2>
    1386:	90 93 87 01 	sts	0x0187, r25	; 0x800187 <__data_end+0x3>
			OCR0B= tempu8;
    138a:	c8 bd       	out	0x28, r28	; 40
    138c:	01 c0       	rjmp	.+2      	; 0x1390 <_Z10ManualModev+0xf6>
			
		}
		else{
			OCR0B=0;
    138e:	18 bc       	out	0x28, r1	; 40
		}
		if (ReadADC(2)>530)
    1390:	82 e0       	ldi	r24, 0x02	; 2
    1392:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <_Z7ReadADCh>
    1396:	83 31       	cpi	r24, 0x13	; 19
    1398:	92 40       	sbci	r25, 0x02	; 2
    139a:	30 f1       	brcs	.+76     	; 0x13e8 <_Z10ManualModev+0x14e>
		{
			PORTB&=~(1<<0);
    139c:	28 98       	cbi	0x05, 0	; 5
			PORTD|=(1<<7);
    139e:	5f 9a       	sbi	0x0b, 7	; 11
			tempi=ReadADC(2);
    13a0:	82 e0       	ldi	r24, 0x02	; 2
    13a2:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <_Z7ReadADCh>
    13a6:	90 93 89 01 	sts	0x0189, r25	; 0x800189 <tempi+0x1>
    13aa:	80 93 88 01 	sts	0x0188, r24	; 0x800188 <tempi>
			tempu8=(((tempi-530)*85)/(1023-530))+130;
    13ae:	f8 9e       	mul	r15, r24
    13b0:	90 01       	movw	r18, r0
    13b2:	f9 9e       	mul	r15, r25
    13b4:	30 0d       	add	r19, r0
    13b6:	11 24       	eor	r1, r1
    13b8:	c9 01       	movw	r24, r18
    13ba:	8a 5f       	subi	r24, 0xFA	; 250
    13bc:	9f 4a       	sbci	r25, 0xAF	; 175
    13be:	b8 01       	movw	r22, r16
    13c0:	0e 94 f7 12 	call	0x25ee	; 0x25ee <__udivmodhi4>
    13c4:	eb 01       	movw	r28, r22
    13c6:	ce 57       	subi	r28, 0x7E	; 126
    13c8:	df 4f       	sbci	r29, 0xFF	; 255
    13ca:	be 01       	movw	r22, r28
    13cc:	80 e0       	ldi	r24, 0x00	; 0
    13ce:	90 e0       	ldi	r25, 0x00	; 0
    13d0:	0e 94 24 0e 	call	0x1c48	; 0x1c48 <__floatunsisf>
    13d4:	60 93 84 01 	sts	0x0184, r22	; 0x800184 <__data_end>
    13d8:	70 93 85 01 	sts	0x0185, r23	; 0x800185 <__data_end+0x1>
    13dc:	80 93 86 01 	sts	0x0186, r24	; 0x800186 <__data_end+0x2>
    13e0:	90 93 87 01 	sts	0x0187, r25	; 0x800187 <__data_end+0x3>
			OCR0A= tempu8;
    13e4:	c7 bd       	out	0x27, r28	; 39
    13e6:	37 c0       	rjmp	.+110    	; 0x1456 <_Z10ManualModev+0x1bc>
			
		}
		else if (ReadADC(2)<520)
    13e8:	82 e0       	ldi	r24, 0x02	; 2
    13ea:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <_Z7ReadADCh>
    13ee:	88 30       	cpi	r24, 0x08	; 8
    13f0:	92 40       	sbci	r25, 0x02	; 2
    13f2:	80 f5       	brcc	.+96     	; 0x1454 <_Z10ManualModev+0x1ba>
		{
			PORTB|=(1<<0);
    13f4:	28 9a       	sbi	0x05, 0	; 5
			PORTD&=~(1<<7);
    13f6:	5f 98       	cbi	0x0b, 7	; 11
			tempi=ReadADC(2);
    13f8:	82 e0       	ldi	r24, 0x02	; 2
    13fa:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <_Z7ReadADCh>
    13fe:	90 93 89 01 	sts	0x0189, r25	; 0x800189 <tempi+0x1>
    1402:	80 93 88 01 	sts	0x0188, r24	; 0x800188 <tempi>
			tempu8=(((520-tempi)*85)/(520))+130;
    1406:	6b ea       	ldi	r22, 0xAB	; 171
    1408:	ac 01       	movw	r20, r24
    140a:	64 03       	mulsu	r22, r20
    140c:	90 01       	movw	r18, r0
    140e:	65 9f       	mul	r22, r21
    1410:	30 0d       	add	r19, r0
    1412:	11 24       	eor	r1, r1
    1414:	28 55       	subi	r18, 0x58	; 88
    1416:	33 45       	sbci	r19, 0x53	; 83
    1418:	a1 ec       	ldi	r26, 0xC1	; 193
    141a:	bf e0       	ldi	r27, 0x0F	; 15
    141c:	0e 94 4c 13 	call	0x2698	; 0x2698 <__umulhisi3>
    1420:	96 95       	lsr	r25
    1422:	87 95       	ror	r24
    1424:	92 95       	swap	r25
    1426:	82 95       	swap	r24
    1428:	8f 70       	andi	r24, 0x0F	; 15
    142a:	89 27       	eor	r24, r25
    142c:	9f 70       	andi	r25, 0x0F	; 15
    142e:	89 27       	eor	r24, r25
    1430:	ec 01       	movw	r28, r24
    1432:	ce 57       	subi	r28, 0x7E	; 126
    1434:	df 4f       	sbci	r29, 0xFF	; 255
    1436:	be 01       	movw	r22, r28
    1438:	80 e0       	ldi	r24, 0x00	; 0
    143a:	90 e0       	ldi	r25, 0x00	; 0
    143c:	0e 94 24 0e 	call	0x1c48	; 0x1c48 <__floatunsisf>
    1440:	60 93 84 01 	sts	0x0184, r22	; 0x800184 <__data_end>
    1444:	70 93 85 01 	sts	0x0185, r23	; 0x800185 <__data_end+0x1>
    1448:	80 93 86 01 	sts	0x0186, r24	; 0x800186 <__data_end+0x2>
    144c:	90 93 87 01 	sts	0x0187, r25	; 0x800187 <__data_end+0x3>
			OCR0A= tempu8;
    1450:	c7 bd       	out	0x27, r28	; 39
    1452:	01 c0       	rjmp	.+2      	; 0x1456 <_Z10ManualModev+0x1bc>
			
		}
		else{
			OCR0A=0;
    1454:	17 bc       	out	0x27, r1	; 39
		}
		if (((PINC&0b1)>>0)==0)
    1456:	30 99       	sbic	0x06, 0	; 6
    1458:	02 c0       	rjmp	.+4      	; 0x145e <_Z10ManualModev+0x1c4>
		{PORTB|=(1<<3);
    145a:	2b 9a       	sbi	0x05, 3	; 5
    145c:	01 c0       	rjmp	.+2      	; 0x1460 <_Z10ManualModev+0x1c6>
		} 
		else
		{PORTB&=~(1<<3);
    145e:	2b 98       	cbi	0x05, 3	; 5
		}
		
	if ((PIND&0b1)==0)
    1460:	48 99       	sbic	0x09, 0	; 9
    1462:	33 cf       	rjmp	.-410    	; 0x12ca <_Z10ManualModev+0x30>
	{	OCR0A=0;OCR0B=0;tempi=0;tempu8=0;
    1464:	17 bc       	out	0x27, r1	; 39
    1466:	18 bc       	out	0x28, r1	; 40
    1468:	10 92 89 01 	sts	0x0189, r1	; 0x800189 <tempi+0x1>
    146c:	10 92 88 01 	sts	0x0188, r1	; 0x800188 <tempi>
    1470:	10 92 84 01 	sts	0x0184, r1	; 0x800184 <__data_end>
    1474:	10 92 85 01 	sts	0x0185, r1	; 0x800185 <__data_end+0x1>
    1478:	10 92 86 01 	sts	0x0186, r1	; 0x800186 <__data_end+0x2>
    147c:	10 92 87 01 	sts	0x0187, r1	; 0x800187 <__data_end+0x3>
		longjmp (env, 1);
    1480:	61 e0       	ldi	r22, 0x01	; 1
    1482:	70 e0       	ldi	r23, 0x00	; 0
    1484:	85 ec       	ldi	r24, 0xC5	; 197
    1486:	91 e0       	ldi	r25, 0x01	; 1
    1488:	0e 94 8a 14 	call	0x2914	; 0x2914 <longjmp>

0000148c <_Z8automodev>:
	}

}

void automode()
{	LcdCommand(LCD_CLEARDISPLAY);
    148c:	8f 92       	push	r8
    148e:	9f 92       	push	r9
    1490:	af 92       	push	r10
    1492:	bf 92       	push	r11
    1494:	cf 92       	push	r12
    1496:	df 92       	push	r13
    1498:	ef 92       	push	r14
    149a:	ff 92       	push	r15
    149c:	0f 93       	push	r16
    149e:	1f 93       	push	r17
    14a0:	cf 93       	push	r28
    14a2:	df 93       	push	r29
    14a4:	cd b7       	in	r28, 0x3d	; 61
    14a6:	de b7       	in	r29, 0x3e	; 62
    14a8:	61 97       	sbiw	r28, 0x11	; 17
    14aa:	0f b6       	in	r0, 0x3f	; 63
    14ac:	f8 94       	cli
    14ae:	de bf       	out	0x3e, r29	; 62
    14b0:	0f be       	out	0x3f, r0	; 63
    14b2:	cd bf       	out	0x3d, r28	; 61
    14b4:	81 e0       	ldi	r24, 0x01	; 1
    14b6:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <_Z10LcdCommandh>
	LcdCommand(LCD_DISPLAYCONTROL|LCD_DISPLAYON|LCD_BLINKON);
    14ba:	8d e0       	ldi	r24, 0x0D	; 13
    14bc:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <_Z10LcdCommandh>
	LcdSetCursor(1,0,"Length   count");
    14c0:	46 e4       	ldi	r20, 0x46	; 70
    14c2:	51 e0       	ldi	r21, 0x01	; 1
    14c4:	60 e0       	ldi	r22, 0x00	; 0
    14c6:	81 e0       	ldi	r24, 0x01	; 1
    14c8:	0e 94 b5 01 	call	0x36a	; 0x36a <_Z12LcdSetCursorhhPc>
	LcdSetCursor(1,1,"00.0cm   00");
    14cc:	45 e5       	ldi	r20, 0x55	; 85
    14ce:	51 e0       	ldi	r21, 0x01	; 1
    14d0:	61 e0       	ldi	r22, 0x01	; 1
    14d2:	81 e0       	ldi	r24, 0x01	; 1
    14d4:	0e 94 b5 01 	call	0x36a	; 0x36a <_Z12LcdSetCursorhhPc>
	LcdSetCursor(1,1,"");
    14d8:	40 e7       	ldi	r20, 0x70	; 112
    14da:	51 e0       	ldi	r21, 0x01	; 1
    14dc:	61 e0       	ldi	r22, 0x01	; 1
    14de:	81 e0       	ldi	r24, 0x01	; 1
    14e0:	0e 94 b5 01 	call	0x36a	; 0x36a <_Z12LcdSetCursorhhPc>
    14e4:	2f ef       	ldi	r18, 0xFF	; 255
    14e6:	89 e6       	ldi	r24, 0x69	; 105
    14e8:	98 e1       	ldi	r25, 0x18	; 24
    14ea:	21 50       	subi	r18, 0x01	; 1
    14ec:	80 40       	sbci	r24, 0x00	; 0
    14ee:	90 40       	sbci	r25, 0x00	; 0
    14f0:	e1 f7       	brne	.-8      	; 0x14ea <_Z8automodev+0x5e>
    14f2:	00 c0       	rjmp	.+0      	; 0x14f4 <_Z8automodev+0x68>
    14f4:	00 00       	nop
	_delay_ms(1000);
	uint8_t pos=0;
	uint8_t lcdpos=0;
	uint8_t prevnum=0;
    14f6:	e1 2c       	mov	r14, r1
	LcdSetCursor(1,0,"Length   count");
	LcdSetCursor(1,1,"00.0cm   00");
	LcdSetCursor(1,1,"");
	_delay_ms(1000);
	uint8_t pos=0;
	uint8_t lcdpos=0;
    14f8:	f1 2c       	mov	r15, r1
	LcdCommand(LCD_DISPLAYCONTROL|LCD_DISPLAYON|LCD_BLINKON);
	LcdSetCursor(1,0,"Length   count");
	LcdSetCursor(1,1,"00.0cm   00");
	LcdSetCursor(1,1,"");
	_delay_ms(1000);
	uint8_t pos=0;
    14fa:	10 e0       	ldi	r17, 0x00	; 0
	if (adcread!=prevnum)
	{	prevnum=adcread;
		switch(pos){
			case 0: lcdpos=1; lcddataRead[pos]=prevnum; break;
			case 1: lcdpos=2; lcddataRead[pos]=prevnum; break;
			case 2: lcdpos=4; lcddataRead[pos]=prevnum; break;
    14fc:	0f 2e       	mov	r0, r31
    14fe:	fa e8       	ldi	r31, 0x8A	; 138
    1500:	cf 2e       	mov	r12, r31
    1502:	f1 e0       	ldi	r31, 0x01	; 1
    1504:	df 2e       	mov	r13, r31
    1506:	f0 2d       	mov	r31, r0
    1508:	68 94       	set
    150a:	99 24       	eor	r9, r9
    150c:	92 f8       	bld	r9, 2
			case 3: lcdpos=10; lcddataRead[pos]=prevnum; break;
			case 4: lcdpos=11; lcddataRead[pos]=prevnum; break;
    150e:	0f 2e       	mov	r0, r31
    1510:	fb e0       	ldi	r31, 0x0B	; 11
    1512:	af 2e       	mov	r10, r31
    1514:	f0 2d       	mov	r31, r0
	
	if (adcread!=prevnum)
	{	prevnum=adcread;
		switch(pos){
			case 0: lcdpos=1; lcddataRead[pos]=prevnum; break;
			case 1: lcdpos=2; lcddataRead[pos]=prevnum; break;
    1516:	68 94       	set
    1518:	bb 24       	eor	r11, r11
    151a:	b1 f8       	bld	r11, 1
    151c:	01 c0       	rjmp	.+2      	; 0x1520 <_Z8automodev+0x94>
	}

}

void automode()
{	LcdCommand(LCD_CLEARDISPLAY);
    151e:	e0 2e       	mov	r14, r16
	uint8_t lcdpos=0;
	uint8_t prevnum=0;
	char adcRead0 [1];
	

	while(((PINC&0b1)>>0)!=0){
    1520:	30 9b       	sbis	0x06, 0	; 6
    1522:	ea c0       	rjmp	.+468    	; 0x16f8 <_Z8automodev+0x26c>
	uint8_t adcread=ReadADC(3)/102.4;
    1524:	83 e0       	ldi	r24, 0x03	; 3
    1526:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <_Z7ReadADCh>
    152a:	bc 01       	movw	r22, r24
    152c:	80 e0       	ldi	r24, 0x00	; 0
    152e:	90 e0       	ldi	r25, 0x00	; 0
    1530:	0e 94 24 0e 	call	0x1c48	; 0x1c48 <__floatunsisf>
    1534:	2d ec       	ldi	r18, 0xCD	; 205
    1536:	3c ec       	ldi	r19, 0xCC	; 204
    1538:	4c ec       	ldi	r20, 0xCC	; 204
    153a:	52 e4       	ldi	r21, 0x42	; 66
    153c:	0e 94 7c 0d 	call	0x1af8	; 0x1af8 <__divsf3>
    1540:	0e 94 f5 0d 	call	0x1bea	; 0x1bea <__fixunssfsi>
    1544:	06 2f       	mov	r16, r22
	
	if (adcread!=prevnum)
    1546:	e6 16       	cp	r14, r22
    1548:	09 f4       	brne	.+2      	; 0x154c <_Z8automodev+0xc0>
    154a:	40 c0       	rjmp	.+128    	; 0x15cc <_Z8automodev+0x140>
	{	prevnum=adcread;
		switch(pos){
    154c:	12 30       	cpi	r17, 0x02	; 2
    154e:	a1 f0       	breq	.+40     	; 0x1578 <_Z8automodev+0xec>
    1550:	28 f4       	brcc	.+10     	; 0x155c <_Z8automodev+0xd0>
    1552:	11 23       	and	r17, r17
    1554:	41 f0       	breq	.+16     	; 0x1566 <_Z8automodev+0xda>
    1556:	11 30       	cpi	r17, 0x01	; 1
    1558:	59 f0       	breq	.+22     	; 0x1570 <_Z8automodev+0xe4>
    155a:	1c c0       	rjmp	.+56     	; 0x1594 <_Z8automodev+0x108>
    155c:	13 30       	cpi	r17, 0x03	; 3
    155e:	81 f0       	breq	.+32     	; 0x1580 <_Z8automodev+0xf4>
    1560:	14 30       	cpi	r17, 0x04	; 4
    1562:	a9 f0       	breq	.+42     	; 0x158e <_Z8automodev+0x102>
    1564:	17 c0       	rjmp	.+46     	; 0x1594 <_Z8automodev+0x108>
			case 0: lcdpos=1; lcddataRead[pos]=prevnum; break;
    1566:	f6 01       	movw	r30, r12
    1568:	60 83       	st	Z, r22
    156a:	ff 24       	eor	r15, r15
    156c:	f3 94       	inc	r15
    156e:	12 c0       	rjmp	.+36     	; 0x1594 <_Z8automodev+0x108>
			case 1: lcdpos=2; lcddataRead[pos]=prevnum; break;
    1570:	f6 01       	movw	r30, r12
    1572:	61 83       	std	Z+1, r22	; 0x01
    1574:	fb 2c       	mov	r15, r11
    1576:	0e c0       	rjmp	.+28     	; 0x1594 <_Z8automodev+0x108>
			case 2: lcdpos=4; lcddataRead[pos]=prevnum; break;
    1578:	f6 01       	movw	r30, r12
    157a:	62 83       	std	Z+2, r22	; 0x02
    157c:	f9 2c       	mov	r15, r9
    157e:	0a c0       	rjmp	.+20     	; 0x1594 <_Z8automodev+0x108>
			case 3: lcdpos=10; lcddataRead[pos]=prevnum; break;
    1580:	f6 01       	movw	r30, r12
    1582:	63 83       	std	Z+3, r22	; 0x03
    1584:	0f 2e       	mov	r0, r31
    1586:	fa e0       	ldi	r31, 0x0A	; 10
    1588:	ff 2e       	mov	r15, r31
    158a:	f0 2d       	mov	r31, r0
    158c:	03 c0       	rjmp	.+6      	; 0x1594 <_Z8automodev+0x108>
			case 4: lcdpos=11; lcddataRead[pos]=prevnum; break;
    158e:	f6 01       	movw	r30, r12
    1590:	64 83       	std	Z+4, r22	; 0x04
    1592:	fa 2c       	mov	r15, r10
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
    1594:	4a e0       	ldi	r20, 0x0A	; 10
    1596:	be 01       	movw	r22, r28
    1598:	6f 5f       	subi	r22, 0xFF	; 255
    159a:	7f 4f       	sbci	r23, 0xFF	; 255
    159c:	80 2f       	mov	r24, r16
    159e:	90 e0       	ldi	r25, 0x00	; 0
    15a0:	0e 94 c1 14 	call	0x2982	; 0x2982 <__itoa_ncheck>
		}
		
		
		
		LcdSetCursor(lcdpos,1,itoa(adcread,adcRead0,10));
    15a4:	ac 01       	movw	r20, r24
    15a6:	61 e0       	ldi	r22, 0x01	; 1
    15a8:	8f 2d       	mov	r24, r15
    15aa:	0e 94 b5 01 	call	0x36a	; 0x36a <_Z12LcdSetCursorhhPc>
		LcdSetCursor(lcdpos,1,"");
    15ae:	40 e7       	ldi	r20, 0x70	; 112
    15b0:	51 e0       	ldi	r21, 0x01	; 1
    15b2:	61 e0       	ldi	r22, 0x01	; 1
    15b4:	8f 2d       	mov	r24, r15
    15b6:	0e 94 b5 01 	call	0x36a	; 0x36a <_Z12LcdSetCursorhhPc>
    15ba:	ff ef       	ldi	r31, 0xFF	; 255
    15bc:	20 e7       	ldi	r18, 0x70	; 112
    15be:	82 e0       	ldi	r24, 0x02	; 2
    15c0:	f1 50       	subi	r31, 0x01	; 1
    15c2:	20 40       	sbci	r18, 0x00	; 0
    15c4:	80 40       	sbci	r24, 0x00	; 0
    15c6:	e1 f7       	brne	.-8      	; 0x15c0 <_Z8automodev+0x134>
    15c8:	00 c0       	rjmp	.+0      	; 0x15ca <_Z8automodev+0x13e>
    15ca:	00 00       	nop
	}
		
		
	
	
	if (ReadADC(1)<50)
    15cc:	81 e0       	ldi	r24, 0x01	; 1
    15ce:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <_Z7ReadADCh>
    15d2:	c2 97       	sbiw	r24, 0x32	; 50
    15d4:	08 f0       	brcs	.+2      	; 0x15d8 <_Z8automodev+0x14c>
    15d6:	44 c0       	rjmp	.+136    	; 0x1660 <_Z8automodev+0x1d4>
	{
		if (pos==0)
    15d8:	11 23       	and	r17, r17
    15da:	71 f0       	breq	.+28     	; 0x15f8 <_Z8automodev+0x16c>
		{pos=0;
		}
		else{
		pos--;
    15dc:	11 50       	subi	r17, 0x01	; 1
		}
		switch(pos){
    15de:	12 30       	cpi	r17, 0x02	; 2
    15e0:	a9 f0       	breq	.+42     	; 0x160c <_Z8automodev+0x180>
    15e2:	28 f4       	brcc	.+10     	; 0x15ee <_Z8automodev+0x162>
    15e4:	11 23       	and	r17, r17
    15e6:	41 f0       	breq	.+16     	; 0x15f8 <_Z8automodev+0x16c>
    15e8:	11 30       	cpi	r17, 0x01	; 1
    15ea:	61 f0       	breq	.+24     	; 0x1604 <_Z8automodev+0x178>
    15ec:	1d c0       	rjmp	.+58     	; 0x1628 <_Z8automodev+0x19c>
    15ee:	13 30       	cpi	r17, 0x03	; 3
    15f0:	89 f0       	breq	.+34     	; 0x1614 <_Z8automodev+0x188>
    15f2:	14 30       	cpi	r17, 0x04	; 4
    15f4:	b1 f0       	breq	.+44     	; 0x1622 <_Z8automodev+0x196>
    15f6:	18 c0       	rjmp	.+48     	; 0x1628 <_Z8automodev+0x19c>
			case 0: lcdpos=1; lcddataRead[pos]=prevnum; break;
    15f8:	f6 01       	movw	r30, r12
    15fa:	00 83       	st	Z, r16
    15fc:	10 e0       	ldi	r17, 0x00	; 0
    15fe:	ff 24       	eor	r15, r15
    1600:	f3 94       	inc	r15
    1602:	12 c0       	rjmp	.+36     	; 0x1628 <_Z8automodev+0x19c>
			case 1: lcdpos=2; lcddataRead[pos]=prevnum; break;
    1604:	f6 01       	movw	r30, r12
    1606:	01 83       	std	Z+1, r16	; 0x01
    1608:	fb 2c       	mov	r15, r11
    160a:	0e c0       	rjmp	.+28     	; 0x1628 <_Z8automodev+0x19c>
			case 2: lcdpos=4; lcddataRead[pos]=prevnum; break;
    160c:	f6 01       	movw	r30, r12
    160e:	02 83       	std	Z+2, r16	; 0x02
    1610:	f9 2c       	mov	r15, r9
    1612:	0a c0       	rjmp	.+20     	; 0x1628 <_Z8automodev+0x19c>
			case 3: lcdpos=10; lcddataRead[pos]=prevnum; break;
    1614:	f6 01       	movw	r30, r12
    1616:	03 83       	std	Z+3, r16	; 0x03
    1618:	0f 2e       	mov	r0, r31
    161a:	fa e0       	ldi	r31, 0x0A	; 10
    161c:	ff 2e       	mov	r15, r31
    161e:	f0 2d       	mov	r31, r0
    1620:	03 c0       	rjmp	.+6      	; 0x1628 <_Z8automodev+0x19c>
			case 4: lcdpos=11; lcddataRead[pos]=prevnum; break;
    1622:	f6 01       	movw	r30, r12
    1624:	04 83       	std	Z+4, r16	; 0x04
    1626:	fa 2c       	mov	r15, r10
    1628:	4a e0       	ldi	r20, 0x0A	; 10
    162a:	be 01       	movw	r22, r28
    162c:	6f 5f       	subi	r22, 0xFF	; 255
    162e:	7f 4f       	sbci	r23, 0xFF	; 255
    1630:	80 2f       	mov	r24, r16
    1632:	90 e0       	ldi	r25, 0x00	; 0
    1634:	0e 94 c1 14 	call	0x2982	; 0x2982 <__itoa_ncheck>
		}
		LcdSetCursor(lcdpos,1,itoa(adcread,adcRead0,10));
    1638:	ac 01       	movw	r20, r24
    163a:	61 e0       	ldi	r22, 0x01	; 1
    163c:	8f 2d       	mov	r24, r15
    163e:	0e 94 b5 01 	call	0x36a	; 0x36a <_Z12LcdSetCursorhhPc>
		LcdSetCursor(lcdpos,1,"");
    1642:	40 e7       	ldi	r20, 0x70	; 112
    1644:	51 e0       	ldi	r21, 0x01	; 1
    1646:	61 e0       	ldi	r22, 0x01	; 1
    1648:	8f 2d       	mov	r24, r15
    164a:	0e 94 b5 01 	call	0x36a	; 0x36a <_Z12LcdSetCursorhhPc>
    164e:	ff ef       	ldi	r31, 0xFF	; 255
    1650:	24 e3       	ldi	r18, 0x34	; 52
    1652:	8c e0       	ldi	r24, 0x0C	; 12
    1654:	f1 50       	subi	r31, 0x01	; 1
    1656:	20 40       	sbci	r18, 0x00	; 0
    1658:	80 40       	sbci	r24, 0x00	; 0
    165a:	e1 f7       	brne	.-8      	; 0x1654 <_Z8automodev+0x1c8>
    165c:	00 c0       	rjmp	.+0      	; 0x165e <_Z8automodev+0x1d2>
    165e:	00 00       	nop
		_delay_ms(500);
	}
	
	if (ReadADC(1)>1000)
    1660:	81 e0       	ldi	r24, 0x01	; 1
    1662:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <_Z7ReadADCh>
    1666:	89 3e       	cpi	r24, 0xE9	; 233
    1668:	93 40       	sbci	r25, 0x03	; 3
    166a:	08 f4       	brcc	.+2      	; 0x166e <_Z8automodev+0x1e2>
    166c:	58 cf       	rjmp	.-336    	; 0x151e <_Z8automodev+0x92>
	{
		if (pos==4)
    166e:	14 30       	cpi	r17, 0x04	; 4
    1670:	11 f1       	breq	.+68     	; 0x16b6 <_Z8automodev+0x22a>
		{pos=4;
		}
		else{
			pos++;
    1672:	1f 5f       	subi	r17, 0xFF	; 255
		}
		switch(pos){
    1674:	12 30       	cpi	r17, 0x02	; 2
    1676:	a1 f0       	breq	.+40     	; 0x16a0 <_Z8automodev+0x214>
    1678:	28 f4       	brcc	.+10     	; 0x1684 <_Z8automodev+0x1f8>
    167a:	11 23       	and	r17, r17
    167c:	41 f0       	breq	.+16     	; 0x168e <_Z8automodev+0x202>
    167e:	11 30       	cpi	r17, 0x01	; 1
    1680:	59 f0       	breq	.+22     	; 0x1698 <_Z8automodev+0x20c>
    1682:	1d c0       	rjmp	.+58     	; 0x16be <_Z8automodev+0x232>
    1684:	13 30       	cpi	r17, 0x03	; 3
    1686:	81 f0       	breq	.+32     	; 0x16a8 <_Z8automodev+0x21c>
    1688:	14 30       	cpi	r17, 0x04	; 4
    168a:	c9 f4       	brne	.+50     	; 0x16be <_Z8automodev+0x232>
    168c:	14 c0       	rjmp	.+40     	; 0x16b6 <_Z8automodev+0x22a>
			case 0: lcdpos=1; lcddataRead[pos]=prevnum; break;
    168e:	f6 01       	movw	r30, r12
    1690:	00 83       	st	Z, r16
    1692:	ff 24       	eor	r15, r15
    1694:	f3 94       	inc	r15
    1696:	13 c0       	rjmp	.+38     	; 0x16be <_Z8automodev+0x232>
			case 1: lcdpos=2; lcddataRead[pos]=prevnum; break;
    1698:	f6 01       	movw	r30, r12
    169a:	01 83       	std	Z+1, r16	; 0x01
    169c:	fb 2c       	mov	r15, r11
    169e:	0f c0       	rjmp	.+30     	; 0x16be <_Z8automodev+0x232>
			case 2: lcdpos=4; lcddataRead[pos]=prevnum; break;
    16a0:	f6 01       	movw	r30, r12
    16a2:	02 83       	std	Z+2, r16	; 0x02
    16a4:	f9 2c       	mov	r15, r9
    16a6:	0b c0       	rjmp	.+22     	; 0x16be <_Z8automodev+0x232>
			case 3: lcdpos=10; lcddataRead[pos]=prevnum; break;
    16a8:	f6 01       	movw	r30, r12
    16aa:	03 83       	std	Z+3, r16	; 0x03
    16ac:	0f 2e       	mov	r0, r31
    16ae:	fa e0       	ldi	r31, 0x0A	; 10
    16b0:	ff 2e       	mov	r15, r31
    16b2:	f0 2d       	mov	r31, r0
    16b4:	04 c0       	rjmp	.+8      	; 0x16be <_Z8automodev+0x232>
			case 4: lcdpos=11; lcddataRead[pos]=prevnum; break;
    16b6:	f6 01       	movw	r30, r12
    16b8:	04 83       	std	Z+4, r16	; 0x04
    16ba:	14 e0       	ldi	r17, 0x04	; 4
    16bc:	fa 2c       	mov	r15, r10
    16be:	4a e0       	ldi	r20, 0x0A	; 10
    16c0:	be 01       	movw	r22, r28
    16c2:	6f 5f       	subi	r22, 0xFF	; 255
    16c4:	7f 4f       	sbci	r23, 0xFF	; 255
    16c6:	80 2f       	mov	r24, r16
    16c8:	90 e0       	ldi	r25, 0x00	; 0
    16ca:	0e 94 c1 14 	call	0x2982	; 0x2982 <__itoa_ncheck>
		}
		LcdSetCursor(lcdpos,1,itoa(adcread,adcRead0,10));
    16ce:	ac 01       	movw	r20, r24
    16d0:	61 e0       	ldi	r22, 0x01	; 1
    16d2:	8f 2d       	mov	r24, r15
    16d4:	0e 94 b5 01 	call	0x36a	; 0x36a <_Z12LcdSetCursorhhPc>
		LcdSetCursor(lcdpos,1,"");
    16d8:	40 e7       	ldi	r20, 0x70	; 112
    16da:	51 e0       	ldi	r21, 0x01	; 1
    16dc:	61 e0       	ldi	r22, 0x01	; 1
    16de:	8f 2d       	mov	r24, r15
    16e0:	0e 94 b5 01 	call	0x36a	; 0x36a <_Z12LcdSetCursorhhPc>
    16e4:	ff ef       	ldi	r31, 0xFF	; 255
    16e6:	24 e3       	ldi	r18, 0x34	; 52
    16e8:	8c e0       	ldi	r24, 0x0C	; 12
    16ea:	f1 50       	subi	r31, 0x01	; 1
    16ec:	20 40       	sbci	r18, 0x00	; 0
    16ee:	80 40       	sbci	r24, 0x00	; 0
    16f0:	e1 f7       	brne	.-8      	; 0x16ea <_Z8automodev+0x25e>
    16f2:	00 c0       	rjmp	.+0      	; 0x16f4 <_Z8automodev+0x268>
    16f4:	00 00       	nop
    16f6:	13 cf       	rjmp	.-474    	; 0x151e <_Z8automodev+0x92>
	}
	
	
	
	}
	float templcd=lcddataRead[2];
    16f8:	0a e8       	ldi	r16, 0x8A	; 138
    16fa:	11 e0       	ldi	r17, 0x01	; 1
    16fc:	f8 01       	movw	r30, r16
    16fe:	62 81       	ldd	r22, Z+2	; 0x02
    1700:	70 e0       	ldi	r23, 0x00	; 0
    1702:	80 e0       	ldi	r24, 0x00	; 0
    1704:	90 e0       	ldi	r25, 0x00	; 0
    1706:	0e 94 24 0e 	call	0x1c48	; 0x1c48 <__floatunsisf>
    170a:	6b 01       	movw	r12, r22
    170c:	7c 01       	movw	r14, r24
	count=((lcddataRead[3])*10)+(lcddataRead[4]);
    170e:	f8 01       	movw	r30, r16
    1710:	83 81       	ldd	r24, Z+3	; 0x03
    1712:	90 e0       	ldi	r25, 0x00	; 0
    1714:	9c 01       	movw	r18, r24
    1716:	22 0f       	add	r18, r18
    1718:	33 1f       	adc	r19, r19
    171a:	88 0f       	add	r24, r24
    171c:	99 1f       	adc	r25, r25
    171e:	88 0f       	add	r24, r24
    1720:	99 1f       	adc	r25, r25
    1722:	88 0f       	add	r24, r24
    1724:	99 1f       	adc	r25, r25
    1726:	82 0f       	add	r24, r18
    1728:	93 1f       	adc	r25, r19
    172a:	24 81       	ldd	r18, Z+4	; 0x04
    172c:	82 0f       	add	r24, r18
    172e:	91 1d       	adc	r25, r1
    1730:	90 93 90 01 	sts	0x0190, r25	; 0x800190 <count+0x1>
    1734:	80 93 8f 01 	sts	0x018F, r24	; 0x80018f <count>
	length=(lcddataRead[0]*10)+(lcddataRead[1]);
	length+=templcd/10;
    1738:	80 81       	ld	r24, Z
    173a:	90 e0       	ldi	r25, 0x00	; 0
    173c:	bc 01       	movw	r22, r24
    173e:	66 0f       	add	r22, r22
    1740:	77 1f       	adc	r23, r23
    1742:	88 0f       	add	r24, r24
    1744:	99 1f       	adc	r25, r25
    1746:	88 0f       	add	r24, r24
    1748:	99 1f       	adc	r25, r25
    174a:	88 0f       	add	r24, r24
    174c:	99 1f       	adc	r25, r25
    174e:	68 0f       	add	r22, r24
    1750:	79 1f       	adc	r23, r25
    1752:	81 81       	ldd	r24, Z+1	; 0x01
    1754:	68 0f       	add	r22, r24
    1756:	71 1d       	adc	r23, r1
    1758:	07 2e       	mov	r0, r23
    175a:	00 0c       	add	r0, r0
    175c:	88 0b       	sbc	r24, r24
    175e:	99 0b       	sbc	r25, r25
    1760:	0e 94 26 0e 	call	0x1c4c	; 0x1c4c <__floatsisf>
    1764:	4b 01       	movw	r8, r22
    1766:	5c 01       	movw	r10, r24
    1768:	20 e0       	ldi	r18, 0x00	; 0
    176a:	30 e0       	ldi	r19, 0x00	; 0
    176c:	40 e2       	ldi	r20, 0x20	; 32
    176e:	51 e4       	ldi	r21, 0x41	; 65
    1770:	c7 01       	movw	r24, r14
    1772:	b6 01       	movw	r22, r12
    1774:	0e 94 7c 0d 	call	0x1af8	; 0x1af8 <__divsf3>
    1778:	9b 01       	movw	r18, r22
    177a:	ac 01       	movw	r20, r24
    177c:	c5 01       	movw	r24, r10
    177e:	b4 01       	movw	r22, r8
    1780:	0e 94 10 0d 	call	0x1a20	; 0x1a20 <__addsf3>
    1784:	60 93 91 01 	sts	0x0191, r22	; 0x800191 <length>
    1788:	70 93 92 01 	sts	0x0192, r23	; 0x800192 <length+0x1>
    178c:	80 93 93 01 	sts	0x0193, r24	; 0x800193 <length+0x2>
    1790:	90 93 94 01 	sts	0x0194, r25	; 0x800194 <length+0x3>
	
	LcdCommand(LCD_DISPLAYCONTROL|(LCD_DISPLAYON&~LCD_BLINKON));
    1794:	8c e0       	ldi	r24, 0x0C	; 12
    1796:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <_Z10LcdCommandh>
	LcdCommand(LCD_CLEARDISPLAY);
    179a:	81 e0       	ldi	r24, 0x01	; 1
    179c:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <_Z10LcdCommandh>
	char chacter[16];
	sprintf(chacter,"length %4.1fcm ",length);
    17a0:	80 91 94 01 	lds	r24, 0x0194	; 0x800194 <length+0x3>
    17a4:	8f 93       	push	r24
    17a6:	80 91 93 01 	lds	r24, 0x0193	; 0x800193 <length+0x2>
    17aa:	8f 93       	push	r24
    17ac:	80 91 92 01 	lds	r24, 0x0192	; 0x800192 <length+0x1>
    17b0:	8f 93       	push	r24
    17b2:	80 91 91 01 	lds	r24, 0x0191	; 0x800191 <length>
    17b6:	8f 93       	push	r24
    17b8:	81 e6       	ldi	r24, 0x61	; 97
    17ba:	91 e0       	ldi	r25, 0x01	; 1
    17bc:	9f 93       	push	r25
    17be:	8f 93       	push	r24
    17c0:	8e 01       	movw	r16, r28
    17c2:	0e 5f       	subi	r16, 0xFE	; 254
    17c4:	1f 4f       	sbci	r17, 0xFF	; 255
    17c6:	1f 93       	push	r17
    17c8:	0f 93       	push	r16
    17ca:	0e 94 22 15 	call	0x2a44	; 0x2a44 <sprintf>
	LcdSetCursor(0,0,chacter);
    17ce:	a8 01       	movw	r20, r16
    17d0:	60 e0       	ldi	r22, 0x00	; 0
    17d2:	80 e0       	ldi	r24, 0x00	; 0
    17d4:	0e 94 b5 01 	call	0x36a	; 0x36a <_Z12LcdSetCursorhhPc>
	sprintf(chacter,"count  %d",count);
    17d8:	80 91 90 01 	lds	r24, 0x0190	; 0x800190 <count+0x1>
    17dc:	8f 93       	push	r24
    17de:	80 91 8f 01 	lds	r24, 0x018F	; 0x80018f <count>
    17e2:	8f 93       	push	r24
    17e4:	81 e7       	ldi	r24, 0x71	; 113
    17e6:	91 e0       	ldi	r25, 0x01	; 1
    17e8:	9f 93       	push	r25
    17ea:	8f 93       	push	r24
    17ec:	1f 93       	push	r17
    17ee:	0f 93       	push	r16
    17f0:	0e 94 22 15 	call	0x2a44	; 0x2a44 <sprintf>
	LcdSetCursor(0,1,chacter);
    17f4:	a8 01       	movw	r20, r16
    17f6:	61 e0       	ldi	r22, 0x01	; 1
    17f8:	80 e0       	ldi	r24, 0x00	; 0
    17fa:	0e 94 b5 01 	call	0x36a	; 0x36a <_Z12LcdSetCursorhhPc>
	
}
    17fe:	0f b6       	in	r0, 0x3f	; 63
    1800:	f8 94       	cli
    1802:	de bf       	out	0x3e, r29	; 62
    1804:	0f be       	out	0x3f, r0	; 63
    1806:	cd bf       	out	0x3d, r28	; 61
    1808:	61 96       	adiw	r28, 0x11	; 17
    180a:	0f b6       	in	r0, 0x3f	; 63
    180c:	f8 94       	cli
    180e:	de bf       	out	0x3e, r29	; 62
    1810:	0f be       	out	0x3f, r0	; 63
    1812:	cd bf       	out	0x3d, r28	; 61
    1814:	df 91       	pop	r29
    1816:	cf 91       	pop	r28
    1818:	1f 91       	pop	r17
    181a:	0f 91       	pop	r16
    181c:	ff 90       	pop	r15
    181e:	ef 90       	pop	r14
    1820:	df 90       	pop	r13
    1822:	cf 90       	pop	r12
    1824:	bf 90       	pop	r11
    1826:	af 90       	pop	r10
    1828:	9f 90       	pop	r9
    182a:	8f 90       	pop	r8
    182c:	08 95       	ret

0000182e <main>:


int main(void)
{	setjmp (env);
    182e:	cf 93       	push	r28
    1830:	df 93       	push	r29
    1832:	cd b7       	in	r28, 0x3d	; 61
    1834:	de b7       	in	r29, 0x3e	; 62
    1836:	85 ec       	ldi	r24, 0xC5	; 197
    1838:	91 e0       	ldi	r25, 0x01	; 1
    183a:	0e 94 6a 14 	call	0x28d4	; 0x28d4 <setjmp>
    183e:	8f e1       	ldi	r24, 0x1F	; 31
    1840:	9e e4       	ldi	r25, 0x4E	; 78
    1842:	01 97       	sbiw	r24, 0x01	; 1
    1844:	f1 f7       	brne	.-4      	; 0x1842 <main+0x14>
    1846:	00 c0       	rjmp	.+0      	; 0x1848 <main+0x1a>
    1848:	00 00       	nop
	_delay_ms(10);
	sei();
    184a:	78 94       	sei
	InitADC();
    184c:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <_Z7InitADCv>
	PORTB&=~(1<<3);
    1850:	2b 98       	cbi	0x05, 3	; 5
	USART_Init(9600);
    1852:	80 e8       	ldi	r24, 0x80	; 128
    1854:	95 e2       	ldi	r25, 0x25	; 37
    1856:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <_Z10USART_Initj>
	xaxisInit();
    185a:	0e 94 f5 01 	call	0x3ea	; 0x3ea <_Z9xaxisInitv>
	axisControlInit();
    185e:	0e 94 72 03 	call	0x6e4	; 0x6e4 <_Z15axisControlInitv>
	yaxisInit();
    1862:	0e 94 37 03 	call	0x66e	; 0x66e <_Z9yaxisInitv>
	LcdInit();
    1866:	87 e2       	ldi	r24, 0x27	; 39
    1868:	0e 94 78 01 	call	0x2f0	; 0x2f0 <_Z7LcdInith>
	LcdSetCursor(4,0,"Welcome");
    186c:	4b e7       	ldi	r20, 0x7B	; 123
    186e:	51 e0       	ldi	r21, 0x01	; 1
    1870:	60 e0       	ldi	r22, 0x00	; 0
    1872:	84 e0       	ldi	r24, 0x04	; 4
    1874:	0e 94 b5 01 	call	0x36a	; 0x36a <_Z12LcdSetCursorhhPc>
    1878:	9f ef       	ldi	r25, 0xFF	; 255
    187a:	24 e3       	ldi	r18, 0x34	; 52
    187c:	8c e0       	ldi	r24, 0x0C	; 12
    187e:	91 50       	subi	r25, 0x01	; 1
    1880:	20 40       	sbci	r18, 0x00	; 0
    1882:	80 40       	sbci	r24, 0x00	; 0
    1884:	e1 f7       	brne	.-8      	; 0x187e <main+0x50>
    1886:	00 c0       	rjmp	.+0      	; 0x1888 <main+0x5a>
    1888:	00 00       	nop
	_delay_ms(500);
	go_x(10,-6000);
    188a:	40 e9       	ldi	r20, 0x90	; 144
    188c:	58 ee       	ldi	r21, 0xE8	; 232
    188e:	6f ef       	ldi	r22, 0xFF	; 255
    1890:	7f ef       	ldi	r23, 0xFF	; 255
    1892:	8a e0       	ldi	r24, 0x0A	; 10
    1894:	0e 94 1f 02 	call	0x43e	; 0x43e <_Z4go_xhl>
	
	while(xEnable);
    1898:	80 91 b8 01 	lds	r24, 0x01B8	; 0x8001b8 <xEnable>
    189c:	81 11       	cpse	r24, r1
    189e:	fc cf       	rjmp	.-8      	; 0x1898 <main+0x6a>
    18a0:	8f e1       	ldi	r24, 0x1F	; 31
    18a2:	9e e4       	ldi	r25, 0x4E	; 78
    18a4:	01 97       	sbiw	r24, 0x01	; 1
    18a6:	f1 f7       	brne	.-4      	; 0x18a4 <main+0x76>
    18a8:	00 c0       	rjmp	.+0      	; 0x18aa <main+0x7c>
    18aa:	00 00       	nop
	_delay_ms(10);
	LcdCommand(LCD_CLEARDISPLAY);
    18ac:	81 e0       	ldi	r24, 0x01	; 1
    18ae:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <_Z10LcdCommandh>
	if (Modeselect()==0)// auto
    18b2:	0e 94 11 09 	call	0x1222	; 0x1222 <_Z10Modeselectv>
    18b6:	81 11       	cpse	r24, r1
    18b8:	04 c0       	rjmp	.+8      	; 0x18c2 <main+0x94>
	{	
		automode();
    18ba:	0e 94 46 0a 	call	0x148c	; 0x148c <_Z8automodev>
    18be:	d1 2c       	mov	r13, r1
    18c0:	02 c0       	rjmp	.+4      	; 0x18c6 <main+0x98>
		
	} 
	else
	{
		ManualMode();
    18c2:	0e 94 4d 09 	call	0x129a	; 0x129a <_Z10ManualModev>
	}	
	
	
	for(uint8_t i=0;i<count;i++){
    18c6:	8d 2d       	mov	r24, r13
    18c8:	90 e0       	ldi	r25, 0x00	; 0
    18ca:	20 91 8f 01 	lds	r18, 0x018F	; 0x80018f <count>
    18ce:	30 91 90 01 	lds	r19, 0x0190	; 0x800190 <count+0x1>
    18d2:	82 17       	cp	r24, r18
    18d4:	93 07       	cpc	r25, r19
    18d6:	08 f0       	brcs	.+2      	; 0x18da <main+0xac>
    18d8:	9a c0       	rjmp	.+308    	; 0x1a0e <main+0x1e0>
		go_y(1,0.20,30,length*yrate);
    18da:	20 e0       	ldi	r18, 0x00	; 0
    18dc:	30 e8       	ldi	r19, 0x80	; 128
    18de:	40 e9       	ldi	r20, 0x90	; 144
    18e0:	53 e4       	ldi	r21, 0x43	; 67
    18e2:	60 91 91 01 	lds	r22, 0x0191	; 0x800191 <length>
    18e6:	70 91 92 01 	lds	r23, 0x0192	; 0x800192 <length+0x1>
    18ea:	80 91 93 01 	lds	r24, 0x0193	; 0x800193 <length+0x2>
    18ee:	90 91 94 01 	lds	r25, 0x0194	; 0x800194 <length+0x3>
    18f2:	0e 94 b2 0e 	call	0x1d64	; 0x1d64 <__mulsf3>
    18f6:	0e 94 f5 0d 	call	0x1bea	; 0x1bea <__fixunssfsi>
    18fa:	7b 01       	movw	r14, r22
    18fc:	8c 01       	movw	r16, r24
    18fe:	2e e1       	ldi	r18, 0x1E	; 30
    1900:	4d ec       	ldi	r20, 0xCD	; 205
    1902:	5c ec       	ldi	r21, 0xCC	; 204
    1904:	6c e4       	ldi	r22, 0x4C	; 76
    1906:	7e e3       	ldi	r23, 0x3E	; 62
    1908:	81 e0       	ldi	r24, 0x01	; 1
    190a:	0e 94 84 03 	call	0x708	; 0x708 <_Z4go_ybfhm>
		while(yEnable);
    190e:	80 91 95 01 	lds	r24, 0x0195	; 0x800195 <yEnable>
    1912:	81 11       	cpse	r24, r1
    1914:	fc cf       	rjmp	.-8      	; 0x190e <main+0xe0>
    1916:	8f e1       	ldi	r24, 0x1F	; 31
    1918:	9e e4       	ldi	r25, 0x4E	; 78
    191a:	01 97       	sbiw	r24, 0x01	; 1
    191c:	f1 f7       	brne	.-4      	; 0x191a <main+0xec>
    191e:	00 c0       	rjmp	.+0      	; 0x1920 <main+0xf2>
    1920:	00 00       	nop
		_delay_ms(10);
		go_x(50,1500);
    1922:	4c ed       	ldi	r20, 0xDC	; 220
    1924:	55 e0       	ldi	r21, 0x05	; 5
    1926:	60 e0       	ldi	r22, 0x00	; 0
    1928:	70 e0       	ldi	r23, 0x00	; 0
    192a:	82 e3       	ldi	r24, 0x32	; 50
    192c:	0e 94 1f 02 	call	0x43e	; 0x43e <_Z4go_xhl>
		while(xEnable);
    1930:	80 91 b8 01 	lds	r24, 0x01B8	; 0x8001b8 <xEnable>
    1934:	81 11       	cpse	r24, r1
    1936:	fc cf       	rjmp	.-8      	; 0x1930 <main+0x102>
    1938:	8f e1       	ldi	r24, 0x1F	; 31
    193a:	9e e4       	ldi	r25, 0x4E	; 78
    193c:	01 97       	sbiw	r24, 0x01	; 1
    193e:	f1 f7       	brne	.-4      	; 0x193c <main+0x10e>
    1940:	00 c0       	rjmp	.+0      	; 0x1942 <main+0x114>
    1942:	00 00       	nop
		_delay_ms(10);
		PORTB|=(1<<3);
    1944:	2b 9a       	sbi	0x05, 3	; 5
    1946:	9f ef       	ldi	r25, 0xFF	; 255
    1948:	24 e3       	ldi	r18, 0x34	; 52
    194a:	8c e0       	ldi	r24, 0x0C	; 12
    194c:	91 50       	subi	r25, 0x01	; 1
    194e:	20 40       	sbci	r18, 0x00	; 0
    1950:	80 40       	sbci	r24, 0x00	; 0
    1952:	e1 f7       	brne	.-8      	; 0x194c <main+0x11e>
    1954:	00 c0       	rjmp	.+0      	; 0x1956 <main+0x128>
    1956:	00 00       	nop
		_delay_ms(500);
		go_x(50,3000);
    1958:	48 eb       	ldi	r20, 0xB8	; 184
    195a:	5b e0       	ldi	r21, 0x0B	; 11
    195c:	60 e0       	ldi	r22, 0x00	; 0
    195e:	70 e0       	ldi	r23, 0x00	; 0
    1960:	82 e3       	ldi	r24, 0x32	; 50
    1962:	0e 94 1f 02 	call	0x43e	; 0x43e <_Z4go_xhl>
		while(xEnable);
    1966:	80 91 b8 01 	lds	r24, 0x01B8	; 0x8001b8 <xEnable>
    196a:	81 11       	cpse	r24, r1
    196c:	fc cf       	rjmp	.-8      	; 0x1966 <main+0x138>
    196e:	8f e1       	ldi	r24, 0x1F	; 31
    1970:	9e e4       	ldi	r25, 0x4E	; 78
    1972:	01 97       	sbiw	r24, 0x01	; 1
    1974:	f1 f7       	brne	.-4      	; 0x1972 <main+0x144>
    1976:	00 c0       	rjmp	.+0      	; 0x1978 <main+0x14a>
    1978:	00 00       	nop
		_delay_ms(10);
		PORTB&=~(1<<3);
    197a:	2b 98       	cbi	0x05, 3	; 5
    197c:	9f ef       	ldi	r25, 0xFF	; 255
    197e:	24 e3       	ldi	r18, 0x34	; 52
    1980:	8c e0       	ldi	r24, 0x0C	; 12
    1982:	91 50       	subi	r25, 0x01	; 1
    1984:	20 40       	sbci	r18, 0x00	; 0
    1986:	80 40       	sbci	r24, 0x00	; 0
    1988:	e1 f7       	brne	.-8      	; 0x1982 <main+0x154>
    198a:	00 c0       	rjmp	.+0      	; 0x198c <main+0x15e>
    198c:	00 00       	nop
		_delay_ms(500);
		go_x(50,-2500);
    198e:	4c e3       	ldi	r20, 0x3C	; 60
    1990:	56 ef       	ldi	r21, 0xF6	; 246
    1992:	6f ef       	ldi	r22, 0xFF	; 255
    1994:	7f ef       	ldi	r23, 0xFF	; 255
    1996:	82 e3       	ldi	r24, 0x32	; 50
    1998:	0e 94 1f 02 	call	0x43e	; 0x43e <_Z4go_xhl>
		while(xEnable);
    199c:	80 91 b8 01 	lds	r24, 0x01B8	; 0x8001b8 <xEnable>
    19a0:	81 11       	cpse	r24, r1
    19a2:	fc cf       	rjmp	.-8      	; 0x199c <main+0x16e>
    19a4:	8f e1       	ldi	r24, 0x1F	; 31
    19a6:	9e e4       	ldi	r25, 0x4E	; 78
    19a8:	01 97       	sbiw	r24, 0x01	; 1
    19aa:	f1 f7       	brne	.-4      	; 0x19a8 <main+0x17a>
    19ac:	00 c0       	rjmp	.+0      	; 0x19ae <main+0x180>
    19ae:	00 00       	nop
		_delay_ms(10);
		PORTB|=(1<<3);
    19b0:	2b 9a       	sbi	0x05, 3	; 5
    19b2:	9f ef       	ldi	r25, 0xFF	; 255
    19b4:	24 e3       	ldi	r18, 0x34	; 52
    19b6:	8c e0       	ldi	r24, 0x0C	; 12
    19b8:	91 50       	subi	r25, 0x01	; 1
    19ba:	20 40       	sbci	r18, 0x00	; 0
    19bc:	80 40       	sbci	r24, 0x00	; 0
    19be:	e1 f7       	brne	.-8      	; 0x19b8 <main+0x18a>
    19c0:	00 c0       	rjmp	.+0      	; 0x19c2 <main+0x194>
    19c2:	00 00       	nop
		_delay_ms(500);
		go_x(50,-2000);
    19c4:	40 e3       	ldi	r20, 0x30	; 48
    19c6:	58 ef       	ldi	r21, 0xF8	; 248
    19c8:	6f ef       	ldi	r22, 0xFF	; 255
    19ca:	7f ef       	ldi	r23, 0xFF	; 255
    19cc:	82 e3       	ldi	r24, 0x32	; 50
    19ce:	0e 94 1f 02 	call	0x43e	; 0x43e <_Z4go_xhl>
		while(xEnable);
    19d2:	80 91 b8 01 	lds	r24, 0x01B8	; 0x8001b8 <xEnable>
    19d6:	81 11       	cpse	r24, r1
    19d8:	fc cf       	rjmp	.-8      	; 0x19d2 <main+0x1a4>
    19da:	8f e1       	ldi	r24, 0x1F	; 31
    19dc:	9e e4       	ldi	r25, 0x4E	; 78
    19de:	01 97       	sbiw	r24, 0x01	; 1
    19e0:	f1 f7       	brne	.-4      	; 0x19de <main+0x1b0>
    19e2:	00 c0       	rjmp	.+0      	; 0x19e4 <main+0x1b6>
    19e4:	00 00       	nop
		_delay_ms(10);
		PORTB&=~(1<<3);
    19e6:	2b 98       	cbi	0x05, 3	; 5
    19e8:	9f ef       	ldi	r25, 0xFF	; 255
    19ea:	24 e3       	ldi	r18, 0x34	; 52
    19ec:	8c e0       	ldi	r24, 0x0C	; 12
    19ee:	91 50       	subi	r25, 0x01	; 1
    19f0:	20 40       	sbci	r18, 0x00	; 0
    19f2:	80 40       	sbci	r24, 0x00	; 0
    19f4:	e1 f7       	brne	.-8      	; 0x19ee <main+0x1c0>
    19f6:	00 c0       	rjmp	.+0      	; 0x19f8 <main+0x1ca>
    19f8:	00 00       	nop
		_delay_ms(500);
		if ((PIND&0b1)==0)
    19fa:	48 99       	sbic	0x09, 0	; 9
    19fc:	06 c0       	rjmp	.+12     	; 0x1a0a <main+0x1dc>
		{longjmp (env, 1);
    19fe:	61 e0       	ldi	r22, 0x01	; 1
    1a00:	70 e0       	ldi	r23, 0x00	; 0
    1a02:	85 ec       	ldi	r24, 0xC5	; 197
    1a04:	91 e0       	ldi	r25, 0x01	; 1
    1a06:	0e 94 8a 14 	call	0x2914	; 0x2914 <longjmp>
	{
		ManualMode();
	}	
	
	
	for(uint8_t i=0;i<count;i++){
    1a0a:	d3 94       	inc	r13
    1a0c:	5c cf       	rjmp	.-328    	; 0x18c6 <main+0x98>
	}
	
	
    while (1) 
    {
		if ((PIND&0b1)==0)
    1a0e:	48 99       	sbic	0x09, 0	; 9
    1a10:	fe cf       	rjmp	.-4      	; 0x1a0e <main+0x1e0>
		{longjmp (env, 1);
    1a12:	61 e0       	ldi	r22, 0x01	; 1
    1a14:	70 e0       	ldi	r23, 0x00	; 0
    1a16:	85 ec       	ldi	r24, 0xC5	; 197
    1a18:	91 e0       	ldi	r25, 0x01	; 1
    1a1a:	0e 94 8a 14 	call	0x2914	; 0x2914 <longjmp>

00001a1e <__subsf3>:
    1a1e:	50 58       	subi	r21, 0x80	; 128

00001a20 <__addsf3>:
    1a20:	bb 27       	eor	r27, r27
    1a22:	aa 27       	eor	r26, r26
    1a24:	0e 94 27 0d 	call	0x1a4e	; 0x1a4e <__addsf3x>
    1a28:	0c 94 78 0e 	jmp	0x1cf0	; 0x1cf0 <__fp_round>
    1a2c:	0e 94 6a 0e 	call	0x1cd4	; 0x1cd4 <__fp_pscA>
    1a30:	38 f0       	brcs	.+14     	; 0x1a40 <__addsf3+0x20>
    1a32:	0e 94 71 0e 	call	0x1ce2	; 0x1ce2 <__fp_pscB>
    1a36:	20 f0       	brcs	.+8      	; 0x1a40 <__addsf3+0x20>
    1a38:	39 f4       	brne	.+14     	; 0x1a48 <__addsf3+0x28>
    1a3a:	9f 3f       	cpi	r25, 0xFF	; 255
    1a3c:	19 f4       	brne	.+6      	; 0x1a44 <__addsf3+0x24>
    1a3e:	26 f4       	brtc	.+8      	; 0x1a48 <__addsf3+0x28>
    1a40:	0c 94 67 0e 	jmp	0x1cce	; 0x1cce <__fp_nan>
    1a44:	0e f4       	brtc	.+2      	; 0x1a48 <__addsf3+0x28>
    1a46:	e0 95       	com	r30
    1a48:	e7 fb       	bst	r30, 7
    1a4a:	0c 94 61 0e 	jmp	0x1cc2	; 0x1cc2 <__fp_inf>

00001a4e <__addsf3x>:
    1a4e:	e9 2f       	mov	r30, r25
    1a50:	0e 94 89 0e 	call	0x1d12	; 0x1d12 <__fp_split3>
    1a54:	58 f3       	brcs	.-42     	; 0x1a2c <__addsf3+0xc>
    1a56:	ba 17       	cp	r27, r26
    1a58:	62 07       	cpc	r22, r18
    1a5a:	73 07       	cpc	r23, r19
    1a5c:	84 07       	cpc	r24, r20
    1a5e:	95 07       	cpc	r25, r21
    1a60:	20 f0       	brcs	.+8      	; 0x1a6a <__addsf3x+0x1c>
    1a62:	79 f4       	brne	.+30     	; 0x1a82 <__addsf3x+0x34>
    1a64:	a6 f5       	brtc	.+104    	; 0x1ace <__addsf3x+0x80>
    1a66:	0c 94 ab 0e 	jmp	0x1d56	; 0x1d56 <__fp_zero>
    1a6a:	0e f4       	brtc	.+2      	; 0x1a6e <__addsf3x+0x20>
    1a6c:	e0 95       	com	r30
    1a6e:	0b 2e       	mov	r0, r27
    1a70:	ba 2f       	mov	r27, r26
    1a72:	a0 2d       	mov	r26, r0
    1a74:	0b 01       	movw	r0, r22
    1a76:	b9 01       	movw	r22, r18
    1a78:	90 01       	movw	r18, r0
    1a7a:	0c 01       	movw	r0, r24
    1a7c:	ca 01       	movw	r24, r20
    1a7e:	a0 01       	movw	r20, r0
    1a80:	11 24       	eor	r1, r1
    1a82:	ff 27       	eor	r31, r31
    1a84:	59 1b       	sub	r21, r25
    1a86:	99 f0       	breq	.+38     	; 0x1aae <__addsf3x+0x60>
    1a88:	59 3f       	cpi	r21, 0xF9	; 249
    1a8a:	50 f4       	brcc	.+20     	; 0x1aa0 <__addsf3x+0x52>
    1a8c:	50 3e       	cpi	r21, 0xE0	; 224
    1a8e:	68 f1       	brcs	.+90     	; 0x1aea <__addsf3x+0x9c>
    1a90:	1a 16       	cp	r1, r26
    1a92:	f0 40       	sbci	r31, 0x00	; 0
    1a94:	a2 2f       	mov	r26, r18
    1a96:	23 2f       	mov	r18, r19
    1a98:	34 2f       	mov	r19, r20
    1a9a:	44 27       	eor	r20, r20
    1a9c:	58 5f       	subi	r21, 0xF8	; 248
    1a9e:	f3 cf       	rjmp	.-26     	; 0x1a86 <__addsf3x+0x38>
    1aa0:	46 95       	lsr	r20
    1aa2:	37 95       	ror	r19
    1aa4:	27 95       	ror	r18
    1aa6:	a7 95       	ror	r26
    1aa8:	f0 40       	sbci	r31, 0x00	; 0
    1aaa:	53 95       	inc	r21
    1aac:	c9 f7       	brne	.-14     	; 0x1aa0 <__addsf3x+0x52>
    1aae:	7e f4       	brtc	.+30     	; 0x1ace <__addsf3x+0x80>
    1ab0:	1f 16       	cp	r1, r31
    1ab2:	ba 0b       	sbc	r27, r26
    1ab4:	62 0b       	sbc	r22, r18
    1ab6:	73 0b       	sbc	r23, r19
    1ab8:	84 0b       	sbc	r24, r20
    1aba:	ba f0       	brmi	.+46     	; 0x1aea <__addsf3x+0x9c>
    1abc:	91 50       	subi	r25, 0x01	; 1
    1abe:	a1 f0       	breq	.+40     	; 0x1ae8 <__addsf3x+0x9a>
    1ac0:	ff 0f       	add	r31, r31
    1ac2:	bb 1f       	adc	r27, r27
    1ac4:	66 1f       	adc	r22, r22
    1ac6:	77 1f       	adc	r23, r23
    1ac8:	88 1f       	adc	r24, r24
    1aca:	c2 f7       	brpl	.-16     	; 0x1abc <__addsf3x+0x6e>
    1acc:	0e c0       	rjmp	.+28     	; 0x1aea <__addsf3x+0x9c>
    1ace:	ba 0f       	add	r27, r26
    1ad0:	62 1f       	adc	r22, r18
    1ad2:	73 1f       	adc	r23, r19
    1ad4:	84 1f       	adc	r24, r20
    1ad6:	48 f4       	brcc	.+18     	; 0x1aea <__addsf3x+0x9c>
    1ad8:	87 95       	ror	r24
    1ada:	77 95       	ror	r23
    1adc:	67 95       	ror	r22
    1ade:	b7 95       	ror	r27
    1ae0:	f7 95       	ror	r31
    1ae2:	9e 3f       	cpi	r25, 0xFE	; 254
    1ae4:	08 f0       	brcs	.+2      	; 0x1ae8 <__addsf3x+0x9a>
    1ae6:	b0 cf       	rjmp	.-160    	; 0x1a48 <__addsf3+0x28>
    1ae8:	93 95       	inc	r25
    1aea:	88 0f       	add	r24, r24
    1aec:	08 f0       	brcs	.+2      	; 0x1af0 <__addsf3x+0xa2>
    1aee:	99 27       	eor	r25, r25
    1af0:	ee 0f       	add	r30, r30
    1af2:	97 95       	ror	r25
    1af4:	87 95       	ror	r24
    1af6:	08 95       	ret

00001af8 <__divsf3>:
    1af8:	0e 94 90 0d 	call	0x1b20	; 0x1b20 <__divsf3x>
    1afc:	0c 94 78 0e 	jmp	0x1cf0	; 0x1cf0 <__fp_round>
    1b00:	0e 94 71 0e 	call	0x1ce2	; 0x1ce2 <__fp_pscB>
    1b04:	58 f0       	brcs	.+22     	; 0x1b1c <__divsf3+0x24>
    1b06:	0e 94 6a 0e 	call	0x1cd4	; 0x1cd4 <__fp_pscA>
    1b0a:	40 f0       	brcs	.+16     	; 0x1b1c <__divsf3+0x24>
    1b0c:	29 f4       	brne	.+10     	; 0x1b18 <__divsf3+0x20>
    1b0e:	5f 3f       	cpi	r21, 0xFF	; 255
    1b10:	29 f0       	breq	.+10     	; 0x1b1c <__divsf3+0x24>
    1b12:	0c 94 61 0e 	jmp	0x1cc2	; 0x1cc2 <__fp_inf>
    1b16:	51 11       	cpse	r21, r1
    1b18:	0c 94 ac 0e 	jmp	0x1d58	; 0x1d58 <__fp_szero>
    1b1c:	0c 94 67 0e 	jmp	0x1cce	; 0x1cce <__fp_nan>

00001b20 <__divsf3x>:
    1b20:	0e 94 89 0e 	call	0x1d12	; 0x1d12 <__fp_split3>
    1b24:	68 f3       	brcs	.-38     	; 0x1b00 <__divsf3+0x8>

00001b26 <__divsf3_pse>:
    1b26:	99 23       	and	r25, r25
    1b28:	b1 f3       	breq	.-20     	; 0x1b16 <__divsf3+0x1e>
    1b2a:	55 23       	and	r21, r21
    1b2c:	91 f3       	breq	.-28     	; 0x1b12 <__divsf3+0x1a>
    1b2e:	95 1b       	sub	r25, r21
    1b30:	55 0b       	sbc	r21, r21
    1b32:	bb 27       	eor	r27, r27
    1b34:	aa 27       	eor	r26, r26
    1b36:	62 17       	cp	r22, r18
    1b38:	73 07       	cpc	r23, r19
    1b3a:	84 07       	cpc	r24, r20
    1b3c:	38 f0       	brcs	.+14     	; 0x1b4c <__divsf3_pse+0x26>
    1b3e:	9f 5f       	subi	r25, 0xFF	; 255
    1b40:	5f 4f       	sbci	r21, 0xFF	; 255
    1b42:	22 0f       	add	r18, r18
    1b44:	33 1f       	adc	r19, r19
    1b46:	44 1f       	adc	r20, r20
    1b48:	aa 1f       	adc	r26, r26
    1b4a:	a9 f3       	breq	.-22     	; 0x1b36 <__divsf3_pse+0x10>
    1b4c:	35 d0       	rcall	.+106    	; 0x1bb8 <__divsf3_pse+0x92>
    1b4e:	0e 2e       	mov	r0, r30
    1b50:	3a f0       	brmi	.+14     	; 0x1b60 <__divsf3_pse+0x3a>
    1b52:	e0 e8       	ldi	r30, 0x80	; 128
    1b54:	32 d0       	rcall	.+100    	; 0x1bba <__divsf3_pse+0x94>
    1b56:	91 50       	subi	r25, 0x01	; 1
    1b58:	50 40       	sbci	r21, 0x00	; 0
    1b5a:	e6 95       	lsr	r30
    1b5c:	00 1c       	adc	r0, r0
    1b5e:	ca f7       	brpl	.-14     	; 0x1b52 <__divsf3_pse+0x2c>
    1b60:	2b d0       	rcall	.+86     	; 0x1bb8 <__divsf3_pse+0x92>
    1b62:	fe 2f       	mov	r31, r30
    1b64:	29 d0       	rcall	.+82     	; 0x1bb8 <__divsf3_pse+0x92>
    1b66:	66 0f       	add	r22, r22
    1b68:	77 1f       	adc	r23, r23
    1b6a:	88 1f       	adc	r24, r24
    1b6c:	bb 1f       	adc	r27, r27
    1b6e:	26 17       	cp	r18, r22
    1b70:	37 07       	cpc	r19, r23
    1b72:	48 07       	cpc	r20, r24
    1b74:	ab 07       	cpc	r26, r27
    1b76:	b0 e8       	ldi	r27, 0x80	; 128
    1b78:	09 f0       	breq	.+2      	; 0x1b7c <__divsf3_pse+0x56>
    1b7a:	bb 0b       	sbc	r27, r27
    1b7c:	80 2d       	mov	r24, r0
    1b7e:	bf 01       	movw	r22, r30
    1b80:	ff 27       	eor	r31, r31
    1b82:	93 58       	subi	r25, 0x83	; 131
    1b84:	5f 4f       	sbci	r21, 0xFF	; 255
    1b86:	3a f0       	brmi	.+14     	; 0x1b96 <__divsf3_pse+0x70>
    1b88:	9e 3f       	cpi	r25, 0xFE	; 254
    1b8a:	51 05       	cpc	r21, r1
    1b8c:	78 f0       	brcs	.+30     	; 0x1bac <__divsf3_pse+0x86>
    1b8e:	0c 94 61 0e 	jmp	0x1cc2	; 0x1cc2 <__fp_inf>
    1b92:	0c 94 ac 0e 	jmp	0x1d58	; 0x1d58 <__fp_szero>
    1b96:	5f 3f       	cpi	r21, 0xFF	; 255
    1b98:	e4 f3       	brlt	.-8      	; 0x1b92 <__divsf3_pse+0x6c>
    1b9a:	98 3e       	cpi	r25, 0xE8	; 232
    1b9c:	d4 f3       	brlt	.-12     	; 0x1b92 <__divsf3_pse+0x6c>
    1b9e:	86 95       	lsr	r24
    1ba0:	77 95       	ror	r23
    1ba2:	67 95       	ror	r22
    1ba4:	b7 95       	ror	r27
    1ba6:	f7 95       	ror	r31
    1ba8:	9f 5f       	subi	r25, 0xFF	; 255
    1baa:	c9 f7       	brne	.-14     	; 0x1b9e <__divsf3_pse+0x78>
    1bac:	88 0f       	add	r24, r24
    1bae:	91 1d       	adc	r25, r1
    1bb0:	96 95       	lsr	r25
    1bb2:	87 95       	ror	r24
    1bb4:	97 f9       	bld	r25, 7
    1bb6:	08 95       	ret
    1bb8:	e1 e0       	ldi	r30, 0x01	; 1
    1bba:	66 0f       	add	r22, r22
    1bbc:	77 1f       	adc	r23, r23
    1bbe:	88 1f       	adc	r24, r24
    1bc0:	bb 1f       	adc	r27, r27
    1bc2:	62 17       	cp	r22, r18
    1bc4:	73 07       	cpc	r23, r19
    1bc6:	84 07       	cpc	r24, r20
    1bc8:	ba 07       	cpc	r27, r26
    1bca:	20 f0       	brcs	.+8      	; 0x1bd4 <__divsf3_pse+0xae>
    1bcc:	62 1b       	sub	r22, r18
    1bce:	73 0b       	sbc	r23, r19
    1bd0:	84 0b       	sbc	r24, r20
    1bd2:	ba 0b       	sbc	r27, r26
    1bd4:	ee 1f       	adc	r30, r30
    1bd6:	88 f7       	brcc	.-30     	; 0x1bba <__divsf3_pse+0x94>
    1bd8:	e0 95       	com	r30
    1bda:	08 95       	ret

00001bdc <__fixsfsi>:
    1bdc:	0e 94 f5 0d 	call	0x1bea	; 0x1bea <__fixunssfsi>
    1be0:	68 94       	set
    1be2:	b1 11       	cpse	r27, r1
    1be4:	0c 94 ac 0e 	jmp	0x1d58	; 0x1d58 <__fp_szero>
    1be8:	08 95       	ret

00001bea <__fixunssfsi>:
    1bea:	0e 94 91 0e 	call	0x1d22	; 0x1d22 <__fp_splitA>
    1bee:	88 f0       	brcs	.+34     	; 0x1c12 <__fixunssfsi+0x28>
    1bf0:	9f 57       	subi	r25, 0x7F	; 127
    1bf2:	98 f0       	brcs	.+38     	; 0x1c1a <__fixunssfsi+0x30>
    1bf4:	b9 2f       	mov	r27, r25
    1bf6:	99 27       	eor	r25, r25
    1bf8:	b7 51       	subi	r27, 0x17	; 23
    1bfa:	b0 f0       	brcs	.+44     	; 0x1c28 <__fixunssfsi+0x3e>
    1bfc:	e1 f0       	breq	.+56     	; 0x1c36 <__fixunssfsi+0x4c>
    1bfe:	66 0f       	add	r22, r22
    1c00:	77 1f       	adc	r23, r23
    1c02:	88 1f       	adc	r24, r24
    1c04:	99 1f       	adc	r25, r25
    1c06:	1a f0       	brmi	.+6      	; 0x1c0e <__fixunssfsi+0x24>
    1c08:	ba 95       	dec	r27
    1c0a:	c9 f7       	brne	.-14     	; 0x1bfe <__fixunssfsi+0x14>
    1c0c:	14 c0       	rjmp	.+40     	; 0x1c36 <__fixunssfsi+0x4c>
    1c0e:	b1 30       	cpi	r27, 0x01	; 1
    1c10:	91 f0       	breq	.+36     	; 0x1c36 <__fixunssfsi+0x4c>
    1c12:	0e 94 ab 0e 	call	0x1d56	; 0x1d56 <__fp_zero>
    1c16:	b1 e0       	ldi	r27, 0x01	; 1
    1c18:	08 95       	ret
    1c1a:	0c 94 ab 0e 	jmp	0x1d56	; 0x1d56 <__fp_zero>
    1c1e:	67 2f       	mov	r22, r23
    1c20:	78 2f       	mov	r23, r24
    1c22:	88 27       	eor	r24, r24
    1c24:	b8 5f       	subi	r27, 0xF8	; 248
    1c26:	39 f0       	breq	.+14     	; 0x1c36 <__fixunssfsi+0x4c>
    1c28:	b9 3f       	cpi	r27, 0xF9	; 249
    1c2a:	cc f3       	brlt	.-14     	; 0x1c1e <__fixunssfsi+0x34>
    1c2c:	86 95       	lsr	r24
    1c2e:	77 95       	ror	r23
    1c30:	67 95       	ror	r22
    1c32:	b3 95       	inc	r27
    1c34:	d9 f7       	brne	.-10     	; 0x1c2c <__fixunssfsi+0x42>
    1c36:	3e f4       	brtc	.+14     	; 0x1c46 <__fixunssfsi+0x5c>
    1c38:	90 95       	com	r25
    1c3a:	80 95       	com	r24
    1c3c:	70 95       	com	r23
    1c3e:	61 95       	neg	r22
    1c40:	7f 4f       	sbci	r23, 0xFF	; 255
    1c42:	8f 4f       	sbci	r24, 0xFF	; 255
    1c44:	9f 4f       	sbci	r25, 0xFF	; 255
    1c46:	08 95       	ret

00001c48 <__floatunsisf>:
    1c48:	e8 94       	clt
    1c4a:	09 c0       	rjmp	.+18     	; 0x1c5e <__floatsisf+0x12>

00001c4c <__floatsisf>:
    1c4c:	97 fb       	bst	r25, 7
    1c4e:	3e f4       	brtc	.+14     	; 0x1c5e <__floatsisf+0x12>
    1c50:	90 95       	com	r25
    1c52:	80 95       	com	r24
    1c54:	70 95       	com	r23
    1c56:	61 95       	neg	r22
    1c58:	7f 4f       	sbci	r23, 0xFF	; 255
    1c5a:	8f 4f       	sbci	r24, 0xFF	; 255
    1c5c:	9f 4f       	sbci	r25, 0xFF	; 255
    1c5e:	99 23       	and	r25, r25
    1c60:	a9 f0       	breq	.+42     	; 0x1c8c <__floatsisf+0x40>
    1c62:	f9 2f       	mov	r31, r25
    1c64:	96 e9       	ldi	r25, 0x96	; 150
    1c66:	bb 27       	eor	r27, r27
    1c68:	93 95       	inc	r25
    1c6a:	f6 95       	lsr	r31
    1c6c:	87 95       	ror	r24
    1c6e:	77 95       	ror	r23
    1c70:	67 95       	ror	r22
    1c72:	b7 95       	ror	r27
    1c74:	f1 11       	cpse	r31, r1
    1c76:	f8 cf       	rjmp	.-16     	; 0x1c68 <__floatsisf+0x1c>
    1c78:	fa f4       	brpl	.+62     	; 0x1cb8 <__floatsisf+0x6c>
    1c7a:	bb 0f       	add	r27, r27
    1c7c:	11 f4       	brne	.+4      	; 0x1c82 <__floatsisf+0x36>
    1c7e:	60 ff       	sbrs	r22, 0
    1c80:	1b c0       	rjmp	.+54     	; 0x1cb8 <__floatsisf+0x6c>
    1c82:	6f 5f       	subi	r22, 0xFF	; 255
    1c84:	7f 4f       	sbci	r23, 0xFF	; 255
    1c86:	8f 4f       	sbci	r24, 0xFF	; 255
    1c88:	9f 4f       	sbci	r25, 0xFF	; 255
    1c8a:	16 c0       	rjmp	.+44     	; 0x1cb8 <__floatsisf+0x6c>
    1c8c:	88 23       	and	r24, r24
    1c8e:	11 f0       	breq	.+4      	; 0x1c94 <__floatsisf+0x48>
    1c90:	96 e9       	ldi	r25, 0x96	; 150
    1c92:	11 c0       	rjmp	.+34     	; 0x1cb6 <__floatsisf+0x6a>
    1c94:	77 23       	and	r23, r23
    1c96:	21 f0       	breq	.+8      	; 0x1ca0 <__floatsisf+0x54>
    1c98:	9e e8       	ldi	r25, 0x8E	; 142
    1c9a:	87 2f       	mov	r24, r23
    1c9c:	76 2f       	mov	r23, r22
    1c9e:	05 c0       	rjmp	.+10     	; 0x1caa <__floatsisf+0x5e>
    1ca0:	66 23       	and	r22, r22
    1ca2:	71 f0       	breq	.+28     	; 0x1cc0 <__floatsisf+0x74>
    1ca4:	96 e8       	ldi	r25, 0x86	; 134
    1ca6:	86 2f       	mov	r24, r22
    1ca8:	70 e0       	ldi	r23, 0x00	; 0
    1caa:	60 e0       	ldi	r22, 0x00	; 0
    1cac:	2a f0       	brmi	.+10     	; 0x1cb8 <__floatsisf+0x6c>
    1cae:	9a 95       	dec	r25
    1cb0:	66 0f       	add	r22, r22
    1cb2:	77 1f       	adc	r23, r23
    1cb4:	88 1f       	adc	r24, r24
    1cb6:	da f7       	brpl	.-10     	; 0x1cae <__floatsisf+0x62>
    1cb8:	88 0f       	add	r24, r24
    1cba:	96 95       	lsr	r25
    1cbc:	87 95       	ror	r24
    1cbe:	97 f9       	bld	r25, 7
    1cc0:	08 95       	ret

00001cc2 <__fp_inf>:
    1cc2:	97 f9       	bld	r25, 7
    1cc4:	9f 67       	ori	r25, 0x7F	; 127
    1cc6:	80 e8       	ldi	r24, 0x80	; 128
    1cc8:	70 e0       	ldi	r23, 0x00	; 0
    1cca:	60 e0       	ldi	r22, 0x00	; 0
    1ccc:	08 95       	ret

00001cce <__fp_nan>:
    1cce:	9f ef       	ldi	r25, 0xFF	; 255
    1cd0:	80 ec       	ldi	r24, 0xC0	; 192
    1cd2:	08 95       	ret

00001cd4 <__fp_pscA>:
    1cd4:	00 24       	eor	r0, r0
    1cd6:	0a 94       	dec	r0
    1cd8:	16 16       	cp	r1, r22
    1cda:	17 06       	cpc	r1, r23
    1cdc:	18 06       	cpc	r1, r24
    1cde:	09 06       	cpc	r0, r25
    1ce0:	08 95       	ret

00001ce2 <__fp_pscB>:
    1ce2:	00 24       	eor	r0, r0
    1ce4:	0a 94       	dec	r0
    1ce6:	12 16       	cp	r1, r18
    1ce8:	13 06       	cpc	r1, r19
    1cea:	14 06       	cpc	r1, r20
    1cec:	05 06       	cpc	r0, r21
    1cee:	08 95       	ret

00001cf0 <__fp_round>:
    1cf0:	09 2e       	mov	r0, r25
    1cf2:	03 94       	inc	r0
    1cf4:	00 0c       	add	r0, r0
    1cf6:	11 f4       	brne	.+4      	; 0x1cfc <__fp_round+0xc>
    1cf8:	88 23       	and	r24, r24
    1cfa:	52 f0       	brmi	.+20     	; 0x1d10 <__fp_round+0x20>
    1cfc:	bb 0f       	add	r27, r27
    1cfe:	40 f4       	brcc	.+16     	; 0x1d10 <__fp_round+0x20>
    1d00:	bf 2b       	or	r27, r31
    1d02:	11 f4       	brne	.+4      	; 0x1d08 <__fp_round+0x18>
    1d04:	60 ff       	sbrs	r22, 0
    1d06:	04 c0       	rjmp	.+8      	; 0x1d10 <__fp_round+0x20>
    1d08:	6f 5f       	subi	r22, 0xFF	; 255
    1d0a:	7f 4f       	sbci	r23, 0xFF	; 255
    1d0c:	8f 4f       	sbci	r24, 0xFF	; 255
    1d0e:	9f 4f       	sbci	r25, 0xFF	; 255
    1d10:	08 95       	ret

00001d12 <__fp_split3>:
    1d12:	57 fd       	sbrc	r21, 7
    1d14:	90 58       	subi	r25, 0x80	; 128
    1d16:	44 0f       	add	r20, r20
    1d18:	55 1f       	adc	r21, r21
    1d1a:	59 f0       	breq	.+22     	; 0x1d32 <__fp_splitA+0x10>
    1d1c:	5f 3f       	cpi	r21, 0xFF	; 255
    1d1e:	71 f0       	breq	.+28     	; 0x1d3c <__fp_splitA+0x1a>
    1d20:	47 95       	ror	r20

00001d22 <__fp_splitA>:
    1d22:	88 0f       	add	r24, r24
    1d24:	97 fb       	bst	r25, 7
    1d26:	99 1f       	adc	r25, r25
    1d28:	61 f0       	breq	.+24     	; 0x1d42 <__fp_splitA+0x20>
    1d2a:	9f 3f       	cpi	r25, 0xFF	; 255
    1d2c:	79 f0       	breq	.+30     	; 0x1d4c <__fp_splitA+0x2a>
    1d2e:	87 95       	ror	r24
    1d30:	08 95       	ret
    1d32:	12 16       	cp	r1, r18
    1d34:	13 06       	cpc	r1, r19
    1d36:	14 06       	cpc	r1, r20
    1d38:	55 1f       	adc	r21, r21
    1d3a:	f2 cf       	rjmp	.-28     	; 0x1d20 <__fp_split3+0xe>
    1d3c:	46 95       	lsr	r20
    1d3e:	f1 df       	rcall	.-30     	; 0x1d22 <__fp_splitA>
    1d40:	08 c0       	rjmp	.+16     	; 0x1d52 <__fp_splitA+0x30>
    1d42:	16 16       	cp	r1, r22
    1d44:	17 06       	cpc	r1, r23
    1d46:	18 06       	cpc	r1, r24
    1d48:	99 1f       	adc	r25, r25
    1d4a:	f1 cf       	rjmp	.-30     	; 0x1d2e <__fp_splitA+0xc>
    1d4c:	86 95       	lsr	r24
    1d4e:	71 05       	cpc	r23, r1
    1d50:	61 05       	cpc	r22, r1
    1d52:	08 94       	sec
    1d54:	08 95       	ret

00001d56 <__fp_zero>:
    1d56:	e8 94       	clt

00001d58 <__fp_szero>:
    1d58:	bb 27       	eor	r27, r27
    1d5a:	66 27       	eor	r22, r22
    1d5c:	77 27       	eor	r23, r23
    1d5e:	cb 01       	movw	r24, r22
    1d60:	97 f9       	bld	r25, 7
    1d62:	08 95       	ret

00001d64 <__mulsf3>:
    1d64:	0e 94 c5 0e 	call	0x1d8a	; 0x1d8a <__mulsf3x>
    1d68:	0c 94 78 0e 	jmp	0x1cf0	; 0x1cf0 <__fp_round>
    1d6c:	0e 94 6a 0e 	call	0x1cd4	; 0x1cd4 <__fp_pscA>
    1d70:	38 f0       	brcs	.+14     	; 0x1d80 <__mulsf3+0x1c>
    1d72:	0e 94 71 0e 	call	0x1ce2	; 0x1ce2 <__fp_pscB>
    1d76:	20 f0       	brcs	.+8      	; 0x1d80 <__mulsf3+0x1c>
    1d78:	95 23       	and	r25, r21
    1d7a:	11 f0       	breq	.+4      	; 0x1d80 <__mulsf3+0x1c>
    1d7c:	0c 94 61 0e 	jmp	0x1cc2	; 0x1cc2 <__fp_inf>
    1d80:	0c 94 67 0e 	jmp	0x1cce	; 0x1cce <__fp_nan>
    1d84:	11 24       	eor	r1, r1
    1d86:	0c 94 ac 0e 	jmp	0x1d58	; 0x1d58 <__fp_szero>

00001d8a <__mulsf3x>:
    1d8a:	0e 94 89 0e 	call	0x1d12	; 0x1d12 <__fp_split3>
    1d8e:	70 f3       	brcs	.-36     	; 0x1d6c <__mulsf3+0x8>

00001d90 <__mulsf3_pse>:
    1d90:	95 9f       	mul	r25, r21
    1d92:	c1 f3       	breq	.-16     	; 0x1d84 <__mulsf3+0x20>
    1d94:	95 0f       	add	r25, r21
    1d96:	50 e0       	ldi	r21, 0x00	; 0
    1d98:	55 1f       	adc	r21, r21
    1d9a:	62 9f       	mul	r22, r18
    1d9c:	f0 01       	movw	r30, r0
    1d9e:	72 9f       	mul	r23, r18
    1da0:	bb 27       	eor	r27, r27
    1da2:	f0 0d       	add	r31, r0
    1da4:	b1 1d       	adc	r27, r1
    1da6:	63 9f       	mul	r22, r19
    1da8:	aa 27       	eor	r26, r26
    1daa:	f0 0d       	add	r31, r0
    1dac:	b1 1d       	adc	r27, r1
    1dae:	aa 1f       	adc	r26, r26
    1db0:	64 9f       	mul	r22, r20
    1db2:	66 27       	eor	r22, r22
    1db4:	b0 0d       	add	r27, r0
    1db6:	a1 1d       	adc	r26, r1
    1db8:	66 1f       	adc	r22, r22
    1dba:	82 9f       	mul	r24, r18
    1dbc:	22 27       	eor	r18, r18
    1dbe:	b0 0d       	add	r27, r0
    1dc0:	a1 1d       	adc	r26, r1
    1dc2:	62 1f       	adc	r22, r18
    1dc4:	73 9f       	mul	r23, r19
    1dc6:	b0 0d       	add	r27, r0
    1dc8:	a1 1d       	adc	r26, r1
    1dca:	62 1f       	adc	r22, r18
    1dcc:	83 9f       	mul	r24, r19
    1dce:	a0 0d       	add	r26, r0
    1dd0:	61 1d       	adc	r22, r1
    1dd2:	22 1f       	adc	r18, r18
    1dd4:	74 9f       	mul	r23, r20
    1dd6:	33 27       	eor	r19, r19
    1dd8:	a0 0d       	add	r26, r0
    1dda:	61 1d       	adc	r22, r1
    1ddc:	23 1f       	adc	r18, r19
    1dde:	84 9f       	mul	r24, r20
    1de0:	60 0d       	add	r22, r0
    1de2:	21 1d       	adc	r18, r1
    1de4:	82 2f       	mov	r24, r18
    1de6:	76 2f       	mov	r23, r22
    1de8:	6a 2f       	mov	r22, r26
    1dea:	11 24       	eor	r1, r1
    1dec:	9f 57       	subi	r25, 0x7F	; 127
    1dee:	50 40       	sbci	r21, 0x00	; 0
    1df0:	9a f0       	brmi	.+38     	; 0x1e18 <__mulsf3_pse+0x88>
    1df2:	f1 f0       	breq	.+60     	; 0x1e30 <__mulsf3_pse+0xa0>
    1df4:	88 23       	and	r24, r24
    1df6:	4a f0       	brmi	.+18     	; 0x1e0a <__mulsf3_pse+0x7a>
    1df8:	ee 0f       	add	r30, r30
    1dfa:	ff 1f       	adc	r31, r31
    1dfc:	bb 1f       	adc	r27, r27
    1dfe:	66 1f       	adc	r22, r22
    1e00:	77 1f       	adc	r23, r23
    1e02:	88 1f       	adc	r24, r24
    1e04:	91 50       	subi	r25, 0x01	; 1
    1e06:	50 40       	sbci	r21, 0x00	; 0
    1e08:	a9 f7       	brne	.-22     	; 0x1df4 <__mulsf3_pse+0x64>
    1e0a:	9e 3f       	cpi	r25, 0xFE	; 254
    1e0c:	51 05       	cpc	r21, r1
    1e0e:	80 f0       	brcs	.+32     	; 0x1e30 <__mulsf3_pse+0xa0>
    1e10:	0c 94 61 0e 	jmp	0x1cc2	; 0x1cc2 <__fp_inf>
    1e14:	0c 94 ac 0e 	jmp	0x1d58	; 0x1d58 <__fp_szero>
    1e18:	5f 3f       	cpi	r21, 0xFF	; 255
    1e1a:	e4 f3       	brlt	.-8      	; 0x1e14 <__mulsf3_pse+0x84>
    1e1c:	98 3e       	cpi	r25, 0xE8	; 232
    1e1e:	d4 f3       	brlt	.-12     	; 0x1e14 <__mulsf3_pse+0x84>
    1e20:	86 95       	lsr	r24
    1e22:	77 95       	ror	r23
    1e24:	67 95       	ror	r22
    1e26:	b7 95       	ror	r27
    1e28:	f7 95       	ror	r31
    1e2a:	e7 95       	ror	r30
    1e2c:	9f 5f       	subi	r25, 0xFF	; 255
    1e2e:	c1 f7       	brne	.-16     	; 0x1e20 <__mulsf3_pse+0x90>
    1e30:	fe 2b       	or	r31, r30
    1e32:	88 0f       	add	r24, r24
    1e34:	91 1d       	adc	r25, r1
    1e36:	96 95       	lsr	r25
    1e38:	87 95       	ror	r24
    1e3a:	97 f9       	bld	r25, 7
    1e3c:	08 95       	ret
    1e3e:	19 f4       	brne	.+6      	; 0x1e46 <__mulsf3_pse+0xb6>
    1e40:	16 f4       	brtc	.+4      	; 0x1e46 <__mulsf3_pse+0xb6>
    1e42:	0c 94 67 0e 	jmp	0x1cce	; 0x1cce <__fp_nan>
    1e46:	0c 94 65 0f 	jmp	0x1eca	; 0x1eca <__fp_mpack>

00001e4a <sqrt>:
    1e4a:	0e 94 91 0e 	call	0x1d22	; 0x1d22 <__fp_splitA>
    1e4e:	b8 f3       	brcs	.-18     	; 0x1e3e <__mulsf3_pse+0xae>
    1e50:	99 23       	and	r25, r25
    1e52:	c9 f3       	breq	.-14     	; 0x1e46 <__mulsf3_pse+0xb6>
    1e54:	b6 f3       	brts	.-20     	; 0x1e42 <__mulsf3_pse+0xb2>
    1e56:	9f 57       	subi	r25, 0x7F	; 127
    1e58:	55 0b       	sbc	r21, r21
    1e5a:	87 ff       	sbrs	r24, 7
    1e5c:	0e 94 73 0f 	call	0x1ee6	; 0x1ee6 <__fp_norm2>
    1e60:	00 24       	eor	r0, r0
    1e62:	a0 e6       	ldi	r26, 0x60	; 96
    1e64:	40 ea       	ldi	r20, 0xA0	; 160
    1e66:	90 01       	movw	r18, r0
    1e68:	80 58       	subi	r24, 0x80	; 128
    1e6a:	56 95       	lsr	r21
    1e6c:	97 95       	ror	r25
    1e6e:	28 f4       	brcc	.+10     	; 0x1e7a <sqrt+0x30>
    1e70:	80 5c       	subi	r24, 0xC0	; 192
    1e72:	66 0f       	add	r22, r22
    1e74:	77 1f       	adc	r23, r23
    1e76:	88 1f       	adc	r24, r24
    1e78:	20 f0       	brcs	.+8      	; 0x1e82 <sqrt+0x38>
    1e7a:	26 17       	cp	r18, r22
    1e7c:	37 07       	cpc	r19, r23
    1e7e:	48 07       	cpc	r20, r24
    1e80:	30 f4       	brcc	.+12     	; 0x1e8e <sqrt+0x44>
    1e82:	62 1b       	sub	r22, r18
    1e84:	73 0b       	sbc	r23, r19
    1e86:	84 0b       	sbc	r24, r20
    1e88:	20 29       	or	r18, r0
    1e8a:	31 29       	or	r19, r1
    1e8c:	4a 2b       	or	r20, r26
    1e8e:	a6 95       	lsr	r26
    1e90:	17 94       	ror	r1
    1e92:	07 94       	ror	r0
    1e94:	20 25       	eor	r18, r0
    1e96:	31 25       	eor	r19, r1
    1e98:	4a 27       	eor	r20, r26
    1e9a:	58 f7       	brcc	.-42     	; 0x1e72 <sqrt+0x28>
    1e9c:	66 0f       	add	r22, r22
    1e9e:	77 1f       	adc	r23, r23
    1ea0:	88 1f       	adc	r24, r24
    1ea2:	20 f0       	brcs	.+8      	; 0x1eac <sqrt+0x62>
    1ea4:	26 17       	cp	r18, r22
    1ea6:	37 07       	cpc	r19, r23
    1ea8:	48 07       	cpc	r20, r24
    1eaa:	30 f4       	brcc	.+12     	; 0x1eb8 <sqrt+0x6e>
    1eac:	62 0b       	sbc	r22, r18
    1eae:	73 0b       	sbc	r23, r19
    1eb0:	84 0b       	sbc	r24, r20
    1eb2:	20 0d       	add	r18, r0
    1eb4:	31 1d       	adc	r19, r1
    1eb6:	41 1d       	adc	r20, r1
    1eb8:	a0 95       	com	r26
    1eba:	81 f7       	brne	.-32     	; 0x1e9c <sqrt+0x52>
    1ebc:	b9 01       	movw	r22, r18
    1ebe:	84 2f       	mov	r24, r20
    1ec0:	91 58       	subi	r25, 0x81	; 129
    1ec2:	88 0f       	add	r24, r24
    1ec4:	96 95       	lsr	r25
    1ec6:	87 95       	ror	r24
    1ec8:	08 95       	ret

00001eca <__fp_mpack>:
    1eca:	9f 3f       	cpi	r25, 0xFF	; 255
    1ecc:	31 f0       	breq	.+12     	; 0x1eda <__fp_mpack_finite+0xc>

00001ece <__fp_mpack_finite>:
    1ece:	91 50       	subi	r25, 0x01	; 1
    1ed0:	20 f4       	brcc	.+8      	; 0x1eda <__fp_mpack_finite+0xc>
    1ed2:	87 95       	ror	r24
    1ed4:	77 95       	ror	r23
    1ed6:	67 95       	ror	r22
    1ed8:	b7 95       	ror	r27
    1eda:	88 0f       	add	r24, r24
    1edc:	91 1d       	adc	r25, r1
    1ede:	96 95       	lsr	r25
    1ee0:	87 95       	ror	r24
    1ee2:	97 f9       	bld	r25, 7
    1ee4:	08 95       	ret

00001ee6 <__fp_norm2>:
    1ee6:	91 50       	subi	r25, 0x01	; 1
    1ee8:	50 40       	sbci	r21, 0x00	; 0
    1eea:	66 0f       	add	r22, r22
    1eec:	77 1f       	adc	r23, r23
    1eee:	88 1f       	adc	r24, r24
    1ef0:	d2 f7       	brpl	.-12     	; 0x1ee6 <__fp_norm2>
    1ef2:	08 95       	ret

00001ef4 <vfprintf>:
    1ef4:	a0 e1       	ldi	r26, 0x10	; 16
    1ef6:	b0 e0       	ldi	r27, 0x00	; 0
    1ef8:	e0 e8       	ldi	r30, 0x80	; 128
    1efa:	ff e0       	ldi	r31, 0x0F	; 15
    1efc:	0c 94 5b 13 	jmp	0x26b6	; 0x26b6 <__prologue_saves__>
    1f00:	7c 01       	movw	r14, r24
    1f02:	1b 01       	movw	r2, r22
    1f04:	6a 01       	movw	r12, r20
    1f06:	fc 01       	movw	r30, r24
    1f08:	17 82       	std	Z+7, r1	; 0x07
    1f0a:	16 82       	std	Z+6, r1	; 0x06
    1f0c:	83 81       	ldd	r24, Z+3	; 0x03
    1f0e:	81 ff       	sbrs	r24, 1
    1f10:	44 c3       	rjmp	.+1672   	; 0x259a <vfprintf+0x6a6>
    1f12:	9e 01       	movw	r18, r28
    1f14:	2f 5f       	subi	r18, 0xFF	; 255
    1f16:	3f 4f       	sbci	r19, 0xFF	; 255
    1f18:	39 01       	movw	r6, r18
    1f1a:	f7 01       	movw	r30, r14
    1f1c:	93 81       	ldd	r25, Z+3	; 0x03
    1f1e:	f1 01       	movw	r30, r2
    1f20:	93 fd       	sbrc	r25, 3
    1f22:	85 91       	lpm	r24, Z+
    1f24:	93 ff       	sbrs	r25, 3
    1f26:	81 91       	ld	r24, Z+
    1f28:	1f 01       	movw	r2, r30
    1f2a:	88 23       	and	r24, r24
    1f2c:	09 f4       	brne	.+2      	; 0x1f30 <vfprintf+0x3c>
    1f2e:	31 c3       	rjmp	.+1634   	; 0x2592 <vfprintf+0x69e>
    1f30:	85 32       	cpi	r24, 0x25	; 37
    1f32:	39 f4       	brne	.+14     	; 0x1f42 <vfprintf+0x4e>
    1f34:	93 fd       	sbrc	r25, 3
    1f36:	85 91       	lpm	r24, Z+
    1f38:	93 ff       	sbrs	r25, 3
    1f3a:	81 91       	ld	r24, Z+
    1f3c:	1f 01       	movw	r2, r30
    1f3e:	85 32       	cpi	r24, 0x25	; 37
    1f40:	39 f4       	brne	.+14     	; 0x1f50 <vfprintf+0x5c>
    1f42:	b7 01       	movw	r22, r14
    1f44:	90 e0       	ldi	r25, 0x00	; 0
    1f46:	0e 94 e6 14 	call	0x29cc	; 0x29cc <fputc>
    1f4a:	56 01       	movw	r10, r12
    1f4c:	65 01       	movw	r12, r10
    1f4e:	e5 cf       	rjmp	.-54     	; 0x1f1a <vfprintf+0x26>
    1f50:	10 e0       	ldi	r17, 0x00	; 0
    1f52:	51 2c       	mov	r5, r1
    1f54:	91 2c       	mov	r9, r1
    1f56:	ff e1       	ldi	r31, 0x1F	; 31
    1f58:	f9 15       	cp	r31, r9
    1f5a:	d8 f0       	brcs	.+54     	; 0x1f92 <vfprintf+0x9e>
    1f5c:	8b 32       	cpi	r24, 0x2B	; 43
    1f5e:	79 f0       	breq	.+30     	; 0x1f7e <vfprintf+0x8a>
    1f60:	38 f4       	brcc	.+14     	; 0x1f70 <vfprintf+0x7c>
    1f62:	80 32       	cpi	r24, 0x20	; 32
    1f64:	79 f0       	breq	.+30     	; 0x1f84 <vfprintf+0x90>
    1f66:	83 32       	cpi	r24, 0x23	; 35
    1f68:	a1 f4       	brne	.+40     	; 0x1f92 <vfprintf+0x9e>
    1f6a:	f9 2d       	mov	r31, r9
    1f6c:	f0 61       	ori	r31, 0x10	; 16
    1f6e:	2e c0       	rjmp	.+92     	; 0x1fcc <vfprintf+0xd8>
    1f70:	8d 32       	cpi	r24, 0x2D	; 45
    1f72:	61 f0       	breq	.+24     	; 0x1f8c <vfprintf+0x98>
    1f74:	80 33       	cpi	r24, 0x30	; 48
    1f76:	69 f4       	brne	.+26     	; 0x1f92 <vfprintf+0x9e>
    1f78:	29 2d       	mov	r18, r9
    1f7a:	21 60       	ori	r18, 0x01	; 1
    1f7c:	2d c0       	rjmp	.+90     	; 0x1fd8 <vfprintf+0xe4>
    1f7e:	39 2d       	mov	r19, r9
    1f80:	32 60       	ori	r19, 0x02	; 2
    1f82:	93 2e       	mov	r9, r19
    1f84:	89 2d       	mov	r24, r9
    1f86:	84 60       	ori	r24, 0x04	; 4
    1f88:	98 2e       	mov	r9, r24
    1f8a:	2a c0       	rjmp	.+84     	; 0x1fe0 <vfprintf+0xec>
    1f8c:	e9 2d       	mov	r30, r9
    1f8e:	e8 60       	ori	r30, 0x08	; 8
    1f90:	15 c0       	rjmp	.+42     	; 0x1fbc <vfprintf+0xc8>
    1f92:	97 fc       	sbrc	r9, 7
    1f94:	2d c0       	rjmp	.+90     	; 0x1ff0 <vfprintf+0xfc>
    1f96:	20 ed       	ldi	r18, 0xD0	; 208
    1f98:	28 0f       	add	r18, r24
    1f9a:	2a 30       	cpi	r18, 0x0A	; 10
    1f9c:	88 f4       	brcc	.+34     	; 0x1fc0 <vfprintf+0xcc>
    1f9e:	96 fe       	sbrs	r9, 6
    1fa0:	06 c0       	rjmp	.+12     	; 0x1fae <vfprintf+0xba>
    1fa2:	3a e0       	ldi	r19, 0x0A	; 10
    1fa4:	13 9f       	mul	r17, r19
    1fa6:	20 0d       	add	r18, r0
    1fa8:	11 24       	eor	r1, r1
    1faa:	12 2f       	mov	r17, r18
    1fac:	19 c0       	rjmp	.+50     	; 0x1fe0 <vfprintf+0xec>
    1fae:	8a e0       	ldi	r24, 0x0A	; 10
    1fb0:	58 9e       	mul	r5, r24
    1fb2:	20 0d       	add	r18, r0
    1fb4:	11 24       	eor	r1, r1
    1fb6:	52 2e       	mov	r5, r18
    1fb8:	e9 2d       	mov	r30, r9
    1fba:	e0 62       	ori	r30, 0x20	; 32
    1fbc:	9e 2e       	mov	r9, r30
    1fbe:	10 c0       	rjmp	.+32     	; 0x1fe0 <vfprintf+0xec>
    1fc0:	8e 32       	cpi	r24, 0x2E	; 46
    1fc2:	31 f4       	brne	.+12     	; 0x1fd0 <vfprintf+0xdc>
    1fc4:	96 fc       	sbrc	r9, 6
    1fc6:	e5 c2       	rjmp	.+1482   	; 0x2592 <vfprintf+0x69e>
    1fc8:	f9 2d       	mov	r31, r9
    1fca:	f0 64       	ori	r31, 0x40	; 64
    1fcc:	9f 2e       	mov	r9, r31
    1fce:	08 c0       	rjmp	.+16     	; 0x1fe0 <vfprintf+0xec>
    1fd0:	8c 36       	cpi	r24, 0x6C	; 108
    1fd2:	21 f4       	brne	.+8      	; 0x1fdc <vfprintf+0xe8>
    1fd4:	29 2d       	mov	r18, r9
    1fd6:	20 68       	ori	r18, 0x80	; 128
    1fd8:	92 2e       	mov	r9, r18
    1fda:	02 c0       	rjmp	.+4      	; 0x1fe0 <vfprintf+0xec>
    1fdc:	88 36       	cpi	r24, 0x68	; 104
    1fde:	41 f4       	brne	.+16     	; 0x1ff0 <vfprintf+0xfc>
    1fe0:	f1 01       	movw	r30, r2
    1fe2:	93 fd       	sbrc	r25, 3
    1fe4:	85 91       	lpm	r24, Z+
    1fe6:	93 ff       	sbrs	r25, 3
    1fe8:	81 91       	ld	r24, Z+
    1fea:	1f 01       	movw	r2, r30
    1fec:	81 11       	cpse	r24, r1
    1fee:	b3 cf       	rjmp	.-154    	; 0x1f56 <vfprintf+0x62>
    1ff0:	9b eb       	ldi	r25, 0xBB	; 187
    1ff2:	98 0f       	add	r25, r24
    1ff4:	93 30       	cpi	r25, 0x03	; 3
    1ff6:	20 f4       	brcc	.+8      	; 0x2000 <vfprintf+0x10c>
    1ff8:	99 2d       	mov	r25, r9
    1ffa:	90 61       	ori	r25, 0x10	; 16
    1ffc:	80 5e       	subi	r24, 0xE0	; 224
    1ffe:	07 c0       	rjmp	.+14     	; 0x200e <vfprintf+0x11a>
    2000:	9b e9       	ldi	r25, 0x9B	; 155
    2002:	98 0f       	add	r25, r24
    2004:	93 30       	cpi	r25, 0x03	; 3
    2006:	08 f0       	brcs	.+2      	; 0x200a <vfprintf+0x116>
    2008:	66 c1       	rjmp	.+716    	; 0x22d6 <vfprintf+0x3e2>
    200a:	99 2d       	mov	r25, r9
    200c:	9f 7e       	andi	r25, 0xEF	; 239
    200e:	96 ff       	sbrs	r25, 6
    2010:	16 e0       	ldi	r17, 0x06	; 6
    2012:	9f 73       	andi	r25, 0x3F	; 63
    2014:	99 2e       	mov	r9, r25
    2016:	85 36       	cpi	r24, 0x65	; 101
    2018:	19 f4       	brne	.+6      	; 0x2020 <vfprintf+0x12c>
    201a:	90 64       	ori	r25, 0x40	; 64
    201c:	99 2e       	mov	r9, r25
    201e:	08 c0       	rjmp	.+16     	; 0x2030 <vfprintf+0x13c>
    2020:	86 36       	cpi	r24, 0x66	; 102
    2022:	21 f4       	brne	.+8      	; 0x202c <vfprintf+0x138>
    2024:	39 2f       	mov	r19, r25
    2026:	30 68       	ori	r19, 0x80	; 128
    2028:	93 2e       	mov	r9, r19
    202a:	02 c0       	rjmp	.+4      	; 0x2030 <vfprintf+0x13c>
    202c:	11 11       	cpse	r17, r1
    202e:	11 50       	subi	r17, 0x01	; 1
    2030:	97 fe       	sbrs	r9, 7
    2032:	07 c0       	rjmp	.+14     	; 0x2042 <vfprintf+0x14e>
    2034:	1c 33       	cpi	r17, 0x3C	; 60
    2036:	50 f4       	brcc	.+20     	; 0x204c <vfprintf+0x158>
    2038:	44 24       	eor	r4, r4
    203a:	43 94       	inc	r4
    203c:	41 0e       	add	r4, r17
    203e:	27 e0       	ldi	r18, 0x07	; 7
    2040:	0b c0       	rjmp	.+22     	; 0x2058 <vfprintf+0x164>
    2042:	18 30       	cpi	r17, 0x08	; 8
    2044:	38 f0       	brcs	.+14     	; 0x2054 <vfprintf+0x160>
    2046:	27 e0       	ldi	r18, 0x07	; 7
    2048:	17 e0       	ldi	r17, 0x07	; 7
    204a:	05 c0       	rjmp	.+10     	; 0x2056 <vfprintf+0x162>
    204c:	27 e0       	ldi	r18, 0x07	; 7
    204e:	9c e3       	ldi	r25, 0x3C	; 60
    2050:	49 2e       	mov	r4, r25
    2052:	02 c0       	rjmp	.+4      	; 0x2058 <vfprintf+0x164>
    2054:	21 2f       	mov	r18, r17
    2056:	41 2c       	mov	r4, r1
    2058:	56 01       	movw	r10, r12
    205a:	84 e0       	ldi	r24, 0x04	; 4
    205c:	a8 0e       	add	r10, r24
    205e:	b1 1c       	adc	r11, r1
    2060:	f6 01       	movw	r30, r12
    2062:	60 81       	ld	r22, Z
    2064:	71 81       	ldd	r23, Z+1	; 0x01
    2066:	82 81       	ldd	r24, Z+2	; 0x02
    2068:	93 81       	ldd	r25, Z+3	; 0x03
    206a:	04 2d       	mov	r16, r4
    206c:	a3 01       	movw	r20, r6
    206e:	0e 94 92 13 	call	0x2724	; 0x2724 <__ftoa_engine>
    2072:	6c 01       	movw	r12, r24
    2074:	f9 81       	ldd	r31, Y+1	; 0x01
    2076:	fc 87       	std	Y+12, r31	; 0x0c
    2078:	f0 ff       	sbrs	r31, 0
    207a:	02 c0       	rjmp	.+4      	; 0x2080 <vfprintf+0x18c>
    207c:	f3 ff       	sbrs	r31, 3
    207e:	06 c0       	rjmp	.+12     	; 0x208c <vfprintf+0x198>
    2080:	91 fc       	sbrc	r9, 1
    2082:	06 c0       	rjmp	.+12     	; 0x2090 <vfprintf+0x19c>
    2084:	92 fe       	sbrs	r9, 2
    2086:	06 c0       	rjmp	.+12     	; 0x2094 <vfprintf+0x1a0>
    2088:	00 e2       	ldi	r16, 0x20	; 32
    208a:	05 c0       	rjmp	.+10     	; 0x2096 <vfprintf+0x1a2>
    208c:	0d e2       	ldi	r16, 0x2D	; 45
    208e:	03 c0       	rjmp	.+6      	; 0x2096 <vfprintf+0x1a2>
    2090:	0b e2       	ldi	r16, 0x2B	; 43
    2092:	01 c0       	rjmp	.+2      	; 0x2096 <vfprintf+0x1a2>
    2094:	00 e0       	ldi	r16, 0x00	; 0
    2096:	8c 85       	ldd	r24, Y+12	; 0x0c
    2098:	8c 70       	andi	r24, 0x0C	; 12
    209a:	19 f0       	breq	.+6      	; 0x20a2 <vfprintf+0x1ae>
    209c:	01 11       	cpse	r16, r1
    209e:	5a c2       	rjmp	.+1204   	; 0x2554 <vfprintf+0x660>
    20a0:	9b c2       	rjmp	.+1334   	; 0x25d8 <vfprintf+0x6e4>
    20a2:	97 fe       	sbrs	r9, 7
    20a4:	10 c0       	rjmp	.+32     	; 0x20c6 <vfprintf+0x1d2>
    20a6:	4c 0c       	add	r4, r12
    20a8:	fc 85       	ldd	r31, Y+12	; 0x0c
    20aa:	f4 ff       	sbrs	r31, 4
    20ac:	04 c0       	rjmp	.+8      	; 0x20b6 <vfprintf+0x1c2>
    20ae:	8a 81       	ldd	r24, Y+2	; 0x02
    20b0:	81 33       	cpi	r24, 0x31	; 49
    20b2:	09 f4       	brne	.+2      	; 0x20b6 <vfprintf+0x1c2>
    20b4:	4a 94       	dec	r4
    20b6:	14 14       	cp	r1, r4
    20b8:	74 f5       	brge	.+92     	; 0x2116 <vfprintf+0x222>
    20ba:	28 e0       	ldi	r18, 0x08	; 8
    20bc:	24 15       	cp	r18, r4
    20be:	78 f5       	brcc	.+94     	; 0x211e <vfprintf+0x22a>
    20c0:	88 e0       	ldi	r24, 0x08	; 8
    20c2:	48 2e       	mov	r4, r24
    20c4:	2c c0       	rjmp	.+88     	; 0x211e <vfprintf+0x22a>
    20c6:	96 fc       	sbrc	r9, 6
    20c8:	2a c0       	rjmp	.+84     	; 0x211e <vfprintf+0x22a>
    20ca:	81 2f       	mov	r24, r17
    20cc:	90 e0       	ldi	r25, 0x00	; 0
    20ce:	8c 15       	cp	r24, r12
    20d0:	9d 05       	cpc	r25, r13
    20d2:	9c f0       	brlt	.+38     	; 0x20fa <vfprintf+0x206>
    20d4:	3c ef       	ldi	r19, 0xFC	; 252
    20d6:	c3 16       	cp	r12, r19
    20d8:	3f ef       	ldi	r19, 0xFF	; 255
    20da:	d3 06       	cpc	r13, r19
    20dc:	74 f0       	brlt	.+28     	; 0x20fa <vfprintf+0x206>
    20de:	89 2d       	mov	r24, r9
    20e0:	80 68       	ori	r24, 0x80	; 128
    20e2:	98 2e       	mov	r9, r24
    20e4:	0a c0       	rjmp	.+20     	; 0x20fa <vfprintf+0x206>
    20e6:	e2 e0       	ldi	r30, 0x02	; 2
    20e8:	f0 e0       	ldi	r31, 0x00	; 0
    20ea:	ec 0f       	add	r30, r28
    20ec:	fd 1f       	adc	r31, r29
    20ee:	e1 0f       	add	r30, r17
    20f0:	f1 1d       	adc	r31, r1
    20f2:	80 81       	ld	r24, Z
    20f4:	80 33       	cpi	r24, 0x30	; 48
    20f6:	19 f4       	brne	.+6      	; 0x20fe <vfprintf+0x20a>
    20f8:	11 50       	subi	r17, 0x01	; 1
    20fa:	11 11       	cpse	r17, r1
    20fc:	f4 cf       	rjmp	.-24     	; 0x20e6 <vfprintf+0x1f2>
    20fe:	97 fe       	sbrs	r9, 7
    2100:	0e c0       	rjmp	.+28     	; 0x211e <vfprintf+0x22a>
    2102:	44 24       	eor	r4, r4
    2104:	43 94       	inc	r4
    2106:	41 0e       	add	r4, r17
    2108:	81 2f       	mov	r24, r17
    210a:	90 e0       	ldi	r25, 0x00	; 0
    210c:	c8 16       	cp	r12, r24
    210e:	d9 06       	cpc	r13, r25
    2110:	2c f4       	brge	.+10     	; 0x211c <vfprintf+0x228>
    2112:	1c 19       	sub	r17, r12
    2114:	04 c0       	rjmp	.+8      	; 0x211e <vfprintf+0x22a>
    2116:	44 24       	eor	r4, r4
    2118:	43 94       	inc	r4
    211a:	01 c0       	rjmp	.+2      	; 0x211e <vfprintf+0x22a>
    211c:	10 e0       	ldi	r17, 0x00	; 0
    211e:	97 fe       	sbrs	r9, 7
    2120:	06 c0       	rjmp	.+12     	; 0x212e <vfprintf+0x23a>
    2122:	1c 14       	cp	r1, r12
    2124:	1d 04       	cpc	r1, r13
    2126:	34 f4       	brge	.+12     	; 0x2134 <vfprintf+0x240>
    2128:	c6 01       	movw	r24, r12
    212a:	01 96       	adiw	r24, 0x01	; 1
    212c:	05 c0       	rjmp	.+10     	; 0x2138 <vfprintf+0x244>
    212e:	85 e0       	ldi	r24, 0x05	; 5
    2130:	90 e0       	ldi	r25, 0x00	; 0
    2132:	02 c0       	rjmp	.+4      	; 0x2138 <vfprintf+0x244>
    2134:	81 e0       	ldi	r24, 0x01	; 1
    2136:	90 e0       	ldi	r25, 0x00	; 0
    2138:	01 11       	cpse	r16, r1
    213a:	01 96       	adiw	r24, 0x01	; 1
    213c:	11 23       	and	r17, r17
    213e:	31 f0       	breq	.+12     	; 0x214c <vfprintf+0x258>
    2140:	21 2f       	mov	r18, r17
    2142:	30 e0       	ldi	r19, 0x00	; 0
    2144:	2f 5f       	subi	r18, 0xFF	; 255
    2146:	3f 4f       	sbci	r19, 0xFF	; 255
    2148:	82 0f       	add	r24, r18
    214a:	93 1f       	adc	r25, r19
    214c:	25 2d       	mov	r18, r5
    214e:	30 e0       	ldi	r19, 0x00	; 0
    2150:	82 17       	cp	r24, r18
    2152:	93 07       	cpc	r25, r19
    2154:	14 f4       	brge	.+4      	; 0x215a <vfprintf+0x266>
    2156:	58 1a       	sub	r5, r24
    2158:	01 c0       	rjmp	.+2      	; 0x215c <vfprintf+0x268>
    215a:	51 2c       	mov	r5, r1
    215c:	89 2d       	mov	r24, r9
    215e:	89 70       	andi	r24, 0x09	; 9
    2160:	49 f4       	brne	.+18     	; 0x2174 <vfprintf+0x280>
    2162:	55 20       	and	r5, r5
    2164:	39 f0       	breq	.+14     	; 0x2174 <vfprintf+0x280>
    2166:	b7 01       	movw	r22, r14
    2168:	80 e2       	ldi	r24, 0x20	; 32
    216a:	90 e0       	ldi	r25, 0x00	; 0
    216c:	0e 94 e6 14 	call	0x29cc	; 0x29cc <fputc>
    2170:	5a 94       	dec	r5
    2172:	f7 cf       	rjmp	.-18     	; 0x2162 <vfprintf+0x26e>
    2174:	00 23       	and	r16, r16
    2176:	29 f0       	breq	.+10     	; 0x2182 <vfprintf+0x28e>
    2178:	b7 01       	movw	r22, r14
    217a:	80 2f       	mov	r24, r16
    217c:	90 e0       	ldi	r25, 0x00	; 0
    217e:	0e 94 e6 14 	call	0x29cc	; 0x29cc <fputc>
    2182:	93 fc       	sbrc	r9, 3
    2184:	09 c0       	rjmp	.+18     	; 0x2198 <vfprintf+0x2a4>
    2186:	55 20       	and	r5, r5
    2188:	39 f0       	breq	.+14     	; 0x2198 <vfprintf+0x2a4>
    218a:	b7 01       	movw	r22, r14
    218c:	80 e3       	ldi	r24, 0x30	; 48
    218e:	90 e0       	ldi	r25, 0x00	; 0
    2190:	0e 94 e6 14 	call	0x29cc	; 0x29cc <fputc>
    2194:	5a 94       	dec	r5
    2196:	f7 cf       	rjmp	.-18     	; 0x2186 <vfprintf+0x292>
    2198:	97 fe       	sbrs	r9, 7
    219a:	4c c0       	rjmp	.+152    	; 0x2234 <vfprintf+0x340>
    219c:	46 01       	movw	r8, r12
    219e:	d7 fe       	sbrs	r13, 7
    21a0:	02 c0       	rjmp	.+4      	; 0x21a6 <vfprintf+0x2b2>
    21a2:	81 2c       	mov	r8, r1
    21a4:	91 2c       	mov	r9, r1
    21a6:	c6 01       	movw	r24, r12
    21a8:	88 19       	sub	r24, r8
    21aa:	99 09       	sbc	r25, r9
    21ac:	f3 01       	movw	r30, r6
    21ae:	e8 0f       	add	r30, r24
    21b0:	f9 1f       	adc	r31, r25
    21b2:	fe 87       	std	Y+14, r31	; 0x0e
    21b4:	ed 87       	std	Y+13, r30	; 0x0d
    21b6:	96 01       	movw	r18, r12
    21b8:	24 19       	sub	r18, r4
    21ba:	31 09       	sbc	r19, r1
    21bc:	38 8b       	std	Y+16, r19	; 0x10
    21be:	2f 87       	std	Y+15, r18	; 0x0f
    21c0:	01 2f       	mov	r16, r17
    21c2:	10 e0       	ldi	r17, 0x00	; 0
    21c4:	11 95       	neg	r17
    21c6:	01 95       	neg	r16
    21c8:	11 09       	sbc	r17, r1
    21ca:	3f ef       	ldi	r19, 0xFF	; 255
    21cc:	83 16       	cp	r8, r19
    21ce:	93 06       	cpc	r9, r19
    21d0:	29 f4       	brne	.+10     	; 0x21dc <vfprintf+0x2e8>
    21d2:	b7 01       	movw	r22, r14
    21d4:	8e e2       	ldi	r24, 0x2E	; 46
    21d6:	90 e0       	ldi	r25, 0x00	; 0
    21d8:	0e 94 e6 14 	call	0x29cc	; 0x29cc <fputc>
    21dc:	c8 14       	cp	r12, r8
    21de:	d9 04       	cpc	r13, r9
    21e0:	4c f0       	brlt	.+18     	; 0x21f4 <vfprintf+0x300>
    21e2:	8f 85       	ldd	r24, Y+15	; 0x0f
    21e4:	98 89       	ldd	r25, Y+16	; 0x10
    21e6:	88 15       	cp	r24, r8
    21e8:	99 05       	cpc	r25, r9
    21ea:	24 f4       	brge	.+8      	; 0x21f4 <vfprintf+0x300>
    21ec:	ed 85       	ldd	r30, Y+13	; 0x0d
    21ee:	fe 85       	ldd	r31, Y+14	; 0x0e
    21f0:	81 81       	ldd	r24, Z+1	; 0x01
    21f2:	01 c0       	rjmp	.+2      	; 0x21f6 <vfprintf+0x302>
    21f4:	80 e3       	ldi	r24, 0x30	; 48
    21f6:	f1 e0       	ldi	r31, 0x01	; 1
    21f8:	8f 1a       	sub	r8, r31
    21fa:	91 08       	sbc	r9, r1
    21fc:	2d 85       	ldd	r18, Y+13	; 0x0d
    21fe:	3e 85       	ldd	r19, Y+14	; 0x0e
    2200:	2f 5f       	subi	r18, 0xFF	; 255
    2202:	3f 4f       	sbci	r19, 0xFF	; 255
    2204:	3e 87       	std	Y+14, r19	; 0x0e
    2206:	2d 87       	std	Y+13, r18	; 0x0d
    2208:	80 16       	cp	r8, r16
    220a:	91 06       	cpc	r9, r17
    220c:	2c f0       	brlt	.+10     	; 0x2218 <vfprintf+0x324>
    220e:	b7 01       	movw	r22, r14
    2210:	90 e0       	ldi	r25, 0x00	; 0
    2212:	0e 94 e6 14 	call	0x29cc	; 0x29cc <fputc>
    2216:	d9 cf       	rjmp	.-78     	; 0x21ca <vfprintf+0x2d6>
    2218:	c8 14       	cp	r12, r8
    221a:	d9 04       	cpc	r13, r9
    221c:	41 f4       	brne	.+16     	; 0x222e <vfprintf+0x33a>
    221e:	9a 81       	ldd	r25, Y+2	; 0x02
    2220:	96 33       	cpi	r25, 0x36	; 54
    2222:	20 f4       	brcc	.+8      	; 0x222c <vfprintf+0x338>
    2224:	95 33       	cpi	r25, 0x35	; 53
    2226:	19 f4       	brne	.+6      	; 0x222e <vfprintf+0x33a>
    2228:	3c 85       	ldd	r19, Y+12	; 0x0c
    222a:	34 ff       	sbrs	r19, 4
    222c:	81 e3       	ldi	r24, 0x31	; 49
    222e:	b7 01       	movw	r22, r14
    2230:	90 e0       	ldi	r25, 0x00	; 0
    2232:	4e c0       	rjmp	.+156    	; 0x22d0 <vfprintf+0x3dc>
    2234:	8a 81       	ldd	r24, Y+2	; 0x02
    2236:	81 33       	cpi	r24, 0x31	; 49
    2238:	19 f0       	breq	.+6      	; 0x2240 <vfprintf+0x34c>
    223a:	9c 85       	ldd	r25, Y+12	; 0x0c
    223c:	9f 7e       	andi	r25, 0xEF	; 239
    223e:	9c 87       	std	Y+12, r25	; 0x0c
    2240:	b7 01       	movw	r22, r14
    2242:	90 e0       	ldi	r25, 0x00	; 0
    2244:	0e 94 e6 14 	call	0x29cc	; 0x29cc <fputc>
    2248:	11 11       	cpse	r17, r1
    224a:	05 c0       	rjmp	.+10     	; 0x2256 <vfprintf+0x362>
    224c:	94 fc       	sbrc	r9, 4
    224e:	18 c0       	rjmp	.+48     	; 0x2280 <vfprintf+0x38c>
    2250:	85 e6       	ldi	r24, 0x65	; 101
    2252:	90 e0       	ldi	r25, 0x00	; 0
    2254:	17 c0       	rjmp	.+46     	; 0x2284 <vfprintf+0x390>
    2256:	b7 01       	movw	r22, r14
    2258:	8e e2       	ldi	r24, 0x2E	; 46
    225a:	90 e0       	ldi	r25, 0x00	; 0
    225c:	0e 94 e6 14 	call	0x29cc	; 0x29cc <fputc>
    2260:	1e 5f       	subi	r17, 0xFE	; 254
    2262:	82 e0       	ldi	r24, 0x02	; 2
    2264:	01 e0       	ldi	r16, 0x01	; 1
    2266:	08 0f       	add	r16, r24
    2268:	f3 01       	movw	r30, r6
    226a:	e8 0f       	add	r30, r24
    226c:	f1 1d       	adc	r31, r1
    226e:	80 81       	ld	r24, Z
    2270:	b7 01       	movw	r22, r14
    2272:	90 e0       	ldi	r25, 0x00	; 0
    2274:	0e 94 e6 14 	call	0x29cc	; 0x29cc <fputc>
    2278:	80 2f       	mov	r24, r16
    227a:	01 13       	cpse	r16, r17
    227c:	f3 cf       	rjmp	.-26     	; 0x2264 <vfprintf+0x370>
    227e:	e6 cf       	rjmp	.-52     	; 0x224c <vfprintf+0x358>
    2280:	85 e4       	ldi	r24, 0x45	; 69
    2282:	90 e0       	ldi	r25, 0x00	; 0
    2284:	b7 01       	movw	r22, r14
    2286:	0e 94 e6 14 	call	0x29cc	; 0x29cc <fputc>
    228a:	d7 fc       	sbrc	r13, 7
    228c:	06 c0       	rjmp	.+12     	; 0x229a <vfprintf+0x3a6>
    228e:	c1 14       	cp	r12, r1
    2290:	d1 04       	cpc	r13, r1
    2292:	41 f4       	brne	.+16     	; 0x22a4 <vfprintf+0x3b0>
    2294:	ec 85       	ldd	r30, Y+12	; 0x0c
    2296:	e4 ff       	sbrs	r30, 4
    2298:	05 c0       	rjmp	.+10     	; 0x22a4 <vfprintf+0x3b0>
    229a:	d1 94       	neg	r13
    229c:	c1 94       	neg	r12
    229e:	d1 08       	sbc	r13, r1
    22a0:	8d e2       	ldi	r24, 0x2D	; 45
    22a2:	01 c0       	rjmp	.+2      	; 0x22a6 <vfprintf+0x3b2>
    22a4:	8b e2       	ldi	r24, 0x2B	; 43
    22a6:	b7 01       	movw	r22, r14
    22a8:	90 e0       	ldi	r25, 0x00	; 0
    22aa:	0e 94 e6 14 	call	0x29cc	; 0x29cc <fputc>
    22ae:	80 e3       	ldi	r24, 0x30	; 48
    22b0:	2a e0       	ldi	r18, 0x0A	; 10
    22b2:	c2 16       	cp	r12, r18
    22b4:	d1 04       	cpc	r13, r1
    22b6:	2c f0       	brlt	.+10     	; 0x22c2 <vfprintf+0x3ce>
    22b8:	8f 5f       	subi	r24, 0xFF	; 255
    22ba:	fa e0       	ldi	r31, 0x0A	; 10
    22bc:	cf 1a       	sub	r12, r31
    22be:	d1 08       	sbc	r13, r1
    22c0:	f7 cf       	rjmp	.-18     	; 0x22b0 <vfprintf+0x3bc>
    22c2:	b7 01       	movw	r22, r14
    22c4:	90 e0       	ldi	r25, 0x00	; 0
    22c6:	0e 94 e6 14 	call	0x29cc	; 0x29cc <fputc>
    22ca:	b7 01       	movw	r22, r14
    22cc:	c6 01       	movw	r24, r12
    22ce:	c0 96       	adiw	r24, 0x30	; 48
    22d0:	0e 94 e6 14 	call	0x29cc	; 0x29cc <fputc>
    22d4:	54 c1       	rjmp	.+680    	; 0x257e <vfprintf+0x68a>
    22d6:	83 36       	cpi	r24, 0x63	; 99
    22d8:	31 f0       	breq	.+12     	; 0x22e6 <vfprintf+0x3f2>
    22da:	83 37       	cpi	r24, 0x73	; 115
    22dc:	79 f0       	breq	.+30     	; 0x22fc <vfprintf+0x408>
    22de:	83 35       	cpi	r24, 0x53	; 83
    22e0:	09 f0       	breq	.+2      	; 0x22e4 <vfprintf+0x3f0>
    22e2:	56 c0       	rjmp	.+172    	; 0x2390 <vfprintf+0x49c>
    22e4:	20 c0       	rjmp	.+64     	; 0x2326 <vfprintf+0x432>
    22e6:	56 01       	movw	r10, r12
    22e8:	32 e0       	ldi	r19, 0x02	; 2
    22ea:	a3 0e       	add	r10, r19
    22ec:	b1 1c       	adc	r11, r1
    22ee:	f6 01       	movw	r30, r12
    22f0:	80 81       	ld	r24, Z
    22f2:	89 83       	std	Y+1, r24	; 0x01
    22f4:	01 e0       	ldi	r16, 0x01	; 1
    22f6:	10 e0       	ldi	r17, 0x00	; 0
    22f8:	63 01       	movw	r12, r6
    22fa:	12 c0       	rjmp	.+36     	; 0x2320 <vfprintf+0x42c>
    22fc:	56 01       	movw	r10, r12
    22fe:	f2 e0       	ldi	r31, 0x02	; 2
    2300:	af 0e       	add	r10, r31
    2302:	b1 1c       	adc	r11, r1
    2304:	f6 01       	movw	r30, r12
    2306:	c0 80       	ld	r12, Z
    2308:	d1 80       	ldd	r13, Z+1	; 0x01
    230a:	96 fe       	sbrs	r9, 6
    230c:	03 c0       	rjmp	.+6      	; 0x2314 <vfprintf+0x420>
    230e:	61 2f       	mov	r22, r17
    2310:	70 e0       	ldi	r23, 0x00	; 0
    2312:	02 c0       	rjmp	.+4      	; 0x2318 <vfprintf+0x424>
    2314:	6f ef       	ldi	r22, 0xFF	; 255
    2316:	7f ef       	ldi	r23, 0xFF	; 255
    2318:	c6 01       	movw	r24, r12
    231a:	0e 94 b6 14 	call	0x296c	; 0x296c <strnlen>
    231e:	8c 01       	movw	r16, r24
    2320:	f9 2d       	mov	r31, r9
    2322:	ff 77       	andi	r31, 0x7F	; 127
    2324:	14 c0       	rjmp	.+40     	; 0x234e <vfprintf+0x45a>
    2326:	56 01       	movw	r10, r12
    2328:	22 e0       	ldi	r18, 0x02	; 2
    232a:	a2 0e       	add	r10, r18
    232c:	b1 1c       	adc	r11, r1
    232e:	f6 01       	movw	r30, r12
    2330:	c0 80       	ld	r12, Z
    2332:	d1 80       	ldd	r13, Z+1	; 0x01
    2334:	96 fe       	sbrs	r9, 6
    2336:	03 c0       	rjmp	.+6      	; 0x233e <vfprintf+0x44a>
    2338:	61 2f       	mov	r22, r17
    233a:	70 e0       	ldi	r23, 0x00	; 0
    233c:	02 c0       	rjmp	.+4      	; 0x2342 <vfprintf+0x44e>
    233e:	6f ef       	ldi	r22, 0xFF	; 255
    2340:	7f ef       	ldi	r23, 0xFF	; 255
    2342:	c6 01       	movw	r24, r12
    2344:	0e 94 ab 14 	call	0x2956	; 0x2956 <strnlen_P>
    2348:	8c 01       	movw	r16, r24
    234a:	f9 2d       	mov	r31, r9
    234c:	f0 68       	ori	r31, 0x80	; 128
    234e:	9f 2e       	mov	r9, r31
    2350:	f3 fd       	sbrc	r31, 3
    2352:	1a c0       	rjmp	.+52     	; 0x2388 <vfprintf+0x494>
    2354:	85 2d       	mov	r24, r5
    2356:	90 e0       	ldi	r25, 0x00	; 0
    2358:	08 17       	cp	r16, r24
    235a:	19 07       	cpc	r17, r25
    235c:	a8 f4       	brcc	.+42     	; 0x2388 <vfprintf+0x494>
    235e:	b7 01       	movw	r22, r14
    2360:	80 e2       	ldi	r24, 0x20	; 32
    2362:	90 e0       	ldi	r25, 0x00	; 0
    2364:	0e 94 e6 14 	call	0x29cc	; 0x29cc <fputc>
    2368:	5a 94       	dec	r5
    236a:	f4 cf       	rjmp	.-24     	; 0x2354 <vfprintf+0x460>
    236c:	f6 01       	movw	r30, r12
    236e:	97 fc       	sbrc	r9, 7
    2370:	85 91       	lpm	r24, Z+
    2372:	97 fe       	sbrs	r9, 7
    2374:	81 91       	ld	r24, Z+
    2376:	6f 01       	movw	r12, r30
    2378:	b7 01       	movw	r22, r14
    237a:	90 e0       	ldi	r25, 0x00	; 0
    237c:	0e 94 e6 14 	call	0x29cc	; 0x29cc <fputc>
    2380:	51 10       	cpse	r5, r1
    2382:	5a 94       	dec	r5
    2384:	01 50       	subi	r16, 0x01	; 1
    2386:	11 09       	sbc	r17, r1
    2388:	01 15       	cp	r16, r1
    238a:	11 05       	cpc	r17, r1
    238c:	79 f7       	brne	.-34     	; 0x236c <vfprintf+0x478>
    238e:	f7 c0       	rjmp	.+494    	; 0x257e <vfprintf+0x68a>
    2390:	84 36       	cpi	r24, 0x64	; 100
    2392:	11 f0       	breq	.+4      	; 0x2398 <vfprintf+0x4a4>
    2394:	89 36       	cpi	r24, 0x69	; 105
    2396:	61 f5       	brne	.+88     	; 0x23f0 <vfprintf+0x4fc>
    2398:	56 01       	movw	r10, r12
    239a:	97 fe       	sbrs	r9, 7
    239c:	09 c0       	rjmp	.+18     	; 0x23b0 <vfprintf+0x4bc>
    239e:	24 e0       	ldi	r18, 0x04	; 4
    23a0:	a2 0e       	add	r10, r18
    23a2:	b1 1c       	adc	r11, r1
    23a4:	f6 01       	movw	r30, r12
    23a6:	60 81       	ld	r22, Z
    23a8:	71 81       	ldd	r23, Z+1	; 0x01
    23aa:	82 81       	ldd	r24, Z+2	; 0x02
    23ac:	93 81       	ldd	r25, Z+3	; 0x03
    23ae:	0a c0       	rjmp	.+20     	; 0x23c4 <vfprintf+0x4d0>
    23b0:	f2 e0       	ldi	r31, 0x02	; 2
    23b2:	af 0e       	add	r10, r31
    23b4:	b1 1c       	adc	r11, r1
    23b6:	f6 01       	movw	r30, r12
    23b8:	60 81       	ld	r22, Z
    23ba:	71 81       	ldd	r23, Z+1	; 0x01
    23bc:	07 2e       	mov	r0, r23
    23be:	00 0c       	add	r0, r0
    23c0:	88 0b       	sbc	r24, r24
    23c2:	99 0b       	sbc	r25, r25
    23c4:	f9 2d       	mov	r31, r9
    23c6:	ff 76       	andi	r31, 0x6F	; 111
    23c8:	9f 2e       	mov	r9, r31
    23ca:	97 ff       	sbrs	r25, 7
    23cc:	09 c0       	rjmp	.+18     	; 0x23e0 <vfprintf+0x4ec>
    23ce:	90 95       	com	r25
    23d0:	80 95       	com	r24
    23d2:	70 95       	com	r23
    23d4:	61 95       	neg	r22
    23d6:	7f 4f       	sbci	r23, 0xFF	; 255
    23d8:	8f 4f       	sbci	r24, 0xFF	; 255
    23da:	9f 4f       	sbci	r25, 0xFF	; 255
    23dc:	f0 68       	ori	r31, 0x80	; 128
    23de:	9f 2e       	mov	r9, r31
    23e0:	2a e0       	ldi	r18, 0x0A	; 10
    23e2:	30 e0       	ldi	r19, 0x00	; 0
    23e4:	a3 01       	movw	r20, r6
    23e6:	0e 94 44 15 	call	0x2a88	; 0x2a88 <__ultoa_invert>
    23ea:	c8 2e       	mov	r12, r24
    23ec:	c6 18       	sub	r12, r6
    23ee:	3f c0       	rjmp	.+126    	; 0x246e <vfprintf+0x57a>
    23f0:	09 2d       	mov	r16, r9
    23f2:	85 37       	cpi	r24, 0x75	; 117
    23f4:	21 f4       	brne	.+8      	; 0x23fe <vfprintf+0x50a>
    23f6:	0f 7e       	andi	r16, 0xEF	; 239
    23f8:	2a e0       	ldi	r18, 0x0A	; 10
    23fa:	30 e0       	ldi	r19, 0x00	; 0
    23fc:	1d c0       	rjmp	.+58     	; 0x2438 <vfprintf+0x544>
    23fe:	09 7f       	andi	r16, 0xF9	; 249
    2400:	8f 36       	cpi	r24, 0x6F	; 111
    2402:	91 f0       	breq	.+36     	; 0x2428 <vfprintf+0x534>
    2404:	18 f4       	brcc	.+6      	; 0x240c <vfprintf+0x518>
    2406:	88 35       	cpi	r24, 0x58	; 88
    2408:	59 f0       	breq	.+22     	; 0x2420 <vfprintf+0x52c>
    240a:	c3 c0       	rjmp	.+390    	; 0x2592 <vfprintf+0x69e>
    240c:	80 37       	cpi	r24, 0x70	; 112
    240e:	19 f0       	breq	.+6      	; 0x2416 <vfprintf+0x522>
    2410:	88 37       	cpi	r24, 0x78	; 120
    2412:	11 f0       	breq	.+4      	; 0x2418 <vfprintf+0x524>
    2414:	be c0       	rjmp	.+380    	; 0x2592 <vfprintf+0x69e>
    2416:	00 61       	ori	r16, 0x10	; 16
    2418:	04 ff       	sbrs	r16, 4
    241a:	09 c0       	rjmp	.+18     	; 0x242e <vfprintf+0x53a>
    241c:	04 60       	ori	r16, 0x04	; 4
    241e:	07 c0       	rjmp	.+14     	; 0x242e <vfprintf+0x53a>
    2420:	94 fe       	sbrs	r9, 4
    2422:	08 c0       	rjmp	.+16     	; 0x2434 <vfprintf+0x540>
    2424:	06 60       	ori	r16, 0x06	; 6
    2426:	06 c0       	rjmp	.+12     	; 0x2434 <vfprintf+0x540>
    2428:	28 e0       	ldi	r18, 0x08	; 8
    242a:	30 e0       	ldi	r19, 0x00	; 0
    242c:	05 c0       	rjmp	.+10     	; 0x2438 <vfprintf+0x544>
    242e:	20 e1       	ldi	r18, 0x10	; 16
    2430:	30 e0       	ldi	r19, 0x00	; 0
    2432:	02 c0       	rjmp	.+4      	; 0x2438 <vfprintf+0x544>
    2434:	20 e1       	ldi	r18, 0x10	; 16
    2436:	32 e0       	ldi	r19, 0x02	; 2
    2438:	56 01       	movw	r10, r12
    243a:	07 ff       	sbrs	r16, 7
    243c:	09 c0       	rjmp	.+18     	; 0x2450 <vfprintf+0x55c>
    243e:	84 e0       	ldi	r24, 0x04	; 4
    2440:	a8 0e       	add	r10, r24
    2442:	b1 1c       	adc	r11, r1
    2444:	f6 01       	movw	r30, r12
    2446:	60 81       	ld	r22, Z
    2448:	71 81       	ldd	r23, Z+1	; 0x01
    244a:	82 81       	ldd	r24, Z+2	; 0x02
    244c:	93 81       	ldd	r25, Z+3	; 0x03
    244e:	08 c0       	rjmp	.+16     	; 0x2460 <vfprintf+0x56c>
    2450:	f2 e0       	ldi	r31, 0x02	; 2
    2452:	af 0e       	add	r10, r31
    2454:	b1 1c       	adc	r11, r1
    2456:	f6 01       	movw	r30, r12
    2458:	60 81       	ld	r22, Z
    245a:	71 81       	ldd	r23, Z+1	; 0x01
    245c:	80 e0       	ldi	r24, 0x00	; 0
    245e:	90 e0       	ldi	r25, 0x00	; 0
    2460:	a3 01       	movw	r20, r6
    2462:	0e 94 44 15 	call	0x2a88	; 0x2a88 <__ultoa_invert>
    2466:	c8 2e       	mov	r12, r24
    2468:	c6 18       	sub	r12, r6
    246a:	0f 77       	andi	r16, 0x7F	; 127
    246c:	90 2e       	mov	r9, r16
    246e:	96 fe       	sbrs	r9, 6
    2470:	0b c0       	rjmp	.+22     	; 0x2488 <vfprintf+0x594>
    2472:	09 2d       	mov	r16, r9
    2474:	0e 7f       	andi	r16, 0xFE	; 254
    2476:	c1 16       	cp	r12, r17
    2478:	50 f4       	brcc	.+20     	; 0x248e <vfprintf+0x59a>
    247a:	94 fe       	sbrs	r9, 4
    247c:	0a c0       	rjmp	.+20     	; 0x2492 <vfprintf+0x59e>
    247e:	92 fc       	sbrc	r9, 2
    2480:	08 c0       	rjmp	.+16     	; 0x2492 <vfprintf+0x59e>
    2482:	09 2d       	mov	r16, r9
    2484:	0e 7e       	andi	r16, 0xEE	; 238
    2486:	05 c0       	rjmp	.+10     	; 0x2492 <vfprintf+0x59e>
    2488:	dc 2c       	mov	r13, r12
    248a:	09 2d       	mov	r16, r9
    248c:	03 c0       	rjmp	.+6      	; 0x2494 <vfprintf+0x5a0>
    248e:	dc 2c       	mov	r13, r12
    2490:	01 c0       	rjmp	.+2      	; 0x2494 <vfprintf+0x5a0>
    2492:	d1 2e       	mov	r13, r17
    2494:	04 ff       	sbrs	r16, 4
    2496:	0d c0       	rjmp	.+26     	; 0x24b2 <vfprintf+0x5be>
    2498:	fe 01       	movw	r30, r28
    249a:	ec 0d       	add	r30, r12
    249c:	f1 1d       	adc	r31, r1
    249e:	80 81       	ld	r24, Z
    24a0:	80 33       	cpi	r24, 0x30	; 48
    24a2:	11 f4       	brne	.+4      	; 0x24a8 <vfprintf+0x5b4>
    24a4:	09 7e       	andi	r16, 0xE9	; 233
    24a6:	09 c0       	rjmp	.+18     	; 0x24ba <vfprintf+0x5c6>
    24a8:	02 ff       	sbrs	r16, 2
    24aa:	06 c0       	rjmp	.+12     	; 0x24b8 <vfprintf+0x5c4>
    24ac:	d3 94       	inc	r13
    24ae:	d3 94       	inc	r13
    24b0:	04 c0       	rjmp	.+8      	; 0x24ba <vfprintf+0x5c6>
    24b2:	80 2f       	mov	r24, r16
    24b4:	86 78       	andi	r24, 0x86	; 134
    24b6:	09 f0       	breq	.+2      	; 0x24ba <vfprintf+0x5c6>
    24b8:	d3 94       	inc	r13
    24ba:	03 fd       	sbrc	r16, 3
    24bc:	11 c0       	rjmp	.+34     	; 0x24e0 <vfprintf+0x5ec>
    24be:	00 ff       	sbrs	r16, 0
    24c0:	06 c0       	rjmp	.+12     	; 0x24ce <vfprintf+0x5da>
    24c2:	1c 2d       	mov	r17, r12
    24c4:	d5 14       	cp	r13, r5
    24c6:	80 f4       	brcc	.+32     	; 0x24e8 <vfprintf+0x5f4>
    24c8:	15 0d       	add	r17, r5
    24ca:	1d 19       	sub	r17, r13
    24cc:	0d c0       	rjmp	.+26     	; 0x24e8 <vfprintf+0x5f4>
    24ce:	d5 14       	cp	r13, r5
    24d0:	58 f4       	brcc	.+22     	; 0x24e8 <vfprintf+0x5f4>
    24d2:	b7 01       	movw	r22, r14
    24d4:	80 e2       	ldi	r24, 0x20	; 32
    24d6:	90 e0       	ldi	r25, 0x00	; 0
    24d8:	0e 94 e6 14 	call	0x29cc	; 0x29cc <fputc>
    24dc:	d3 94       	inc	r13
    24de:	f7 cf       	rjmp	.-18     	; 0x24ce <vfprintf+0x5da>
    24e0:	d5 14       	cp	r13, r5
    24e2:	10 f4       	brcc	.+4      	; 0x24e8 <vfprintf+0x5f4>
    24e4:	5d 18       	sub	r5, r13
    24e6:	01 c0       	rjmp	.+2      	; 0x24ea <vfprintf+0x5f6>
    24e8:	51 2c       	mov	r5, r1
    24ea:	04 ff       	sbrs	r16, 4
    24ec:	10 c0       	rjmp	.+32     	; 0x250e <vfprintf+0x61a>
    24ee:	b7 01       	movw	r22, r14
    24f0:	80 e3       	ldi	r24, 0x30	; 48
    24f2:	90 e0       	ldi	r25, 0x00	; 0
    24f4:	0e 94 e6 14 	call	0x29cc	; 0x29cc <fputc>
    24f8:	02 ff       	sbrs	r16, 2
    24fa:	17 c0       	rjmp	.+46     	; 0x252a <vfprintf+0x636>
    24fc:	01 fd       	sbrc	r16, 1
    24fe:	03 c0       	rjmp	.+6      	; 0x2506 <vfprintf+0x612>
    2500:	88 e7       	ldi	r24, 0x78	; 120
    2502:	90 e0       	ldi	r25, 0x00	; 0
    2504:	02 c0       	rjmp	.+4      	; 0x250a <vfprintf+0x616>
    2506:	88 e5       	ldi	r24, 0x58	; 88
    2508:	90 e0       	ldi	r25, 0x00	; 0
    250a:	b7 01       	movw	r22, r14
    250c:	0c c0       	rjmp	.+24     	; 0x2526 <vfprintf+0x632>
    250e:	80 2f       	mov	r24, r16
    2510:	86 78       	andi	r24, 0x86	; 134
    2512:	59 f0       	breq	.+22     	; 0x252a <vfprintf+0x636>
    2514:	01 ff       	sbrs	r16, 1
    2516:	02 c0       	rjmp	.+4      	; 0x251c <vfprintf+0x628>
    2518:	8b e2       	ldi	r24, 0x2B	; 43
    251a:	01 c0       	rjmp	.+2      	; 0x251e <vfprintf+0x62a>
    251c:	80 e2       	ldi	r24, 0x20	; 32
    251e:	07 fd       	sbrc	r16, 7
    2520:	8d e2       	ldi	r24, 0x2D	; 45
    2522:	b7 01       	movw	r22, r14
    2524:	90 e0       	ldi	r25, 0x00	; 0
    2526:	0e 94 e6 14 	call	0x29cc	; 0x29cc <fputc>
    252a:	c1 16       	cp	r12, r17
    252c:	38 f4       	brcc	.+14     	; 0x253c <vfprintf+0x648>
    252e:	b7 01       	movw	r22, r14
    2530:	80 e3       	ldi	r24, 0x30	; 48
    2532:	90 e0       	ldi	r25, 0x00	; 0
    2534:	0e 94 e6 14 	call	0x29cc	; 0x29cc <fputc>
    2538:	11 50       	subi	r17, 0x01	; 1
    253a:	f7 cf       	rjmp	.-18     	; 0x252a <vfprintf+0x636>
    253c:	ca 94       	dec	r12
    253e:	f3 01       	movw	r30, r6
    2540:	ec 0d       	add	r30, r12
    2542:	f1 1d       	adc	r31, r1
    2544:	80 81       	ld	r24, Z
    2546:	b7 01       	movw	r22, r14
    2548:	90 e0       	ldi	r25, 0x00	; 0
    254a:	0e 94 e6 14 	call	0x29cc	; 0x29cc <fputc>
    254e:	c1 10       	cpse	r12, r1
    2550:	f5 cf       	rjmp	.-22     	; 0x253c <vfprintf+0x648>
    2552:	15 c0       	rjmp	.+42     	; 0x257e <vfprintf+0x68a>
    2554:	f4 e0       	ldi	r31, 0x04	; 4
    2556:	f5 15       	cp	r31, r5
    2558:	60 f5       	brcc	.+88     	; 0x25b2 <vfprintf+0x6be>
    255a:	84 e0       	ldi	r24, 0x04	; 4
    255c:	58 1a       	sub	r5, r24
    255e:	93 fe       	sbrs	r9, 3
    2560:	1f c0       	rjmp	.+62     	; 0x25a0 <vfprintf+0x6ac>
    2562:	01 11       	cpse	r16, r1
    2564:	27 c0       	rjmp	.+78     	; 0x25b4 <vfprintf+0x6c0>
    2566:	2c 85       	ldd	r18, Y+12	; 0x0c
    2568:	23 ff       	sbrs	r18, 3
    256a:	2a c0       	rjmp	.+84     	; 0x25c0 <vfprintf+0x6cc>
    256c:	08 e6       	ldi	r16, 0x68	; 104
    256e:	10 e0       	ldi	r17, 0x00	; 0
    2570:	39 2d       	mov	r19, r9
    2572:	30 71       	andi	r19, 0x10	; 16
    2574:	93 2e       	mov	r9, r19
    2576:	f8 01       	movw	r30, r16
    2578:	84 91       	lpm	r24, Z
    257a:	81 11       	cpse	r24, r1
    257c:	24 c0       	rjmp	.+72     	; 0x25c6 <vfprintf+0x6d2>
    257e:	55 20       	and	r5, r5
    2580:	09 f4       	brne	.+2      	; 0x2584 <vfprintf+0x690>
    2582:	e4 cc       	rjmp	.-1592   	; 0x1f4c <vfprintf+0x58>
    2584:	b7 01       	movw	r22, r14
    2586:	80 e2       	ldi	r24, 0x20	; 32
    2588:	90 e0       	ldi	r25, 0x00	; 0
    258a:	0e 94 e6 14 	call	0x29cc	; 0x29cc <fputc>
    258e:	5a 94       	dec	r5
    2590:	f6 cf       	rjmp	.-20     	; 0x257e <vfprintf+0x68a>
    2592:	f7 01       	movw	r30, r14
    2594:	86 81       	ldd	r24, Z+6	; 0x06
    2596:	97 81       	ldd	r25, Z+7	; 0x07
    2598:	26 c0       	rjmp	.+76     	; 0x25e6 <vfprintf+0x6f2>
    259a:	8f ef       	ldi	r24, 0xFF	; 255
    259c:	9f ef       	ldi	r25, 0xFF	; 255
    259e:	23 c0       	rjmp	.+70     	; 0x25e6 <vfprintf+0x6f2>
    25a0:	b7 01       	movw	r22, r14
    25a2:	80 e2       	ldi	r24, 0x20	; 32
    25a4:	90 e0       	ldi	r25, 0x00	; 0
    25a6:	0e 94 e6 14 	call	0x29cc	; 0x29cc <fputc>
    25aa:	5a 94       	dec	r5
    25ac:	51 10       	cpse	r5, r1
    25ae:	f8 cf       	rjmp	.-16     	; 0x25a0 <vfprintf+0x6ac>
    25b0:	d8 cf       	rjmp	.-80     	; 0x2562 <vfprintf+0x66e>
    25b2:	51 2c       	mov	r5, r1
    25b4:	b7 01       	movw	r22, r14
    25b6:	80 2f       	mov	r24, r16
    25b8:	90 e0       	ldi	r25, 0x00	; 0
    25ba:	0e 94 e6 14 	call	0x29cc	; 0x29cc <fputc>
    25be:	d3 cf       	rjmp	.-90     	; 0x2566 <vfprintf+0x672>
    25c0:	0c e6       	ldi	r16, 0x6C	; 108
    25c2:	10 e0       	ldi	r17, 0x00	; 0
    25c4:	d5 cf       	rjmp	.-86     	; 0x2570 <vfprintf+0x67c>
    25c6:	91 10       	cpse	r9, r1
    25c8:	80 52       	subi	r24, 0x20	; 32
    25ca:	b7 01       	movw	r22, r14
    25cc:	90 e0       	ldi	r25, 0x00	; 0
    25ce:	0e 94 e6 14 	call	0x29cc	; 0x29cc <fputc>
    25d2:	0f 5f       	subi	r16, 0xFF	; 255
    25d4:	1f 4f       	sbci	r17, 0xFF	; 255
    25d6:	cf cf       	rjmp	.-98     	; 0x2576 <vfprintf+0x682>
    25d8:	23 e0       	ldi	r18, 0x03	; 3
    25da:	25 15       	cp	r18, r5
    25dc:	10 f4       	brcc	.+4      	; 0x25e2 <vfprintf+0x6ee>
    25de:	83 e0       	ldi	r24, 0x03	; 3
    25e0:	bd cf       	rjmp	.-134    	; 0x255c <vfprintf+0x668>
    25e2:	51 2c       	mov	r5, r1
    25e4:	c0 cf       	rjmp	.-128    	; 0x2566 <vfprintf+0x672>
    25e6:	60 96       	adiw	r28, 0x10	; 16
    25e8:	e2 e1       	ldi	r30, 0x12	; 18
    25ea:	0c 94 77 13 	jmp	0x26ee	; 0x26ee <__epilogue_restores__>

000025ee <__udivmodhi4>:
    25ee:	aa 1b       	sub	r26, r26
    25f0:	bb 1b       	sub	r27, r27
    25f2:	51 e1       	ldi	r21, 0x11	; 17
    25f4:	07 c0       	rjmp	.+14     	; 0x2604 <__udivmodhi4_ep>

000025f6 <__udivmodhi4_loop>:
    25f6:	aa 1f       	adc	r26, r26
    25f8:	bb 1f       	adc	r27, r27
    25fa:	a6 17       	cp	r26, r22
    25fc:	b7 07       	cpc	r27, r23
    25fe:	10 f0       	brcs	.+4      	; 0x2604 <__udivmodhi4_ep>
    2600:	a6 1b       	sub	r26, r22
    2602:	b7 0b       	sbc	r27, r23

00002604 <__udivmodhi4_ep>:
    2604:	88 1f       	adc	r24, r24
    2606:	99 1f       	adc	r25, r25
    2608:	5a 95       	dec	r21
    260a:	a9 f7       	brne	.-22     	; 0x25f6 <__udivmodhi4_loop>
    260c:	80 95       	com	r24
    260e:	90 95       	com	r25
    2610:	bc 01       	movw	r22, r24
    2612:	cd 01       	movw	r24, r26
    2614:	08 95       	ret

00002616 <__udivmodsi4>:
    2616:	a1 e2       	ldi	r26, 0x21	; 33
    2618:	1a 2e       	mov	r1, r26
    261a:	aa 1b       	sub	r26, r26
    261c:	bb 1b       	sub	r27, r27
    261e:	fd 01       	movw	r30, r26
    2620:	0d c0       	rjmp	.+26     	; 0x263c <__udivmodsi4_ep>

00002622 <__udivmodsi4_loop>:
    2622:	aa 1f       	adc	r26, r26
    2624:	bb 1f       	adc	r27, r27
    2626:	ee 1f       	adc	r30, r30
    2628:	ff 1f       	adc	r31, r31
    262a:	a2 17       	cp	r26, r18
    262c:	b3 07       	cpc	r27, r19
    262e:	e4 07       	cpc	r30, r20
    2630:	f5 07       	cpc	r31, r21
    2632:	20 f0       	brcs	.+8      	; 0x263c <__udivmodsi4_ep>
    2634:	a2 1b       	sub	r26, r18
    2636:	b3 0b       	sbc	r27, r19
    2638:	e4 0b       	sbc	r30, r20
    263a:	f5 0b       	sbc	r31, r21

0000263c <__udivmodsi4_ep>:
    263c:	66 1f       	adc	r22, r22
    263e:	77 1f       	adc	r23, r23
    2640:	88 1f       	adc	r24, r24
    2642:	99 1f       	adc	r25, r25
    2644:	1a 94       	dec	r1
    2646:	69 f7       	brne	.-38     	; 0x2622 <__udivmodsi4_loop>
    2648:	60 95       	com	r22
    264a:	70 95       	com	r23
    264c:	80 95       	com	r24
    264e:	90 95       	com	r25
    2650:	9b 01       	movw	r18, r22
    2652:	ac 01       	movw	r20, r24
    2654:	bd 01       	movw	r22, r26
    2656:	cf 01       	movw	r24, r30
    2658:	08 95       	ret

0000265a <__divmodsi4>:
    265a:	05 2e       	mov	r0, r21
    265c:	97 fb       	bst	r25, 7
    265e:	1e f4       	brtc	.+6      	; 0x2666 <__divmodsi4+0xc>
    2660:	00 94       	com	r0
    2662:	0e 94 44 13 	call	0x2688	; 0x2688 <__negsi2>
    2666:	57 fd       	sbrc	r21, 7
    2668:	07 d0       	rcall	.+14     	; 0x2678 <__divmodsi4_neg2>
    266a:	0e 94 0b 13 	call	0x2616	; 0x2616 <__udivmodsi4>
    266e:	07 fc       	sbrc	r0, 7
    2670:	03 d0       	rcall	.+6      	; 0x2678 <__divmodsi4_neg2>
    2672:	4e f4       	brtc	.+18     	; 0x2686 <__divmodsi4_exit>
    2674:	0c 94 44 13 	jmp	0x2688	; 0x2688 <__negsi2>

00002678 <__divmodsi4_neg2>:
    2678:	50 95       	com	r21
    267a:	40 95       	com	r20
    267c:	30 95       	com	r19
    267e:	21 95       	neg	r18
    2680:	3f 4f       	sbci	r19, 0xFF	; 255
    2682:	4f 4f       	sbci	r20, 0xFF	; 255
    2684:	5f 4f       	sbci	r21, 0xFF	; 255

00002686 <__divmodsi4_exit>:
    2686:	08 95       	ret

00002688 <__negsi2>:
    2688:	90 95       	com	r25
    268a:	80 95       	com	r24
    268c:	70 95       	com	r23
    268e:	61 95       	neg	r22
    2690:	7f 4f       	sbci	r23, 0xFF	; 255
    2692:	8f 4f       	sbci	r24, 0xFF	; 255
    2694:	9f 4f       	sbci	r25, 0xFF	; 255
    2696:	08 95       	ret

00002698 <__umulhisi3>:
    2698:	a2 9f       	mul	r26, r18
    269a:	b0 01       	movw	r22, r0
    269c:	b3 9f       	mul	r27, r19
    269e:	c0 01       	movw	r24, r0
    26a0:	a3 9f       	mul	r26, r19
    26a2:	70 0d       	add	r23, r0
    26a4:	81 1d       	adc	r24, r1
    26a6:	11 24       	eor	r1, r1
    26a8:	91 1d       	adc	r25, r1
    26aa:	b2 9f       	mul	r27, r18
    26ac:	70 0d       	add	r23, r0
    26ae:	81 1d       	adc	r24, r1
    26b0:	11 24       	eor	r1, r1
    26b2:	91 1d       	adc	r25, r1
    26b4:	08 95       	ret

000026b6 <__prologue_saves__>:
    26b6:	2f 92       	push	r2
    26b8:	3f 92       	push	r3
    26ba:	4f 92       	push	r4
    26bc:	5f 92       	push	r5
    26be:	6f 92       	push	r6
    26c0:	7f 92       	push	r7
    26c2:	8f 92       	push	r8
    26c4:	9f 92       	push	r9
    26c6:	af 92       	push	r10
    26c8:	bf 92       	push	r11
    26ca:	cf 92       	push	r12
    26cc:	df 92       	push	r13
    26ce:	ef 92       	push	r14
    26d0:	ff 92       	push	r15
    26d2:	0f 93       	push	r16
    26d4:	1f 93       	push	r17
    26d6:	cf 93       	push	r28
    26d8:	df 93       	push	r29
    26da:	cd b7       	in	r28, 0x3d	; 61
    26dc:	de b7       	in	r29, 0x3e	; 62
    26de:	ca 1b       	sub	r28, r26
    26e0:	db 0b       	sbc	r29, r27
    26e2:	0f b6       	in	r0, 0x3f	; 63
    26e4:	f8 94       	cli
    26e6:	de bf       	out	0x3e, r29	; 62
    26e8:	0f be       	out	0x3f, r0	; 63
    26ea:	cd bf       	out	0x3d, r28	; 61
    26ec:	09 94       	ijmp

000026ee <__epilogue_restores__>:
    26ee:	2a 88       	ldd	r2, Y+18	; 0x12
    26f0:	39 88       	ldd	r3, Y+17	; 0x11
    26f2:	48 88       	ldd	r4, Y+16	; 0x10
    26f4:	5f 84       	ldd	r5, Y+15	; 0x0f
    26f6:	6e 84       	ldd	r6, Y+14	; 0x0e
    26f8:	7d 84       	ldd	r7, Y+13	; 0x0d
    26fa:	8c 84       	ldd	r8, Y+12	; 0x0c
    26fc:	9b 84       	ldd	r9, Y+11	; 0x0b
    26fe:	aa 84       	ldd	r10, Y+10	; 0x0a
    2700:	b9 84       	ldd	r11, Y+9	; 0x09
    2702:	c8 84       	ldd	r12, Y+8	; 0x08
    2704:	df 80       	ldd	r13, Y+7	; 0x07
    2706:	ee 80       	ldd	r14, Y+6	; 0x06
    2708:	fd 80       	ldd	r15, Y+5	; 0x05
    270a:	0c 81       	ldd	r16, Y+4	; 0x04
    270c:	1b 81       	ldd	r17, Y+3	; 0x03
    270e:	aa 81       	ldd	r26, Y+2	; 0x02
    2710:	b9 81       	ldd	r27, Y+1	; 0x01
    2712:	ce 0f       	add	r28, r30
    2714:	d1 1d       	adc	r29, r1
    2716:	0f b6       	in	r0, 0x3f	; 63
    2718:	f8 94       	cli
    271a:	de bf       	out	0x3e, r29	; 62
    271c:	0f be       	out	0x3f, r0	; 63
    271e:	cd bf       	out	0x3d, r28	; 61
    2720:	ed 01       	movw	r28, r26
    2722:	08 95       	ret

00002724 <__ftoa_engine>:
    2724:	28 30       	cpi	r18, 0x08	; 8
    2726:	08 f0       	brcs	.+2      	; 0x272a <__ftoa_engine+0x6>
    2728:	27 e0       	ldi	r18, 0x07	; 7
    272a:	33 27       	eor	r19, r19
    272c:	da 01       	movw	r26, r20
    272e:	99 0f       	add	r25, r25
    2730:	31 1d       	adc	r19, r1
    2732:	87 fd       	sbrc	r24, 7
    2734:	91 60       	ori	r25, 0x01	; 1
    2736:	00 96       	adiw	r24, 0x00	; 0
    2738:	61 05       	cpc	r22, r1
    273a:	71 05       	cpc	r23, r1
    273c:	39 f4       	brne	.+14     	; 0x274c <__ftoa_engine+0x28>
    273e:	32 60       	ori	r19, 0x02	; 2
    2740:	2e 5f       	subi	r18, 0xFE	; 254
    2742:	3d 93       	st	X+, r19
    2744:	30 e3       	ldi	r19, 0x30	; 48
    2746:	2a 95       	dec	r18
    2748:	e1 f7       	brne	.-8      	; 0x2742 <__ftoa_engine+0x1e>
    274a:	08 95       	ret
    274c:	9f 3f       	cpi	r25, 0xFF	; 255
    274e:	30 f0       	brcs	.+12     	; 0x275c <__ftoa_engine+0x38>
    2750:	80 38       	cpi	r24, 0x80	; 128
    2752:	71 05       	cpc	r23, r1
    2754:	61 05       	cpc	r22, r1
    2756:	09 f0       	breq	.+2      	; 0x275a <__ftoa_engine+0x36>
    2758:	3c 5f       	subi	r19, 0xFC	; 252
    275a:	3c 5f       	subi	r19, 0xFC	; 252
    275c:	3d 93       	st	X+, r19
    275e:	91 30       	cpi	r25, 0x01	; 1
    2760:	08 f0       	brcs	.+2      	; 0x2764 <__ftoa_engine+0x40>
    2762:	80 68       	ori	r24, 0x80	; 128
    2764:	91 1d       	adc	r25, r1
    2766:	df 93       	push	r29
    2768:	cf 93       	push	r28
    276a:	1f 93       	push	r17
    276c:	0f 93       	push	r16
    276e:	ff 92       	push	r15
    2770:	ef 92       	push	r14
    2772:	19 2f       	mov	r17, r25
    2774:	98 7f       	andi	r25, 0xF8	; 248
    2776:	96 95       	lsr	r25
    2778:	e9 2f       	mov	r30, r25
    277a:	96 95       	lsr	r25
    277c:	96 95       	lsr	r25
    277e:	e9 0f       	add	r30, r25
    2780:	ff 27       	eor	r31, r31
    2782:	e6 53       	subi	r30, 0x36	; 54
    2784:	ff 4f       	sbci	r31, 0xFF	; 255
    2786:	99 27       	eor	r25, r25
    2788:	33 27       	eor	r19, r19
    278a:	ee 24       	eor	r14, r14
    278c:	ff 24       	eor	r15, r15
    278e:	a7 01       	movw	r20, r14
    2790:	e7 01       	movw	r28, r14
    2792:	05 90       	lpm	r0, Z+
    2794:	08 94       	sec
    2796:	07 94       	ror	r0
    2798:	28 f4       	brcc	.+10     	; 0x27a4 <__ftoa_engine+0x80>
    279a:	36 0f       	add	r19, r22
    279c:	e7 1e       	adc	r14, r23
    279e:	f8 1e       	adc	r15, r24
    27a0:	49 1f       	adc	r20, r25
    27a2:	51 1d       	adc	r21, r1
    27a4:	66 0f       	add	r22, r22
    27a6:	77 1f       	adc	r23, r23
    27a8:	88 1f       	adc	r24, r24
    27aa:	99 1f       	adc	r25, r25
    27ac:	06 94       	lsr	r0
    27ae:	a1 f7       	brne	.-24     	; 0x2798 <__ftoa_engine+0x74>
    27b0:	05 90       	lpm	r0, Z+
    27b2:	07 94       	ror	r0
    27b4:	28 f4       	brcc	.+10     	; 0x27c0 <__ftoa_engine+0x9c>
    27b6:	e7 0e       	add	r14, r23
    27b8:	f8 1e       	adc	r15, r24
    27ba:	49 1f       	adc	r20, r25
    27bc:	56 1f       	adc	r21, r22
    27be:	c1 1d       	adc	r28, r1
    27c0:	77 0f       	add	r23, r23
    27c2:	88 1f       	adc	r24, r24
    27c4:	99 1f       	adc	r25, r25
    27c6:	66 1f       	adc	r22, r22
    27c8:	06 94       	lsr	r0
    27ca:	a1 f7       	brne	.-24     	; 0x27b4 <__ftoa_engine+0x90>
    27cc:	05 90       	lpm	r0, Z+
    27ce:	07 94       	ror	r0
    27d0:	28 f4       	brcc	.+10     	; 0x27dc <__ftoa_engine+0xb8>
    27d2:	f8 0e       	add	r15, r24
    27d4:	49 1f       	adc	r20, r25
    27d6:	56 1f       	adc	r21, r22
    27d8:	c7 1f       	adc	r28, r23
    27da:	d1 1d       	adc	r29, r1
    27dc:	88 0f       	add	r24, r24
    27de:	99 1f       	adc	r25, r25
    27e0:	66 1f       	adc	r22, r22
    27e2:	77 1f       	adc	r23, r23
    27e4:	06 94       	lsr	r0
    27e6:	a1 f7       	brne	.-24     	; 0x27d0 <__ftoa_engine+0xac>
    27e8:	05 90       	lpm	r0, Z+
    27ea:	07 94       	ror	r0
    27ec:	20 f4       	brcc	.+8      	; 0x27f6 <__ftoa_engine+0xd2>
    27ee:	49 0f       	add	r20, r25
    27f0:	56 1f       	adc	r21, r22
    27f2:	c7 1f       	adc	r28, r23
    27f4:	d8 1f       	adc	r29, r24
    27f6:	99 0f       	add	r25, r25
    27f8:	66 1f       	adc	r22, r22
    27fa:	77 1f       	adc	r23, r23
    27fc:	88 1f       	adc	r24, r24
    27fe:	06 94       	lsr	r0
    2800:	a9 f7       	brne	.-22     	; 0x27ec <__ftoa_engine+0xc8>
    2802:	84 91       	lpm	r24, Z
    2804:	10 95       	com	r17
    2806:	17 70       	andi	r17, 0x07	; 7
    2808:	41 f0       	breq	.+16     	; 0x281a <__ftoa_engine+0xf6>
    280a:	d6 95       	lsr	r29
    280c:	c7 95       	ror	r28
    280e:	57 95       	ror	r21
    2810:	47 95       	ror	r20
    2812:	f7 94       	ror	r15
    2814:	e7 94       	ror	r14
    2816:	1a 95       	dec	r17
    2818:	c1 f7       	brne	.-16     	; 0x280a <__ftoa_engine+0xe6>
    281a:	e0 e7       	ldi	r30, 0x70	; 112
    281c:	f0 e0       	ldi	r31, 0x00	; 0
    281e:	68 94       	set
    2820:	15 90       	lpm	r1, Z+
    2822:	15 91       	lpm	r17, Z+
    2824:	35 91       	lpm	r19, Z+
    2826:	65 91       	lpm	r22, Z+
    2828:	95 91       	lpm	r25, Z+
    282a:	05 90       	lpm	r0, Z+
    282c:	7f e2       	ldi	r23, 0x2F	; 47
    282e:	73 95       	inc	r23
    2830:	e1 18       	sub	r14, r1
    2832:	f1 0a       	sbc	r15, r17
    2834:	43 0b       	sbc	r20, r19
    2836:	56 0b       	sbc	r21, r22
    2838:	c9 0b       	sbc	r28, r25
    283a:	d0 09       	sbc	r29, r0
    283c:	c0 f7       	brcc	.-16     	; 0x282e <__ftoa_engine+0x10a>
    283e:	e1 0c       	add	r14, r1
    2840:	f1 1e       	adc	r15, r17
    2842:	43 1f       	adc	r20, r19
    2844:	56 1f       	adc	r21, r22
    2846:	c9 1f       	adc	r28, r25
    2848:	d0 1d       	adc	r29, r0
    284a:	7e f4       	brtc	.+30     	; 0x286a <__ftoa_engine+0x146>
    284c:	70 33       	cpi	r23, 0x30	; 48
    284e:	11 f4       	brne	.+4      	; 0x2854 <__ftoa_engine+0x130>
    2850:	8a 95       	dec	r24
    2852:	e6 cf       	rjmp	.-52     	; 0x2820 <__ftoa_engine+0xfc>
    2854:	e8 94       	clt
    2856:	01 50       	subi	r16, 0x01	; 1
    2858:	30 f0       	brcs	.+12     	; 0x2866 <__ftoa_engine+0x142>
    285a:	08 0f       	add	r16, r24
    285c:	0a f4       	brpl	.+2      	; 0x2860 <__ftoa_engine+0x13c>
    285e:	00 27       	eor	r16, r16
    2860:	02 17       	cp	r16, r18
    2862:	08 f4       	brcc	.+2      	; 0x2866 <__ftoa_engine+0x142>
    2864:	20 2f       	mov	r18, r16
    2866:	23 95       	inc	r18
    2868:	02 2f       	mov	r16, r18
    286a:	7a 33       	cpi	r23, 0x3A	; 58
    286c:	28 f0       	brcs	.+10     	; 0x2878 <__ftoa_engine+0x154>
    286e:	79 e3       	ldi	r23, 0x39	; 57
    2870:	7d 93       	st	X+, r23
    2872:	2a 95       	dec	r18
    2874:	e9 f7       	brne	.-6      	; 0x2870 <__ftoa_engine+0x14c>
    2876:	10 c0       	rjmp	.+32     	; 0x2898 <__ftoa_engine+0x174>
    2878:	7d 93       	st	X+, r23
    287a:	2a 95       	dec	r18
    287c:	89 f6       	brne	.-94     	; 0x2820 <__ftoa_engine+0xfc>
    287e:	06 94       	lsr	r0
    2880:	97 95       	ror	r25
    2882:	67 95       	ror	r22
    2884:	37 95       	ror	r19
    2886:	17 95       	ror	r17
    2888:	17 94       	ror	r1
    288a:	e1 18       	sub	r14, r1
    288c:	f1 0a       	sbc	r15, r17
    288e:	43 0b       	sbc	r20, r19
    2890:	56 0b       	sbc	r21, r22
    2892:	c9 0b       	sbc	r28, r25
    2894:	d0 09       	sbc	r29, r0
    2896:	98 f0       	brcs	.+38     	; 0x28be <__ftoa_engine+0x19a>
    2898:	23 95       	inc	r18
    289a:	7e 91       	ld	r23, -X
    289c:	73 95       	inc	r23
    289e:	7a 33       	cpi	r23, 0x3A	; 58
    28a0:	08 f0       	brcs	.+2      	; 0x28a4 <__ftoa_engine+0x180>
    28a2:	70 e3       	ldi	r23, 0x30	; 48
    28a4:	7c 93       	st	X, r23
    28a6:	20 13       	cpse	r18, r16
    28a8:	b8 f7       	brcc	.-18     	; 0x2898 <__ftoa_engine+0x174>
    28aa:	7e 91       	ld	r23, -X
    28ac:	70 61       	ori	r23, 0x10	; 16
    28ae:	7d 93       	st	X+, r23
    28b0:	30 f0       	brcs	.+12     	; 0x28be <__ftoa_engine+0x19a>
    28b2:	83 95       	inc	r24
    28b4:	71 e3       	ldi	r23, 0x31	; 49
    28b6:	7d 93       	st	X+, r23
    28b8:	70 e3       	ldi	r23, 0x30	; 48
    28ba:	2a 95       	dec	r18
    28bc:	e1 f7       	brne	.-8      	; 0x28b6 <__ftoa_engine+0x192>
    28be:	11 24       	eor	r1, r1
    28c0:	ef 90       	pop	r14
    28c2:	ff 90       	pop	r15
    28c4:	0f 91       	pop	r16
    28c6:	1f 91       	pop	r17
    28c8:	cf 91       	pop	r28
    28ca:	df 91       	pop	r29
    28cc:	99 27       	eor	r25, r25
    28ce:	87 fd       	sbrc	r24, 7
    28d0:	90 95       	com	r25
    28d2:	08 95       	ret

000028d4 <setjmp>:
    28d4:	dc 01       	movw	r26, r24
    28d6:	2d 92       	st	X+, r2
    28d8:	3d 92       	st	X+, r3
    28da:	4d 92       	st	X+, r4
    28dc:	5d 92       	st	X+, r5
    28de:	6d 92       	st	X+, r6
    28e0:	7d 92       	st	X+, r7
    28e2:	8d 92       	st	X+, r8
    28e4:	9d 92       	st	X+, r9
    28e6:	ad 92       	st	X+, r10
    28e8:	bd 92       	st	X+, r11
    28ea:	cd 92       	st	X+, r12
    28ec:	dd 92       	st	X+, r13
    28ee:	ed 92       	st	X+, r14
    28f0:	fd 92       	st	X+, r15
    28f2:	0d 93       	st	X+, r16
    28f4:	1d 93       	st	X+, r17
    28f6:	cd 93       	st	X+, r28
    28f8:	dd 93       	st	X+, r29
    28fa:	ff 91       	pop	r31
    28fc:	ef 91       	pop	r30
    28fe:	8d b7       	in	r24, 0x3d	; 61
    2900:	8d 93       	st	X+, r24
    2902:	8e b7       	in	r24, 0x3e	; 62
    2904:	8d 93       	st	X+, r24
    2906:	8f b7       	in	r24, 0x3f	; 63
    2908:	8d 93       	st	X+, r24
    290a:	ed 93       	st	X+, r30
    290c:	fd 93       	st	X+, r31
    290e:	88 27       	eor	r24, r24
    2910:	99 27       	eor	r25, r25
    2912:	09 94       	ijmp

00002914 <longjmp>:
    2914:	dc 01       	movw	r26, r24
    2916:	cb 01       	movw	r24, r22
    2918:	81 30       	cpi	r24, 0x01	; 1
    291a:	91 05       	cpc	r25, r1
    291c:	81 1d       	adc	r24, r1
    291e:	2d 90       	ld	r2, X+
    2920:	3d 90       	ld	r3, X+
    2922:	4d 90       	ld	r4, X+
    2924:	5d 90       	ld	r5, X+
    2926:	6d 90       	ld	r6, X+
    2928:	7d 90       	ld	r7, X+
    292a:	8d 90       	ld	r8, X+
    292c:	9d 90       	ld	r9, X+
    292e:	ad 90       	ld	r10, X+
    2930:	bd 90       	ld	r11, X+
    2932:	cd 90       	ld	r12, X+
    2934:	dd 90       	ld	r13, X+
    2936:	ed 90       	ld	r14, X+
    2938:	fd 90       	ld	r15, X+
    293a:	0d 91       	ld	r16, X+
    293c:	1d 91       	ld	r17, X+
    293e:	cd 91       	ld	r28, X+
    2940:	dd 91       	ld	r29, X+
    2942:	ed 91       	ld	r30, X+
    2944:	fd 91       	ld	r31, X+
    2946:	0d 90       	ld	r0, X+
    2948:	f8 94       	cli
    294a:	fe bf       	out	0x3e, r31	; 62
    294c:	0f be       	out	0x3f, r0	; 63
    294e:	ed bf       	out	0x3d, r30	; 61
    2950:	ed 91       	ld	r30, X+
    2952:	fd 91       	ld	r31, X+
    2954:	09 94       	ijmp

00002956 <strnlen_P>:
    2956:	fc 01       	movw	r30, r24
    2958:	05 90       	lpm	r0, Z+
    295a:	61 50       	subi	r22, 0x01	; 1
    295c:	70 40       	sbci	r23, 0x00	; 0
    295e:	01 10       	cpse	r0, r1
    2960:	d8 f7       	brcc	.-10     	; 0x2958 <strnlen_P+0x2>
    2962:	80 95       	com	r24
    2964:	90 95       	com	r25
    2966:	8e 0f       	add	r24, r30
    2968:	9f 1f       	adc	r25, r31
    296a:	08 95       	ret

0000296c <strnlen>:
    296c:	fc 01       	movw	r30, r24
    296e:	61 50       	subi	r22, 0x01	; 1
    2970:	70 40       	sbci	r23, 0x00	; 0
    2972:	01 90       	ld	r0, Z+
    2974:	01 10       	cpse	r0, r1
    2976:	d8 f7       	brcc	.-10     	; 0x296e <strnlen+0x2>
    2978:	80 95       	com	r24
    297a:	90 95       	com	r25
    297c:	8e 0f       	add	r24, r30
    297e:	9f 1f       	adc	r25, r31
    2980:	08 95       	ret

00002982 <__itoa_ncheck>:
    2982:	bb 27       	eor	r27, r27
    2984:	4a 30       	cpi	r20, 0x0A	; 10
    2986:	31 f4       	brne	.+12     	; 0x2994 <__itoa_ncheck+0x12>
    2988:	99 23       	and	r25, r25
    298a:	22 f4       	brpl	.+8      	; 0x2994 <__itoa_ncheck+0x12>
    298c:	bd e2       	ldi	r27, 0x2D	; 45
    298e:	90 95       	com	r25
    2990:	81 95       	neg	r24
    2992:	9f 4f       	sbci	r25, 0xFF	; 255
    2994:	0c 94 cd 14 	jmp	0x299a	; 0x299a <__utoa_common>

00002998 <__utoa_ncheck>:
    2998:	bb 27       	eor	r27, r27

0000299a <__utoa_common>:
    299a:	fb 01       	movw	r30, r22
    299c:	55 27       	eor	r21, r21
    299e:	aa 27       	eor	r26, r26
    29a0:	88 0f       	add	r24, r24
    29a2:	99 1f       	adc	r25, r25
    29a4:	aa 1f       	adc	r26, r26
    29a6:	a4 17       	cp	r26, r20
    29a8:	10 f0       	brcs	.+4      	; 0x29ae <__utoa_common+0x14>
    29aa:	a4 1b       	sub	r26, r20
    29ac:	83 95       	inc	r24
    29ae:	50 51       	subi	r21, 0x10	; 16
    29b0:	b9 f7       	brne	.-18     	; 0x29a0 <__utoa_common+0x6>
    29b2:	a0 5d       	subi	r26, 0xD0	; 208
    29b4:	aa 33       	cpi	r26, 0x3A	; 58
    29b6:	08 f0       	brcs	.+2      	; 0x29ba <__utoa_common+0x20>
    29b8:	a9 5d       	subi	r26, 0xD9	; 217
    29ba:	a1 93       	st	Z+, r26
    29bc:	00 97       	sbiw	r24, 0x00	; 0
    29be:	79 f7       	brne	.-34     	; 0x299e <__utoa_common+0x4>
    29c0:	b1 11       	cpse	r27, r1
    29c2:	b1 93       	st	Z+, r27
    29c4:	11 92       	st	Z+, r1
    29c6:	cb 01       	movw	r24, r22
    29c8:	0c 94 a2 15 	jmp	0x2b44	; 0x2b44 <strrev>

000029cc <fputc>:
    29cc:	0f 93       	push	r16
    29ce:	1f 93       	push	r17
    29d0:	cf 93       	push	r28
    29d2:	df 93       	push	r29
    29d4:	fb 01       	movw	r30, r22
    29d6:	23 81       	ldd	r18, Z+3	; 0x03
    29d8:	21 fd       	sbrc	r18, 1
    29da:	03 c0       	rjmp	.+6      	; 0x29e2 <fputc+0x16>
    29dc:	8f ef       	ldi	r24, 0xFF	; 255
    29de:	9f ef       	ldi	r25, 0xFF	; 255
    29e0:	2c c0       	rjmp	.+88     	; 0x2a3a <fputc+0x6e>
    29e2:	22 ff       	sbrs	r18, 2
    29e4:	16 c0       	rjmp	.+44     	; 0x2a12 <fputc+0x46>
    29e6:	46 81       	ldd	r20, Z+6	; 0x06
    29e8:	57 81       	ldd	r21, Z+7	; 0x07
    29ea:	24 81       	ldd	r18, Z+4	; 0x04
    29ec:	35 81       	ldd	r19, Z+5	; 0x05
    29ee:	42 17       	cp	r20, r18
    29f0:	53 07       	cpc	r21, r19
    29f2:	44 f4       	brge	.+16     	; 0x2a04 <fputc+0x38>
    29f4:	a0 81       	ld	r26, Z
    29f6:	b1 81       	ldd	r27, Z+1	; 0x01
    29f8:	9d 01       	movw	r18, r26
    29fa:	2f 5f       	subi	r18, 0xFF	; 255
    29fc:	3f 4f       	sbci	r19, 0xFF	; 255
    29fe:	31 83       	std	Z+1, r19	; 0x01
    2a00:	20 83       	st	Z, r18
    2a02:	8c 93       	st	X, r24
    2a04:	26 81       	ldd	r18, Z+6	; 0x06
    2a06:	37 81       	ldd	r19, Z+7	; 0x07
    2a08:	2f 5f       	subi	r18, 0xFF	; 255
    2a0a:	3f 4f       	sbci	r19, 0xFF	; 255
    2a0c:	37 83       	std	Z+7, r19	; 0x07
    2a0e:	26 83       	std	Z+6, r18	; 0x06
    2a10:	14 c0       	rjmp	.+40     	; 0x2a3a <fputc+0x6e>
    2a12:	8b 01       	movw	r16, r22
    2a14:	ec 01       	movw	r28, r24
    2a16:	fb 01       	movw	r30, r22
    2a18:	00 84       	ldd	r0, Z+8	; 0x08
    2a1a:	f1 85       	ldd	r31, Z+9	; 0x09
    2a1c:	e0 2d       	mov	r30, r0
    2a1e:	09 95       	icall
    2a20:	89 2b       	or	r24, r25
    2a22:	e1 f6       	brne	.-72     	; 0x29dc <fputc+0x10>
    2a24:	d8 01       	movw	r26, r16
    2a26:	16 96       	adiw	r26, 0x06	; 6
    2a28:	8d 91       	ld	r24, X+
    2a2a:	9c 91       	ld	r25, X
    2a2c:	17 97       	sbiw	r26, 0x07	; 7
    2a2e:	01 96       	adiw	r24, 0x01	; 1
    2a30:	17 96       	adiw	r26, 0x07	; 7
    2a32:	9c 93       	st	X, r25
    2a34:	8e 93       	st	-X, r24
    2a36:	16 97       	sbiw	r26, 0x06	; 6
    2a38:	ce 01       	movw	r24, r28
    2a3a:	df 91       	pop	r29
    2a3c:	cf 91       	pop	r28
    2a3e:	1f 91       	pop	r17
    2a40:	0f 91       	pop	r16
    2a42:	08 95       	ret

00002a44 <sprintf>:
    2a44:	ae e0       	ldi	r26, 0x0E	; 14
    2a46:	b0 e0       	ldi	r27, 0x00	; 0
    2a48:	e8 e2       	ldi	r30, 0x28	; 40
    2a4a:	f5 e1       	ldi	r31, 0x15	; 21
    2a4c:	0c 94 69 13 	jmp	0x26d2	; 0x26d2 <__prologue_saves__+0x1c>
    2a50:	0d 89       	ldd	r16, Y+21	; 0x15
    2a52:	1e 89       	ldd	r17, Y+22	; 0x16
    2a54:	86 e0       	ldi	r24, 0x06	; 6
    2a56:	8c 83       	std	Y+4, r24	; 0x04
    2a58:	1a 83       	std	Y+2, r17	; 0x02
    2a5a:	09 83       	std	Y+1, r16	; 0x01
    2a5c:	8f ef       	ldi	r24, 0xFF	; 255
    2a5e:	9f e7       	ldi	r25, 0x7F	; 127
    2a60:	9e 83       	std	Y+6, r25	; 0x06
    2a62:	8d 83       	std	Y+5, r24	; 0x05
    2a64:	ae 01       	movw	r20, r28
    2a66:	47 5e       	subi	r20, 0xE7	; 231
    2a68:	5f 4f       	sbci	r21, 0xFF	; 255
    2a6a:	6f 89       	ldd	r22, Y+23	; 0x17
    2a6c:	78 8d       	ldd	r23, Y+24	; 0x18
    2a6e:	ce 01       	movw	r24, r28
    2a70:	01 96       	adiw	r24, 0x01	; 1
    2a72:	0e 94 7a 0f 	call	0x1ef4	; 0x1ef4 <vfprintf>
    2a76:	ef 81       	ldd	r30, Y+7	; 0x07
    2a78:	f8 85       	ldd	r31, Y+8	; 0x08
    2a7a:	e0 0f       	add	r30, r16
    2a7c:	f1 1f       	adc	r31, r17
    2a7e:	10 82       	st	Z, r1
    2a80:	2e 96       	adiw	r28, 0x0e	; 14
    2a82:	e4 e0       	ldi	r30, 0x04	; 4
    2a84:	0c 94 85 13 	jmp	0x270a	; 0x270a <__epilogue_restores__+0x1c>

00002a88 <__ultoa_invert>:
    2a88:	fa 01       	movw	r30, r20
    2a8a:	aa 27       	eor	r26, r26
    2a8c:	28 30       	cpi	r18, 0x08	; 8
    2a8e:	51 f1       	breq	.+84     	; 0x2ae4 <__ultoa_invert+0x5c>
    2a90:	20 31       	cpi	r18, 0x10	; 16
    2a92:	81 f1       	breq	.+96     	; 0x2af4 <__ultoa_invert+0x6c>
    2a94:	e8 94       	clt
    2a96:	6f 93       	push	r22
    2a98:	6e 7f       	andi	r22, 0xFE	; 254
    2a9a:	6e 5f       	subi	r22, 0xFE	; 254
    2a9c:	7f 4f       	sbci	r23, 0xFF	; 255
    2a9e:	8f 4f       	sbci	r24, 0xFF	; 255
    2aa0:	9f 4f       	sbci	r25, 0xFF	; 255
    2aa2:	af 4f       	sbci	r26, 0xFF	; 255
    2aa4:	b1 e0       	ldi	r27, 0x01	; 1
    2aa6:	3e d0       	rcall	.+124    	; 0x2b24 <__ultoa_invert+0x9c>
    2aa8:	b4 e0       	ldi	r27, 0x04	; 4
    2aaa:	3c d0       	rcall	.+120    	; 0x2b24 <__ultoa_invert+0x9c>
    2aac:	67 0f       	add	r22, r23
    2aae:	78 1f       	adc	r23, r24
    2ab0:	89 1f       	adc	r24, r25
    2ab2:	9a 1f       	adc	r25, r26
    2ab4:	a1 1d       	adc	r26, r1
    2ab6:	68 0f       	add	r22, r24
    2ab8:	79 1f       	adc	r23, r25
    2aba:	8a 1f       	adc	r24, r26
    2abc:	91 1d       	adc	r25, r1
    2abe:	a1 1d       	adc	r26, r1
    2ac0:	6a 0f       	add	r22, r26
    2ac2:	71 1d       	adc	r23, r1
    2ac4:	81 1d       	adc	r24, r1
    2ac6:	91 1d       	adc	r25, r1
    2ac8:	a1 1d       	adc	r26, r1
    2aca:	20 d0       	rcall	.+64     	; 0x2b0c <__ultoa_invert+0x84>
    2acc:	09 f4       	brne	.+2      	; 0x2ad0 <__ultoa_invert+0x48>
    2ace:	68 94       	set
    2ad0:	3f 91       	pop	r19
    2ad2:	2a e0       	ldi	r18, 0x0A	; 10
    2ad4:	26 9f       	mul	r18, r22
    2ad6:	11 24       	eor	r1, r1
    2ad8:	30 19       	sub	r19, r0
    2ada:	30 5d       	subi	r19, 0xD0	; 208
    2adc:	31 93       	st	Z+, r19
    2ade:	de f6       	brtc	.-74     	; 0x2a96 <__ultoa_invert+0xe>
    2ae0:	cf 01       	movw	r24, r30
    2ae2:	08 95       	ret
    2ae4:	46 2f       	mov	r20, r22
    2ae6:	47 70       	andi	r20, 0x07	; 7
    2ae8:	40 5d       	subi	r20, 0xD0	; 208
    2aea:	41 93       	st	Z+, r20
    2aec:	b3 e0       	ldi	r27, 0x03	; 3
    2aee:	0f d0       	rcall	.+30     	; 0x2b0e <__ultoa_invert+0x86>
    2af0:	c9 f7       	brne	.-14     	; 0x2ae4 <__ultoa_invert+0x5c>
    2af2:	f6 cf       	rjmp	.-20     	; 0x2ae0 <__ultoa_invert+0x58>
    2af4:	46 2f       	mov	r20, r22
    2af6:	4f 70       	andi	r20, 0x0F	; 15
    2af8:	40 5d       	subi	r20, 0xD0	; 208
    2afa:	4a 33       	cpi	r20, 0x3A	; 58
    2afc:	18 f0       	brcs	.+6      	; 0x2b04 <__ultoa_invert+0x7c>
    2afe:	49 5d       	subi	r20, 0xD9	; 217
    2b00:	31 fd       	sbrc	r19, 1
    2b02:	40 52       	subi	r20, 0x20	; 32
    2b04:	41 93       	st	Z+, r20
    2b06:	02 d0       	rcall	.+4      	; 0x2b0c <__ultoa_invert+0x84>
    2b08:	a9 f7       	brne	.-22     	; 0x2af4 <__ultoa_invert+0x6c>
    2b0a:	ea cf       	rjmp	.-44     	; 0x2ae0 <__ultoa_invert+0x58>
    2b0c:	b4 e0       	ldi	r27, 0x04	; 4
    2b0e:	a6 95       	lsr	r26
    2b10:	97 95       	ror	r25
    2b12:	87 95       	ror	r24
    2b14:	77 95       	ror	r23
    2b16:	67 95       	ror	r22
    2b18:	ba 95       	dec	r27
    2b1a:	c9 f7       	brne	.-14     	; 0x2b0e <__ultoa_invert+0x86>
    2b1c:	00 97       	sbiw	r24, 0x00	; 0
    2b1e:	61 05       	cpc	r22, r1
    2b20:	71 05       	cpc	r23, r1
    2b22:	08 95       	ret
    2b24:	9b 01       	movw	r18, r22
    2b26:	ac 01       	movw	r20, r24
    2b28:	0a 2e       	mov	r0, r26
    2b2a:	06 94       	lsr	r0
    2b2c:	57 95       	ror	r21
    2b2e:	47 95       	ror	r20
    2b30:	37 95       	ror	r19
    2b32:	27 95       	ror	r18
    2b34:	ba 95       	dec	r27
    2b36:	c9 f7       	brne	.-14     	; 0x2b2a <__ultoa_invert+0xa2>
    2b38:	62 0f       	add	r22, r18
    2b3a:	73 1f       	adc	r23, r19
    2b3c:	84 1f       	adc	r24, r20
    2b3e:	95 1f       	adc	r25, r21
    2b40:	a0 1d       	adc	r26, r0
    2b42:	08 95       	ret

00002b44 <strrev>:
    2b44:	dc 01       	movw	r26, r24
    2b46:	fc 01       	movw	r30, r24
    2b48:	67 2f       	mov	r22, r23
    2b4a:	71 91       	ld	r23, Z+
    2b4c:	77 23       	and	r23, r23
    2b4e:	e1 f7       	brne	.-8      	; 0x2b48 <strrev+0x4>
    2b50:	32 97       	sbiw	r30, 0x02	; 2
    2b52:	04 c0       	rjmp	.+8      	; 0x2b5c <strrev+0x18>
    2b54:	7c 91       	ld	r23, X
    2b56:	6d 93       	st	X+, r22
    2b58:	70 83       	st	Z, r23
    2b5a:	62 91       	ld	r22, -Z
    2b5c:	ae 17       	cp	r26, r30
    2b5e:	bf 07       	cpc	r27, r31
    2b60:	c8 f3       	brcs	.-14     	; 0x2b54 <strrev+0x10>
    2b62:	08 95       	ret

00002b64 <_exit>:
    2b64:	f8 94       	cli

00002b66 <__stop_program>:
    2b66:	ff cf       	rjmp	.-2      	; 0x2b66 <__stop_program>
