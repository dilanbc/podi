
complete.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001188  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000072  00800060  00001188  0000121c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000037  008000d2  008000d2  0000128e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000128e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000012ec  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000e8  00000000  00000000  00001328  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001503  00000000  00000000  00001410  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007ec  00000000  00000000  00002913  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000ab5  00000000  00000000  000030ff  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000029c  00000000  00000000  00003bb4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000579  00000000  00000000  00003e50  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000ab8  00000000  00000000  000043c9  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000d8  00000000  00000000  00004e81  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 55 01 	jmp	0x2aa	; 0x2aa <__vector_10>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 46 01 	jmp	0x28c	; 0x28c <__vector_13>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e8 e8       	ldi	r30, 0x88	; 136
      68:	f1 e1       	ldi	r31, 0x11	; 17
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	a2 3d       	cpi	r26, 0xD2	; 210
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
      76:	21 e0       	ldi	r18, 0x01	; 1
      78:	a2 ed       	ldi	r26, 0xD2	; 210
      7a:	b0 e0       	ldi	r27, 0x00	; 0
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a9 30       	cpi	r26, 0x09	; 9
      82:	b2 07       	cpc	r27, r18
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 81 02 	call	0x502	; 0x502 <main>
      8a:	0c 94 c2 08 	jmp	0x1184	; 0x1184 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <LcdBacklight>:
}

void USART_TxNumber(int32_t number,uint8_t dtype){
	
	itoa(number,num,dtype);
	USART_TxString(num);
      92:	81 30       	cpi	r24, 0x01	; 1
      94:	21 f4       	brne	.+8      	; 0x9e <LcdBacklight+0xc>
      96:	88 e0       	ldi	r24, 0x08	; 8
      98:	80 93 66 00 	sts	0x0066, r24	; 0x800066 <Backlight>
      9c:	08 95       	ret
      9e:	10 92 66 00 	sts	0x0066, r1	; 0x800066 <Backlight>
      a2:	08 95       	ret

000000a4 <Lcd4bitdata>:
      a4:	38 2f       	mov	r19, r24
      a6:	36 2b       	or	r19, r22
      a8:	20 91 66 00 	lds	r18, 0x0066	; 0x800066 <Backlight>
      ac:	23 2b       	or	r18, r19
      ae:	28 bb       	out	0x18, r18	; 24
      b0:	90 91 66 00 	lds	r25, 0x0066	; 0x800066 <Backlight>
      b4:	93 2b       	or	r25, r19
      b6:	94 60       	ori	r25, 0x04	; 4
      b8:	98 bb       	out	0x18, r25	; 24
      ba:	ef e8       	ldi	r30, 0x8F	; 143
      bc:	f1 e0       	ldi	r31, 0x01	; 1
      be:	31 97       	sbiw	r30, 0x01	; 1
      c0:	f1 f7       	brne	.-4      	; 0xbe <Lcd4bitdata+0x1a>
      c2:	00 c0       	rjmp	.+0      	; 0xc4 <Lcd4bitdata+0x20>
      c4:	00 00       	nop
      c6:	8b 7f       	andi	r24, 0xFB	; 251
      c8:	68 2b       	or	r22, r24
      ca:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <Backlight>
      ce:	68 2b       	or	r22, r24
      d0:	68 bb       	out	0x18, r22	; 24
      d2:	8f e9       	ldi	r24, 0x9F	; 159
      d4:	9f e0       	ldi	r25, 0x0F	; 15
      d6:	01 97       	sbiw	r24, 0x01	; 1
      d8:	f1 f7       	brne	.-4      	; 0xd6 <Lcd4bitdata+0x32>
      da:	00 c0       	rjmp	.+0      	; 0xdc <Lcd4bitdata+0x38>
      dc:	00 00       	nop
      de:	08 95       	ret

000000e0 <LcdCommand>:
      e0:	cf 93       	push	r28
      e2:	c8 2f       	mov	r28, r24
      e4:	60 e0       	ldi	r22, 0x00	; 0
      e6:	80 7f       	andi	r24, 0xF0	; 240
      e8:	0e 94 52 00 	call	0xa4	; 0xa4 <Lcd4bitdata>
      ec:	60 e0       	ldi	r22, 0x00	; 0
      ee:	8c 2f       	mov	r24, r28
      f0:	82 95       	swap	r24
      f2:	80 7f       	andi	r24, 0xF0	; 240
      f4:	0e 94 52 00 	call	0xa4	; 0xa4 <Lcd4bitdata>
      f8:	cf 91       	pop	r28
      fa:	08 95       	ret

000000fc <LcdInit>:
      fc:	81 e0       	ldi	r24, 0x01	; 1
      fe:	0e 94 49 00 	call	0x92	; 0x92 <LcdBacklight>
     102:	8f e3       	ldi	r24, 0x3F	; 63
     104:	9c e9       	ldi	r25, 0x9C	; 156
     106:	01 97       	sbiw	r24, 0x01	; 1
     108:	f1 f7       	brne	.-4      	; 0x106 <LcdInit+0xa>
     10a:	00 c0       	rjmp	.+0      	; 0x10c <LcdInit+0x10>
     10c:	00 00       	nop
     10e:	8f ef       	ldi	r24, 0xFF	; 255
     110:	87 bb       	out	0x17, r24	; 23
     112:	82 e0       	ldi	r24, 0x02	; 2
     114:	0e 94 70 00 	call	0xe0	; 0xe0 <LcdCommand>
     118:	88 e2       	ldi	r24, 0x28	; 40
     11a:	0e 94 70 00 	call	0xe0	; 0xe0 <LcdCommand>
     11e:	8c e0       	ldi	r24, 0x0C	; 12
     120:	0e 94 70 00 	call	0xe0	; 0xe0 <LcdCommand>
     124:	86 e0       	ldi	r24, 0x06	; 6
     126:	0e 94 70 00 	call	0xe0	; 0xe0 <LcdCommand>
     12a:	81 e0       	ldi	r24, 0x01	; 1
     12c:	0e 94 70 00 	call	0xe0	; 0xe0 <LcdCommand>
     130:	08 95       	ret

00000132 <LcdChar>:
     132:	cf 93       	push	r28
     134:	c8 2f       	mov	r28, r24
     136:	61 e0       	ldi	r22, 0x01	; 1
     138:	80 7f       	andi	r24, 0xF0	; 240
     13a:	0e 94 52 00 	call	0xa4	; 0xa4 <Lcd4bitdata>
     13e:	61 e0       	ldi	r22, 0x01	; 1
     140:	8c 2f       	mov	r24, r28
     142:	82 95       	swap	r24
     144:	80 7f       	andi	r24, 0xF0	; 240
     146:	0e 94 52 00 	call	0xa4	; 0xa4 <Lcd4bitdata>
     14a:	cf 91       	pop	r28
     14c:	08 95       	ret

0000014e <LcdString>:
     14e:	0f 93       	push	r16
     150:	1f 93       	push	r17
     152:	cf 93       	push	r28
     154:	df 93       	push	r29
     156:	8c 01       	movw	r16, r24
     158:	c0 e0       	ldi	r28, 0x00	; 0
     15a:	d0 e0       	ldi	r29, 0x00	; 0
     15c:	03 c0       	rjmp	.+6      	; 0x164 <LcdString+0x16>
     15e:	0e 94 99 00 	call	0x132	; 0x132 <LcdChar>
     162:	21 96       	adiw	r28, 0x01	; 1
     164:	f8 01       	movw	r30, r16
     166:	ec 0f       	add	r30, r28
     168:	fd 1f       	adc	r31, r29
     16a:	80 81       	ld	r24, Z
     16c:	81 11       	cpse	r24, r1
     16e:	f7 cf       	rjmp	.-18     	; 0x15e <LcdString+0x10>
     170:	df 91       	pop	r29
     172:	cf 91       	pop	r28
     174:	1f 91       	pop	r17
     176:	0f 91       	pop	r16
     178:	08 95       	ret

0000017a <LcdSetCursor>:
     17a:	cf 93       	push	r28
     17c:	df 93       	push	r29
     17e:	ea 01       	movw	r28, r20
     180:	61 30       	cpi	r22, 0x01	; 1
     182:	31 f0       	breq	.+12     	; 0x190 <LcdSetCursor+0x16>
     184:	58 f0       	brcs	.+22     	; 0x19c <LcdSetCursor+0x22>
     186:	62 30       	cpi	r22, 0x02	; 2
     188:	29 f0       	breq	.+10     	; 0x194 <LcdSetCursor+0x1a>
     18a:	63 30       	cpi	r22, 0x03	; 3
     18c:	29 f0       	breq	.+10     	; 0x198 <LcdSetCursor+0x1e>
     18e:	07 c0       	rjmp	.+14     	; 0x19e <LcdSetCursor+0x24>
     190:	90 ec       	ldi	r25, 0xC0	; 192
     192:	05 c0       	rjmp	.+10     	; 0x19e <LcdSetCursor+0x24>
     194:	94 e9       	ldi	r25, 0x94	; 148
     196:	03 c0       	rjmp	.+6      	; 0x19e <LcdSetCursor+0x24>
     198:	94 ed       	ldi	r25, 0xD4	; 212
     19a:	01 c0       	rjmp	.+2      	; 0x19e <LcdSetCursor+0x24>
     19c:	90 e8       	ldi	r25, 0x80	; 128
     19e:	8f 70       	andi	r24, 0x0F	; 15
     1a0:	89 2b       	or	r24, r25
     1a2:	0e 94 70 00 	call	0xe0	; 0xe0 <LcdCommand>
     1a6:	ce 01       	movw	r24, r28
     1a8:	0e 94 a7 00 	call	0x14e	; 0x14e <LcdString>
     1ac:	df 91       	pop	r29
     1ae:	cf 91       	pop	r28
     1b0:	08 95       	ret

000001b2 <TWIInit>:
     1b2:	11 b8       	out	0x01, r1	; 1
     1b4:	88 e4       	ldi	r24, 0x48	; 72
     1b6:	80 b9       	out	0x00, r24	; 0
     1b8:	84 e0       	ldi	r24, 0x04	; 4
     1ba:	86 bf       	out	0x36, r24	; 54
     1bc:	08 95       	ret

000001be <TWIStart>:
     1be:	84 ea       	ldi	r24, 0xA4	; 164
     1c0:	86 bf       	out	0x36, r24	; 54
     1c2:	06 b6       	in	r0, 0x36	; 54
     1c4:	07 fe       	sbrs	r0, 7
     1c6:	fd cf       	rjmp	.-6      	; 0x1c2 <TWIStart+0x4>
     1c8:	08 95       	ret

000001ca <TWIStop>:
     1ca:	84 e9       	ldi	r24, 0x94	; 148
     1cc:	86 bf       	out	0x36, r24	; 54
     1ce:	06 b6       	in	r0, 0x36	; 54
     1d0:	04 fc       	sbrc	r0, 4
     1d2:	fd cf       	rjmp	.-6      	; 0x1ce <TWIStop+0x4>
     1d4:	08 95       	ret

000001d6 <TWIWriteAddrs>:
     1d6:	90 e0       	ldi	r25, 0x00	; 0
     1d8:	88 0f       	add	r24, r24
     1da:	99 1f       	adc	r25, r25
     1dc:	86 2b       	or	r24, r22
     1de:	83 b9       	out	0x03, r24	; 3
     1e0:	84 e8       	ldi	r24, 0x84	; 132
     1e2:	86 bf       	out	0x36, r24	; 54
     1e4:	06 b6       	in	r0, 0x36	; 54
     1e6:	07 fe       	sbrs	r0, 7
     1e8:	fd cf       	rjmp	.-6      	; 0x1e4 <TWIWriteAddrs+0xe>
     1ea:	81 b1       	in	r24, 0x01	; 1
     1ec:	88 7f       	andi	r24, 0xF8	; 248
     1ee:	08 95       	ret

000001f0 <TWIWriteData>:
     1f0:	83 b9       	out	0x03, r24	; 3
     1f2:	84 e8       	ldi	r24, 0x84	; 132
     1f4:	86 bf       	out	0x36, r24	; 54
     1f6:	06 b6       	in	r0, 0x36	; 54
     1f8:	07 fe       	sbrs	r0, 7
     1fa:	fd cf       	rjmp	.-6      	; 0x1f6 <TWIWriteData+0x6>
     1fc:	81 b1       	in	r24, 0x01	; 1
     1fe:	88 7f       	andi	r24, 0xF8	; 248
     200:	08 95       	ret

00000202 <TWIReadACK>:
     202:	84 ec       	ldi	r24, 0xC4	; 196
     204:	86 bf       	out	0x36, r24	; 54
     206:	06 b6       	in	r0, 0x36	; 54
     208:	07 fe       	sbrs	r0, 7
     20a:	fd cf       	rjmp	.-6      	; 0x206 <TWIReadACK+0x4>
     20c:	83 b1       	in	r24, 0x03	; 3
     20e:	08 95       	ret

00000210 <TWIReadNACK>:
     210:	84 e8       	ldi	r24, 0x84	; 132
     212:	86 bf       	out	0x36, r24	; 54
     214:	06 b6       	in	r0, 0x36	; 54
     216:	07 fe       	sbrs	r0, 7
     218:	fd cf       	rjmp	.-6      	; 0x214 <TWIReadNACK+0x4>
     21a:	83 b1       	in	r24, 0x03	; 3
     21c:	08 95       	ret

0000021e <USART_Init>:
     21e:	9c 01       	movw	r18, r24
     220:	40 e0       	ldi	r20, 0x00	; 0
     222:	50 e0       	ldi	r21, 0x00	; 0
     224:	60 e2       	ldi	r22, 0x20	; 32
     226:	71 ea       	ldi	r23, 0xA1	; 161
     228:	87 e0       	ldi	r24, 0x07	; 7
     22a:	90 e0       	ldi	r25, 0x00	; 0
     22c:	0e 94 b6 05 	call	0xb6c	; 0xb6c <__udivmodsi4>
     230:	21 50       	subi	r18, 0x01	; 1
     232:	31 09       	sbc	r19, r1
     234:	30 bd       	out	0x20, r19	; 32
     236:	29 b9       	out	0x09, r18	; 9
     238:	88 e9       	ldi	r24, 0x98	; 152
     23a:	8a b9       	out	0x0a, r24	; 10
     23c:	8e e8       	ldi	r24, 0x8E	; 142
     23e:	80 bd       	out	0x20, r24	; 32
     240:	78 94       	sei
     242:	08 95       	ret

00000244 <USART_Transmit>:
     244:	5d 9b       	sbis	0x0b, 5	; 11
     246:	fe cf       	rjmp	.-4      	; 0x244 <USART_Transmit>
     248:	8c b9       	out	0x0c, r24	; 12
     24a:	08 95       	ret

0000024c <USART_TxString>:
     24c:	cf 93       	push	r28
     24e:	df 93       	push	r29
     250:	ec 01       	movw	r28, r24
     252:	03 c0       	rjmp	.+6      	; 0x25a <USART_TxString+0xe>
     254:	21 96       	adiw	r28, 0x01	; 1
     256:	0e 94 22 01 	call	0x244	; 0x244 <USART_Transmit>
     25a:	88 81       	ld	r24, Y
     25c:	81 11       	cpse	r24, r1
     25e:	fa cf       	rjmp	.-12     	; 0x254 <USART_TxString+0x8>
     260:	df 91       	pop	r29
     262:	cf 91       	pop	r28
     264:	08 95       	ret

00000266 <USART_TxStringln>:
     266:	cf 93       	push	r28
     268:	df 93       	push	r29
     26a:	ec 01       	movw	r28, r24
     26c:	03 c0       	rjmp	.+6      	; 0x274 <USART_TxStringln+0xe>
     26e:	21 96       	adiw	r28, 0x01	; 1
     270:	0e 94 22 01 	call	0x244	; 0x244 <USART_Transmit>
     274:	88 81       	ld	r24, Y
     276:	81 11       	cpse	r24, r1
     278:	fa cf       	rjmp	.-12     	; 0x26e <USART_TxStringln+0x8>
     27a:	8d e0       	ldi	r24, 0x0D	; 13
     27c:	0e 94 22 01 	call	0x244	; 0x244 <USART_Transmit>
     280:	8a e0       	ldi	r24, 0x0A	; 10
     282:	0e 94 22 01 	call	0x244	; 0x244 <USART_Transmit>
     286:	df 91       	pop	r29
     288:	cf 91       	pop	r28
     28a:	08 95       	ret

0000028c <__vector_13>:
	
}



ISR(USART_RXC_vect){//A,B,C,D ???
     28c:	1f 92       	push	r1
     28e:	0f 92       	push	r0
     290:	0f b6       	in	r0, 0x3f	; 63
     292:	0f 92       	push	r0
     294:	11 24       	eor	r1, r1
     296:	8f 93       	push	r24
	
rchar=UDR;
     298:	8c b1       	in	r24, 0x0c	; 12
     29a:	80 93 d9 00 	sts	0x00D9, r24	; 0x8000d9 <rchar>
 


	
		
}
     29e:	8f 91       	pop	r24
     2a0:	0f 90       	pop	r0
     2a2:	0f be       	out	0x3f, r0	; 63
     2a4:	0f 90       	pop	r0
     2a6:	1f 90       	pop	r1
     2a8:	18 95       	reti

000002aa <__vector_10>:
		_delay_ms(100);
		
    }
}

ISR(TIMER0_COMP_vect){//ultrasonic
     2aa:	1f 92       	push	r1
     2ac:	0f 92       	push	r0
     2ae:	0f b6       	in	r0, 0x3f	; 63
     2b0:	0f 92       	push	r0
     2b2:	11 24       	eor	r1, r1
     2b4:	8f 93       	push	r24
     2b6:	9f 93       	push	r25
	TimerCal++;
     2b8:	80 91 d6 00 	lds	r24, 0x00D6	; 0x8000d6 <TimerCal>
     2bc:	90 91 d7 00 	lds	r25, 0x00D7	; 0x8000d7 <TimerCal+0x1>
     2c0:	01 96       	adiw	r24, 0x01	; 1
     2c2:	90 93 d7 00 	sts	0x00D7, r25	; 0x8000d7 <TimerCal+0x1>
     2c6:	80 93 d6 00 	sts	0x00D6, r24	; 0x8000d6 <TimerCal>
	TCNT0=0;	
     2ca:	12 be       	out	0x32, r1	; 50
}
     2cc:	9f 91       	pop	r25
     2ce:	8f 91       	pop	r24
     2d0:	0f 90       	pop	r0
     2d2:	0f be       	out	0x3f, r0	; 63
     2d4:	0f 90       	pop	r0
     2d6:	1f 90       	pop	r1
     2d8:	18 95       	reti

000002da <Readtime>:


void Readtime(){
     2da:	1f 93       	push	r17
     2dc:	cf 93       	push	r28
     2de:	df 93       	push	r29
	uint8_t bit[5];
	TWIStart();/* Start I2C with device write address */
     2e0:	0e 94 df 00 	call	0x1be	; 0x1be <TWIStart>
	TWIWriteAddrs(104,0); //Return 24 mean device found, return mean no device
     2e4:	60 e0       	ldi	r22, 0x00	; 0
     2e6:	88 e6       	ldi	r24, 0x68	; 104
     2e8:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <TWIWriteAddrs>
	TWIWriteData(0);  //Register address
     2ec:	80 e0       	ldi	r24, 0x00	; 0
     2ee:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <TWIWriteData>
	
	TWIStart();
     2f2:	0e 94 df 00 	call	0x1be	; 0x1be <TWIStart>
	TWIWriteAddrs(104,1); //Write bit
     2f6:	61 e0       	ldi	r22, 0x01	; 1
     2f8:	88 e6       	ldi	r24, 0x68	; 104
     2fa:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <TWIWriteAddrs>
	bit[0]=TWIReadACK();
     2fe:	0e 94 01 01 	call	0x202	; 0x202 <TWIReadACK>
     302:	18 2f       	mov	r17, r24
	bit[1]=TWIReadACK();
     304:	0e 94 01 01 	call	0x202	; 0x202 <TWIReadACK>
     308:	d8 2f       	mov	r29, r24
	bit[2]=TWIReadNACK();
     30a:	0e 94 08 01 	call	0x210	; 0x210 <TWIReadNACK>
     30e:	c8 2f       	mov	r28, r24
	//bit[3]=TWIReadNACK();
	//h|=TWIReadACK()<<8;
	//h|=TWIReadNACK()<<16;
	TWIStop();
     310:	0e 94 e5 00 	call	0x1ca	; 0x1ca <TWIStop>
	secC=(((bit[0]&0xF0)>>4)*10)+(bit[0]&0xF);
     314:	81 2f       	mov	r24, r17
     316:	82 95       	swap	r24
     318:	8f 70       	andi	r24, 0x0F	; 15
     31a:	88 0f       	add	r24, r24
     31c:	98 2f       	mov	r25, r24
     31e:	99 0f       	add	r25, r25
     320:	99 0f       	add	r25, r25
     322:	89 0f       	add	r24, r25
     324:	1f 70       	andi	r17, 0x0F	; 15
     326:	18 0f       	add	r17, r24
     328:	10 93 07 01 	sts	0x0107, r17	; 0x800107 <secC>
	minC=(((bit[1]&0xF0)>>4)*10)+(bit[1]&0xF);
     32c:	8d 2f       	mov	r24, r29
     32e:	82 95       	swap	r24
     330:	8f 70       	andi	r24, 0x0F	; 15
     332:	88 0f       	add	r24, r24
     334:	98 2f       	mov	r25, r24
     336:	99 0f       	add	r25, r25
     338:	99 0f       	add	r25, r25
     33a:	89 0f       	add	r24, r25
     33c:	df 70       	andi	r29, 0x0F	; 15
     33e:	d8 0f       	add	r29, r24
     340:	d0 93 ee 00 	sts	0x00EE, r29	; 0x8000ee <minC>
	hourC=(((bit[2]&0b00110000)>>4)*10)+(bit[2]&0xF);
     344:	8c 2f       	mov	r24, r28
     346:	80 73       	andi	r24, 0x30	; 48
     348:	90 e0       	ldi	r25, 0x00	; 0
     34a:	95 95       	asr	r25
     34c:	87 95       	ror	r24
     34e:	95 95       	asr	r25
     350:	87 95       	ror	r24
     352:	95 95       	asr	r25
     354:	87 95       	ror	r24
     356:	95 95       	asr	r25
     358:	87 95       	ror	r24
     35a:	88 0f       	add	r24, r24
     35c:	98 2f       	mov	r25, r24
     35e:	99 0f       	add	r25, r25
     360:	99 0f       	add	r25, r25
     362:	89 0f       	add	r24, r25
     364:	cf 70       	andi	r28, 0x0F	; 15
     366:	8c 0f       	add	r24, r28
     368:	80 93 ef 00 	sts	0x00EF, r24	; 0x8000ef <hourC>
	//dayC=bit[3]&0b111;
}
     36c:	df 91       	pop	r29
     36e:	cf 91       	pop	r28
     370:	1f 91       	pop	r17
     372:	08 95       	ret

00000374 <setTime>:

void setTime(uint8_t hSet,uint8_t mSet,uint8_t sSet){
     374:	0f 93       	push	r16
     376:	1f 93       	push	r17
     378:	cf 93       	push	r28
     37a:	df 93       	push	r29
     37c:	08 2f       	mov	r16, r24
     37e:	16 2f       	mov	r17, r22
     380:	d4 2f       	mov	r29, r20
	TWIStart();
     382:	0e 94 df 00 	call	0x1be	; 0x1be <TWIStart>
	TWIWriteAddrs(104,0);
     386:	60 e0       	ldi	r22, 0x00	; 0
     388:	88 e6       	ldi	r24, 0x68	; 104
     38a:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <TWIWriteAddrs>
	TWIWriteData(0x02);
     38e:	82 e0       	ldi	r24, 0x02	; 2
     390:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <TWIWriteData>
	TWIWriteData(((hSet/10)<<4)|(hSet%10));
     394:	cd ec       	ldi	r28, 0xCD	; 205
     396:	0c 9f       	mul	r16, r28
     398:	91 2d       	mov	r25, r1
     39a:	11 24       	eor	r1, r1
     39c:	96 95       	lsr	r25
     39e:	96 95       	lsr	r25
     3a0:	96 95       	lsr	r25
     3a2:	20 e1       	ldi	r18, 0x10	; 16
     3a4:	92 9f       	mul	r25, r18
     3a6:	a0 01       	movw	r20, r0
     3a8:	11 24       	eor	r1, r1
     3aa:	99 0f       	add	r25, r25
     3ac:	29 2f       	mov	r18, r25
     3ae:	22 0f       	add	r18, r18
     3b0:	22 0f       	add	r18, r18
     3b2:	92 0f       	add	r25, r18
     3b4:	80 2f       	mov	r24, r16
     3b6:	89 1b       	sub	r24, r25
     3b8:	84 2b       	or	r24, r20
     3ba:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <TWIWriteData>
	TWIStop();
     3be:	0e 94 e5 00 	call	0x1ca	; 0x1ca <TWIStop>
	
	TWIStart();
     3c2:	0e 94 df 00 	call	0x1be	; 0x1be <TWIStart>
	TWIWriteAddrs(104,0);
     3c6:	60 e0       	ldi	r22, 0x00	; 0
     3c8:	88 e6       	ldi	r24, 0x68	; 104
     3ca:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <TWIWriteAddrs>
	TWIWriteData(0x01);
     3ce:	81 e0       	ldi	r24, 0x01	; 1
     3d0:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <TWIWriteData>
	TWIWriteData(((mSet/10)<<4)|(mSet%10));
     3d4:	1c 9f       	mul	r17, r28
     3d6:	91 2d       	mov	r25, r1
     3d8:	11 24       	eor	r1, r1
     3da:	96 95       	lsr	r25
     3dc:	96 95       	lsr	r25
     3de:	96 95       	lsr	r25
     3e0:	80 e1       	ldi	r24, 0x10	; 16
     3e2:	98 9f       	mul	r25, r24
     3e4:	a0 01       	movw	r20, r0
     3e6:	11 24       	eor	r1, r1
     3e8:	99 0f       	add	r25, r25
     3ea:	29 2f       	mov	r18, r25
     3ec:	22 0f       	add	r18, r18
     3ee:	22 0f       	add	r18, r18
     3f0:	92 0f       	add	r25, r18
     3f2:	81 2f       	mov	r24, r17
     3f4:	89 1b       	sub	r24, r25
     3f6:	84 2b       	or	r24, r20
     3f8:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <TWIWriteData>
	TWIStop();
     3fc:	0e 94 e5 00 	call	0x1ca	; 0x1ca <TWIStop>
	
	TWIStart();
     400:	0e 94 df 00 	call	0x1be	; 0x1be <TWIStart>
	TWIWriteAddrs(104,0);
     404:	60 e0       	ldi	r22, 0x00	; 0
     406:	88 e6       	ldi	r24, 0x68	; 104
     408:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <TWIWriteAddrs>
	TWIWriteData(0x00);
     40c:	80 e0       	ldi	r24, 0x00	; 0
     40e:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <TWIWriteData>
	TWIWriteData(((sSet/10)<<4)|(sSet%10));
     412:	dc 9f       	mul	r29, r28
     414:	c1 2d       	mov	r28, r1
     416:	11 24       	eor	r1, r1
     418:	c6 95       	lsr	r28
     41a:	c6 95       	lsr	r28
     41c:	c6 95       	lsr	r28
     41e:	20 e1       	ldi	r18, 0x10	; 16
     420:	c2 9f       	mul	r28, r18
     422:	c0 01       	movw	r24, r0
     424:	11 24       	eor	r1, r1
     426:	cc 0f       	add	r28, r28
     428:	9c 2f       	mov	r25, r28
     42a:	99 0f       	add	r25, r25
     42c:	99 0f       	add	r25, r25
     42e:	c9 0f       	add	r28, r25
     430:	dc 1b       	sub	r29, r28
     432:	8d 2b       	or	r24, r29
     434:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <TWIWriteData>
	TWIStop();
     438:	0e 94 e5 00 	call	0x1ca	; 0x1ca <TWIStop>

	
}
     43c:	df 91       	pop	r29
     43e:	cf 91       	pop	r28
     440:	1f 91       	pop	r17
     442:	0f 91       	pop	r16
     444:	08 95       	ret

00000446 <servoangle>:

void servoangle(uint8_t pin){
	
	for(uint8_t j=0;j<100;j++){
     446:	40 e0       	ldi	r20, 0x00	; 0
     448:	26 c0       	rjmp	.+76     	; 0x496 <servoangle+0x50>
		PORTC|=(1<<pin);
     44a:	95 b3       	in	r25, 0x15	; 21
     44c:	21 e0       	ldi	r18, 0x01	; 1
     44e:	30 e0       	ldi	r19, 0x00	; 0
     450:	08 2e       	mov	r0, r24
     452:	02 c0       	rjmp	.+4      	; 0x458 <servoangle+0x12>
     454:	22 0f       	add	r18, r18
     456:	33 1f       	adc	r19, r19
     458:	0a 94       	dec	r0
     45a:	e2 f7       	brpl	.-8      	; 0x454 <servoangle+0xe>
     45c:	92 2b       	or	r25, r18
     45e:	95 bb       	out	0x15, r25	; 21
		for(uint8_t i=0;i<10;i++){
     460:	90 e0       	ldi	r25, 0x00	; 0
     462:	07 c0       	rjmp	.+14     	; 0x472 <servoangle+0x2c>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     464:	e7 ec       	ldi	r30, 0xC7	; 199
     466:	f0 e0       	ldi	r31, 0x00	; 0
     468:	31 97       	sbiw	r30, 0x01	; 1
     46a:	f1 f7       	brne	.-4      	; 0x468 <servoangle+0x22>
     46c:	00 c0       	rjmp	.+0      	; 0x46e <servoangle+0x28>
     46e:	00 00       	nop
     470:	9f 5f       	subi	r25, 0xFF	; 255
     472:	9a 30       	cpi	r25, 0x0A	; 10
     474:	b8 f3       	brcs	.-18     	; 0x464 <servoangle+0x1e>
			_delay_us(100);
		}
		PORTC&=~(1<<pin);
     476:	95 b3       	in	r25, 0x15	; 21
     478:	20 95       	com	r18
     47a:	29 23       	and	r18, r25
     47c:	25 bb       	out	0x15, r18	; 21
		
		uint8_t ser=200-10;
		
		for(uint8_t i=0;i<ser;i++){
     47e:	90 e0       	ldi	r25, 0x00	; 0
     480:	07 c0       	rjmp	.+14     	; 0x490 <servoangle+0x4a>
     482:	e7 ec       	ldi	r30, 0xC7	; 199
     484:	f0 e0       	ldi	r31, 0x00	; 0
     486:	31 97       	sbiw	r30, 0x01	; 1
     488:	f1 f7       	brne	.-4      	; 0x486 <servoangle+0x40>
     48a:	00 c0       	rjmp	.+0      	; 0x48c <servoangle+0x46>
     48c:	00 00       	nop
     48e:	9f 5f       	subi	r25, 0xFF	; 255
     490:	9e 3b       	cpi	r25, 0xBE	; 190
     492:	b8 f3       	brcs	.-18     	; 0x482 <servoangle+0x3c>
	
}

void servoangle(uint8_t pin){
	
	for(uint8_t j=0;j<100;j++){
     494:	4f 5f       	subi	r20, 0xFF	; 255
     496:	44 36       	cpi	r20, 0x64	; 100
     498:	c0 f2       	brcs	.-80     	; 0x44a <servoangle+0x4>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     49a:	ff ef       	ldi	r31, 0xFF	; 255
     49c:	23 ed       	ldi	r18, 0xD3	; 211
     49e:	30 e3       	ldi	r19, 0x30	; 48
     4a0:	f1 50       	subi	r31, 0x01	; 1
     4a2:	20 40       	sbci	r18, 0x00	; 0
     4a4:	30 40       	sbci	r19, 0x00	; 0
     4a6:	e1 f7       	brne	.-8      	; 0x4a0 <servoangle+0x5a>
     4a8:	00 c0       	rjmp	.+0      	; 0x4aa <servoangle+0x64>
     4aa:	00 00       	nop
		for(uint8_t i=0;i<ser;i++){
			_delay_us(100);
		}
	}
	_delay_ms(2000);
	for(uint8_t j=0;j<100;j++){
     4ac:	40 e0       	ldi	r20, 0x00	; 0
     4ae:	26 c0       	rjmp	.+76     	; 0x4fc <servoangle+0xb6>
		
		PORTC|=(1<<pin);
     4b0:	95 b3       	in	r25, 0x15	; 21
     4b2:	21 e0       	ldi	r18, 0x01	; 1
     4b4:	30 e0       	ldi	r19, 0x00	; 0
     4b6:	08 2e       	mov	r0, r24
     4b8:	02 c0       	rjmp	.+4      	; 0x4be <servoangle+0x78>
     4ba:	22 0f       	add	r18, r18
     4bc:	33 1f       	adc	r19, r19
     4be:	0a 94       	dec	r0
     4c0:	e2 f7       	brpl	.-8      	; 0x4ba <servoangle+0x74>
     4c2:	92 2b       	or	r25, r18
     4c4:	95 bb       	out	0x15, r25	; 21
		for(uint8_t i=0;i<15;i++){
     4c6:	90 e0       	ldi	r25, 0x00	; 0
     4c8:	07 c0       	rjmp	.+14     	; 0x4d8 <servoangle+0x92>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     4ca:	e7 ec       	ldi	r30, 0xC7	; 199
     4cc:	f0 e0       	ldi	r31, 0x00	; 0
     4ce:	31 97       	sbiw	r30, 0x01	; 1
     4d0:	f1 f7       	brne	.-4      	; 0x4ce <servoangle+0x88>
     4d2:	00 c0       	rjmp	.+0      	; 0x4d4 <servoangle+0x8e>
     4d4:	00 00       	nop
     4d6:	9f 5f       	subi	r25, 0xFF	; 255
     4d8:	9f 30       	cpi	r25, 0x0F	; 15
     4da:	b8 f3       	brcs	.-18     	; 0x4ca <servoangle+0x84>
			_delay_us(100);
		}
		PORTC&=~(1<<pin);
     4dc:	95 b3       	in	r25, 0x15	; 21
     4de:	20 95       	com	r18
     4e0:	29 23       	and	r18, r25
     4e2:	25 bb       	out	0x15, r18	; 21
		
		uint8_t ser=200-15;
		
		for(uint8_t i=0;i<15;i++){
     4e4:	90 e0       	ldi	r25, 0x00	; 0
     4e6:	07 c0       	rjmp	.+14     	; 0x4f6 <servoangle+0xb0>
     4e8:	e7 ec       	ldi	r30, 0xC7	; 199
     4ea:	f0 e0       	ldi	r31, 0x00	; 0
     4ec:	31 97       	sbiw	r30, 0x01	; 1
     4ee:	f1 f7       	brne	.-4      	; 0x4ec <servoangle+0xa6>
     4f0:	00 c0       	rjmp	.+0      	; 0x4f2 <servoangle+0xac>
     4f2:	00 00       	nop
     4f4:	9f 5f       	subi	r25, 0xFF	; 255
     4f6:	9f 30       	cpi	r25, 0x0F	; 15
     4f8:	b8 f3       	brcs	.-18     	; 0x4e8 <servoangle+0xa2>
		for(uint8_t i=0;i<ser;i++){
			_delay_us(100);
		}
	}
	_delay_ms(2000);
	for(uint8_t j=0;j<100;j++){
     4fa:	4f 5f       	subi	r20, 0xFF	; 255
     4fc:	44 36       	cpi	r20, 0x64	; 100
     4fe:	c0 f2       	brcs	.-80     	; 0x4b0 <servoangle+0x6a>
	}
	
	
	
	
     500:	08 95       	ret

00000502 <main>:
#define LDR 1

int main(void)
{	
	/*Ultrasonic Timer Part*/
	DDRD|=(1<<3); //D4 as output
     502:	81 b3       	in	r24, 0x11	; 17
     504:	88 60       	ori	r24, 0x08	; 8
     506:	81 bb       	out	0x11, r24	; 17
	TCCR0|=(1<<WGM01);//Enable Compare match mode
     508:	83 b7       	in	r24, 0x33	; 51
     50a:	88 60       	ori	r24, 0x08	; 8
     50c:	83 bf       	out	0x33, r24	; 51
	TCCR0|=(1<<CS11);//Start timer  prescaler =8
     50e:	83 b7       	in	r24, 0x33	; 51
     510:	82 60       	ori	r24, 0x02	; 2
     512:	83 bf       	out	0x33, r24	; 51
	TCNT0=0;
     514:	12 be       	out	0x32, r1	; 50
	OCR0=10;
     516:	8a e0       	ldi	r24, 0x0A	; 10
     518:	8c bf       	out	0x3c, r24	; 60
	/*register value= time*(clock speed/prescale)
	register value=0.000001*(8000000/1)
	register value=10*/
	TIMSK|=(1<<OCIE0);//enable timer Compare inturrept
     51a:	89 b7       	in	r24, 0x39	; 57
     51c:	82 60       	ori	r24, 0x02	; 2
     51e:	89 bf       	out	0x39, r24	; 57
	sei();
     520:	78 94       	sei
	
	TWIInit();
     522:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <TWIInit>
	USART_Init(9600);
     526:	80 e8       	ldi	r24, 0x80	; 128
     528:	95 e2       	ldi	r25, 0x25	; 37
     52a:	0e 94 0f 01 	call	0x21e	; 0x21e <USART_Init>
	DDRD|=(0b11<<5);
     52e:	81 b3       	in	r24, 0x11	; 17
     530:	80 66       	ori	r24, 0x60	; 96
     532:	81 bb       	out	0x11, r24	; 17
	DDRD|=(1<<4);
     534:	81 b3       	in	r24, 0x11	; 17
     536:	80 61       	ori	r24, 0x10	; 16
     538:	81 bb       	out	0x11, r24	; 17
	DDRC|=(0b11111<<3);
     53a:	84 b3       	in	r24, 0x14	; 20
     53c:	88 6f       	ori	r24, 0xF8	; 248
     53e:	84 bb       	out	0x14, r24	; 20
   LcdInit();
     540:	0e 94 7e 00 	call	0xfc	; 0xfc <LcdInit>
   LcdSetCursor(4,0,"Welcome");
     544:	47 e6       	ldi	r20, 0x67	; 103
     546:	50 e0       	ldi	r21, 0x00	; 0
     548:	60 e0       	ldi	r22, 0x00	; 0
     54a:	84 e0       	ldi	r24, 0x04	; 4
     54c:	0e 94 bd 00 	call	0x17a	; 0x17a <LcdSetCursor>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     550:	2f ef       	ldi	r18, 0xFF	; 255
     552:	30 e7       	ldi	r19, 0x70	; 112
     554:	82 e0       	ldi	r24, 0x02	; 2
     556:	21 50       	subi	r18, 0x01	; 1
     558:	30 40       	sbci	r19, 0x00	; 0
     55a:	80 40       	sbci	r24, 0x00	; 0
     55c:	e1 f7       	brne	.-8      	; 0x556 <main+0x54>
     55e:	00 c0       	rjmp	.+0      	; 0x560 <main+0x5e>
     560:	00 00       	nop
   _delay_ms(100);
   LcdCommand(LCD_CLEARDISPLAY);
     562:	81 e0       	ldi	r24, 0x01	; 1
     564:	0e 94 70 00 	call	0xe0	; 0xe0 <LcdCommand>
   setTime(12,00,55);
     568:	47 e3       	ldi	r20, 0x37	; 55
     56a:	60 e0       	ldi	r22, 0x00	; 0
     56c:	8c e0       	ldi	r24, 0x0C	; 12
     56e:	0e 94 ba 01 	call	0x374	; 0x374 <setTime>
    while (1) 
    {
		Readtime();
     572:	0e 94 6d 01 	call	0x2da	; 0x2da <Readtime>
		
		PORTD&=~(1<<3);//TRIG pin low
     576:	82 b3       	in	r24, 0x12	; 18
     578:	87 7f       	andi	r24, 0xF7	; 247
     57a:	82 bb       	out	0x12, r24	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     57c:	95 e8       	ldi	r25, 0x85	; 133
     57e:	9a 95       	dec	r25
     580:	f1 f7       	brne	.-4      	; 0x57e <main+0x7c>
     582:	00 00       	nop
		_delay_us(50);//wait 50 micro sec
		PORTD|=(1<<3);//TRIG pin high
     584:	82 b3       	in	r24, 0x12	; 18
     586:	88 60       	ori	r24, 0x08	; 8
     588:	82 bb       	out	0x12, r24	; 18
     58a:	25 e8       	ldi	r18, 0x85	; 133
     58c:	2a 95       	dec	r18
     58e:	f1 f7       	brne	.-4      	; 0x58c <main+0x8a>
     590:	00 00       	nop
		_delay_us(50);//wait 50 micro sec
		PORTD&=~(1<<3);////TRIG pin low
     592:	82 b3       	in	r24, 0x12	; 18
     594:	87 7f       	andi	r24, 0xF7	; 247
     596:	82 bb       	out	0x12, r24	; 18
		while(!(PIND&(1<<2)))//wait for pulse
     598:	04 c0       	rjmp	.+8      	; 0x5a2 <main+0xa0>
		TimerCal=0;//rest timer
     59a:	10 92 d7 00 	sts	0x00D7, r1	; 0x8000d7 <TimerCal+0x1>
     59e:	10 92 d6 00 	sts	0x00D6, r1	; 0x8000d6 <TimerCal>
		PORTD&=~(1<<3);//TRIG pin low
		_delay_us(50);//wait 50 micro sec
		PORTD|=(1<<3);//TRIG pin high
		_delay_us(50);//wait 50 micro sec
		PORTD&=~(1<<3);////TRIG pin low
		while(!(PIND&(1<<2)))//wait for pulse
     5a2:	82 9b       	sbis	0x10, 2	; 16
     5a4:	fa cf       	rjmp	.-12     	; 0x59a <main+0x98>
     5a6:	14 c0       	rjmp	.+40     	; 0x5d0 <main+0xce>
		TimerCal=0;//rest timer
		while((PIND&(1<<2)))////wait for pulse down
		ultraINT0=TimerCal/4.148148148148148;//copy timer value
     5a8:	60 91 d6 00 	lds	r22, 0x00D6	; 0x8000d6 <TimerCal>
     5ac:	70 91 d7 00 	lds	r23, 0x00D7	; 0x8000d7 <TimerCal+0x1>
     5b0:	80 e0       	ldi	r24, 0x00	; 0
     5b2:	90 e0       	ldi	r25, 0x00	; 0
     5b4:	0e 94 28 05 	call	0xa50	; 0xa50 <__floatunsisf>
     5b8:	21 ea       	ldi	r18, 0xA1	; 161
     5ba:	3d eb       	ldi	r19, 0xBD	; 189
     5bc:	44 e8       	ldi	r20, 0x84	; 132
     5be:	50 e4       	ldi	r21, 0x40	; 64
     5c0:	0e 94 87 04 	call	0x90e	; 0x90e <__divsf3>
     5c4:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <__fixunssfsi>
     5c8:	70 93 d5 00 	sts	0x00D5, r23	; 0x8000d5 <ultraINT0+0x1>
     5cc:	60 93 d4 00 	sts	0x00D4, r22	; 0x8000d4 <ultraINT0>
		PORTD|=(1<<3);//TRIG pin high
		_delay_us(50);//wait 50 micro sec
		PORTD&=~(1<<3);////TRIG pin low
		while(!(PIND&(1<<2)))//wait for pulse
		TimerCal=0;//rest timer
		while((PIND&(1<<2)))////wait for pulse down
     5d0:	82 99       	sbic	0x10, 2	; 16
     5d2:	ea cf       	rjmp	.-44     	; 0x5a8 <main+0xa6>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     5d4:	8f e1       	ldi	r24, 0x1F	; 31
     5d6:	9e e4       	ldi	r25, 0x4E	; 78
     5d8:	01 97       	sbiw	r24, 0x01	; 1
     5da:	f1 f7       	brne	.-4      	; 0x5d8 <main+0xd6>
     5dc:	00 c0       	rjmp	.+0      	; 0x5de <main+0xdc>
     5de:	00 00       	nop
		ultraINT0=TimerCal/4.148148148148148;//copy timer value
		_delay_ms(10);
		PORTD&=~(1<<3);//TRIG pin low
     5e0:	82 b3       	in	r24, 0x12	; 18
     5e2:	87 7f       	andi	r24, 0xF7	; 247
     5e4:	82 bb       	out	0x12, r24	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     5e6:	95 e8       	ldi	r25, 0x85	; 133
     5e8:	9a 95       	dec	r25
     5ea:	f1 f7       	brne	.-4      	; 0x5e8 <main+0xe6>
     5ec:	00 00       	nop
		_delay_us(50);//wait 50 micro sec
		PORTD|=(1<<3);//TRIG pin high
     5ee:	82 b3       	in	r24, 0x12	; 18
     5f0:	88 60       	ori	r24, 0x08	; 8
     5f2:	82 bb       	out	0x12, r24	; 18
     5f4:	25 e8       	ldi	r18, 0x85	; 133
     5f6:	2a 95       	dec	r18
     5f8:	f1 f7       	brne	.-4      	; 0x5f6 <main+0xf4>
     5fa:	00 00       	nop
		_delay_us(50);//wait 50 micro sec
		PORTD&=~(1<<3);////TRIG pin low
     5fc:	82 b3       	in	r24, 0x12	; 18
     5fe:	87 7f       	andi	r24, 0xF7	; 247
     600:	82 bb       	out	0x12, r24	; 18
		while(!(PIND&(1<<7)))//wait for pulse
     602:	04 c0       	rjmp	.+8      	; 0x60c <main+0x10a>
		TimerCal=0;//rest timer
     604:	10 92 d7 00 	sts	0x00D7, r1	; 0x8000d7 <TimerCal+0x1>
     608:	10 92 d6 00 	sts	0x00D6, r1	; 0x8000d6 <TimerCal>
		PORTD&=~(1<<3);//TRIG pin low
		_delay_us(50);//wait 50 micro sec
		PORTD|=(1<<3);//TRIG pin high
		_delay_us(50);//wait 50 micro sec
		PORTD&=~(1<<3);////TRIG pin low
		while(!(PIND&(1<<7)))//wait for pulse
     60c:	87 9b       	sbis	0x10, 7	; 16
     60e:	fa cf       	rjmp	.-12     	; 0x604 <main+0x102>
     610:	14 c0       	rjmp	.+40     	; 0x63a <main+0x138>
		TimerCal=0;//rest timer
		while((PIND&(1<<7)))////wait for pulse down
		ultraINT1=TimerCal/4.148148148148148;//copy timer value
     612:	60 91 d6 00 	lds	r22, 0x00D6	; 0x8000d6 <TimerCal>
     616:	70 91 d7 00 	lds	r23, 0x00D7	; 0x8000d7 <TimerCal+0x1>
     61a:	80 e0       	ldi	r24, 0x00	; 0
     61c:	90 e0       	ldi	r25, 0x00	; 0
     61e:	0e 94 28 05 	call	0xa50	; 0xa50 <__floatunsisf>
     622:	21 ea       	ldi	r18, 0xA1	; 161
     624:	3d eb       	ldi	r19, 0xBD	; 189
     626:	44 e8       	ldi	r20, 0x84	; 132
     628:	50 e4       	ldi	r21, 0x40	; 64
     62a:	0e 94 87 04 	call	0x90e	; 0x90e <__divsf3>
     62e:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <__fixunssfsi>
     632:	70 93 d3 00 	sts	0x00D3, r23	; 0x8000d3 <__data_end+0x1>
     636:	60 93 d2 00 	sts	0x00D2, r22	; 0x8000d2 <__data_end>
		PORTD|=(1<<3);//TRIG pin high
		_delay_us(50);//wait 50 micro sec
		PORTD&=~(1<<3);////TRIG pin low
		while(!(PIND&(1<<7)))//wait for pulse
		TimerCal=0;//rest timer
		while((PIND&(1<<7)))////wait for pulse down
     63a:	87 99       	sbic	0x10, 7	; 16
     63c:	ea cf       	rjmp	.-44     	; 0x612 <main+0x110>
		ultraINT1=TimerCal/4.148148148148148;//copy timer value
		
		
		uint8_t sensorReading=(InputPIN&(1<<Sensor))>>Sensor;
     63e:	c9 b3       	in	r28, 0x19	; 25
     640:	c1 70       	andi	r28, 0x01	; 1
		uint8_t LDRReading=(InputPIN&(1<<LDR))>>LDR;
     642:	89 b3       	in	r24, 0x19	; 25
     644:	82 70       	andi	r24, 0x02	; 2
     646:	90 e0       	ldi	r25, 0x00	; 0
     648:	95 95       	asr	r25
     64a:	87 95       	ror	r24
     64c:	d8 2f       	mov	r29, r24
		sprintf(lcddata,"%02u:%02u:%02u %01u %02u %01u",hourC,minC,secC,sensorReading,ultraINT0,LDRReading);
     64e:	99 27       	eor	r25, r25
     650:	9f 93       	push	r25
     652:	8f 93       	push	r24
     654:	80 91 d5 00 	lds	r24, 0x00D5	; 0x8000d5 <ultraINT0+0x1>
     658:	8f 93       	push	r24
     65a:	80 91 d4 00 	lds	r24, 0x00D4	; 0x8000d4 <ultraINT0>
     65e:	8f 93       	push	r24
     660:	1f 92       	push	r1
     662:	cf 93       	push	r28
     664:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <secC>
     668:	1f 92       	push	r1
     66a:	8f 93       	push	r24
     66c:	80 91 ee 00 	lds	r24, 0x00EE	; 0x8000ee <minC>
     670:	1f 92       	push	r1
     672:	8f 93       	push	r24
     674:	80 91 ef 00 	lds	r24, 0x00EF	; 0x8000ef <hourC>
     678:	1f 92       	push	r1
     67a:	8f 93       	push	r24
     67c:	8f e6       	ldi	r24, 0x6F	; 111
     67e:	90 e0       	ldi	r25, 0x00	; 0
     680:	9f 93       	push	r25
     682:	8f 93       	push	r24
     684:	01 ef       	ldi	r16, 0xF1	; 241
     686:	10 e0       	ldi	r17, 0x00	; 0
     688:	1f 93       	push	r17
     68a:	0f 93       	push	r16
     68c:	0e 94 d8 05 	call	0xbb0	; 0xbb0 <sprintf>
		LcdSetCursor(0,0,lcddata);
     690:	a8 01       	movw	r20, r16
     692:	60 e0       	ldi	r22, 0x00	; 0
     694:	80 e0       	ldi	r24, 0x00	; 0
     696:	0e 94 bd 00 	call	0x17a	; 0x17a <LcdSetCursor>
		
		PORTD=(PORTD&0b10011111)|(0b1<<5);
     69a:	82 b3       	in	r24, 0x12	; 18
     69c:	8f 79       	andi	r24, 0x9F	; 159
     69e:	80 62       	ori	r24, 0x20	; 32
     6a0:	82 bb       	out	0x12, r24	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     6a2:	3f e7       	ldi	r19, 0x7F	; 127
     6a4:	88 e3       	ldi	r24, 0x38	; 56
     6a6:	91 e0       	ldi	r25, 0x01	; 1
     6a8:	31 50       	subi	r19, 0x01	; 1
     6aa:	80 40       	sbci	r24, 0x00	; 0
     6ac:	90 40       	sbci	r25, 0x00	; 0
     6ae:	e1 f7       	brne	.-8      	; 0x6a8 <main+0x1a6>
     6b0:	00 c0       	rjmp	.+0      	; 0x6b2 <main+0x1b0>
     6b2:	00 00       	nop
		_delay_ms(50);
		R=rchar;
     6b4:	80 91 d9 00 	lds	r24, 0x00D9	; 0x8000d9 <rchar>
     6b8:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <R>
		
		PORTD=(PORTD&0b10011111)|(0b10<<5);
     6bc:	82 b3       	in	r24, 0x12	; 18
     6be:	8f 79       	andi	r24, 0x9F	; 159
     6c0:	80 64       	ori	r24, 0x40	; 64
     6c2:	82 bb       	out	0x12, r24	; 18
     6c4:	2f e7       	ldi	r18, 0x7F	; 127
     6c6:	38 e3       	ldi	r19, 0x38	; 56
     6c8:	81 e0       	ldi	r24, 0x01	; 1
     6ca:	21 50       	subi	r18, 0x01	; 1
     6cc:	30 40       	sbci	r19, 0x00	; 0
     6ce:	80 40       	sbci	r24, 0x00	; 0
     6d0:	e1 f7       	brne	.-8      	; 0x6ca <main+0x1c8>
     6d2:	00 c0       	rjmp	.+0      	; 0x6d4 <main+0x1d2>
     6d4:	00 00       	nop
		_delay_ms(50);
		G=rchar;
     6d6:	80 91 d9 00 	lds	r24, 0x00D9	; 0x8000d9 <rchar>
     6da:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <G>
		
		PORTD=(PORTD&0b10011111)|(0b11<<5);
     6de:	82 b3       	in	r24, 0x12	; 18
     6e0:	80 66       	ori	r24, 0x60	; 96
     6e2:	82 bb       	out	0x12, r24	; 18
     6e4:	9f e7       	ldi	r25, 0x7F	; 127
     6e6:	28 e3       	ldi	r18, 0x38	; 56
     6e8:	31 e0       	ldi	r19, 0x01	; 1
     6ea:	91 50       	subi	r25, 0x01	; 1
     6ec:	20 40       	sbci	r18, 0x00	; 0
     6ee:	30 40       	sbci	r19, 0x00	; 0
     6f0:	e1 f7       	brne	.-8      	; 0x6ea <main+0x1e8>
     6f2:	00 c0       	rjmp	.+0      	; 0x6f4 <main+0x1f2>
     6f4:	00 00       	nop
		_delay_ms(50);
		B=rchar;
     6f6:	80 91 d9 00 	lds	r24, 0x00D9	; 0x8000d9 <rchar>
     6fa:	80 93 d8 00 	sts	0x00D8, r24	; 0x8000d8 <B>
		PORTD=(PORTD&0b10011111);
     6fe:	82 b3       	in	r24, 0x12	; 18
     700:	8f 79       	andi	r24, 0x9F	; 159
     702:	82 bb       	out	0x12, r24	; 18
		
		sprintf(lcddata,"%03u %03u %03u   %02u",R,G,B,ultraINT1);
     704:	80 91 d3 00 	lds	r24, 0x00D3	; 0x8000d3 <__data_end+0x1>
     708:	8f 93       	push	r24
     70a:	80 91 d2 00 	lds	r24, 0x00D2	; 0x8000d2 <__data_end>
     70e:	8f 93       	push	r24
     710:	80 91 d8 00 	lds	r24, 0x00D8	; 0x8000d8 <B>
     714:	1f 92       	push	r1
     716:	8f 93       	push	r24
     718:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <G>
     71c:	1f 92       	push	r1
     71e:	8f 93       	push	r24
     720:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <R>
     724:	1f 92       	push	r1
     726:	8f 93       	push	r24
     728:	8d e8       	ldi	r24, 0x8D	; 141
     72a:	90 e0       	ldi	r25, 0x00	; 0
     72c:	9f 93       	push	r25
     72e:	8f 93       	push	r24
     730:	1f 93       	push	r17
     732:	0f 93       	push	r16
     734:	0e 94 d8 05 	call	0xbb0	; 0xbb0 <sprintf>
		LcdSetCursor(0,1,lcddata);
     738:	a8 01       	movw	r20, r16
     73a:	61 e0       	ldi	r22, 0x01	; 1
     73c:	80 e0       	ldi	r24, 0x00	; 0
     73e:	0e 94 bd 00 	call	0x17a	; 0x17a <LcdSetCursor>
		
		if ((hourC==tabtimes[0][0])&&(minC==tabtimes[0][1])&&(secC<5))
     742:	90 91 60 00 	lds	r25, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     746:	80 91 ef 00 	lds	r24, 0x00EF	; 0x8000ef <hourC>
     74a:	2d b7       	in	r18, 0x3d	; 61
     74c:	3e b7       	in	r19, 0x3e	; 62
     74e:	24 5e       	subi	r18, 0xE4	; 228
     750:	3f 4f       	sbci	r19, 0xFF	; 255
     752:	0f b6       	in	r0, 0x3f	; 63
     754:	f8 94       	cli
     756:	3e bf       	out	0x3e, r19	; 62
     758:	0f be       	out	0x3f, r0	; 63
     75a:	2d bf       	out	0x3d, r18	; 61
     75c:	98 13       	cpse	r25, r24
     75e:	0d c0       	rjmp	.+26     	; 0x77a <main+0x278>
     760:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     764:	80 91 ee 00 	lds	r24, 0x00EE	; 0x8000ee <minC>
     768:	98 13       	cpse	r25, r24
     76a:	07 c0       	rjmp	.+14     	; 0x77a <main+0x278>
     76c:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <secC>
     770:	85 30       	cpi	r24, 0x05	; 5
     772:	18 f4       	brcc	.+6      	; 0x77a <main+0x278>
		{servoangle(5);
     774:	85 e0       	ldi	r24, 0x05	; 5
     776:	0e 94 23 02 	call	0x446	; 0x446 <servoangle>
		}
		
		if ((hourC==tabtimes[1][0])&&(minC==tabtimes[1][1])&&(secC<5))
     77a:	90 91 62 00 	lds	r25, 0x0062	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
     77e:	80 91 ef 00 	lds	r24, 0x00EF	; 0x8000ef <hourC>
     782:	98 13       	cpse	r25, r24
     784:	0d c0       	rjmp	.+26     	; 0x7a0 <main+0x29e>
     786:	90 91 63 00 	lds	r25, 0x0063	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
     78a:	80 91 ee 00 	lds	r24, 0x00EE	; 0x8000ee <minC>
     78e:	98 13       	cpse	r25, r24
     790:	07 c0       	rjmp	.+14     	; 0x7a0 <main+0x29e>
     792:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <secC>
     796:	85 30       	cpi	r24, 0x05	; 5
     798:	18 f4       	brcc	.+6      	; 0x7a0 <main+0x29e>
		{servoangle(6);
     79a:	86 e0       	ldi	r24, 0x06	; 6
     79c:	0e 94 23 02 	call	0x446	; 0x446 <servoangle>
		}
		if ((hourC==tabtimes[2][0])&&(minC==tabtimes[2][1])&&(secC<5))
     7a0:	90 91 64 00 	lds	r25, 0x0064	; 0x800064 <__DATA_REGION_ORIGIN__+0x4>
     7a4:	80 91 ef 00 	lds	r24, 0x00EF	; 0x8000ef <hourC>
     7a8:	98 13       	cpse	r25, r24
     7aa:	0d c0       	rjmp	.+26     	; 0x7c6 <main+0x2c4>
     7ac:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <__DATA_REGION_ORIGIN__+0x5>
     7b0:	80 91 ee 00 	lds	r24, 0x00EE	; 0x8000ee <minC>
     7b4:	98 13       	cpse	r25, r24
     7b6:	07 c0       	rjmp	.+14     	; 0x7c6 <main+0x2c4>
     7b8:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <secC>
     7bc:	85 30       	cpi	r24, 0x05	; 5
     7be:	18 f4       	brcc	.+6      	; 0x7c6 <main+0x2c4>
		{servoangle(7);
     7c0:	87 e0       	ldi	r24, 0x07	; 7
     7c2:	0e 94 23 02 	call	0x446	; 0x446 <servoangle>
		}
		
		if (LDRReading)
     7c6:	dd 23       	and	r29, r29
     7c8:	21 f0       	breq	.+8      	; 0x7d2 <main+0x2d0>
		{PORTC&=~(1<<4);
     7ca:	85 b3       	in	r24, 0x15	; 21
     7cc:	8f 7e       	andi	r24, 0xEF	; 239
     7ce:	85 bb       	out	0x15, r24	; 21
     7d0:	03 c0       	rjmp	.+6      	; 0x7d8 <main+0x2d6>
		}
		else{
			PORTC|=(1<<4);
     7d2:	85 b3       	in	r24, 0x15	; 21
     7d4:	80 61       	ori	r24, 0x10	; 16
     7d6:	85 bb       	out	0x15, r24	; 21
		}
		if ((ultraINT0<20)||(ultraINT1<20))
     7d8:	80 91 d4 00 	lds	r24, 0x00D4	; 0x8000d4 <ultraINT0>
     7dc:	90 91 d5 00 	lds	r25, 0x00D5	; 0x8000d5 <ultraINT0+0x1>
     7e0:	44 97       	sbiw	r24, 0x14	; 20
     7e2:	30 f0       	brcs	.+12     	; 0x7f0 <main+0x2ee>
     7e4:	80 91 d2 00 	lds	r24, 0x00D2	; 0x8000d2 <__data_end>
     7e8:	90 91 d3 00 	lds	r25, 0x00D3	; 0x8000d3 <__data_end+0x1>
     7ec:	44 97       	sbiw	r24, 0x14	; 20
     7ee:	20 f4       	brcc	.+8      	; 0x7f8 <main+0x2f6>
		{
			PORTD|=(1<<4);
     7f0:	82 b3       	in	r24, 0x12	; 18
     7f2:	80 61       	ori	r24, 0x10	; 16
     7f4:	82 bb       	out	0x12, r24	; 18
     7f6:	03 c0       	rjmp	.+6      	; 0x7fe <main+0x2fc>
		} 
		else
		{PORTD&=~(1<<4);
     7f8:	82 b3       	in	r24, 0x12	; 18
     7fa:	8f 7e       	andi	r24, 0xEF	; 239
     7fc:	82 bb       	out	0x12, r24	; 18
		}
		
		if ((R==127)&&(G==127)&&(B==127))
     7fe:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <R>
     802:	8f 37       	cpi	r24, 0x7F	; 127
     804:	a9 f4       	brne	.+42     	; 0x830 <__DATA_REGION_LENGTH__+0x30>
     806:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <G>
     80a:	8f 37       	cpi	r24, 0x7F	; 127
     80c:	89 f4       	brne	.+34     	; 0x830 <__DATA_REGION_LENGTH__+0x30>
     80e:	80 91 d8 00 	lds	r24, 0x00D8	; 0x8000d8 <B>
     812:	8f 37       	cpi	r24, 0x7F	; 127
     814:	69 f4       	brne	.+26     	; 0x830 <__DATA_REGION_LENGTH__+0x30>
		{PORTC|=(1<<3);
     816:	85 b3       	in	r24, 0x15	; 21
     818:	88 60       	ori	r24, 0x08	; 8
     81a:	85 bb       	out	0x15, r24	; 21
     81c:	3f ef       	ldi	r19, 0xFF	; 255
     81e:	8d e3       	ldi	r24, 0x3D	; 61
     820:	99 e4       	ldi	r25, 0x49	; 73
     822:	31 50       	subi	r19, 0x01	; 1
     824:	80 40       	sbci	r24, 0x00	; 0
     826:	90 40       	sbci	r25, 0x00	; 0
     828:	e1 f7       	brne	.-8      	; 0x822 <__DATA_REGION_LENGTH__+0x22>
     82a:	00 c0       	rjmp	.+0      	; 0x82c <__DATA_REGION_LENGTH__+0x2c>
     82c:	00 00       	nop
     82e:	03 c0       	rjmp	.+6      	; 0x836 <__DATA_REGION_LENGTH__+0x36>
			_delay_ms(3000);
		} 
		else
		{PORTC&=~(1<<3);
     830:	85 b3       	in	r24, 0x15	; 21
     832:	87 7f       	andi	r24, 0xF7	; 247
     834:	85 bb       	out	0x15, r24	; 21
		}
		
		if (sensorReading==1)
     836:	c1 30       	cpi	r28, 0x01	; 1
     838:	09 f0       	breq	.+2      	; 0x83c <__DATA_REGION_LENGTH__+0x3c>
     83a:	5c c0       	rjmp	.+184    	; 0x8f4 <__stack+0x95>
		{PORTC|=(1<<3);
     83c:	85 b3       	in	r24, 0x15	; 21
     83e:	88 60       	ori	r24, 0x08	; 8
     840:	85 bb       	out	0x15, r24	; 21
			USART_TxStringln("AT");
     842:	83 ea       	ldi	r24, 0xA3	; 163
     844:	90 e0       	ldi	r25, 0x00	; 0
     846:	0e 94 33 01 	call	0x266	; 0x266 <USART_TxStringln>
     84a:	2f ef       	ldi	r18, 0xFF	; 255
     84c:	34 e3       	ldi	r19, 0x34	; 52
     84e:	8c e0       	ldi	r24, 0x0C	; 12
     850:	21 50       	subi	r18, 0x01	; 1
     852:	30 40       	sbci	r19, 0x00	; 0
     854:	80 40       	sbci	r24, 0x00	; 0
     856:	e1 f7       	brne	.-8      	; 0x850 <__DATA_REGION_LENGTH__+0x50>
     858:	00 c0       	rjmp	.+0      	; 0x85a <__DATA_REGION_LENGTH__+0x5a>
     85a:	00 00       	nop
			_delay_ms(500);
			USART_TxStringln("AT");
     85c:	83 ea       	ldi	r24, 0xA3	; 163
     85e:	90 e0       	ldi	r25, 0x00	; 0
     860:	0e 94 33 01 	call	0x266	; 0x266 <USART_TxStringln>
     864:	9f ef       	ldi	r25, 0xFF	; 255
     866:	24 e3       	ldi	r18, 0x34	; 52
     868:	3c e0       	ldi	r19, 0x0C	; 12
     86a:	91 50       	subi	r25, 0x01	; 1
     86c:	20 40       	sbci	r18, 0x00	; 0
     86e:	30 40       	sbci	r19, 0x00	; 0
     870:	e1 f7       	brne	.-8      	; 0x86a <__stack+0xb>
     872:	00 c0       	rjmp	.+0      	; 0x874 <__stack+0x15>
     874:	00 00       	nop
			_delay_ms(500);
			USART_TxStringln("AT+CMGF=1");
     876:	86 ea       	ldi	r24, 0xA6	; 166
     878:	90 e0       	ldi	r25, 0x00	; 0
     87a:	0e 94 33 01 	call	0x266	; 0x266 <USART_TxStringln>
     87e:	8f ef       	ldi	r24, 0xFF	; 255
     880:	94 e3       	ldi	r25, 0x34	; 52
     882:	2c e0       	ldi	r18, 0x0C	; 12
     884:	81 50       	subi	r24, 0x01	; 1
     886:	90 40       	sbci	r25, 0x00	; 0
     888:	20 40       	sbci	r18, 0x00	; 0
     88a:	e1 f7       	brne	.-8      	; 0x884 <__stack+0x25>
     88c:	00 c0       	rjmp	.+0      	; 0x88e <__stack+0x2f>
     88e:	00 00       	nop
			_delay_ms(500);
			USART_TxStringln("AT+CMGS=\"+94710000000\"");
     890:	80 eb       	ldi	r24, 0xB0	; 176
     892:	90 e0       	ldi	r25, 0x00	; 0
     894:	0e 94 33 01 	call	0x266	; 0x266 <USART_TxStringln>
     898:	3f ef       	ldi	r19, 0xFF	; 255
     89a:	81 ee       	ldi	r24, 0xE1	; 225
     89c:	94 e0       	ldi	r25, 0x04	; 4
     89e:	31 50       	subi	r19, 0x01	; 1
     8a0:	80 40       	sbci	r24, 0x00	; 0
     8a2:	90 40       	sbci	r25, 0x00	; 0
     8a4:	e1 f7       	brne	.-8      	; 0x89e <__stack+0x3f>
     8a6:	00 c0       	rjmp	.+0      	; 0x8a8 <__stack+0x49>
     8a8:	00 00       	nop
			_delay_ms(200);
			USART_TxString("Emergency");
     8aa:	87 ec       	ldi	r24, 0xC7	; 199
     8ac:	90 e0       	ldi	r25, 0x00	; 0
     8ae:	0e 94 26 01 	call	0x24c	; 0x24c <USART_TxString>
     8b2:	2f ef       	ldi	r18, 0xFF	; 255
     8b4:	31 ee       	ldi	r19, 0xE1	; 225
     8b6:	84 e0       	ldi	r24, 0x04	; 4
     8b8:	21 50       	subi	r18, 0x01	; 1
     8ba:	30 40       	sbci	r19, 0x00	; 0
     8bc:	80 40       	sbci	r24, 0x00	; 0
     8be:	e1 f7       	brne	.-8      	; 0x8b8 <__stack+0x59>
     8c0:	00 c0       	rjmp	.+0      	; 0x8c2 <__stack+0x63>
     8c2:	00 00       	nop
			_delay_ms(200);
			USART_Transmit(26);
     8c4:	8a e1       	ldi	r24, 0x1A	; 26
     8c6:	0e 94 22 01 	call	0x244	; 0x244 <USART_Transmit>
     8ca:	9f ef       	ldi	r25, 0xFF	; 255
     8cc:	21 ee       	ldi	r18, 0xE1	; 225
     8ce:	34 e0       	ldi	r19, 0x04	; 4
     8d0:	91 50       	subi	r25, 0x01	; 1
     8d2:	20 40       	sbci	r18, 0x00	; 0
     8d4:	30 40       	sbci	r19, 0x00	; 0
     8d6:	e1 f7       	brne	.-8      	; 0x8d0 <__stack+0x71>
     8d8:	00 c0       	rjmp	.+0      	; 0x8da <__stack+0x7b>
     8da:	00 00       	nop
     8dc:	8f ef       	ldi	r24, 0xFF	; 255
     8de:	99 e5       	ldi	r25, 0x59	; 89
     8e0:	22 e6       	ldi	r18, 0x62	; 98
     8e2:	32 e0       	ldi	r19, 0x02	; 2
     8e4:	81 50       	subi	r24, 0x01	; 1
     8e6:	90 40       	sbci	r25, 0x00	; 0
     8e8:	20 40       	sbci	r18, 0x00	; 0
     8ea:	30 40       	sbci	r19, 0x00	; 0
     8ec:	d9 f7       	brne	.-10     	; 0x8e4 <__stack+0x85>
     8ee:	00 c0       	rjmp	.+0      	; 0x8f0 <__stack+0x91>
     8f0:	00 00       	nop
     8f2:	03 c0       	rjmp	.+6      	; 0x8fa <__stack+0x9b>
			_delay_ms(200);
			_delay_ms(30000);
		} 
		else
		{PORTC&=~(1<<3);
     8f4:	85 b3       	in	r24, 0x15	; 21
     8f6:	87 7f       	andi	r24, 0xF7	; 247
     8f8:	85 bb       	out	0x15, r24	; 21
     8fa:	8f ef       	ldi	r24, 0xFF	; 255
     8fc:	90 e7       	ldi	r25, 0x70	; 112
     8fe:	22 e0       	ldi	r18, 0x02	; 2
     900:	81 50       	subi	r24, 0x01	; 1
     902:	90 40       	sbci	r25, 0x00	; 0
     904:	20 40       	sbci	r18, 0x00	; 0
     906:	e1 f7       	brne	.-8      	; 0x900 <__stack+0xa1>
     908:	00 c0       	rjmp	.+0      	; 0x90a <__stack+0xab>
     90a:	00 00       	nop
     90c:	32 ce       	rjmp	.-924    	; 0x572 <main+0x70>

0000090e <__divsf3>:
     90e:	0e 94 9b 04 	call	0x936	; 0x936 <__divsf3x>
     912:	0c 94 7c 05 	jmp	0xaf8	; 0xaf8 <__fp_round>
     916:	0e 94 75 05 	call	0xaea	; 0xaea <__fp_pscB>
     91a:	58 f0       	brcs	.+22     	; 0x932 <__divsf3+0x24>
     91c:	0e 94 6e 05 	call	0xadc	; 0xadc <__fp_pscA>
     920:	40 f0       	brcs	.+16     	; 0x932 <__divsf3+0x24>
     922:	29 f4       	brne	.+10     	; 0x92e <__divsf3+0x20>
     924:	5f 3f       	cpi	r21, 0xFF	; 255
     926:	29 f0       	breq	.+10     	; 0x932 <__divsf3+0x24>
     928:	0c 94 65 05 	jmp	0xaca	; 0xaca <__fp_inf>
     92c:	51 11       	cpse	r21, r1
     92e:	0c 94 b0 05 	jmp	0xb60	; 0xb60 <__fp_szero>
     932:	0c 94 6b 05 	jmp	0xad6	; 0xad6 <__fp_nan>

00000936 <__divsf3x>:
     936:	0e 94 8d 05 	call	0xb1a	; 0xb1a <__fp_split3>
     93a:	68 f3       	brcs	.-38     	; 0x916 <__divsf3+0x8>

0000093c <__divsf3_pse>:
     93c:	99 23       	and	r25, r25
     93e:	b1 f3       	breq	.-20     	; 0x92c <__divsf3+0x1e>
     940:	55 23       	and	r21, r21
     942:	91 f3       	breq	.-28     	; 0x928 <__divsf3+0x1a>
     944:	95 1b       	sub	r25, r21
     946:	55 0b       	sbc	r21, r21
     948:	bb 27       	eor	r27, r27
     94a:	aa 27       	eor	r26, r26
     94c:	62 17       	cp	r22, r18
     94e:	73 07       	cpc	r23, r19
     950:	84 07       	cpc	r24, r20
     952:	38 f0       	brcs	.+14     	; 0x962 <__divsf3_pse+0x26>
     954:	9f 5f       	subi	r25, 0xFF	; 255
     956:	5f 4f       	sbci	r21, 0xFF	; 255
     958:	22 0f       	add	r18, r18
     95a:	33 1f       	adc	r19, r19
     95c:	44 1f       	adc	r20, r20
     95e:	aa 1f       	adc	r26, r26
     960:	a9 f3       	breq	.-22     	; 0x94c <__divsf3_pse+0x10>
     962:	35 d0       	rcall	.+106    	; 0x9ce <__divsf3_pse+0x92>
     964:	0e 2e       	mov	r0, r30
     966:	3a f0       	brmi	.+14     	; 0x976 <__divsf3_pse+0x3a>
     968:	e0 e8       	ldi	r30, 0x80	; 128
     96a:	32 d0       	rcall	.+100    	; 0x9d0 <__divsf3_pse+0x94>
     96c:	91 50       	subi	r25, 0x01	; 1
     96e:	50 40       	sbci	r21, 0x00	; 0
     970:	e6 95       	lsr	r30
     972:	00 1c       	adc	r0, r0
     974:	ca f7       	brpl	.-14     	; 0x968 <__divsf3_pse+0x2c>
     976:	2b d0       	rcall	.+86     	; 0x9ce <__divsf3_pse+0x92>
     978:	fe 2f       	mov	r31, r30
     97a:	29 d0       	rcall	.+82     	; 0x9ce <__divsf3_pse+0x92>
     97c:	66 0f       	add	r22, r22
     97e:	77 1f       	adc	r23, r23
     980:	88 1f       	adc	r24, r24
     982:	bb 1f       	adc	r27, r27
     984:	26 17       	cp	r18, r22
     986:	37 07       	cpc	r19, r23
     988:	48 07       	cpc	r20, r24
     98a:	ab 07       	cpc	r26, r27
     98c:	b0 e8       	ldi	r27, 0x80	; 128
     98e:	09 f0       	breq	.+2      	; 0x992 <__divsf3_pse+0x56>
     990:	bb 0b       	sbc	r27, r27
     992:	80 2d       	mov	r24, r0
     994:	bf 01       	movw	r22, r30
     996:	ff 27       	eor	r31, r31
     998:	93 58       	subi	r25, 0x83	; 131
     99a:	5f 4f       	sbci	r21, 0xFF	; 255
     99c:	3a f0       	brmi	.+14     	; 0x9ac <__divsf3_pse+0x70>
     99e:	9e 3f       	cpi	r25, 0xFE	; 254
     9a0:	51 05       	cpc	r21, r1
     9a2:	78 f0       	brcs	.+30     	; 0x9c2 <__divsf3_pse+0x86>
     9a4:	0c 94 65 05 	jmp	0xaca	; 0xaca <__fp_inf>
     9a8:	0c 94 b0 05 	jmp	0xb60	; 0xb60 <__fp_szero>
     9ac:	5f 3f       	cpi	r21, 0xFF	; 255
     9ae:	e4 f3       	brlt	.-8      	; 0x9a8 <__divsf3_pse+0x6c>
     9b0:	98 3e       	cpi	r25, 0xE8	; 232
     9b2:	d4 f3       	brlt	.-12     	; 0x9a8 <__divsf3_pse+0x6c>
     9b4:	86 95       	lsr	r24
     9b6:	77 95       	ror	r23
     9b8:	67 95       	ror	r22
     9ba:	b7 95       	ror	r27
     9bc:	f7 95       	ror	r31
     9be:	9f 5f       	subi	r25, 0xFF	; 255
     9c0:	c9 f7       	brne	.-14     	; 0x9b4 <__divsf3_pse+0x78>
     9c2:	88 0f       	add	r24, r24
     9c4:	91 1d       	adc	r25, r1
     9c6:	96 95       	lsr	r25
     9c8:	87 95       	ror	r24
     9ca:	97 f9       	bld	r25, 7
     9cc:	08 95       	ret
     9ce:	e1 e0       	ldi	r30, 0x01	; 1
     9d0:	66 0f       	add	r22, r22
     9d2:	77 1f       	adc	r23, r23
     9d4:	88 1f       	adc	r24, r24
     9d6:	bb 1f       	adc	r27, r27
     9d8:	62 17       	cp	r22, r18
     9da:	73 07       	cpc	r23, r19
     9dc:	84 07       	cpc	r24, r20
     9de:	ba 07       	cpc	r27, r26
     9e0:	20 f0       	brcs	.+8      	; 0x9ea <__divsf3_pse+0xae>
     9e2:	62 1b       	sub	r22, r18
     9e4:	73 0b       	sbc	r23, r19
     9e6:	84 0b       	sbc	r24, r20
     9e8:	ba 0b       	sbc	r27, r26
     9ea:	ee 1f       	adc	r30, r30
     9ec:	88 f7       	brcc	.-30     	; 0x9d0 <__divsf3_pse+0x94>
     9ee:	e0 95       	com	r30
     9f0:	08 95       	ret

000009f2 <__fixunssfsi>:
     9f2:	0e 94 95 05 	call	0xb2a	; 0xb2a <__fp_splitA>
     9f6:	88 f0       	brcs	.+34     	; 0xa1a <__fixunssfsi+0x28>
     9f8:	9f 57       	subi	r25, 0x7F	; 127
     9fa:	98 f0       	brcs	.+38     	; 0xa22 <__fixunssfsi+0x30>
     9fc:	b9 2f       	mov	r27, r25
     9fe:	99 27       	eor	r25, r25
     a00:	b7 51       	subi	r27, 0x17	; 23
     a02:	b0 f0       	brcs	.+44     	; 0xa30 <__fixunssfsi+0x3e>
     a04:	e1 f0       	breq	.+56     	; 0xa3e <__fixunssfsi+0x4c>
     a06:	66 0f       	add	r22, r22
     a08:	77 1f       	adc	r23, r23
     a0a:	88 1f       	adc	r24, r24
     a0c:	99 1f       	adc	r25, r25
     a0e:	1a f0       	brmi	.+6      	; 0xa16 <__fixunssfsi+0x24>
     a10:	ba 95       	dec	r27
     a12:	c9 f7       	brne	.-14     	; 0xa06 <__fixunssfsi+0x14>
     a14:	14 c0       	rjmp	.+40     	; 0xa3e <__fixunssfsi+0x4c>
     a16:	b1 30       	cpi	r27, 0x01	; 1
     a18:	91 f0       	breq	.+36     	; 0xa3e <__fixunssfsi+0x4c>
     a1a:	0e 94 af 05 	call	0xb5e	; 0xb5e <__fp_zero>
     a1e:	b1 e0       	ldi	r27, 0x01	; 1
     a20:	08 95       	ret
     a22:	0c 94 af 05 	jmp	0xb5e	; 0xb5e <__fp_zero>
     a26:	67 2f       	mov	r22, r23
     a28:	78 2f       	mov	r23, r24
     a2a:	88 27       	eor	r24, r24
     a2c:	b8 5f       	subi	r27, 0xF8	; 248
     a2e:	39 f0       	breq	.+14     	; 0xa3e <__fixunssfsi+0x4c>
     a30:	b9 3f       	cpi	r27, 0xF9	; 249
     a32:	cc f3       	brlt	.-14     	; 0xa26 <__fixunssfsi+0x34>
     a34:	86 95       	lsr	r24
     a36:	77 95       	ror	r23
     a38:	67 95       	ror	r22
     a3a:	b3 95       	inc	r27
     a3c:	d9 f7       	brne	.-10     	; 0xa34 <__fixunssfsi+0x42>
     a3e:	3e f4       	brtc	.+14     	; 0xa4e <__fixunssfsi+0x5c>
     a40:	90 95       	com	r25
     a42:	80 95       	com	r24
     a44:	70 95       	com	r23
     a46:	61 95       	neg	r22
     a48:	7f 4f       	sbci	r23, 0xFF	; 255
     a4a:	8f 4f       	sbci	r24, 0xFF	; 255
     a4c:	9f 4f       	sbci	r25, 0xFF	; 255
     a4e:	08 95       	ret

00000a50 <__floatunsisf>:
     a50:	e8 94       	clt
     a52:	09 c0       	rjmp	.+18     	; 0xa66 <__floatsisf+0x12>

00000a54 <__floatsisf>:
     a54:	97 fb       	bst	r25, 7
     a56:	3e f4       	brtc	.+14     	; 0xa66 <__floatsisf+0x12>
     a58:	90 95       	com	r25
     a5a:	80 95       	com	r24
     a5c:	70 95       	com	r23
     a5e:	61 95       	neg	r22
     a60:	7f 4f       	sbci	r23, 0xFF	; 255
     a62:	8f 4f       	sbci	r24, 0xFF	; 255
     a64:	9f 4f       	sbci	r25, 0xFF	; 255
     a66:	99 23       	and	r25, r25
     a68:	a9 f0       	breq	.+42     	; 0xa94 <__floatsisf+0x40>
     a6a:	f9 2f       	mov	r31, r25
     a6c:	96 e9       	ldi	r25, 0x96	; 150
     a6e:	bb 27       	eor	r27, r27
     a70:	93 95       	inc	r25
     a72:	f6 95       	lsr	r31
     a74:	87 95       	ror	r24
     a76:	77 95       	ror	r23
     a78:	67 95       	ror	r22
     a7a:	b7 95       	ror	r27
     a7c:	f1 11       	cpse	r31, r1
     a7e:	f8 cf       	rjmp	.-16     	; 0xa70 <__floatsisf+0x1c>
     a80:	fa f4       	brpl	.+62     	; 0xac0 <__floatsisf+0x6c>
     a82:	bb 0f       	add	r27, r27
     a84:	11 f4       	brne	.+4      	; 0xa8a <__floatsisf+0x36>
     a86:	60 ff       	sbrs	r22, 0
     a88:	1b c0       	rjmp	.+54     	; 0xac0 <__floatsisf+0x6c>
     a8a:	6f 5f       	subi	r22, 0xFF	; 255
     a8c:	7f 4f       	sbci	r23, 0xFF	; 255
     a8e:	8f 4f       	sbci	r24, 0xFF	; 255
     a90:	9f 4f       	sbci	r25, 0xFF	; 255
     a92:	16 c0       	rjmp	.+44     	; 0xac0 <__floatsisf+0x6c>
     a94:	88 23       	and	r24, r24
     a96:	11 f0       	breq	.+4      	; 0xa9c <__floatsisf+0x48>
     a98:	96 e9       	ldi	r25, 0x96	; 150
     a9a:	11 c0       	rjmp	.+34     	; 0xabe <__floatsisf+0x6a>
     a9c:	77 23       	and	r23, r23
     a9e:	21 f0       	breq	.+8      	; 0xaa8 <__floatsisf+0x54>
     aa0:	9e e8       	ldi	r25, 0x8E	; 142
     aa2:	87 2f       	mov	r24, r23
     aa4:	76 2f       	mov	r23, r22
     aa6:	05 c0       	rjmp	.+10     	; 0xab2 <__floatsisf+0x5e>
     aa8:	66 23       	and	r22, r22
     aaa:	71 f0       	breq	.+28     	; 0xac8 <__floatsisf+0x74>
     aac:	96 e8       	ldi	r25, 0x86	; 134
     aae:	86 2f       	mov	r24, r22
     ab0:	70 e0       	ldi	r23, 0x00	; 0
     ab2:	60 e0       	ldi	r22, 0x00	; 0
     ab4:	2a f0       	brmi	.+10     	; 0xac0 <__floatsisf+0x6c>
     ab6:	9a 95       	dec	r25
     ab8:	66 0f       	add	r22, r22
     aba:	77 1f       	adc	r23, r23
     abc:	88 1f       	adc	r24, r24
     abe:	da f7       	brpl	.-10     	; 0xab6 <__floatsisf+0x62>
     ac0:	88 0f       	add	r24, r24
     ac2:	96 95       	lsr	r25
     ac4:	87 95       	ror	r24
     ac6:	97 f9       	bld	r25, 7
     ac8:	08 95       	ret

00000aca <__fp_inf>:
     aca:	97 f9       	bld	r25, 7
     acc:	9f 67       	ori	r25, 0x7F	; 127
     ace:	80 e8       	ldi	r24, 0x80	; 128
     ad0:	70 e0       	ldi	r23, 0x00	; 0
     ad2:	60 e0       	ldi	r22, 0x00	; 0
     ad4:	08 95       	ret

00000ad6 <__fp_nan>:
     ad6:	9f ef       	ldi	r25, 0xFF	; 255
     ad8:	80 ec       	ldi	r24, 0xC0	; 192
     ada:	08 95       	ret

00000adc <__fp_pscA>:
     adc:	00 24       	eor	r0, r0
     ade:	0a 94       	dec	r0
     ae0:	16 16       	cp	r1, r22
     ae2:	17 06       	cpc	r1, r23
     ae4:	18 06       	cpc	r1, r24
     ae6:	09 06       	cpc	r0, r25
     ae8:	08 95       	ret

00000aea <__fp_pscB>:
     aea:	00 24       	eor	r0, r0
     aec:	0a 94       	dec	r0
     aee:	12 16       	cp	r1, r18
     af0:	13 06       	cpc	r1, r19
     af2:	14 06       	cpc	r1, r20
     af4:	05 06       	cpc	r0, r21
     af6:	08 95       	ret

00000af8 <__fp_round>:
     af8:	09 2e       	mov	r0, r25
     afa:	03 94       	inc	r0
     afc:	00 0c       	add	r0, r0
     afe:	11 f4       	brne	.+4      	; 0xb04 <__fp_round+0xc>
     b00:	88 23       	and	r24, r24
     b02:	52 f0       	brmi	.+20     	; 0xb18 <__fp_round+0x20>
     b04:	bb 0f       	add	r27, r27
     b06:	40 f4       	brcc	.+16     	; 0xb18 <__fp_round+0x20>
     b08:	bf 2b       	or	r27, r31
     b0a:	11 f4       	brne	.+4      	; 0xb10 <__fp_round+0x18>
     b0c:	60 ff       	sbrs	r22, 0
     b0e:	04 c0       	rjmp	.+8      	; 0xb18 <__fp_round+0x20>
     b10:	6f 5f       	subi	r22, 0xFF	; 255
     b12:	7f 4f       	sbci	r23, 0xFF	; 255
     b14:	8f 4f       	sbci	r24, 0xFF	; 255
     b16:	9f 4f       	sbci	r25, 0xFF	; 255
     b18:	08 95       	ret

00000b1a <__fp_split3>:
     b1a:	57 fd       	sbrc	r21, 7
     b1c:	90 58       	subi	r25, 0x80	; 128
     b1e:	44 0f       	add	r20, r20
     b20:	55 1f       	adc	r21, r21
     b22:	59 f0       	breq	.+22     	; 0xb3a <__fp_splitA+0x10>
     b24:	5f 3f       	cpi	r21, 0xFF	; 255
     b26:	71 f0       	breq	.+28     	; 0xb44 <__fp_splitA+0x1a>
     b28:	47 95       	ror	r20

00000b2a <__fp_splitA>:
     b2a:	88 0f       	add	r24, r24
     b2c:	97 fb       	bst	r25, 7
     b2e:	99 1f       	adc	r25, r25
     b30:	61 f0       	breq	.+24     	; 0xb4a <__fp_splitA+0x20>
     b32:	9f 3f       	cpi	r25, 0xFF	; 255
     b34:	79 f0       	breq	.+30     	; 0xb54 <__fp_splitA+0x2a>
     b36:	87 95       	ror	r24
     b38:	08 95       	ret
     b3a:	12 16       	cp	r1, r18
     b3c:	13 06       	cpc	r1, r19
     b3e:	14 06       	cpc	r1, r20
     b40:	55 1f       	adc	r21, r21
     b42:	f2 cf       	rjmp	.-28     	; 0xb28 <__fp_split3+0xe>
     b44:	46 95       	lsr	r20
     b46:	f1 df       	rcall	.-30     	; 0xb2a <__fp_splitA>
     b48:	08 c0       	rjmp	.+16     	; 0xb5a <__fp_splitA+0x30>
     b4a:	16 16       	cp	r1, r22
     b4c:	17 06       	cpc	r1, r23
     b4e:	18 06       	cpc	r1, r24
     b50:	99 1f       	adc	r25, r25
     b52:	f1 cf       	rjmp	.-30     	; 0xb36 <__fp_splitA+0xc>
     b54:	86 95       	lsr	r24
     b56:	71 05       	cpc	r23, r1
     b58:	61 05       	cpc	r22, r1
     b5a:	08 94       	sec
     b5c:	08 95       	ret

00000b5e <__fp_zero>:
     b5e:	e8 94       	clt

00000b60 <__fp_szero>:
     b60:	bb 27       	eor	r27, r27
     b62:	66 27       	eor	r22, r22
     b64:	77 27       	eor	r23, r23
     b66:	cb 01       	movw	r24, r22
     b68:	97 f9       	bld	r25, 7
     b6a:	08 95       	ret

00000b6c <__udivmodsi4>:
     b6c:	a1 e2       	ldi	r26, 0x21	; 33
     b6e:	1a 2e       	mov	r1, r26
     b70:	aa 1b       	sub	r26, r26
     b72:	bb 1b       	sub	r27, r27
     b74:	fd 01       	movw	r30, r26
     b76:	0d c0       	rjmp	.+26     	; 0xb92 <__udivmodsi4_ep>

00000b78 <__udivmodsi4_loop>:
     b78:	aa 1f       	adc	r26, r26
     b7a:	bb 1f       	adc	r27, r27
     b7c:	ee 1f       	adc	r30, r30
     b7e:	ff 1f       	adc	r31, r31
     b80:	a2 17       	cp	r26, r18
     b82:	b3 07       	cpc	r27, r19
     b84:	e4 07       	cpc	r30, r20
     b86:	f5 07       	cpc	r31, r21
     b88:	20 f0       	brcs	.+8      	; 0xb92 <__udivmodsi4_ep>
     b8a:	a2 1b       	sub	r26, r18
     b8c:	b3 0b       	sbc	r27, r19
     b8e:	e4 0b       	sbc	r30, r20
     b90:	f5 0b       	sbc	r31, r21

00000b92 <__udivmodsi4_ep>:
     b92:	66 1f       	adc	r22, r22
     b94:	77 1f       	adc	r23, r23
     b96:	88 1f       	adc	r24, r24
     b98:	99 1f       	adc	r25, r25
     b9a:	1a 94       	dec	r1
     b9c:	69 f7       	brne	.-38     	; 0xb78 <__udivmodsi4_loop>
     b9e:	60 95       	com	r22
     ba0:	70 95       	com	r23
     ba2:	80 95       	com	r24
     ba4:	90 95       	com	r25
     ba6:	9b 01       	movw	r18, r22
     ba8:	ac 01       	movw	r20, r24
     baa:	bd 01       	movw	r22, r26
     bac:	cf 01       	movw	r24, r30
     bae:	08 95       	ret

00000bb0 <sprintf>:
     bb0:	ae e0       	ldi	r26, 0x0E	; 14
     bb2:	b0 e0       	ldi	r27, 0x00	; 0
     bb4:	ee ed       	ldi	r30, 0xDE	; 222
     bb6:	f5 e0       	ldi	r31, 0x05	; 5
     bb8:	0c 94 99 08 	jmp	0x1132	; 0x1132 <__prologue_saves__+0x1c>
     bbc:	0d 89       	ldd	r16, Y+21	; 0x15
     bbe:	1e 89       	ldd	r17, Y+22	; 0x16
     bc0:	86 e0       	ldi	r24, 0x06	; 6
     bc2:	8c 83       	std	Y+4, r24	; 0x04
     bc4:	1a 83       	std	Y+2, r17	; 0x02
     bc6:	09 83       	std	Y+1, r16	; 0x01
     bc8:	8f ef       	ldi	r24, 0xFF	; 255
     bca:	9f e7       	ldi	r25, 0x7F	; 127
     bcc:	9e 83       	std	Y+6, r25	; 0x06
     bce:	8d 83       	std	Y+5, r24	; 0x05
     bd0:	ae 01       	movw	r20, r28
     bd2:	47 5e       	subi	r20, 0xE7	; 231
     bd4:	5f 4f       	sbci	r21, 0xFF	; 255
     bd6:	6f 89       	ldd	r22, Y+23	; 0x17
     bd8:	78 8d       	ldd	r23, Y+24	; 0x18
     bda:	ce 01       	movw	r24, r28
     bdc:	01 96       	adiw	r24, 0x01	; 1
     bde:	0e 94 fa 05 	call	0xbf4	; 0xbf4 <vfprintf>
     be2:	ef 81       	ldd	r30, Y+7	; 0x07
     be4:	f8 85       	ldd	r31, Y+8	; 0x08
     be6:	e0 0f       	add	r30, r16
     be8:	f1 1f       	adc	r31, r17
     bea:	10 82       	st	Z, r1
     bec:	2e 96       	adiw	r28, 0x0e	; 14
     bee:	e4 e0       	ldi	r30, 0x04	; 4
     bf0:	0c 94 b5 08 	jmp	0x116a	; 0x116a <__epilogue_restores__+0x1c>

00000bf4 <vfprintf>:
     bf4:	ab e0       	ldi	r26, 0x0B	; 11
     bf6:	b0 e0       	ldi	r27, 0x00	; 0
     bf8:	e0 e0       	ldi	r30, 0x00	; 0
     bfa:	f6 e0       	ldi	r31, 0x06	; 6
     bfc:	0c 94 8b 08 	jmp	0x1116	; 0x1116 <__prologue_saves__>
     c00:	6c 01       	movw	r12, r24
     c02:	7b 01       	movw	r14, r22
     c04:	8a 01       	movw	r16, r20
     c06:	fc 01       	movw	r30, r24
     c08:	17 82       	std	Z+7, r1	; 0x07
     c0a:	16 82       	std	Z+6, r1	; 0x06
     c0c:	83 81       	ldd	r24, Z+3	; 0x03
     c0e:	81 ff       	sbrs	r24, 1
     c10:	cc c1       	rjmp	.+920    	; 0xfaa <vfprintf+0x3b6>
     c12:	ce 01       	movw	r24, r28
     c14:	01 96       	adiw	r24, 0x01	; 1
     c16:	3c 01       	movw	r6, r24
     c18:	f6 01       	movw	r30, r12
     c1a:	93 81       	ldd	r25, Z+3	; 0x03
     c1c:	f7 01       	movw	r30, r14
     c1e:	93 fd       	sbrc	r25, 3
     c20:	85 91       	lpm	r24, Z+
     c22:	93 ff       	sbrs	r25, 3
     c24:	81 91       	ld	r24, Z+
     c26:	7f 01       	movw	r14, r30
     c28:	88 23       	and	r24, r24
     c2a:	09 f4       	brne	.+2      	; 0xc2e <vfprintf+0x3a>
     c2c:	ba c1       	rjmp	.+884    	; 0xfa2 <vfprintf+0x3ae>
     c2e:	85 32       	cpi	r24, 0x25	; 37
     c30:	39 f4       	brne	.+14     	; 0xc40 <vfprintf+0x4c>
     c32:	93 fd       	sbrc	r25, 3
     c34:	85 91       	lpm	r24, Z+
     c36:	93 ff       	sbrs	r25, 3
     c38:	81 91       	ld	r24, Z+
     c3a:	7f 01       	movw	r14, r30
     c3c:	85 32       	cpi	r24, 0x25	; 37
     c3e:	29 f4       	brne	.+10     	; 0xc4a <vfprintf+0x56>
     c40:	b6 01       	movw	r22, r12
     c42:	90 e0       	ldi	r25, 0x00	; 0
     c44:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <fputc>
     c48:	e7 cf       	rjmp	.-50     	; 0xc18 <vfprintf+0x24>
     c4a:	91 2c       	mov	r9, r1
     c4c:	21 2c       	mov	r2, r1
     c4e:	31 2c       	mov	r3, r1
     c50:	ff e1       	ldi	r31, 0x1F	; 31
     c52:	f3 15       	cp	r31, r3
     c54:	d8 f0       	brcs	.+54     	; 0xc8c <vfprintf+0x98>
     c56:	8b 32       	cpi	r24, 0x2B	; 43
     c58:	79 f0       	breq	.+30     	; 0xc78 <vfprintf+0x84>
     c5a:	38 f4       	brcc	.+14     	; 0xc6a <vfprintf+0x76>
     c5c:	80 32       	cpi	r24, 0x20	; 32
     c5e:	79 f0       	breq	.+30     	; 0xc7e <vfprintf+0x8a>
     c60:	83 32       	cpi	r24, 0x23	; 35
     c62:	a1 f4       	brne	.+40     	; 0xc8c <vfprintf+0x98>
     c64:	23 2d       	mov	r18, r3
     c66:	20 61       	ori	r18, 0x10	; 16
     c68:	1d c0       	rjmp	.+58     	; 0xca4 <vfprintf+0xb0>
     c6a:	8d 32       	cpi	r24, 0x2D	; 45
     c6c:	61 f0       	breq	.+24     	; 0xc86 <vfprintf+0x92>
     c6e:	80 33       	cpi	r24, 0x30	; 48
     c70:	69 f4       	brne	.+26     	; 0xc8c <vfprintf+0x98>
     c72:	23 2d       	mov	r18, r3
     c74:	21 60       	ori	r18, 0x01	; 1
     c76:	16 c0       	rjmp	.+44     	; 0xca4 <vfprintf+0xb0>
     c78:	83 2d       	mov	r24, r3
     c7a:	82 60       	ori	r24, 0x02	; 2
     c7c:	38 2e       	mov	r3, r24
     c7e:	e3 2d       	mov	r30, r3
     c80:	e4 60       	ori	r30, 0x04	; 4
     c82:	3e 2e       	mov	r3, r30
     c84:	2a c0       	rjmp	.+84     	; 0xcda <vfprintf+0xe6>
     c86:	f3 2d       	mov	r31, r3
     c88:	f8 60       	ori	r31, 0x08	; 8
     c8a:	1d c0       	rjmp	.+58     	; 0xcc6 <vfprintf+0xd2>
     c8c:	37 fc       	sbrc	r3, 7
     c8e:	2d c0       	rjmp	.+90     	; 0xcea <vfprintf+0xf6>
     c90:	20 ed       	ldi	r18, 0xD0	; 208
     c92:	28 0f       	add	r18, r24
     c94:	2a 30       	cpi	r18, 0x0A	; 10
     c96:	40 f0       	brcs	.+16     	; 0xca8 <vfprintf+0xb4>
     c98:	8e 32       	cpi	r24, 0x2E	; 46
     c9a:	b9 f4       	brne	.+46     	; 0xcca <vfprintf+0xd6>
     c9c:	36 fc       	sbrc	r3, 6
     c9e:	81 c1       	rjmp	.+770    	; 0xfa2 <vfprintf+0x3ae>
     ca0:	23 2d       	mov	r18, r3
     ca2:	20 64       	ori	r18, 0x40	; 64
     ca4:	32 2e       	mov	r3, r18
     ca6:	19 c0       	rjmp	.+50     	; 0xcda <vfprintf+0xe6>
     ca8:	36 fe       	sbrs	r3, 6
     caa:	06 c0       	rjmp	.+12     	; 0xcb8 <vfprintf+0xc4>
     cac:	8a e0       	ldi	r24, 0x0A	; 10
     cae:	98 9e       	mul	r9, r24
     cb0:	20 0d       	add	r18, r0
     cb2:	11 24       	eor	r1, r1
     cb4:	92 2e       	mov	r9, r18
     cb6:	11 c0       	rjmp	.+34     	; 0xcda <vfprintf+0xe6>
     cb8:	ea e0       	ldi	r30, 0x0A	; 10
     cba:	2e 9e       	mul	r2, r30
     cbc:	20 0d       	add	r18, r0
     cbe:	11 24       	eor	r1, r1
     cc0:	22 2e       	mov	r2, r18
     cc2:	f3 2d       	mov	r31, r3
     cc4:	f0 62       	ori	r31, 0x20	; 32
     cc6:	3f 2e       	mov	r3, r31
     cc8:	08 c0       	rjmp	.+16     	; 0xcda <vfprintf+0xe6>
     cca:	8c 36       	cpi	r24, 0x6C	; 108
     ccc:	21 f4       	brne	.+8      	; 0xcd6 <vfprintf+0xe2>
     cce:	83 2d       	mov	r24, r3
     cd0:	80 68       	ori	r24, 0x80	; 128
     cd2:	38 2e       	mov	r3, r24
     cd4:	02 c0       	rjmp	.+4      	; 0xcda <vfprintf+0xe6>
     cd6:	88 36       	cpi	r24, 0x68	; 104
     cd8:	41 f4       	brne	.+16     	; 0xcea <vfprintf+0xf6>
     cda:	f7 01       	movw	r30, r14
     cdc:	93 fd       	sbrc	r25, 3
     cde:	85 91       	lpm	r24, Z+
     ce0:	93 ff       	sbrs	r25, 3
     ce2:	81 91       	ld	r24, Z+
     ce4:	7f 01       	movw	r14, r30
     ce6:	81 11       	cpse	r24, r1
     ce8:	b3 cf       	rjmp	.-154    	; 0xc50 <vfprintf+0x5c>
     cea:	98 2f       	mov	r25, r24
     cec:	9f 7d       	andi	r25, 0xDF	; 223
     cee:	95 54       	subi	r25, 0x45	; 69
     cf0:	93 30       	cpi	r25, 0x03	; 3
     cf2:	28 f4       	brcc	.+10     	; 0xcfe <vfprintf+0x10a>
     cf4:	0c 5f       	subi	r16, 0xFC	; 252
     cf6:	1f 4f       	sbci	r17, 0xFF	; 255
     cf8:	9f e3       	ldi	r25, 0x3F	; 63
     cfa:	99 83       	std	Y+1, r25	; 0x01
     cfc:	0d c0       	rjmp	.+26     	; 0xd18 <vfprintf+0x124>
     cfe:	83 36       	cpi	r24, 0x63	; 99
     d00:	31 f0       	breq	.+12     	; 0xd0e <vfprintf+0x11a>
     d02:	83 37       	cpi	r24, 0x73	; 115
     d04:	71 f0       	breq	.+28     	; 0xd22 <vfprintf+0x12e>
     d06:	83 35       	cpi	r24, 0x53	; 83
     d08:	09 f0       	breq	.+2      	; 0xd0c <vfprintf+0x118>
     d0a:	59 c0       	rjmp	.+178    	; 0xdbe <vfprintf+0x1ca>
     d0c:	21 c0       	rjmp	.+66     	; 0xd50 <vfprintf+0x15c>
     d0e:	f8 01       	movw	r30, r16
     d10:	80 81       	ld	r24, Z
     d12:	89 83       	std	Y+1, r24	; 0x01
     d14:	0e 5f       	subi	r16, 0xFE	; 254
     d16:	1f 4f       	sbci	r17, 0xFF	; 255
     d18:	88 24       	eor	r8, r8
     d1a:	83 94       	inc	r8
     d1c:	91 2c       	mov	r9, r1
     d1e:	53 01       	movw	r10, r6
     d20:	13 c0       	rjmp	.+38     	; 0xd48 <vfprintf+0x154>
     d22:	28 01       	movw	r4, r16
     d24:	f2 e0       	ldi	r31, 0x02	; 2
     d26:	4f 0e       	add	r4, r31
     d28:	51 1c       	adc	r5, r1
     d2a:	f8 01       	movw	r30, r16
     d2c:	a0 80       	ld	r10, Z
     d2e:	b1 80       	ldd	r11, Z+1	; 0x01
     d30:	36 fe       	sbrs	r3, 6
     d32:	03 c0       	rjmp	.+6      	; 0xd3a <vfprintf+0x146>
     d34:	69 2d       	mov	r22, r9
     d36:	70 e0       	ldi	r23, 0x00	; 0
     d38:	02 c0       	rjmp	.+4      	; 0xd3e <vfprintf+0x14a>
     d3a:	6f ef       	ldi	r22, 0xFF	; 255
     d3c:	7f ef       	ldi	r23, 0xFF	; 255
     d3e:	c5 01       	movw	r24, r10
     d40:	0e 94 e6 07 	call	0xfcc	; 0xfcc <strnlen>
     d44:	4c 01       	movw	r8, r24
     d46:	82 01       	movw	r16, r4
     d48:	f3 2d       	mov	r31, r3
     d4a:	ff 77       	andi	r31, 0x7F	; 127
     d4c:	3f 2e       	mov	r3, r31
     d4e:	16 c0       	rjmp	.+44     	; 0xd7c <vfprintf+0x188>
     d50:	28 01       	movw	r4, r16
     d52:	22 e0       	ldi	r18, 0x02	; 2
     d54:	42 0e       	add	r4, r18
     d56:	51 1c       	adc	r5, r1
     d58:	f8 01       	movw	r30, r16
     d5a:	a0 80       	ld	r10, Z
     d5c:	b1 80       	ldd	r11, Z+1	; 0x01
     d5e:	36 fe       	sbrs	r3, 6
     d60:	03 c0       	rjmp	.+6      	; 0xd68 <vfprintf+0x174>
     d62:	69 2d       	mov	r22, r9
     d64:	70 e0       	ldi	r23, 0x00	; 0
     d66:	02 c0       	rjmp	.+4      	; 0xd6c <vfprintf+0x178>
     d68:	6f ef       	ldi	r22, 0xFF	; 255
     d6a:	7f ef       	ldi	r23, 0xFF	; 255
     d6c:	c5 01       	movw	r24, r10
     d6e:	0e 94 db 07 	call	0xfb6	; 0xfb6 <strnlen_P>
     d72:	4c 01       	movw	r8, r24
     d74:	f3 2d       	mov	r31, r3
     d76:	f0 68       	ori	r31, 0x80	; 128
     d78:	3f 2e       	mov	r3, r31
     d7a:	82 01       	movw	r16, r4
     d7c:	33 fc       	sbrc	r3, 3
     d7e:	1b c0       	rjmp	.+54     	; 0xdb6 <vfprintf+0x1c2>
     d80:	82 2d       	mov	r24, r2
     d82:	90 e0       	ldi	r25, 0x00	; 0
     d84:	88 16       	cp	r8, r24
     d86:	99 06       	cpc	r9, r25
     d88:	b0 f4       	brcc	.+44     	; 0xdb6 <vfprintf+0x1c2>
     d8a:	b6 01       	movw	r22, r12
     d8c:	80 e2       	ldi	r24, 0x20	; 32
     d8e:	90 e0       	ldi	r25, 0x00	; 0
     d90:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <fputc>
     d94:	2a 94       	dec	r2
     d96:	f4 cf       	rjmp	.-24     	; 0xd80 <vfprintf+0x18c>
     d98:	f5 01       	movw	r30, r10
     d9a:	37 fc       	sbrc	r3, 7
     d9c:	85 91       	lpm	r24, Z+
     d9e:	37 fe       	sbrs	r3, 7
     da0:	81 91       	ld	r24, Z+
     da2:	5f 01       	movw	r10, r30
     da4:	b6 01       	movw	r22, r12
     da6:	90 e0       	ldi	r25, 0x00	; 0
     da8:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <fputc>
     dac:	21 10       	cpse	r2, r1
     dae:	2a 94       	dec	r2
     db0:	21 e0       	ldi	r18, 0x01	; 1
     db2:	82 1a       	sub	r8, r18
     db4:	91 08       	sbc	r9, r1
     db6:	81 14       	cp	r8, r1
     db8:	91 04       	cpc	r9, r1
     dba:	71 f7       	brne	.-36     	; 0xd98 <vfprintf+0x1a4>
     dbc:	e8 c0       	rjmp	.+464    	; 0xf8e <vfprintf+0x39a>
     dbe:	84 36       	cpi	r24, 0x64	; 100
     dc0:	11 f0       	breq	.+4      	; 0xdc6 <vfprintf+0x1d2>
     dc2:	89 36       	cpi	r24, 0x69	; 105
     dc4:	41 f5       	brne	.+80     	; 0xe16 <vfprintf+0x222>
     dc6:	f8 01       	movw	r30, r16
     dc8:	37 fe       	sbrs	r3, 7
     dca:	07 c0       	rjmp	.+14     	; 0xdda <vfprintf+0x1e6>
     dcc:	60 81       	ld	r22, Z
     dce:	71 81       	ldd	r23, Z+1	; 0x01
     dd0:	82 81       	ldd	r24, Z+2	; 0x02
     dd2:	93 81       	ldd	r25, Z+3	; 0x03
     dd4:	0c 5f       	subi	r16, 0xFC	; 252
     dd6:	1f 4f       	sbci	r17, 0xFF	; 255
     dd8:	08 c0       	rjmp	.+16     	; 0xdea <vfprintf+0x1f6>
     dda:	60 81       	ld	r22, Z
     ddc:	71 81       	ldd	r23, Z+1	; 0x01
     dde:	07 2e       	mov	r0, r23
     de0:	00 0c       	add	r0, r0
     de2:	88 0b       	sbc	r24, r24
     de4:	99 0b       	sbc	r25, r25
     de6:	0e 5f       	subi	r16, 0xFE	; 254
     de8:	1f 4f       	sbci	r17, 0xFF	; 255
     dea:	f3 2d       	mov	r31, r3
     dec:	ff 76       	andi	r31, 0x6F	; 111
     dee:	3f 2e       	mov	r3, r31
     df0:	97 ff       	sbrs	r25, 7
     df2:	09 c0       	rjmp	.+18     	; 0xe06 <vfprintf+0x212>
     df4:	90 95       	com	r25
     df6:	80 95       	com	r24
     df8:	70 95       	com	r23
     dfa:	61 95       	neg	r22
     dfc:	7f 4f       	sbci	r23, 0xFF	; 255
     dfe:	8f 4f       	sbci	r24, 0xFF	; 255
     e00:	9f 4f       	sbci	r25, 0xFF	; 255
     e02:	f0 68       	ori	r31, 0x80	; 128
     e04:	3f 2e       	mov	r3, r31
     e06:	2a e0       	ldi	r18, 0x0A	; 10
     e08:	30 e0       	ldi	r19, 0x00	; 0
     e0a:	a3 01       	movw	r20, r6
     e0c:	0e 94 2d 08 	call	0x105a	; 0x105a <__ultoa_invert>
     e10:	88 2e       	mov	r8, r24
     e12:	86 18       	sub	r8, r6
     e14:	45 c0       	rjmp	.+138    	; 0xea0 <vfprintf+0x2ac>
     e16:	85 37       	cpi	r24, 0x75	; 117
     e18:	31 f4       	brne	.+12     	; 0xe26 <vfprintf+0x232>
     e1a:	23 2d       	mov	r18, r3
     e1c:	2f 7e       	andi	r18, 0xEF	; 239
     e1e:	b2 2e       	mov	r11, r18
     e20:	2a e0       	ldi	r18, 0x0A	; 10
     e22:	30 e0       	ldi	r19, 0x00	; 0
     e24:	25 c0       	rjmp	.+74     	; 0xe70 <vfprintf+0x27c>
     e26:	93 2d       	mov	r25, r3
     e28:	99 7f       	andi	r25, 0xF9	; 249
     e2a:	b9 2e       	mov	r11, r25
     e2c:	8f 36       	cpi	r24, 0x6F	; 111
     e2e:	c1 f0       	breq	.+48     	; 0xe60 <vfprintf+0x26c>
     e30:	18 f4       	brcc	.+6      	; 0xe38 <vfprintf+0x244>
     e32:	88 35       	cpi	r24, 0x58	; 88
     e34:	79 f0       	breq	.+30     	; 0xe54 <vfprintf+0x260>
     e36:	b5 c0       	rjmp	.+362    	; 0xfa2 <vfprintf+0x3ae>
     e38:	80 37       	cpi	r24, 0x70	; 112
     e3a:	19 f0       	breq	.+6      	; 0xe42 <vfprintf+0x24e>
     e3c:	88 37       	cpi	r24, 0x78	; 120
     e3e:	21 f0       	breq	.+8      	; 0xe48 <vfprintf+0x254>
     e40:	b0 c0       	rjmp	.+352    	; 0xfa2 <vfprintf+0x3ae>
     e42:	e9 2f       	mov	r30, r25
     e44:	e0 61       	ori	r30, 0x10	; 16
     e46:	be 2e       	mov	r11, r30
     e48:	b4 fe       	sbrs	r11, 4
     e4a:	0d c0       	rjmp	.+26     	; 0xe66 <vfprintf+0x272>
     e4c:	fb 2d       	mov	r31, r11
     e4e:	f4 60       	ori	r31, 0x04	; 4
     e50:	bf 2e       	mov	r11, r31
     e52:	09 c0       	rjmp	.+18     	; 0xe66 <vfprintf+0x272>
     e54:	34 fe       	sbrs	r3, 4
     e56:	0a c0       	rjmp	.+20     	; 0xe6c <vfprintf+0x278>
     e58:	29 2f       	mov	r18, r25
     e5a:	26 60       	ori	r18, 0x06	; 6
     e5c:	b2 2e       	mov	r11, r18
     e5e:	06 c0       	rjmp	.+12     	; 0xe6c <vfprintf+0x278>
     e60:	28 e0       	ldi	r18, 0x08	; 8
     e62:	30 e0       	ldi	r19, 0x00	; 0
     e64:	05 c0       	rjmp	.+10     	; 0xe70 <vfprintf+0x27c>
     e66:	20 e1       	ldi	r18, 0x10	; 16
     e68:	30 e0       	ldi	r19, 0x00	; 0
     e6a:	02 c0       	rjmp	.+4      	; 0xe70 <vfprintf+0x27c>
     e6c:	20 e1       	ldi	r18, 0x10	; 16
     e6e:	32 e0       	ldi	r19, 0x02	; 2
     e70:	f8 01       	movw	r30, r16
     e72:	b7 fe       	sbrs	r11, 7
     e74:	07 c0       	rjmp	.+14     	; 0xe84 <vfprintf+0x290>
     e76:	60 81       	ld	r22, Z
     e78:	71 81       	ldd	r23, Z+1	; 0x01
     e7a:	82 81       	ldd	r24, Z+2	; 0x02
     e7c:	93 81       	ldd	r25, Z+3	; 0x03
     e7e:	0c 5f       	subi	r16, 0xFC	; 252
     e80:	1f 4f       	sbci	r17, 0xFF	; 255
     e82:	06 c0       	rjmp	.+12     	; 0xe90 <vfprintf+0x29c>
     e84:	60 81       	ld	r22, Z
     e86:	71 81       	ldd	r23, Z+1	; 0x01
     e88:	80 e0       	ldi	r24, 0x00	; 0
     e8a:	90 e0       	ldi	r25, 0x00	; 0
     e8c:	0e 5f       	subi	r16, 0xFE	; 254
     e8e:	1f 4f       	sbci	r17, 0xFF	; 255
     e90:	a3 01       	movw	r20, r6
     e92:	0e 94 2d 08 	call	0x105a	; 0x105a <__ultoa_invert>
     e96:	88 2e       	mov	r8, r24
     e98:	86 18       	sub	r8, r6
     e9a:	fb 2d       	mov	r31, r11
     e9c:	ff 77       	andi	r31, 0x7F	; 127
     e9e:	3f 2e       	mov	r3, r31
     ea0:	36 fe       	sbrs	r3, 6
     ea2:	0d c0       	rjmp	.+26     	; 0xebe <vfprintf+0x2ca>
     ea4:	23 2d       	mov	r18, r3
     ea6:	2e 7f       	andi	r18, 0xFE	; 254
     ea8:	a2 2e       	mov	r10, r18
     eaa:	89 14       	cp	r8, r9
     eac:	58 f4       	brcc	.+22     	; 0xec4 <vfprintf+0x2d0>
     eae:	34 fe       	sbrs	r3, 4
     eb0:	0b c0       	rjmp	.+22     	; 0xec8 <vfprintf+0x2d4>
     eb2:	32 fc       	sbrc	r3, 2
     eb4:	09 c0       	rjmp	.+18     	; 0xec8 <vfprintf+0x2d4>
     eb6:	83 2d       	mov	r24, r3
     eb8:	8e 7e       	andi	r24, 0xEE	; 238
     eba:	a8 2e       	mov	r10, r24
     ebc:	05 c0       	rjmp	.+10     	; 0xec8 <vfprintf+0x2d4>
     ebe:	b8 2c       	mov	r11, r8
     ec0:	a3 2c       	mov	r10, r3
     ec2:	03 c0       	rjmp	.+6      	; 0xeca <vfprintf+0x2d6>
     ec4:	b8 2c       	mov	r11, r8
     ec6:	01 c0       	rjmp	.+2      	; 0xeca <vfprintf+0x2d6>
     ec8:	b9 2c       	mov	r11, r9
     eca:	a4 fe       	sbrs	r10, 4
     ecc:	0f c0       	rjmp	.+30     	; 0xeec <vfprintf+0x2f8>
     ece:	fe 01       	movw	r30, r28
     ed0:	e8 0d       	add	r30, r8
     ed2:	f1 1d       	adc	r31, r1
     ed4:	80 81       	ld	r24, Z
     ed6:	80 33       	cpi	r24, 0x30	; 48
     ed8:	21 f4       	brne	.+8      	; 0xee2 <vfprintf+0x2ee>
     eda:	9a 2d       	mov	r25, r10
     edc:	99 7e       	andi	r25, 0xE9	; 233
     ede:	a9 2e       	mov	r10, r25
     ee0:	09 c0       	rjmp	.+18     	; 0xef4 <vfprintf+0x300>
     ee2:	a2 fe       	sbrs	r10, 2
     ee4:	06 c0       	rjmp	.+12     	; 0xef2 <vfprintf+0x2fe>
     ee6:	b3 94       	inc	r11
     ee8:	b3 94       	inc	r11
     eea:	04 c0       	rjmp	.+8      	; 0xef4 <vfprintf+0x300>
     eec:	8a 2d       	mov	r24, r10
     eee:	86 78       	andi	r24, 0x86	; 134
     ef0:	09 f0       	breq	.+2      	; 0xef4 <vfprintf+0x300>
     ef2:	b3 94       	inc	r11
     ef4:	a3 fc       	sbrc	r10, 3
     ef6:	11 c0       	rjmp	.+34     	; 0xf1a <vfprintf+0x326>
     ef8:	a0 fe       	sbrs	r10, 0
     efa:	06 c0       	rjmp	.+12     	; 0xf08 <vfprintf+0x314>
     efc:	b2 14       	cp	r11, r2
     efe:	88 f4       	brcc	.+34     	; 0xf22 <vfprintf+0x32e>
     f00:	28 0c       	add	r2, r8
     f02:	92 2c       	mov	r9, r2
     f04:	9b 18       	sub	r9, r11
     f06:	0e c0       	rjmp	.+28     	; 0xf24 <vfprintf+0x330>
     f08:	b2 14       	cp	r11, r2
     f0a:	60 f4       	brcc	.+24     	; 0xf24 <vfprintf+0x330>
     f0c:	b6 01       	movw	r22, r12
     f0e:	80 e2       	ldi	r24, 0x20	; 32
     f10:	90 e0       	ldi	r25, 0x00	; 0
     f12:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <fputc>
     f16:	b3 94       	inc	r11
     f18:	f7 cf       	rjmp	.-18     	; 0xf08 <vfprintf+0x314>
     f1a:	b2 14       	cp	r11, r2
     f1c:	18 f4       	brcc	.+6      	; 0xf24 <vfprintf+0x330>
     f1e:	2b 18       	sub	r2, r11
     f20:	02 c0       	rjmp	.+4      	; 0xf26 <vfprintf+0x332>
     f22:	98 2c       	mov	r9, r8
     f24:	21 2c       	mov	r2, r1
     f26:	a4 fe       	sbrs	r10, 4
     f28:	10 c0       	rjmp	.+32     	; 0xf4a <vfprintf+0x356>
     f2a:	b6 01       	movw	r22, r12
     f2c:	80 e3       	ldi	r24, 0x30	; 48
     f2e:	90 e0       	ldi	r25, 0x00	; 0
     f30:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <fputc>
     f34:	a2 fe       	sbrs	r10, 2
     f36:	17 c0       	rjmp	.+46     	; 0xf66 <vfprintf+0x372>
     f38:	a1 fc       	sbrc	r10, 1
     f3a:	03 c0       	rjmp	.+6      	; 0xf42 <vfprintf+0x34e>
     f3c:	88 e7       	ldi	r24, 0x78	; 120
     f3e:	90 e0       	ldi	r25, 0x00	; 0
     f40:	02 c0       	rjmp	.+4      	; 0xf46 <vfprintf+0x352>
     f42:	88 e5       	ldi	r24, 0x58	; 88
     f44:	90 e0       	ldi	r25, 0x00	; 0
     f46:	b6 01       	movw	r22, r12
     f48:	0c c0       	rjmp	.+24     	; 0xf62 <vfprintf+0x36e>
     f4a:	8a 2d       	mov	r24, r10
     f4c:	86 78       	andi	r24, 0x86	; 134
     f4e:	59 f0       	breq	.+22     	; 0xf66 <vfprintf+0x372>
     f50:	a1 fe       	sbrs	r10, 1
     f52:	02 c0       	rjmp	.+4      	; 0xf58 <vfprintf+0x364>
     f54:	8b e2       	ldi	r24, 0x2B	; 43
     f56:	01 c0       	rjmp	.+2      	; 0xf5a <vfprintf+0x366>
     f58:	80 e2       	ldi	r24, 0x20	; 32
     f5a:	a7 fc       	sbrc	r10, 7
     f5c:	8d e2       	ldi	r24, 0x2D	; 45
     f5e:	b6 01       	movw	r22, r12
     f60:	90 e0       	ldi	r25, 0x00	; 0
     f62:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <fputc>
     f66:	89 14       	cp	r8, r9
     f68:	38 f4       	brcc	.+14     	; 0xf78 <vfprintf+0x384>
     f6a:	b6 01       	movw	r22, r12
     f6c:	80 e3       	ldi	r24, 0x30	; 48
     f6e:	90 e0       	ldi	r25, 0x00	; 0
     f70:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <fputc>
     f74:	9a 94       	dec	r9
     f76:	f7 cf       	rjmp	.-18     	; 0xf66 <vfprintf+0x372>
     f78:	8a 94       	dec	r8
     f7a:	f3 01       	movw	r30, r6
     f7c:	e8 0d       	add	r30, r8
     f7e:	f1 1d       	adc	r31, r1
     f80:	80 81       	ld	r24, Z
     f82:	b6 01       	movw	r22, r12
     f84:	90 e0       	ldi	r25, 0x00	; 0
     f86:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <fputc>
     f8a:	81 10       	cpse	r8, r1
     f8c:	f5 cf       	rjmp	.-22     	; 0xf78 <vfprintf+0x384>
     f8e:	22 20       	and	r2, r2
     f90:	09 f4       	brne	.+2      	; 0xf94 <vfprintf+0x3a0>
     f92:	42 ce       	rjmp	.-892    	; 0xc18 <vfprintf+0x24>
     f94:	b6 01       	movw	r22, r12
     f96:	80 e2       	ldi	r24, 0x20	; 32
     f98:	90 e0       	ldi	r25, 0x00	; 0
     f9a:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <fputc>
     f9e:	2a 94       	dec	r2
     fa0:	f6 cf       	rjmp	.-20     	; 0xf8e <vfprintf+0x39a>
     fa2:	f6 01       	movw	r30, r12
     fa4:	86 81       	ldd	r24, Z+6	; 0x06
     fa6:	97 81       	ldd	r25, Z+7	; 0x07
     fa8:	02 c0       	rjmp	.+4      	; 0xfae <vfprintf+0x3ba>
     faa:	8f ef       	ldi	r24, 0xFF	; 255
     fac:	9f ef       	ldi	r25, 0xFF	; 255
     fae:	2b 96       	adiw	r28, 0x0b	; 11
     fb0:	e2 e1       	ldi	r30, 0x12	; 18
     fb2:	0c 94 a7 08 	jmp	0x114e	; 0x114e <__epilogue_restores__>

00000fb6 <strnlen_P>:
     fb6:	fc 01       	movw	r30, r24
     fb8:	05 90       	lpm	r0, Z+
     fba:	61 50       	subi	r22, 0x01	; 1
     fbc:	70 40       	sbci	r23, 0x00	; 0
     fbe:	01 10       	cpse	r0, r1
     fc0:	d8 f7       	brcc	.-10     	; 0xfb8 <strnlen_P+0x2>
     fc2:	80 95       	com	r24
     fc4:	90 95       	com	r25
     fc6:	8e 0f       	add	r24, r30
     fc8:	9f 1f       	adc	r25, r31
     fca:	08 95       	ret

00000fcc <strnlen>:
     fcc:	fc 01       	movw	r30, r24
     fce:	61 50       	subi	r22, 0x01	; 1
     fd0:	70 40       	sbci	r23, 0x00	; 0
     fd2:	01 90       	ld	r0, Z+
     fd4:	01 10       	cpse	r0, r1
     fd6:	d8 f7       	brcc	.-10     	; 0xfce <strnlen+0x2>
     fd8:	80 95       	com	r24
     fda:	90 95       	com	r25
     fdc:	8e 0f       	add	r24, r30
     fde:	9f 1f       	adc	r25, r31
     fe0:	08 95       	ret

00000fe2 <fputc>:
     fe2:	0f 93       	push	r16
     fe4:	1f 93       	push	r17
     fe6:	cf 93       	push	r28
     fe8:	df 93       	push	r29
     fea:	fb 01       	movw	r30, r22
     fec:	23 81       	ldd	r18, Z+3	; 0x03
     fee:	21 fd       	sbrc	r18, 1
     ff0:	03 c0       	rjmp	.+6      	; 0xff8 <fputc+0x16>
     ff2:	8f ef       	ldi	r24, 0xFF	; 255
     ff4:	9f ef       	ldi	r25, 0xFF	; 255
     ff6:	2c c0       	rjmp	.+88     	; 0x1050 <fputc+0x6e>
     ff8:	22 ff       	sbrs	r18, 2
     ffa:	16 c0       	rjmp	.+44     	; 0x1028 <fputc+0x46>
     ffc:	46 81       	ldd	r20, Z+6	; 0x06
     ffe:	57 81       	ldd	r21, Z+7	; 0x07
    1000:	24 81       	ldd	r18, Z+4	; 0x04
    1002:	35 81       	ldd	r19, Z+5	; 0x05
    1004:	42 17       	cp	r20, r18
    1006:	53 07       	cpc	r21, r19
    1008:	44 f4       	brge	.+16     	; 0x101a <fputc+0x38>
    100a:	a0 81       	ld	r26, Z
    100c:	b1 81       	ldd	r27, Z+1	; 0x01
    100e:	9d 01       	movw	r18, r26
    1010:	2f 5f       	subi	r18, 0xFF	; 255
    1012:	3f 4f       	sbci	r19, 0xFF	; 255
    1014:	31 83       	std	Z+1, r19	; 0x01
    1016:	20 83       	st	Z, r18
    1018:	8c 93       	st	X, r24
    101a:	26 81       	ldd	r18, Z+6	; 0x06
    101c:	37 81       	ldd	r19, Z+7	; 0x07
    101e:	2f 5f       	subi	r18, 0xFF	; 255
    1020:	3f 4f       	sbci	r19, 0xFF	; 255
    1022:	37 83       	std	Z+7, r19	; 0x07
    1024:	26 83       	std	Z+6, r18	; 0x06
    1026:	14 c0       	rjmp	.+40     	; 0x1050 <fputc+0x6e>
    1028:	8b 01       	movw	r16, r22
    102a:	ec 01       	movw	r28, r24
    102c:	fb 01       	movw	r30, r22
    102e:	00 84       	ldd	r0, Z+8	; 0x08
    1030:	f1 85       	ldd	r31, Z+9	; 0x09
    1032:	e0 2d       	mov	r30, r0
    1034:	09 95       	icall
    1036:	89 2b       	or	r24, r25
    1038:	e1 f6       	brne	.-72     	; 0xff2 <fputc+0x10>
    103a:	d8 01       	movw	r26, r16
    103c:	16 96       	adiw	r26, 0x06	; 6
    103e:	8d 91       	ld	r24, X+
    1040:	9c 91       	ld	r25, X
    1042:	17 97       	sbiw	r26, 0x07	; 7
    1044:	01 96       	adiw	r24, 0x01	; 1
    1046:	17 96       	adiw	r26, 0x07	; 7
    1048:	9c 93       	st	X, r25
    104a:	8e 93       	st	-X, r24
    104c:	16 97       	sbiw	r26, 0x06	; 6
    104e:	ce 01       	movw	r24, r28
    1050:	df 91       	pop	r29
    1052:	cf 91       	pop	r28
    1054:	1f 91       	pop	r17
    1056:	0f 91       	pop	r16
    1058:	08 95       	ret

0000105a <__ultoa_invert>:
    105a:	fa 01       	movw	r30, r20
    105c:	aa 27       	eor	r26, r26
    105e:	28 30       	cpi	r18, 0x08	; 8
    1060:	51 f1       	breq	.+84     	; 0x10b6 <__ultoa_invert+0x5c>
    1062:	20 31       	cpi	r18, 0x10	; 16
    1064:	81 f1       	breq	.+96     	; 0x10c6 <__ultoa_invert+0x6c>
    1066:	e8 94       	clt
    1068:	6f 93       	push	r22
    106a:	6e 7f       	andi	r22, 0xFE	; 254
    106c:	6e 5f       	subi	r22, 0xFE	; 254
    106e:	7f 4f       	sbci	r23, 0xFF	; 255
    1070:	8f 4f       	sbci	r24, 0xFF	; 255
    1072:	9f 4f       	sbci	r25, 0xFF	; 255
    1074:	af 4f       	sbci	r26, 0xFF	; 255
    1076:	b1 e0       	ldi	r27, 0x01	; 1
    1078:	3e d0       	rcall	.+124    	; 0x10f6 <__ultoa_invert+0x9c>
    107a:	b4 e0       	ldi	r27, 0x04	; 4
    107c:	3c d0       	rcall	.+120    	; 0x10f6 <__ultoa_invert+0x9c>
    107e:	67 0f       	add	r22, r23
    1080:	78 1f       	adc	r23, r24
    1082:	89 1f       	adc	r24, r25
    1084:	9a 1f       	adc	r25, r26
    1086:	a1 1d       	adc	r26, r1
    1088:	68 0f       	add	r22, r24
    108a:	79 1f       	adc	r23, r25
    108c:	8a 1f       	adc	r24, r26
    108e:	91 1d       	adc	r25, r1
    1090:	a1 1d       	adc	r26, r1
    1092:	6a 0f       	add	r22, r26
    1094:	71 1d       	adc	r23, r1
    1096:	81 1d       	adc	r24, r1
    1098:	91 1d       	adc	r25, r1
    109a:	a1 1d       	adc	r26, r1
    109c:	20 d0       	rcall	.+64     	; 0x10de <__ultoa_invert+0x84>
    109e:	09 f4       	brne	.+2      	; 0x10a2 <__ultoa_invert+0x48>
    10a0:	68 94       	set
    10a2:	3f 91       	pop	r19
    10a4:	2a e0       	ldi	r18, 0x0A	; 10
    10a6:	26 9f       	mul	r18, r22
    10a8:	11 24       	eor	r1, r1
    10aa:	30 19       	sub	r19, r0
    10ac:	30 5d       	subi	r19, 0xD0	; 208
    10ae:	31 93       	st	Z+, r19
    10b0:	de f6       	brtc	.-74     	; 0x1068 <__ultoa_invert+0xe>
    10b2:	cf 01       	movw	r24, r30
    10b4:	08 95       	ret
    10b6:	46 2f       	mov	r20, r22
    10b8:	47 70       	andi	r20, 0x07	; 7
    10ba:	40 5d       	subi	r20, 0xD0	; 208
    10bc:	41 93       	st	Z+, r20
    10be:	b3 e0       	ldi	r27, 0x03	; 3
    10c0:	0f d0       	rcall	.+30     	; 0x10e0 <__ultoa_invert+0x86>
    10c2:	c9 f7       	brne	.-14     	; 0x10b6 <__ultoa_invert+0x5c>
    10c4:	f6 cf       	rjmp	.-20     	; 0x10b2 <__ultoa_invert+0x58>
    10c6:	46 2f       	mov	r20, r22
    10c8:	4f 70       	andi	r20, 0x0F	; 15
    10ca:	40 5d       	subi	r20, 0xD0	; 208
    10cc:	4a 33       	cpi	r20, 0x3A	; 58
    10ce:	18 f0       	brcs	.+6      	; 0x10d6 <__ultoa_invert+0x7c>
    10d0:	49 5d       	subi	r20, 0xD9	; 217
    10d2:	31 fd       	sbrc	r19, 1
    10d4:	40 52       	subi	r20, 0x20	; 32
    10d6:	41 93       	st	Z+, r20
    10d8:	02 d0       	rcall	.+4      	; 0x10de <__ultoa_invert+0x84>
    10da:	a9 f7       	brne	.-22     	; 0x10c6 <__ultoa_invert+0x6c>
    10dc:	ea cf       	rjmp	.-44     	; 0x10b2 <__ultoa_invert+0x58>
    10de:	b4 e0       	ldi	r27, 0x04	; 4
    10e0:	a6 95       	lsr	r26
    10e2:	97 95       	ror	r25
    10e4:	87 95       	ror	r24
    10e6:	77 95       	ror	r23
    10e8:	67 95       	ror	r22
    10ea:	ba 95       	dec	r27
    10ec:	c9 f7       	brne	.-14     	; 0x10e0 <__ultoa_invert+0x86>
    10ee:	00 97       	sbiw	r24, 0x00	; 0
    10f0:	61 05       	cpc	r22, r1
    10f2:	71 05       	cpc	r23, r1
    10f4:	08 95       	ret
    10f6:	9b 01       	movw	r18, r22
    10f8:	ac 01       	movw	r20, r24
    10fa:	0a 2e       	mov	r0, r26
    10fc:	06 94       	lsr	r0
    10fe:	57 95       	ror	r21
    1100:	47 95       	ror	r20
    1102:	37 95       	ror	r19
    1104:	27 95       	ror	r18
    1106:	ba 95       	dec	r27
    1108:	c9 f7       	brne	.-14     	; 0x10fc <__ultoa_invert+0xa2>
    110a:	62 0f       	add	r22, r18
    110c:	73 1f       	adc	r23, r19
    110e:	84 1f       	adc	r24, r20
    1110:	95 1f       	adc	r25, r21
    1112:	a0 1d       	adc	r26, r0
    1114:	08 95       	ret

00001116 <__prologue_saves__>:
    1116:	2f 92       	push	r2
    1118:	3f 92       	push	r3
    111a:	4f 92       	push	r4
    111c:	5f 92       	push	r5
    111e:	6f 92       	push	r6
    1120:	7f 92       	push	r7
    1122:	8f 92       	push	r8
    1124:	9f 92       	push	r9
    1126:	af 92       	push	r10
    1128:	bf 92       	push	r11
    112a:	cf 92       	push	r12
    112c:	df 92       	push	r13
    112e:	ef 92       	push	r14
    1130:	ff 92       	push	r15
    1132:	0f 93       	push	r16
    1134:	1f 93       	push	r17
    1136:	cf 93       	push	r28
    1138:	df 93       	push	r29
    113a:	cd b7       	in	r28, 0x3d	; 61
    113c:	de b7       	in	r29, 0x3e	; 62
    113e:	ca 1b       	sub	r28, r26
    1140:	db 0b       	sbc	r29, r27
    1142:	0f b6       	in	r0, 0x3f	; 63
    1144:	f8 94       	cli
    1146:	de bf       	out	0x3e, r29	; 62
    1148:	0f be       	out	0x3f, r0	; 63
    114a:	cd bf       	out	0x3d, r28	; 61
    114c:	09 94       	ijmp

0000114e <__epilogue_restores__>:
    114e:	2a 88       	ldd	r2, Y+18	; 0x12
    1150:	39 88       	ldd	r3, Y+17	; 0x11
    1152:	48 88       	ldd	r4, Y+16	; 0x10
    1154:	5f 84       	ldd	r5, Y+15	; 0x0f
    1156:	6e 84       	ldd	r6, Y+14	; 0x0e
    1158:	7d 84       	ldd	r7, Y+13	; 0x0d
    115a:	8c 84       	ldd	r8, Y+12	; 0x0c
    115c:	9b 84       	ldd	r9, Y+11	; 0x0b
    115e:	aa 84       	ldd	r10, Y+10	; 0x0a
    1160:	b9 84       	ldd	r11, Y+9	; 0x09
    1162:	c8 84       	ldd	r12, Y+8	; 0x08
    1164:	df 80       	ldd	r13, Y+7	; 0x07
    1166:	ee 80       	ldd	r14, Y+6	; 0x06
    1168:	fd 80       	ldd	r15, Y+5	; 0x05
    116a:	0c 81       	ldd	r16, Y+4	; 0x04
    116c:	1b 81       	ldd	r17, Y+3	; 0x03
    116e:	aa 81       	ldd	r26, Y+2	; 0x02
    1170:	b9 81       	ldd	r27, Y+1	; 0x01
    1172:	ce 0f       	add	r28, r30
    1174:	d1 1d       	adc	r29, r1
    1176:	0f b6       	in	r0, 0x3f	; 63
    1178:	f8 94       	cli
    117a:	de bf       	out	0x3e, r29	; 62
    117c:	0f be       	out	0x3f, r0	; 63
    117e:	cd bf       	out	0x3d, r28	; 61
    1180:	ed 01       	movw	r28, r26
    1182:	08 95       	ret

00001184 <_exit>:
    1184:	f8 94       	cli

00001186 <__stop_program>:
    1186:	ff cf       	rjmp	.-2      	; 0x1186 <__stop_program>
